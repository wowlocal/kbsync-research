@protocol ATHProtocol

@required

/* required instance methods */
-[ATHProtocol createConnectionWithLibrary:device:reply:];
-[ATHProtocol closeConnection:reply:];
-[ATHProtocol sendMessage:connection:];
-[ATHProtocol sendStatusMessage:connection:];
-[ATHProtocol readMessage:reply:];
-[ATHProtocol sendSyncFailed:errorCode:];
-[ATHProtocol sendPowerAssertion:enabled:];
-[ATHProtocol sendHostInfo:info:];
-[ATHProtocol sendAssetMetricsRequest:assetTypes:];
-[ATHProtocol sendSyncRequest:dataClasses:anchors:hostInfo:];
-[ATHProtocol sendPing:];
-[ATHProtocol sendFileBegin:assetID:dataClass:assetProgress:overallProgress:];
-[ATHProtocol sendFileProgress:assetID:dataClass:assetProgress:overallProgress:];
-[ATHProtocol sendFileError:assetID:dataClass:errorCode:];
-[ATHProtocol sendAssetCompleted:assetID:dataClass:assetPath:];
-[ATHProtocol sendAssetCompletedWithMetadata:assetID:dataClass:assetPath:];
-[ATHProtocol sendMetadataSyncFinished:syncTypes:newAnchors:];

@optional

@end

@protocol AVAudioPlayerDelegate <NSObject>

@required

@optional

/* optional instance methods */
-[AVAudioPlayerDelegate audioPlayerDidFinishPlaying:successfully:];
-[AVAudioPlayerDelegate audioPlayerDecodeErrorDidOccur:error:];

@end

@protocol AppsLibraryViewControllerDelegate

@required

@optional

/* optional instance methods */
-[AppsLibraryViewControllerDelegate backupAppData:toPath:];
-[AppsLibraryViewControllerDelegate restoreApps:];
-[AppsLibraryViewControllerDelegate installApps:];

@end

@protocol BrowserDelegate <NSBrowserDelegate>

@required

@optional

/* optional instance methods */
-[BrowserDelegate didClickOnBrowser:];
-[BrowserDelegate didDoubleClickOnBrowser:];

@end

@protocol BrowserNodeEditing <NSObject>

@required

/* required instance methods */
-[BrowserNodeEditing browserNode:didEndEditing:];

@optional

@end

@protocol ChooseBackupLocationDelegate <NSObject>

@required

/* required instance methods */
-[ChooseBackupLocationDelegate controller:didChooseLocation:];

@optional

@end

@protocol DatasetManagerDelegateProtocol <NSObject>

@required

/* required instance methods */
-[DatasetManagerDelegateProtocol datasetManager:updateDidStart:];
-[DatasetManagerDelegateProtocol datasetManager:updateInProgress:];
-[DatasetManagerDelegateProtocol datasetManager:updateDidEnd:];
-[DatasetManagerDelegateProtocol datasetManager:updateDidFailWithError:notification:];

@optional

@end

@protocol DatasetManagerDelegateProtocol <NSObject>

@required

/* required instance methods */
-[DatasetManagerDelegateProtocol datasetManager:updateDidStart:];
-[DatasetManagerDelegateProtocol datasetManager:updateInProgress:];
-[DatasetManagerDelegateProtocol datasetManager:updateDidEnd:];
-[DatasetManagerDelegateProtocol datasetManager:updateDidFailWithError:notification:];

@optional

@end

@protocol DatasetObject

@required

@property (T@"NSString",&) fullTextIndex;

/* required instance methods */
-[DatasetObject fullTextIndex];
-[DatasetObject setFullTextIndex:];

@optional

@end

@protocol DragOutTableViewDataProvider <NSObject>

@required

/* required instance methods */
-[DragOutTableViewDataProvider dragOutTableView:proceedFilesPromiseUsingDragOutInfo:];
-[DragOutTableViewDataProvider dragOutTableView:provideStringForType:];
-[DragOutTableViewDataProvider dragOutTableView:provideDataForType:];

@optional

@end

@protocol DragOutTableViewDelegate <NSObject>

@required

/* required instance methods */
-[DragOutTableViewDelegate dragOutTableView:draggingSession:sourceOperationMaskForDraggingContext:];

@optional

/* optional instance methods */
-[DragOutTableViewDelegate dragOutTableView:draggingSession:endedAtPoint:operation:];
-[DragOutTableViewDelegate dragOutTableView:draggingSession:movedToPoint:];
-[DragOutTableViewDelegate dragOutTableView:draggingSession:willBeginAtPoint:];
-[DragOutTableViewDelegate dragOutTableView:ignoreModifierKeysForDraggingSession:];
-[DragOutTableViewDelegate dragOutTableView:draggingSourceOperationMaskForLocal:];
-[DragOutTableViewDelegate viewIgnoreModifierKeysWhileDragging:];
-[DragOutTableViewDelegate dragOutTableView:namesOfPromisedFilesDroppedAtDestination:];
-[DragOutTableViewDelegate dragOutTableView:draggedImage:beganAt:];
-[DragOutTableViewDelegate dragOutTableView:draggedImage:movedTo:];
-[DragOutTableViewDelegate dragOutTableView:draggedImage:endedAt:operation:];
-[DragOutTableViewDelegate dragOutTableView:canDragRowsWithIndexes:atPoint:];
-[DragOutTableViewDelegate dragOutTableView:dragImageForRowsWithIndexes:tableColumns:event:offset:];
-[DragOutTableViewDelegate dragOutTableViewNumberOfDraggedItems:];

@end

@protocol DraggingHandlerDataProvider <NSObject>

@required

@optional

/* optional instance methods */
-[DraggingHandlerDataProvider draggingHandlerDraggingDidEnd:];
-[DraggingHandlerDataProvider draggingHandler:provideStringForType:];
-[DraggingHandlerDataProvider draggingHandler:provideDataForType:];

@end

@protocol DraggingHandlerDelegate <NSObject>

@required

@optional

/* optional instance methods */
-[DraggingHandlerDelegate draggingHandler:draggingSession:sourceOperationMaskForDraggingContext:];
-[DraggingHandlerDelegate draggingHandler:draggingSession:willBeginAtPoint:];
-[DraggingHandlerDelegate draggingHandler:draggingSession:movedToPoint:];
-[DraggingHandlerDelegate draggingHandler:draggingSession:endedAtPoint:operation:];
-[DraggingHandlerDelegate draggingHandler:ignoreModifierKeysForDraggingSession:];
-[DraggingHandlerDelegate draggingHandler:draggingSourceOperationMaskForLocal:];
-[DraggingHandlerDelegate draggingHandlerIgnoreModifierKeysWhileDragging:];
-[DraggingHandlerDelegate draggingHandler:namesOfPromisedFilesDroppedAtDestination:];
-[DraggingHandlerDelegate draggingHandler:draggedImage:beganAt:];
-[DraggingHandlerDelegate draggingHandler:draggedImage:movedTo:];
-[DraggingHandlerDelegate draggingHandler:draggedImage:endedAt:operation:];
-[DraggingHandlerDelegate draggingHandlerNumberOfDraggedItems:];
-[DraggingHandlerDelegate draggingHandler:canDragRowsWithIndexes:atPoint:];
-[DraggingHandlerDelegate draggingHandler:dragImageForRowsWithIndexes:tableColumns:event:offset:];
-[DraggingHandlerDelegate draggingHandler:canDragRowsWithIndexes:inColumn:withEvent:];
-[DraggingHandlerDelegate draggingHandler:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:];
-[DraggingHandlerDelegate draggingHandler:canDragItemsAtIndexes:withEvent:];
-[DraggingHandlerDelegate draggingHandler:draggingImageForItemsAtIndexes:withEvent:offset:];

@end

@protocol HelpURLProvider

@required

/* required instance methods */
-[HelpURLProvider helpURL];

@optional

@end

@protocol IAccessibleElement <NSObject>

@required

/* required instance methods */
-[IAccessibleElement accessibilityLabel];

@optional

@end

@protocol ICCameraDeviceDelegate <ICDeviceDelegate>

@required

/* required instance methods */
-[ICCameraDeviceDelegate cameraDevice:didAddItems:];
-[ICCameraDeviceDelegate cameraDevice:didAddItems:];
-[ICCameraDeviceDelegate cameraDevice:didRemoveItems:];
-[ICCameraDeviceDelegate cameraDevice:didRemoveItems:];
-[ICCameraDeviceDelegate cameraDevice:didReceiveThumbnail:forItem:error:];
-[ICCameraDeviceDelegate cameraDevice:didReceiveThumbnail:forItem:error:];
-[ICCameraDeviceDelegate cameraDevice:didReceiveMetadata:forItem:error:];
-[ICCameraDeviceDelegate cameraDevice:didReceiveMetadata:forItem:error:];
-[ICCameraDeviceDelegate cameraDevice:didRenameItems:];
-[ICCameraDeviceDelegate cameraDeviceDidChangeCapability:];
-[ICCameraDeviceDelegate cameraDevice:didReceivePTPEvent:];
-[ICCameraDeviceDelegate deviceDidBecomeReadyWithCompleteContentCatalog:];
-[ICCameraDeviceDelegate deviceDidBecomeReadyWithCompleteContentCatalog:];
-[ICCameraDeviceDelegate cameraDeviceDidRemoveAccessRestriction:];
-[ICCameraDeviceDelegate cameraDeviceDidEnableAccessRestriction:];

@optional

/* optional instance methods */
-[ICCameraDeviceDelegate cameraDevice:shouldGetThumbnailOfItem:];
-[ICCameraDeviceDelegate cameraDevice:shouldGetThumbnailOfItem:];
-[ICCameraDeviceDelegate cameraDevice:shouldGetMetadataOfItem:];
-[ICCameraDeviceDelegate cameraDevice:shouldGetMetadataOfItem:];
-[ICCameraDeviceDelegate cameraDevice:didCompleteDeleteFilesWithError:];
-[ICCameraDeviceDelegate cameraDevice:didAddItem:];
-[ICCameraDeviceDelegate cameraDevice:didAddItem:];
-[ICCameraDeviceDelegate cameraDevice:didRemoveItem:];
-[ICCameraDeviceDelegate cameraDevice:didRemoveItem:];
-[ICCameraDeviceDelegate cameraDevice:didReceiveThumbnailForItem:];
-[ICCameraDeviceDelegate cameraDevice:didReceiveThumbnailForItem:];
-[ICCameraDeviceDelegate cameraDevice:didReceiveMetadataForItem:];
-[ICCameraDeviceDelegate cameraDevice:didReceiveMetadataForItem:];

@end

@protocol ICCameraDeviceDelegate <ICDeviceDelegate>

@required

/* required instance methods */
-[ICCameraDeviceDelegate cameraDevice:didAddItems:];
-[ICCameraDeviceDelegate cameraDevice:didRemoveItems:];
-[ICCameraDeviceDelegate cameraDevice:didReceiveThumbnail:forItem:error:];
-[ICCameraDeviceDelegate cameraDevice:didReceiveMetadata:forItem:error:];
-[ICCameraDeviceDelegate cameraDevice:didRenameItems:];
-[ICCameraDeviceDelegate cameraDeviceDidChangeCapability:];
-[ICCameraDeviceDelegate cameraDevice:didReceivePTPEvent:];
-[ICCameraDeviceDelegate deviceDidBecomeReadyWithCompleteContentCatalog:];
-[ICCameraDeviceDelegate cameraDeviceDidRemoveAccessRestriction:];
-[ICCameraDeviceDelegate cameraDeviceDidEnableAccessRestriction:];

@optional

/* optional instance methods */
-[ICCameraDeviceDelegate cameraDevice:shouldGetThumbnailOfItem:];
-[ICCameraDeviceDelegate cameraDevice:shouldGetMetadataOfItem:];
-[ICCameraDeviceDelegate cameraDevice:didCompleteDeleteFilesWithError:];
-[ICCameraDeviceDelegate cameraDevice:didAddItem:];
-[ICCameraDeviceDelegate cameraDevice:didRemoveItem:];
-[ICCameraDeviceDelegate cameraDevice:didReceiveThumbnailForItem:];
-[ICCameraDeviceDelegate cameraDevice:didReceiveMetadataForItem:];

@end

@protocol ICDeviceBrowserDelegate <NSObject>

@required

/* required instance methods */
-[ICDeviceBrowserDelegate deviceBrowser:didAddDevice:moreComing:];
-[ICDeviceBrowserDelegate deviceBrowser:didAddDevice:moreComing:];
-[ICDeviceBrowserDelegate deviceBrowser:didRemoveDevice:moreGoing:];
-[ICDeviceBrowserDelegate deviceBrowser:didRemoveDevice:moreGoing:];

@optional

/* optional instance methods */
-[ICDeviceBrowserDelegate deviceBrowser:deviceDidChangeName:];
-[ICDeviceBrowserDelegate deviceBrowser:deviceDidChangeSharingState:];
-[ICDeviceBrowserDelegate deviceBrowser:requestsSelectDevice:];
-[ICDeviceBrowserDelegate deviceBrowser:requestsSelectDevice:];
-[ICDeviceBrowserDelegate deviceBrowserDidEnumerateLocalDevices:];
-[ICDeviceBrowserDelegate deviceBrowserWillSuspendOperations:];
-[ICDeviceBrowserDelegate deviceBrowserDidSuspendOperations:];
-[ICDeviceBrowserDelegate deviceBrowserDidCancelSuspendOperations:];
-[ICDeviceBrowserDelegate deviceBrowserDidResumeOperations:];

@end

@protocol ICDeviceBrowserDelegate <NSObject>

@required

/* required instance methods */
-[ICDeviceBrowserDelegate deviceBrowser:didAddDevice:moreComing:];
-[ICDeviceBrowserDelegate deviceBrowser:didRemoveDevice:moreGoing:];

@optional

/* optional instance methods */
-[ICDeviceBrowserDelegate deviceBrowser:deviceDidChangeName:];
-[ICDeviceBrowserDelegate deviceBrowser:deviceDidChangeSharingState:];
-[ICDeviceBrowserDelegate deviceBrowser:requestsSelectDevice:];
-[ICDeviceBrowserDelegate deviceBrowserDidEnumerateLocalDevices:];
-[ICDeviceBrowserDelegate deviceBrowserWillSuspendOperations:];
-[ICDeviceBrowserDelegate deviceBrowserDidSuspendOperations:];
-[ICDeviceBrowserDelegate deviceBrowserDidCancelSuspendOperations:];
-[ICDeviceBrowserDelegate deviceBrowserDidResumeOperations:];

@end

@protocol ICDeviceDelegate <NSObject>

@required

/* required instance methods */
-[ICDeviceDelegate device:didCloseSessionWithError:];
-[ICDeviceDelegate didRemoveDevice:];
-[ICDeviceDelegate didRemoveDevice:];
-[ICDeviceDelegate device:didOpenSessionWithError:];

@optional

/* optional instance methods */
-[ICDeviceDelegate deviceDidBecomeReady:];
-[ICDeviceDelegate deviceDidChangeName:];
-[ICDeviceDelegate device:didReceiveStatusInformation:];
-[ICDeviceDelegate device:didEncounterError:];
-[ICDeviceDelegate device:didEjectWithError:];
-[ICDeviceDelegate deviceDidChangeSharingState:];

@end

@protocol ICDeviceDelegate <NSObject>

@required

/* required instance methods */
-[ICDeviceDelegate device:didCloseSessionWithError:];
-[ICDeviceDelegate didRemoveDevice:];
-[ICDeviceDelegate device:didOpenSessionWithError:];

@optional

/* optional instance methods */
-[ICDeviceDelegate deviceDidBecomeReady:];
-[ICDeviceDelegate deviceDidChangeName:];
-[ICDeviceDelegate device:didReceiveStatusInformation:];
-[ICDeviceDelegate device:didEncounterError:];
-[ICDeviceDelegate device:didEjectWithError:];
-[ICDeviceDelegate deviceDidChangeSharingState:];

@end

@protocol LegacyPeriodicViewUpdaterDelegate <NSObject>

@required

@optional

/* optional instance methods */
-[LegacyPeriodicViewUpdaterDelegate periodicViewUpdaterWillUpdateAllViews:];
-[LegacyPeriodicViewUpdaterDelegate periodicViewUpdaterDidUpdateAllViews:];

@end

@protocol LegacyTextFieldDelegate <NSObject>

@required

@optional

/* optional instance methods */
-[LegacyTextFieldDelegate textFieldCanBecomeFirstResponder:];
-[LegacyTextFieldDelegate textFieldWillBecomeFirstResponder:];

@end

@protocol MKAnnotation <NSObject>

@required

@property (T{CLLocationCoordinate2D=dd},N,R) coordinate;
@property (T@"NSString",N,R) title;
@property (T@"NSString",N,R) subtitle;

/* required instance methods */
-[MKAnnotation coordinate];

@optional

/* optional instance methods */
-[MKAnnotation title];
-[MKAnnotation subtitle];

@end

@protocol MainWindowDeviceContentViewController <NSObject>

@required

@property (T@"_TtC7iMazing20MainWindowController",N,W) mainWindowController;
@property (T@"NSString",N,C) statusText;
@property (T@"NSString",N,C) searchString;
@property (TB,N) hasRefreshFeature;
@property (TB,N) hasQuickLookFeature;
@property (TB,N) hasGoBackOrForwardFeature;
@property (TB,N) hasChangeViewFeature;
@property (TB,N) hasChangePathFeature;
@property (TB,N) hasSearchFeature;
@property (TB,N) hasSliderFeature;
@property (T@"UserInteractionScreenData",N,&) screenData;
@property (T@"NSString",N,C) searchPlaceholder;
@property (T@"NSString",N,R) helpURL;
@property (T@"NSString",N,R) deviceUID;

/* required instance methods */
-[MainWindowDeviceContentViewController initWithDataset:device:];
-[MainWindowDeviceContentViewController mainWindowController];
-[MainWindowDeviceContentViewController setMainWindowController:];
-[MainWindowDeviceContentViewController statusText];
-[MainWindowDeviceContentViewController setStatusText:];
-[MainWindowDeviceContentViewController searchString];
-[MainWindowDeviceContentViewController setSearchString:];
-[MainWindowDeviceContentViewController hasRefreshFeature];
-[MainWindowDeviceContentViewController setHasRefreshFeature:];
-[MainWindowDeviceContentViewController hasQuickLookFeature];
-[MainWindowDeviceContentViewController setHasQuickLookFeature:];
-[MainWindowDeviceContentViewController hasGoBackOrForwardFeature];
-[MainWindowDeviceContentViewController setHasGoBackOrForwardFeature:];
-[MainWindowDeviceContentViewController hasChangeViewFeature];
-[MainWindowDeviceContentViewController setHasChangeViewFeature:];
-[MainWindowDeviceContentViewController hasChangePathFeature];
-[MainWindowDeviceContentViewController setHasChangePathFeature:];
-[MainWindowDeviceContentViewController hasSearchFeature];
-[MainWindowDeviceContentViewController setHasSearchFeature:];
-[MainWindowDeviceContentViewController hasSliderFeature];
-[MainWindowDeviceContentViewController setHasSliderFeature:];
-[MainWindowDeviceContentViewController screenData];
-[MainWindowDeviceContentViewController setScreenData:];
-[MainWindowDeviceContentViewController searchPlaceholder];
-[MainWindowDeviceContentViewController setSearchPlaceholder:];
-[MainWindowDeviceContentViewController helpURL];
-[MainWindowDeviceContentViewController initWithDevice:];

@optional

/* optional instance methods */
-[MainWindowDeviceContentViewController deviceUID];
-[MainWindowDeviceContentViewController willBecomeActive];
-[MainWindowDeviceContentViewController didBecomeActive];
-[MainWindowDeviceContentViewController willResignActive];
-[MainWindowDeviceContentViewController didResignActive];
-[MainWindowDeviceContentViewController willBeRemoved];
-[MainWindowDeviceContentViewController hasBeenRemoved];
-[MainWindowDeviceContentViewController refreshContentData:];

@end

@protocol MainWindowDeviceContentViewController <NSObject>

@required

@property (T@"_TtC7iMazing20MainWindowController") mainWindowController;
@property (T@"NSString",C) statusText;
@property (T@"NSString",C) searchString;
@property (TB) hasRefreshFeature;
@property (TB) hasQuickLookFeature;
@property (TB) hasGoBackOrForwardFeature;
@property (TB) hasChangeViewFeature;
@property (TB) hasChangePathFeature;
@property (TB) hasSearchFeature;
@property (TB) hasSliderFeature;
@property (T@"UserInteractionScreenData",&) screenData;
@property (T@"NSString",&) searchPlaceholder;
@property (T@"NSString",R) helpURL;
@property (T@"NSString",?,R) deviceUID;

/* required instance methods */
-[MainWindowDeviceContentViewController initWithDataset:device:];
-[MainWindowDeviceContentViewController mainWindowController];
-[MainWindowDeviceContentViewController setMainWindowController:];
-[MainWindowDeviceContentViewController statusText];
-[MainWindowDeviceContentViewController setStatusText:];
-[MainWindowDeviceContentViewController searchString];
-[MainWindowDeviceContentViewController setSearchString:];
-[MainWindowDeviceContentViewController hasRefreshFeature];
-[MainWindowDeviceContentViewController setHasRefreshFeature:];
-[MainWindowDeviceContentViewController hasQuickLookFeature];
-[MainWindowDeviceContentViewController setHasQuickLookFeature:];
-[MainWindowDeviceContentViewController hasGoBackOrForwardFeature];
-[MainWindowDeviceContentViewController setHasGoBackOrForwardFeature:];
-[MainWindowDeviceContentViewController hasChangeViewFeature];
-[MainWindowDeviceContentViewController setHasChangeViewFeature:];
-[MainWindowDeviceContentViewController hasChangePathFeature];
-[MainWindowDeviceContentViewController setHasChangePathFeature:];
-[MainWindowDeviceContentViewController hasSearchFeature];
-[MainWindowDeviceContentViewController setHasSearchFeature:];
-[MainWindowDeviceContentViewController hasSliderFeature];
-[MainWindowDeviceContentViewController setHasSliderFeature:];
-[MainWindowDeviceContentViewController screenData];
-[MainWindowDeviceContentViewController setScreenData:];
-[MainWindowDeviceContentViewController searchPlaceholder];
-[MainWindowDeviceContentViewController setSearchPlaceholder:];
-[MainWindowDeviceContentViewController helpURL];

@optional

/* optional instance methods */
-[MainWindowDeviceContentViewController initWithDevice:];
-[MainWindowDeviceContentViewController willBecomeActive];
-[MainWindowDeviceContentViewController didBecomeActive];
-[MainWindowDeviceContentViewController willResignActive];
-[MainWindowDeviceContentViewController didResignActive];
-[MainWindowDeviceContentViewController willBeRemoved];
-[MainWindowDeviceContentViewController hasBeenRemoved];
-[MainWindowDeviceContentViewController refreshContentData:];
-[MainWindowDeviceContentViewController deviceUID];

@end

@protocol NSApplicationDelegate <NSObject>

@required

@optional

/* optional instance methods */
-[NSApplicationDelegate applicationShouldTerminate:];
-[NSApplicationDelegate application:openURLs:];
-[NSApplicationDelegate application:openURLs:];
-[NSApplicationDelegate application:openFile:];
-[NSApplicationDelegate application:openFiles:];
-[NSApplicationDelegate application:openTempFile:];
-[NSApplicationDelegate applicationShouldOpenUntitledFile:];
-[NSApplicationDelegate applicationOpenUntitledFile:];
-[NSApplicationDelegate application:openFileWithoutUI:];
-[NSApplicationDelegate application:printFile:];
-[NSApplicationDelegate application:printFiles:withSettings:showPrintPanels:];
-[NSApplicationDelegate applicationShouldTerminateAfterLastWindowClosed:];
-[NSApplicationDelegate applicationShouldHandleReopen:hasVisibleWindows:];
-[NSApplicationDelegate applicationDockMenu:];
-[NSApplicationDelegate application:willPresentError:];
-[NSApplicationDelegate application:didRegisterForRemoteNotificationsWithDeviceToken:];
-[NSApplicationDelegate application:didFailToRegisterForRemoteNotificationsWithError:];
-[NSApplicationDelegate application:didReceiveRemoteNotification:];
-[NSApplicationDelegate applicationSupportsSecureRestorableState:];
-[NSApplicationDelegate application:willEncodeRestorableState:];
-[NSApplicationDelegate application:didDecodeRestorableState:];
-[NSApplicationDelegate application:willContinueUserActivityWithType:];
-[NSApplicationDelegate application:continueUserActivity:restorationHandler:];
-[NSApplicationDelegate application:continueUserActivity:restorationHandler:];
-[NSApplicationDelegate application:didFailToContinueUserActivityWithType:error:];
-[NSApplicationDelegate application:didUpdateUserActivity:];
-[NSApplicationDelegate application:didUpdateUserActivity:];
-[NSApplicationDelegate application:delegateHandlesKey:];
-[NSApplicationDelegate applicationShouldAutomaticallyLocalizeKeyEquivalents:];
-[NSApplicationDelegate applicationWillFinishLaunching:];
-[NSApplicationDelegate applicationDidFinishLaunching:];
-[NSApplicationDelegate applicationWillHide:];
-[NSApplicationDelegate applicationDidHide:];
-[NSApplicationDelegate applicationWillUnhide:];
-[NSApplicationDelegate applicationDidUnhide:];
-[NSApplicationDelegate applicationWillBecomeActive:];
-[NSApplicationDelegate applicationDidBecomeActive:];
-[NSApplicationDelegate applicationWillResignActive:];
-[NSApplicationDelegate applicationDidResignActive:];
-[NSApplicationDelegate applicationWillUpdate:];
-[NSApplicationDelegate applicationDidUpdate:];
-[NSApplicationDelegate applicationWillTerminate:];
-[NSApplicationDelegate applicationDidChangeScreenParameters:];
-[NSApplicationDelegate applicationDidChangeOcclusionState:];
-[NSApplicationDelegate applicationProtectedDataWillBecomeUnavailable:];
-[NSApplicationDelegate applicationProtectedDataDidBecomeAvailable:];

@end

@protocol NSBrowserDelegate <NSObject>

@required

@optional

/* optional instance methods */
-[NSBrowserDelegate browser:numberOfRowsInColumn:];
-[NSBrowserDelegate browser:createRowsForColumn:inMatrix:];
-[NSBrowserDelegate browser:numberOfChildrenOfItem:];
-[NSBrowserDelegate browser:child:ofItem:];
-[NSBrowserDelegate browser:isLeafItem:];
-[NSBrowserDelegate browser:objectValueForItem:];
-[NSBrowserDelegate browser:heightOfRow:inColumn:];
-[NSBrowserDelegate rootItemForBrowser:];
-[NSBrowserDelegate browser:setObjectValue:forItem:];
-[NSBrowserDelegate browser:shouldEditItem:];
-[NSBrowserDelegate browser:willDisplayCell:atRow:column:];
-[NSBrowserDelegate browser:titleOfColumn:];
-[NSBrowserDelegate browser:selectCellWithString:inColumn:];
-[NSBrowserDelegate browser:selectRow:inColumn:];
-[NSBrowserDelegate browser:isColumnValid:];
-[NSBrowserDelegate browserWillScroll:];
-[NSBrowserDelegate browserDidScroll:];
-[NSBrowserDelegate browser:shouldSizeColumn:forUserResize:toWidth:];
-[NSBrowserDelegate browser:sizeToFitWidthOfColumn:];
-[NSBrowserDelegate browserColumnConfigurationDidChange:];
-[NSBrowserDelegate browser:shouldShowCellExpansionForRow:column:];
-[NSBrowserDelegate browser:writeRowsWithIndexes:inColumn:toPasteboard:];
-[NSBrowserDelegate browser:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:inColumn:];
-[NSBrowserDelegate browser:canDragRowsWithIndexes:inColumn:withEvent:];
-[NSBrowserDelegate browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:];
-[NSBrowserDelegate browser:validateDrop:proposedRow:column:dropOperation:];
-[NSBrowserDelegate browser:acceptDrop:atRow:column:dropOperation:];
-[NSBrowserDelegate browser:typeSelectStringForRow:inColumn:];
-[NSBrowserDelegate browser:shouldTypeSelectForEvent:withCurrentSearchString:];
-[NSBrowserDelegate browser:nextTypeSelectMatchFromRow:toRow:inColumn:forString:];
-[NSBrowserDelegate browser:previewViewControllerForLeafItem:];
-[NSBrowserDelegate browser:headerViewControllerForItem:];
-[NSBrowserDelegate browser:didChangeLastColumn:toColumn:];
-[NSBrowserDelegate browser:selectionIndexesForProposedSelection:inColumn:];

@end

@protocol NSCoding

@required

/* required instance methods */
-[NSCoding encodeWithCoder:];
-[NSCoding initWithCoder:];

@optional

@end

@protocol NSCollectionViewDataSource <NSObject>

@required

/* required instance methods */
-[NSCollectionViewDataSource collectionView:numberOfItemsInSection:];
-[NSCollectionViewDataSource collectionView:itemForRepresentedObjectAtIndexPath:];
-[NSCollectionViewDataSource collectionView:itemForRepresentedObjectAtIndexPath:];

@optional

/* optional instance methods */
-[NSCollectionViewDataSource numberOfSectionsInCollectionView:];
-[NSCollectionViewDataSource numberOfSectionsInCollectionView:];
-[NSCollectionViewDataSource collectionView:viewForSupplementaryElementOfKind:atIndexPath:];
-[NSCollectionViewDataSource collectionView:viewForSupplementaryElementOfKind:atIndexPath:];

@end

@protocol NSCollectionViewDelegate <NSObject>

@required

@optional

/* optional instance methods */
-[NSCollectionViewDelegate collectionView:canDragItemsAtIndexPaths:withEvent:];
-[NSCollectionViewDelegate collectionView:canDragItemsAtIndexPaths:withEvent:];
-[NSCollectionViewDelegate collectionView:canDragItemsAtIndexes:withEvent:];
-[NSCollectionViewDelegate collectionView:canDragItemsAtIndexes:withEvent:];
-[NSCollectionViewDelegate collectionView:writeItemsAtIndexPaths:toPasteboard:];
-[NSCollectionViewDelegate collectionView:writeItemsAtIndexPaths:toPasteboard:];
-[NSCollectionViewDelegate collectionView:writeItemsAtIndexes:toPasteboard:];
-[NSCollectionViewDelegate collectionView:writeItemsAtIndexes:toPasteboard:];
-[NSCollectionViewDelegate collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexPaths:];
-[NSCollectionViewDelegate collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexPaths:];
-[NSCollectionViewDelegate collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexes:];
-[NSCollectionViewDelegate collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexes:];
-[NSCollectionViewDelegate collectionView:draggingImageForItemsAtIndexPaths:withEvent:offset:];
-[NSCollectionViewDelegate collectionView:draggingImageForItemsAtIndexPaths:withEvent:offset:];
-[NSCollectionViewDelegate collectionView:draggingImageForItemsAtIndexes:withEvent:offset:];
-[NSCollectionViewDelegate collectionView:draggingImageForItemsAtIndexes:withEvent:offset:];
-[NSCollectionViewDelegate collectionView:validateDrop:proposedIndexPath:dropOperation:];
-[NSCollectionViewDelegate collectionView:validateDrop:proposedIndex:dropOperation:];
-[NSCollectionViewDelegate collectionView:acceptDrop:indexPath:dropOperation:];
-[NSCollectionViewDelegate collectionView:acceptDrop:index:dropOperation:];
-[NSCollectionViewDelegate collectionView:pasteboardWriterForItemAtIndexPath:];
-[NSCollectionViewDelegate collectionView:pasteboardWriterForItemAtIndexPath:];
-[NSCollectionViewDelegate collectionView:pasteboardWriterForItemAtIndex:];
-[NSCollectionViewDelegate collectionView:pasteboardWriterForItemAtIndex:];
-[NSCollectionViewDelegate collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexPaths:];
-[NSCollectionViewDelegate collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexPaths:];
-[NSCollectionViewDelegate collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexes:];
-[NSCollectionViewDelegate collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexes:];
-[NSCollectionViewDelegate collectionView:draggingSession:endedAtPoint:dragOperation:];
-[NSCollectionViewDelegate collectionView:draggingSession:endedAtPoint:dragOperation:];
-[NSCollectionViewDelegate collectionView:updateDraggingItemsForDrag:];
-[NSCollectionViewDelegate collectionView:shouldChangeItemsAtIndexPaths:toHighlightState:];
-[NSCollectionViewDelegate collectionView:shouldChangeItemsAtIndexPaths:toHighlightState:];
-[NSCollectionViewDelegate collectionView:didChangeItemsAtIndexPaths:toHighlightState:];
-[NSCollectionViewDelegate collectionView:didChangeItemsAtIndexPaths:toHighlightState:];
-[NSCollectionViewDelegate collectionView:shouldSelectItemsAtIndexPaths:];
-[NSCollectionViewDelegate collectionView:shouldSelectItemsAtIndexPaths:];
-[NSCollectionViewDelegate collectionView:shouldDeselectItemsAtIndexPaths:];
-[NSCollectionViewDelegate collectionView:shouldDeselectItemsAtIndexPaths:];
-[NSCollectionViewDelegate collectionView:didSelectItemsAtIndexPaths:];
-[NSCollectionViewDelegate collectionView:didSelectItemsAtIndexPaths:];
-[NSCollectionViewDelegate collectionView:didDeselectItemsAtIndexPaths:];
-[NSCollectionViewDelegate collectionView:didDeselectItemsAtIndexPaths:];
-[NSCollectionViewDelegate collectionView:willDisplayItem:forRepresentedObjectAtIndexPath:];
-[NSCollectionViewDelegate collectionView:willDisplayItem:forRepresentedObjectAtIndexPath:];
-[NSCollectionViewDelegate collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:];
-[NSCollectionViewDelegate collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:];
-[NSCollectionViewDelegate collectionView:didEndDisplayingItem:forRepresentedObjectAtIndexPath:];
-[NSCollectionViewDelegate collectionView:didEndDisplayingItem:forRepresentedObjectAtIndexPath:];
-[NSCollectionViewDelegate collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:];
-[NSCollectionViewDelegate collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:];
-[NSCollectionViewDelegate collectionView:transitionLayoutForOldLayout:newLayout:];

@end

@protocol NSCollectionViewDelegate <NSObject>

@required

@optional

/* optional instance methods */
-[NSCollectionViewDelegate collectionView:canDragItemsAtIndexPaths:withEvent:];
-[NSCollectionViewDelegate collectionView:canDragItemsAtIndexes:withEvent:];
-[NSCollectionViewDelegate collectionView:writeItemsAtIndexPaths:toPasteboard:];
-[NSCollectionViewDelegate collectionView:writeItemsAtIndexes:toPasteboard:];
-[NSCollectionViewDelegate collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexPaths:];
-[NSCollectionViewDelegate collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexes:];
-[NSCollectionViewDelegate collectionView:draggingImageForItemsAtIndexPaths:withEvent:offset:];
-[NSCollectionViewDelegate collectionView:draggingImageForItemsAtIndexes:withEvent:offset:];
-[NSCollectionViewDelegate collectionView:validateDrop:proposedIndexPath:dropOperation:];
-[NSCollectionViewDelegate collectionView:validateDrop:proposedIndex:dropOperation:];
-[NSCollectionViewDelegate collectionView:acceptDrop:indexPath:dropOperation:];
-[NSCollectionViewDelegate collectionView:acceptDrop:index:dropOperation:];
-[NSCollectionViewDelegate collectionView:pasteboardWriterForItemAtIndexPath:];
-[NSCollectionViewDelegate collectionView:pasteboardWriterForItemAtIndex:];
-[NSCollectionViewDelegate collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexPaths:];
-[NSCollectionViewDelegate collectionView:draggingSession:willBeginAtPoint:forItemsAtIndexes:];
-[NSCollectionViewDelegate collectionView:draggingSession:endedAtPoint:dragOperation:];
-[NSCollectionViewDelegate collectionView:updateDraggingItemsForDrag:];
-[NSCollectionViewDelegate collectionView:shouldChangeItemsAtIndexPaths:toHighlightState:];
-[NSCollectionViewDelegate collectionView:didChangeItemsAtIndexPaths:toHighlightState:];
-[NSCollectionViewDelegate collectionView:shouldSelectItemsAtIndexPaths:];
-[NSCollectionViewDelegate collectionView:shouldDeselectItemsAtIndexPaths:];
-[NSCollectionViewDelegate collectionView:didSelectItemsAtIndexPaths:];
-[NSCollectionViewDelegate collectionView:didDeselectItemsAtIndexPaths:];
-[NSCollectionViewDelegate collectionView:willDisplayItem:forRepresentedObjectAtIndexPath:];
-[NSCollectionViewDelegate collectionView:willDisplaySupplementaryView:forElementKind:atIndexPath:];
-[NSCollectionViewDelegate collectionView:didEndDisplayingItem:forRepresentedObjectAtIndexPath:];
-[NSCollectionViewDelegate collectionView:didEndDisplayingSupplementaryView:forElementOfKind:atIndexPath:];
-[NSCollectionViewDelegate collectionView:transitionLayoutForOldLayout:newLayout:];

@end

@protocol NSCollectionViewDelegateFlowLayout <NSCollectionViewDelegate>

@required

@optional

/* optional instance methods */
-[NSCollectionViewDelegateFlowLayout collectionView:layout:sizeForItemAtIndexPath:];
-[NSCollectionViewDelegateFlowLayout collectionView:layout:sizeForItemAtIndexPath:];
-[NSCollectionViewDelegateFlowLayout collectionView:layout:insetForSectionAtIndex:];
-[NSCollectionViewDelegateFlowLayout collectionView:layout:insetForSectionAtIndex:];
-[NSCollectionViewDelegateFlowLayout collectionView:layout:minimumLineSpacingForSectionAtIndex:];
-[NSCollectionViewDelegateFlowLayout collectionView:layout:minimumLineSpacingForSectionAtIndex:];
-[NSCollectionViewDelegateFlowLayout collectionView:layout:minimumInteritemSpacingForSectionAtIndex:];
-[NSCollectionViewDelegateFlowLayout collectionView:layout:minimumInteritemSpacingForSectionAtIndex:];
-[NSCollectionViewDelegateFlowLayout collectionView:layout:referenceSizeForHeaderInSection:];
-[NSCollectionViewDelegateFlowLayout collectionView:layout:referenceSizeForFooterInSection:];

@end

@protocol NSControlTextEditingDelegate <NSObject>

@required

@optional

/* optional instance methods */
-[NSControlTextEditingDelegate controlTextDidBeginEditing:];
-[NSControlTextEditingDelegate controlTextDidEndEditing:];
-[NSControlTextEditingDelegate controlTextDidChange:];
-[NSControlTextEditingDelegate control:textShouldBeginEditing:];
-[NSControlTextEditingDelegate control:textShouldEndEditing:];
-[NSControlTextEditingDelegate control:didFailToFormatString:errorDescription:];
-[NSControlTextEditingDelegate control:didFailToValidatePartialString:errorDescription:];
-[NSControlTextEditingDelegate control:isValidObject:];
-[NSControlTextEditingDelegate control:textView:doCommandBySelector:];
-[NSControlTextEditingDelegate control:textView:doCommandBySelector:];
-[NSControlTextEditingDelegate control:textView:completions:forPartialWordRange:indexOfSelectedItem:];

@end

@protocol NSControlTextEditingDelegate <NSObject>

@required

@optional

/* optional instance methods */
-[NSControlTextEditingDelegate controlTextDidBeginEditing:];
-[NSControlTextEditingDelegate controlTextDidEndEditing:];
-[NSControlTextEditingDelegate controlTextDidChange:];
-[NSControlTextEditingDelegate control:textShouldBeginEditing:];
-[NSControlTextEditingDelegate control:textShouldEndEditing:];
-[NSControlTextEditingDelegate control:didFailToFormatString:errorDescription:];
-[NSControlTextEditingDelegate control:didFailToValidatePartialString:errorDescription:];
-[NSControlTextEditingDelegate control:isValidObject:];
-[NSControlTextEditingDelegate control:textView:doCommandBySelector:];
-[NSControlTextEditingDelegate control:textView:completions:forPartialWordRange:indexOfSelectedItem:];

@end

@protocol NSCopying

@required

/* required instance methods */
-[NSCopying copyWithZone:];

@optional

@end

@protocol NSDatePickerCellDelegate <NSObject>

@required

@optional

/* optional instance methods */
-[NSDatePickerCellDelegate datePickerCell:validateProposedDateValue:timeInterval:];

@end

@protocol NSDraggingSource <NSObject>

@required

/* required instance methods */
-[NSDraggingSource draggingSession:sourceOperationMaskForDraggingContext:];
-[NSDraggingSource draggingSession:sourceOperationMaskForDraggingContext:];

@optional

/* optional instance methods */
-[NSDraggingSource draggingSession:willBeginAtPoint:];
-[NSDraggingSource draggingSession:willBeginAtPoint:];
-[NSDraggingSource draggingSession:movedToPoint:];
-[NSDraggingSource draggingSession:movedToPoint:];
-[NSDraggingSource draggingSession:endedAtPoint:operation:];
-[NSDraggingSource draggingSession:endedAtPoint:operation:];
-[NSDraggingSource ignoreModifierKeysForDraggingSession:];
-[NSDraggingSource ignoreModifierKeysForDraggingSession:];

@end

@protocol NSDraggingSource <NSObject>

@required

/* required instance methods */
-[NSDraggingSource draggingSession:sourceOperationMaskForDraggingContext:];

@optional

/* optional instance methods */
-[NSDraggingSource draggingSession:willBeginAtPoint:];
-[NSDraggingSource draggingSession:movedToPoint:];
-[NSDraggingSource draggingSession:endedAtPoint:operation:];
-[NSDraggingSource ignoreModifierKeysForDraggingSession:];

@end

@protocol NSMenuDelegate <NSObject>

@required

@optional

/* optional instance methods */
-[NSMenuDelegate menuNeedsUpdate:];
-[NSMenuDelegate numberOfItemsInMenu:];
-[NSMenuDelegate numberOfItemsInMenu:];
-[NSMenuDelegate menu:updateItem:atIndex:shouldCancel:];
-[NSMenuDelegate menu:updateItem:atIndex:shouldCancel:];
-[NSMenuDelegate menuHasKeyEquivalent:forEvent:target:action:];
-[NSMenuDelegate menuHasKeyEquivalent:forEvent:target:action:];
-[NSMenuDelegate menuWillOpen:];
-[NSMenuDelegate menuDidClose:];
-[NSMenuDelegate menu:willHighlightItem:];
-[NSMenuDelegate menu:willHighlightItem:];
-[NSMenuDelegate confinementRectForMenu:onScreen:];
-[NSMenuDelegate confinementRectForMenu:onScreen:];

@end

@protocol NSMenuDelegate <NSObject>

@required

@optional

/* optional instance methods */
-[NSMenuDelegate menuNeedsUpdate:];
-[NSMenuDelegate numberOfItemsInMenu:];
-[NSMenuDelegate menu:updateItem:atIndex:shouldCancel:];
-[NSMenuDelegate menuHasKeyEquivalent:forEvent:target:action:];
-[NSMenuDelegate menuWillOpen:];
-[NSMenuDelegate menuDidClose:];
-[NSMenuDelegate menu:willHighlightItem:];
-[NSMenuDelegate confinementRectForMenu:onScreen:];

@end

@protocol NSObject

@required

@property (Tq,N,R) hash;
@property (T#,N,R) superclass;
@property (T@"NSString",N,R) description;
@property (T@"NSString",N,R) debugDescription;

/* required instance methods */
-[NSObject isEqual:];
-[NSObject hash];
-[NSObject superclass];
-[NSObject class];
-[NSObject self];
-[NSObject performSelector:];
-[NSObject performSelector:];
-[NSObject performSelector:withObject:];
-[NSObject performSelector:withObject:];
-[NSObject performSelector:withObject:withObject:];
-[NSObject performSelector:withObject:withObject:];
-[NSObject isProxy];
-[NSObject isKindOfClass:];
-[NSObject isKindOfClass:];
-[NSObject isMemberOfClass:];
-[NSObject isMemberOfClass:];
-[NSObject conformsToProtocol:];
-[NSObject conformsToProtocol:];
-[NSObject respondsToSelector:];
-[NSObject respondsToSelector:];
-[NSObject retain];
-[NSObject release];
-[NSObject autorelease];
-[NSObject retainCount];
-[NSObject zone];
-[NSObject description];

@optional

/* optional instance methods */
-[NSObject debugDescription];

@end

@protocol NSObject

@required

@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* required instance methods */
-[NSObject isEqual:];
-[NSObject class];
-[NSObject self];
-[NSObject performSelector:];
-[NSObject performSelector:withObject:];
-[NSObject performSelector:withObject:withObject:];
-[NSObject isProxy];
-[NSObject isKindOfClass:];
-[NSObject isMemberOfClass:];
-[NSObject conformsToProtocol:];
-[NSObject respondsToSelector:];
-[NSObject retain];
-[NSObject release];
-[NSObject autorelease];
-[NSObject retainCount];
-[NSObject zone];
-[NSObject hash];
-[NSObject superclass];
-[NSObject description];

@optional

/* optional instance methods */
-[NSObject debugDescription];

@end

@protocol NSOpenSavePanelDelegate <NSObject>

@required

@optional

/* optional instance methods */
-[NSOpenSavePanelDelegate panel:shouldEnableURL:];
-[NSOpenSavePanelDelegate panel:validateURL:error:];
-[NSOpenSavePanelDelegate panel:didChangeToDirectoryURL:];
-[NSOpenSavePanelDelegate panel:userEnteredFilename:confirmed:];
-[NSOpenSavePanelDelegate panel:willExpand:];
-[NSOpenSavePanelDelegate panelSelectionDidChange:];
-[NSOpenSavePanelDelegate panel:displayNameForType:];
-[NSOpenSavePanelDelegate panel:didSelectType:];

@end

@protocol NSOutlineViewDataSource <NSObject>

@required

@optional

/* optional instance methods */
-[NSOutlineViewDataSource outlineView:numberOfChildrenOfItem:];
-[NSOutlineViewDataSource outlineView:child:ofItem:];
-[NSOutlineViewDataSource outlineView:isItemExpandable:];
-[NSOutlineViewDataSource outlineView:objectValueForTableColumn:byItem:];
-[NSOutlineViewDataSource outlineView:objectValueForTableColumn:byItem:];
-[NSOutlineViewDataSource outlineView:setObjectValue:forTableColumn:byItem:];
-[NSOutlineViewDataSource outlineView:setObjectValue:forTableColumn:byItem:];
-[NSOutlineViewDataSource outlineView:itemForPersistentObject:];
-[NSOutlineViewDataSource outlineView:persistentObjectForItem:];
-[NSOutlineViewDataSource outlineView:sortDescriptorsDidChange:];
-[NSOutlineViewDataSource outlineView:pasteboardWriterForItem:];
-[NSOutlineViewDataSource outlineView:draggingSession:willBeginAtPoint:forItems:];
-[NSOutlineViewDataSource outlineView:draggingSession:willBeginAtPoint:forItems:];
-[NSOutlineViewDataSource outlineView:draggingSession:endedAtPoint:operation:];
-[NSOutlineViewDataSource outlineView:draggingSession:endedAtPoint:operation:];
-[NSOutlineViewDataSource outlineView:writeItems:toPasteboard:];
-[NSOutlineViewDataSource outlineView:writeItems:toPasteboard:];
-[NSOutlineViewDataSource outlineView:updateDraggingItemsForDrag:];
-[NSOutlineViewDataSource outlineView:validateDrop:proposedItem:proposedChildIndex:];
-[NSOutlineViewDataSource outlineView:acceptDrop:item:childIndex:];
-[NSOutlineViewDataSource outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:];

@end

@protocol NSOutlineViewDataSource <NSObject>

@required

@optional

/* optional instance methods */
-[NSOutlineViewDataSource outlineView:numberOfChildrenOfItem:];
-[NSOutlineViewDataSource outlineView:child:ofItem:];
-[NSOutlineViewDataSource outlineView:isItemExpandable:];
-[NSOutlineViewDataSource outlineView:objectValueForTableColumn:byItem:];
-[NSOutlineViewDataSource outlineView:setObjectValue:forTableColumn:byItem:];
-[NSOutlineViewDataSource outlineView:itemForPersistentObject:];
-[NSOutlineViewDataSource outlineView:persistentObjectForItem:];
-[NSOutlineViewDataSource outlineView:sortDescriptorsDidChange:];
-[NSOutlineViewDataSource outlineView:pasteboardWriterForItem:];
-[NSOutlineViewDataSource outlineView:draggingSession:willBeginAtPoint:forItems:];
-[NSOutlineViewDataSource outlineView:draggingSession:endedAtPoint:operation:];
-[NSOutlineViewDataSource outlineView:writeItems:toPasteboard:];
-[NSOutlineViewDataSource outlineView:updateDraggingItemsForDrag:];
-[NSOutlineViewDataSource outlineView:validateDrop:proposedItem:proposedChildIndex:];
-[NSOutlineViewDataSource outlineView:acceptDrop:item:childIndex:];
-[NSOutlineViewDataSource outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:];

@end

@protocol NSOutlineViewDelegate <NSControlTextEditingDelegate>

@required

@optional

/* optional instance methods */
-[NSOutlineViewDelegate outlineView:viewForTableColumn:item:];
-[NSOutlineViewDelegate outlineView:viewForTableColumn:item:];
-[NSOutlineViewDelegate outlineView:rowViewForItem:];
-[NSOutlineViewDelegate outlineView:didAddRowView:forRow:];
-[NSOutlineViewDelegate outlineView:didAddRowView:forRow:];
-[NSOutlineViewDelegate outlineView:didRemoveRowView:forRow:];
-[NSOutlineViewDelegate outlineView:didRemoveRowView:forRow:];
-[NSOutlineViewDelegate outlineView:willDisplayCell:forTableColumn:item:];
-[NSOutlineViewDelegate outlineView:willDisplayCell:forTableColumn:item:];
-[NSOutlineViewDelegate outlineView:shouldEditTableColumn:item:];
-[NSOutlineViewDelegate outlineView:shouldEditTableColumn:item:];
-[NSOutlineViewDelegate selectionShouldChangeInOutlineView:];
-[NSOutlineViewDelegate selectionShouldChangeInOutlineView:];
-[NSOutlineViewDelegate outlineView:shouldSelectItem:];
-[NSOutlineViewDelegate outlineView:selectionIndexesForProposedSelection:];
-[NSOutlineViewDelegate outlineView:shouldSelectTableColumn:];
-[NSOutlineViewDelegate outlineView:shouldSelectTableColumn:];
-[NSOutlineViewDelegate outlineView:mouseDownInHeaderOfTableColumn:];
-[NSOutlineViewDelegate outlineView:mouseDownInHeaderOfTableColumn:];
-[NSOutlineViewDelegate outlineView:didClickTableColumn:];
-[NSOutlineViewDelegate outlineView:didClickTableColumn:];
-[NSOutlineViewDelegate outlineView:didDragTableColumn:];
-[NSOutlineViewDelegate outlineView:didDragTableColumn:];
-[NSOutlineViewDelegate outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:];
-[NSOutlineViewDelegate outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:];
-[NSOutlineViewDelegate outlineView:heightOfRowByItem:];
-[NSOutlineViewDelegate outlineView:tintConfigurationForItem:];
-[NSOutlineViewDelegate outlineView:typeSelectStringForTableColumn:item:];
-[NSOutlineViewDelegate outlineView:typeSelectStringForTableColumn:item:];
-[NSOutlineViewDelegate outlineView:nextTypeSelectMatchFromItem:toItem:forString:];
-[NSOutlineViewDelegate outlineView:nextTypeSelectMatchFromItem:toItem:forString:];
-[NSOutlineViewDelegate outlineView:shouldTypeSelectForEvent:withCurrentSearchString:];
-[NSOutlineViewDelegate outlineView:shouldTypeSelectForEvent:withCurrentSearchString:];
-[NSOutlineViewDelegate outlineView:shouldShowCellExpansionForTableColumn:item:];
-[NSOutlineViewDelegate outlineView:shouldShowCellExpansionForTableColumn:item:];
-[NSOutlineViewDelegate outlineView:shouldTrackCell:forTableColumn:item:];
-[NSOutlineViewDelegate outlineView:shouldTrackCell:forTableColumn:item:];
-[NSOutlineViewDelegate outlineView:dataCellForTableColumn:item:];
-[NSOutlineViewDelegate outlineView:dataCellForTableColumn:item:];
-[NSOutlineViewDelegate outlineView:isGroupItem:];
-[NSOutlineViewDelegate outlineView:shouldExpandItem:];
-[NSOutlineViewDelegate outlineView:shouldCollapseItem:];
-[NSOutlineViewDelegate outlineView:willDisplayOutlineCell:forTableColumn:item:];
-[NSOutlineViewDelegate outlineView:willDisplayOutlineCell:forTableColumn:item:];
-[NSOutlineViewDelegate outlineView:sizeToFitWidthOfColumn:];
-[NSOutlineViewDelegate outlineView:shouldReorderColumn:toColumn:];
-[NSOutlineViewDelegate outlineView:shouldShowOutlineCellForItem:];
-[NSOutlineViewDelegate outlineView:userCanChangeVisibilityOfTableColumn:];
-[NSOutlineViewDelegate outlineView:userCanChangeVisibilityOfTableColumn:];
-[NSOutlineViewDelegate outlineView:userDidChangeVisibilityOfTableColumns:];
-[NSOutlineViewDelegate outlineView:userDidChangeVisibilityOfTableColumns:];
-[NSOutlineViewDelegate outlineViewSelectionDidChange:];
-[NSOutlineViewDelegate outlineViewColumnDidMove:];
-[NSOutlineViewDelegate outlineViewColumnDidResize:];
-[NSOutlineViewDelegate outlineViewSelectionIsChanging:];
-[NSOutlineViewDelegate outlineViewItemWillExpand:];
-[NSOutlineViewDelegate outlineViewItemDidExpand:];
-[NSOutlineViewDelegate outlineViewItemWillCollapse:];
-[NSOutlineViewDelegate outlineViewItemDidCollapse:];

@end

@protocol NSOutlineViewDelegate <NSControlTextEditingDelegate>

@required

@optional

/* optional instance methods */
-[NSOutlineViewDelegate outlineView:viewForTableColumn:item:];
-[NSOutlineViewDelegate outlineView:rowViewForItem:];
-[NSOutlineViewDelegate outlineView:didAddRowView:forRow:];
-[NSOutlineViewDelegate outlineView:didRemoveRowView:forRow:];
-[NSOutlineViewDelegate outlineView:willDisplayCell:forTableColumn:item:];
-[NSOutlineViewDelegate outlineView:shouldEditTableColumn:item:];
-[NSOutlineViewDelegate selectionShouldChangeInOutlineView:];
-[NSOutlineViewDelegate outlineView:shouldSelectItem:];
-[NSOutlineViewDelegate outlineView:selectionIndexesForProposedSelection:];
-[NSOutlineViewDelegate outlineView:shouldSelectTableColumn:];
-[NSOutlineViewDelegate outlineView:mouseDownInHeaderOfTableColumn:];
-[NSOutlineViewDelegate outlineView:didClickTableColumn:];
-[NSOutlineViewDelegate outlineView:didDragTableColumn:];
-[NSOutlineViewDelegate outlineView:toolTipForCell:rect:tableColumn:item:mouseLocation:];
-[NSOutlineViewDelegate outlineView:heightOfRowByItem:];
-[NSOutlineViewDelegate outlineView:tintConfigurationForItem:];
-[NSOutlineViewDelegate outlineView:typeSelectStringForTableColumn:item:];
-[NSOutlineViewDelegate outlineView:nextTypeSelectMatchFromItem:toItem:forString:];
-[NSOutlineViewDelegate outlineView:shouldTypeSelectForEvent:withCurrentSearchString:];
-[NSOutlineViewDelegate outlineView:shouldShowCellExpansionForTableColumn:item:];
-[NSOutlineViewDelegate outlineView:shouldTrackCell:forTableColumn:item:];
-[NSOutlineViewDelegate outlineView:dataCellForTableColumn:item:];
-[NSOutlineViewDelegate outlineView:isGroupItem:];
-[NSOutlineViewDelegate outlineView:shouldExpandItem:];
-[NSOutlineViewDelegate outlineView:shouldCollapseItem:];
-[NSOutlineViewDelegate outlineView:willDisplayOutlineCell:forTableColumn:item:];
-[NSOutlineViewDelegate outlineView:sizeToFitWidthOfColumn:];
-[NSOutlineViewDelegate outlineView:shouldReorderColumn:toColumn:];
-[NSOutlineViewDelegate outlineView:shouldShowOutlineCellForItem:];
-[NSOutlineViewDelegate outlineView:userCanChangeVisibilityOfTableColumn:];
-[NSOutlineViewDelegate outlineView:userDidChangeVisibilityOfTableColumns:];
-[NSOutlineViewDelegate outlineViewSelectionDidChange:];
-[NSOutlineViewDelegate outlineViewColumnDidMove:];
-[NSOutlineViewDelegate outlineViewColumnDidResize:];
-[NSOutlineViewDelegate outlineViewSelectionIsChanging:];
-[NSOutlineViewDelegate outlineViewItemWillExpand:];
-[NSOutlineViewDelegate outlineViewItemDidExpand:];
-[NSOutlineViewDelegate outlineViewItemWillCollapse:];
-[NSOutlineViewDelegate outlineViewItemDidCollapse:];

@end

@protocol NSPasteboardItemDataProvider <NSObject>

@required

/* required instance methods */
-[NSPasteboardItemDataProvider pasteboard:item:provideDataForType:];

@optional

/* optional instance methods */
-[NSPasteboardItemDataProvider pasteboardFinishedWithDataProvider:];

@end

@protocol NSPasteboardWriting <NSObject>

@required

/* required instance methods */
-[NSPasteboardWriting writableTypesForPasteboard:];
-[NSPasteboardWriting writableTypesForPasteboard:];
-[NSPasteboardWriting pasteboardPropertyListForType:];
-[NSPasteboardWriting pasteboardPropertyListForType:];

@optional

/* optional instance methods */
-[NSPasteboardWriting writingOptionsForType:pasteboard:];
-[NSPasteboardWriting writingOptionsForType:pasteboard:];

@end

@protocol NSSplitViewDelegate <NSObject>

@required

@optional

/* optional instance methods */
-[NSSplitViewDelegate splitView:canCollapseSubview:];
-[NSSplitViewDelegate splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:];
-[NSSplitViewDelegate splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:];
-[NSSplitViewDelegate splitView:constrainMinCoordinate:ofSubviewAt:];
-[NSSplitViewDelegate splitView:constrainMaxCoordinate:ofSubviewAt:];
-[NSSplitViewDelegate splitView:constrainSplitPosition:ofSubviewAt:];
-[NSSplitViewDelegate splitView:resizeSubviewsWithOldSize:];
-[NSSplitViewDelegate splitView:shouldAdjustSizeOfSubview:];
-[NSSplitViewDelegate splitView:shouldHideDividerAtIndex:];
-[NSSplitViewDelegate splitView:shouldHideDividerAtIndex:];
-[NSSplitViewDelegate splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:];
-[NSSplitViewDelegate splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:];
-[NSSplitViewDelegate splitView:additionalEffectiveRectOfDividerAtIndex:];
-[NSSplitViewDelegate splitView:additionalEffectiveRectOfDividerAtIndex:];
-[NSSplitViewDelegate splitViewWillResizeSubviews:];
-[NSSplitViewDelegate splitViewDidResizeSubviews:];

@end

@protocol NSSplitViewDelegate <NSObject>

@required

@optional

/* optional instance methods */
-[NSSplitViewDelegate splitView:canCollapseSubview:];
-[NSSplitViewDelegate splitView:shouldCollapseSubview:forDoubleClickOnDividerAtIndex:];
-[NSSplitViewDelegate splitView:constrainMinCoordinate:ofSubviewAt:];
-[NSSplitViewDelegate splitView:constrainMaxCoordinate:ofSubviewAt:];
-[NSSplitViewDelegate splitView:constrainSplitPosition:ofSubviewAt:];
-[NSSplitViewDelegate splitView:resizeSubviewsWithOldSize:];
-[NSSplitViewDelegate splitView:shouldAdjustSizeOfSubview:];
-[NSSplitViewDelegate splitView:shouldHideDividerAtIndex:];
-[NSSplitViewDelegate splitView:effectiveRect:forDrawnRect:ofDividerAtIndex:];
-[NSSplitViewDelegate splitView:additionalEffectiveRectOfDividerAtIndex:];
-[NSSplitViewDelegate splitViewWillResizeSubviews:];
-[NSSplitViewDelegate splitViewDidResizeSubviews:];

@end

@protocol NSTabViewDelegate <NSObject>

@required

@optional

/* optional instance methods */
-[NSTabViewDelegate tabView:shouldSelectTabViewItem:];
-[NSTabViewDelegate tabView:willSelectTabViewItem:];
-[NSTabViewDelegate tabView:didSelectTabViewItem:];
-[NSTabViewDelegate tabViewDidChangeNumberOfTabViewItems:];

@end

@protocol NSTableViewDataSource <NSObject>

@required

@optional

/* optional instance methods */
-[NSTableViewDataSource numberOfRowsInTableView:];
-[NSTableViewDataSource numberOfRowsInTableView:];
-[NSTableViewDataSource tableView:objectValueForTableColumn:row:];
-[NSTableViewDataSource tableView:objectValueForTableColumn:row:];
-[NSTableViewDataSource tableView:setObjectValue:forTableColumn:row:];
-[NSTableViewDataSource tableView:setObjectValue:forTableColumn:row:];
-[NSTableViewDataSource tableView:sortDescriptorsDidChange:];
-[NSTableViewDataSource tableView:pasteboardWriterForRow:];
-[NSTableViewDataSource tableView:draggingSession:willBeginAtPoint:forRowIndexes:];
-[NSTableViewDataSource tableView:draggingSession:willBeginAtPoint:forRowIndexes:];
-[NSTableViewDataSource tableView:draggingSession:endedAtPoint:operation:];
-[NSTableViewDataSource tableView:draggingSession:endedAtPoint:operation:];
-[NSTableViewDataSource tableView:updateDraggingItemsForDrag:];
-[NSTableViewDataSource tableView:writeRowsWithIndexes:toPasteboard:];
-[NSTableViewDataSource tableView:writeRowsWithIndexes:toPasteboard:];
-[NSTableViewDataSource tableView:validateDrop:proposedRow:proposedDropOperation:];
-[NSTableViewDataSource tableView:acceptDrop:row:dropOperation:];
-[NSTableViewDataSource tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:];
-[NSTableViewDataSource tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:];

@end

@protocol NSTableViewDataSource <NSObject>

@required

@optional

/* optional instance methods */
-[NSTableViewDataSource numberOfRowsInTableView:];
-[NSTableViewDataSource tableView:objectValueForTableColumn:row:];
-[NSTableViewDataSource tableView:setObjectValue:forTableColumn:row:];
-[NSTableViewDataSource tableView:sortDescriptorsDidChange:];
-[NSTableViewDataSource tableView:pasteboardWriterForRow:];
-[NSTableViewDataSource tableView:draggingSession:willBeginAtPoint:forRowIndexes:];
-[NSTableViewDataSource tableView:draggingSession:endedAtPoint:operation:];
-[NSTableViewDataSource tableView:updateDraggingItemsForDrag:];
-[NSTableViewDataSource tableView:writeRowsWithIndexes:toPasteboard:];
-[NSTableViewDataSource tableView:validateDrop:proposedRow:proposedDropOperation:];
-[NSTableViewDataSource tableView:acceptDrop:row:dropOperation:];
-[NSTableViewDataSource tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:];

@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@required

@optional

/* optional instance methods */
-[NSTableViewDelegate tableView:viewForTableColumn:row:];
-[NSTableViewDelegate tableView:viewForTableColumn:row:];
-[NSTableViewDelegate tableView:rowViewForRow:];
-[NSTableViewDelegate tableView:didAddRowView:forRow:];
-[NSTableViewDelegate tableView:didAddRowView:forRow:];
-[NSTableViewDelegate tableView:didRemoveRowView:forRow:];
-[NSTableViewDelegate tableView:didRemoveRowView:forRow:];
-[NSTableViewDelegate tableView:willDisplayCell:forTableColumn:row:];
-[NSTableViewDelegate tableView:willDisplayCell:forTableColumn:row:];
-[NSTableViewDelegate tableView:shouldEditTableColumn:row:];
-[NSTableViewDelegate tableView:shouldEditTableColumn:row:];
-[NSTableViewDelegate tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:];
-[NSTableViewDelegate tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:];
-[NSTableViewDelegate tableView:shouldShowCellExpansionForTableColumn:row:];
-[NSTableViewDelegate tableView:shouldShowCellExpansionForTableColumn:row:];
-[NSTableViewDelegate tableView:shouldTrackCell:forTableColumn:row:];
-[NSTableViewDelegate tableView:shouldTrackCell:forTableColumn:row:];
-[NSTableViewDelegate tableView:dataCellForTableColumn:row:];
-[NSTableViewDelegate tableView:dataCellForTableColumn:row:];
-[NSTableViewDelegate selectionShouldChangeInTableView:];
-[NSTableViewDelegate selectionShouldChangeInTableView:];
-[NSTableViewDelegate tableView:shouldSelectRow:];
-[NSTableViewDelegate tableView:selectionIndexesForProposedSelection:];
-[NSTableViewDelegate tableView:shouldSelectTableColumn:];
-[NSTableViewDelegate tableView:shouldSelectTableColumn:];
-[NSTableViewDelegate tableView:mouseDownInHeaderOfTableColumn:];
-[NSTableViewDelegate tableView:mouseDownInHeaderOfTableColumn:];
-[NSTableViewDelegate tableView:didClickTableColumn:];
-[NSTableViewDelegate tableView:didClickTableColumn:];
-[NSTableViewDelegate tableView:didDragTableColumn:];
-[NSTableViewDelegate tableView:didDragTableColumn:];
-[NSTableViewDelegate tableView:heightOfRow:];
-[NSTableViewDelegate tableView:typeSelectStringForTableColumn:row:];
-[NSTableViewDelegate tableView:typeSelectStringForTableColumn:row:];
-[NSTableViewDelegate tableView:nextTypeSelectMatchFromRow:toRow:forString:];
-[NSTableViewDelegate tableView:nextTypeSelectMatchFromRow:toRow:forString:];
-[NSTableViewDelegate tableView:shouldTypeSelectForEvent:withCurrentSearchString:];
-[NSTableViewDelegate tableView:shouldTypeSelectForEvent:withCurrentSearchString:];
-[NSTableViewDelegate tableView:isGroupRow:];
-[NSTableViewDelegate tableView:sizeToFitWidthOfColumn:];
-[NSTableViewDelegate tableView:shouldReorderColumn:toColumn:];
-[NSTableViewDelegate tableView:rowActionsForRow:edge:];
-[NSTableViewDelegate tableView:userCanChangeVisibilityOfTableColumn:];
-[NSTableViewDelegate tableView:userCanChangeVisibilityOfTableColumn:];
-[NSTableViewDelegate tableView:userDidChangeVisibilityOfTableColumns:];
-[NSTableViewDelegate tableView:userDidChangeVisibilityOfTableColumns:];
-[NSTableViewDelegate tableViewSelectionDidChange:];
-[NSTableViewDelegate tableViewColumnDidMove:];
-[NSTableViewDelegate tableViewColumnDidResize:];
-[NSTableViewDelegate tableViewSelectionIsChanging:];

@end

@protocol NSTableViewDelegate <NSControlTextEditingDelegate>

@required

@optional

/* optional instance methods */
-[NSTableViewDelegate tableView:viewForTableColumn:row:];
-[NSTableViewDelegate tableView:rowViewForRow:];
-[NSTableViewDelegate tableView:didAddRowView:forRow:];
-[NSTableViewDelegate tableView:didRemoveRowView:forRow:];
-[NSTableViewDelegate tableView:willDisplayCell:forTableColumn:row:];
-[NSTableViewDelegate tableView:shouldEditTableColumn:row:];
-[NSTableViewDelegate tableView:toolTipForCell:rect:tableColumn:row:mouseLocation:];
-[NSTableViewDelegate tableView:shouldShowCellExpansionForTableColumn:row:];
-[NSTableViewDelegate tableView:shouldTrackCell:forTableColumn:row:];
-[NSTableViewDelegate tableView:dataCellForTableColumn:row:];
-[NSTableViewDelegate selectionShouldChangeInTableView:];
-[NSTableViewDelegate tableView:shouldSelectRow:];
-[NSTableViewDelegate tableView:selectionIndexesForProposedSelection:];
-[NSTableViewDelegate tableView:shouldSelectTableColumn:];
-[NSTableViewDelegate tableView:mouseDownInHeaderOfTableColumn:];
-[NSTableViewDelegate tableView:didClickTableColumn:];
-[NSTableViewDelegate tableView:didDragTableColumn:];
-[NSTableViewDelegate tableView:heightOfRow:];
-[NSTableViewDelegate tableView:typeSelectStringForTableColumn:row:];
-[NSTableViewDelegate tableView:nextTypeSelectMatchFromRow:toRow:forString:];
-[NSTableViewDelegate tableView:shouldTypeSelectForEvent:withCurrentSearchString:];
-[NSTableViewDelegate tableView:isGroupRow:];
-[NSTableViewDelegate tableView:sizeToFitWidthOfColumn:];
-[NSTableViewDelegate tableView:shouldReorderColumn:toColumn:];
-[NSTableViewDelegate tableView:rowActionsForRow:edge:];
-[NSTableViewDelegate tableView:userCanChangeVisibilityOfTableColumn:];
-[NSTableViewDelegate tableView:userDidChangeVisibilityOfTableColumns:];
-[NSTableViewDelegate tableViewSelectionDidChange:];
-[NSTableViewDelegate tableViewColumnDidMove:];
-[NSTableViewDelegate tableViewColumnDidResize:];
-[NSTableViewDelegate tableViewSelectionIsChanging:];

@end

@protocol NSTextFieldDelegate <NSControlTextEditingDelegate>

@required

@optional

/* optional instance methods */
-[NSTextFieldDelegate textField:textView:candidatesForSelectedRange:];
-[NSTextFieldDelegate textField:textView:candidates:forSelectedRange:];
-[NSTextFieldDelegate textField:textView:shouldSelectCandidateAtIndex:];
-[NSTextFieldDelegate textField:textView:shouldSelectCandidateAtIndex:];

@end

@protocol NSTextFieldDelegate <NSControlTextEditingDelegate>

@required

@optional

/* optional instance methods */
-[NSTextFieldDelegate textField:textView:candidatesForSelectedRange:];
-[NSTextFieldDelegate textField:textView:candidates:forSelectedRange:];
-[NSTextFieldDelegate textField:textView:shouldSelectCandidateAtIndex:];

@end

@protocol NSUserNotificationCenterDelegate <NSObject>

@required

@optional

/* optional instance methods */
-[NSUserNotificationCenterDelegate userNotificationCenter:didDeliverNotification:];
-[NSUserNotificationCenterDelegate userNotificationCenter:didDeliverNotification:];
-[NSUserNotificationCenterDelegate userNotificationCenter:didActivateNotification:];
-[NSUserNotificationCenterDelegate userNotificationCenter:didActivateNotification:];
-[NSUserNotificationCenterDelegate userNotificationCenter:shouldPresentNotification:];
-[NSUserNotificationCenterDelegate userNotificationCenter:shouldPresentNotification:];

@end

@protocol NSWindowDelegate <NSObject>

@required

@optional

/* optional instance methods */
-[NSWindowDelegate windowShouldClose:];
-[NSWindowDelegate windowWillReturnFieldEditor:toObject:];
-[NSWindowDelegate windowWillReturnFieldEditor:toObject:];
-[NSWindowDelegate windowWillResize:toSize:];
-[NSWindowDelegate windowWillResize:toSize:];
-[NSWindowDelegate windowWillUseStandardFrame:defaultFrame:];
-[NSWindowDelegate windowShouldZoom:toFrame:];
-[NSWindowDelegate windowWillReturnUndoManager:];
-[NSWindowDelegate window:willPositionSheet:usingRect:];
-[NSWindowDelegate window:willPositionSheet:usingRect:];
-[NSWindowDelegate window:shouldPopUpDocumentPathMenu:];
-[NSWindowDelegate window:shouldDragDocumentWithEvent:from:withPasteboard:];
-[NSWindowDelegate window:shouldDragDocumentWithEvent:from:withPasteboard:];
-[NSWindowDelegate window:willUseFullScreenContentSize:];
-[NSWindowDelegate window:willUseFullScreenPresentationOptions:];
-[NSWindowDelegate customWindowsToEnterFullScreenForWindow:];
-[NSWindowDelegate customWindowsToEnterFullScreenForWindow:];
-[NSWindowDelegate window:startCustomAnimationToEnterFullScreenWithDuration:];
-[NSWindowDelegate windowDidFailToEnterFullScreen:];
-[NSWindowDelegate customWindowsToExitFullScreenForWindow:];
-[NSWindowDelegate customWindowsToExitFullScreenForWindow:];
-[NSWindowDelegate window:startCustomAnimationToExitFullScreenWithDuration:];
-[NSWindowDelegate customWindowsToEnterFullScreenForWindow:onScreen:];
-[NSWindowDelegate customWindowsToEnterFullScreenForWindow:onScreen:];
-[NSWindowDelegate window:startCustomAnimationToEnterFullScreenOnScreen:withDuration:];
-[NSWindowDelegate window:startCustomAnimationToEnterFullScreenOnScreen:withDuration:];
-[NSWindowDelegate windowDidFailToExitFullScreen:];
-[NSWindowDelegate window:willResizeForVersionBrowserWithMaxPreferredSize:maxAllowedSize:];
-[NSWindowDelegate window:willEncodeRestorableState:];
-[NSWindowDelegate window:didDecodeRestorableState:];
-[NSWindowDelegate previewRepresentableActivityItemsForWindow:];
-[NSWindowDelegate previewRepresentableActivityItemsForWindow:];
-[NSWindowDelegate windowForSharingRequestFromWindow:];
-[NSWindowDelegate windowForSharingRequestFromWindow:];
-[NSWindowDelegate windowDidResize:];
-[NSWindowDelegate windowDidExpose:];
-[NSWindowDelegate windowWillMove:];
-[NSWindowDelegate windowDidMove:];
-[NSWindowDelegate windowDidBecomeKey:];
-[NSWindowDelegate windowDidResignKey:];
-[NSWindowDelegate windowDidBecomeMain:];
-[NSWindowDelegate windowDidResignMain:];
-[NSWindowDelegate windowWillClose:];
-[NSWindowDelegate windowWillMiniaturize:];
-[NSWindowDelegate windowDidMiniaturize:];
-[NSWindowDelegate windowDidDeminiaturize:];
-[NSWindowDelegate windowDidUpdate:];
-[NSWindowDelegate windowDidChangeScreen:];
-[NSWindowDelegate windowDidChangeScreenProfile:];
-[NSWindowDelegate windowDidChangeBackingProperties:];
-[NSWindowDelegate windowWillBeginSheet:];
-[NSWindowDelegate windowDidEndSheet:];
-[NSWindowDelegate windowWillStartLiveResize:];
-[NSWindowDelegate windowDidEndLiveResize:];
-[NSWindowDelegate windowWillEnterFullScreen:];
-[NSWindowDelegate windowDidEnterFullScreen:];
-[NSWindowDelegate windowWillExitFullScreen:];
-[NSWindowDelegate windowDidExitFullScreen:];
-[NSWindowDelegate windowWillEnterVersionBrowser:];
-[NSWindowDelegate windowDidEnterVersionBrowser:];
-[NSWindowDelegate windowWillExitVersionBrowser:];
-[NSWindowDelegate windowDidExitVersionBrowser:];
-[NSWindowDelegate windowDidChangeOcclusionState:];

@end

@protocol NSWindowDelegate <NSObject>

@required

@optional

/* optional instance methods */
-[NSWindowDelegate windowShouldClose:];
-[NSWindowDelegate windowWillReturnFieldEditor:toObject:];
-[NSWindowDelegate windowWillResize:toSize:];
-[NSWindowDelegate windowWillUseStandardFrame:defaultFrame:];
-[NSWindowDelegate windowShouldZoom:toFrame:];
-[NSWindowDelegate windowWillReturnUndoManager:];
-[NSWindowDelegate window:willPositionSheet:usingRect:];
-[NSWindowDelegate window:shouldPopUpDocumentPathMenu:];
-[NSWindowDelegate window:shouldDragDocumentWithEvent:from:withPasteboard:];
-[NSWindowDelegate window:willUseFullScreenContentSize:];
-[NSWindowDelegate window:willUseFullScreenPresentationOptions:];
-[NSWindowDelegate customWindowsToEnterFullScreenForWindow:];
-[NSWindowDelegate window:startCustomAnimationToEnterFullScreenWithDuration:];
-[NSWindowDelegate windowDidFailToEnterFullScreen:];
-[NSWindowDelegate customWindowsToExitFullScreenForWindow:];
-[NSWindowDelegate window:startCustomAnimationToExitFullScreenWithDuration:];
-[NSWindowDelegate customWindowsToEnterFullScreenForWindow:onScreen:];
-[NSWindowDelegate window:startCustomAnimationToEnterFullScreenOnScreen:withDuration:];
-[NSWindowDelegate windowDidFailToExitFullScreen:];
-[NSWindowDelegate window:willResizeForVersionBrowserWithMaxPreferredSize:maxAllowedSize:];
-[NSWindowDelegate window:willEncodeRestorableState:];
-[NSWindowDelegate window:didDecodeRestorableState:];
-[NSWindowDelegate previewRepresentableActivityItemsForWindow:];
-[NSWindowDelegate windowForSharingRequestFromWindow:];
-[NSWindowDelegate windowDidResize:];
-[NSWindowDelegate windowDidExpose:];
-[NSWindowDelegate windowWillMove:];
-[NSWindowDelegate windowDidMove:];
-[NSWindowDelegate windowDidBecomeKey:];
-[NSWindowDelegate windowDidResignKey:];
-[NSWindowDelegate windowDidBecomeMain:];
-[NSWindowDelegate windowDidResignMain:];
-[NSWindowDelegate windowWillClose:];
-[NSWindowDelegate windowWillMiniaturize:];
-[NSWindowDelegate windowDidMiniaturize:];
-[NSWindowDelegate windowDidDeminiaturize:];
-[NSWindowDelegate windowDidUpdate:];
-[NSWindowDelegate windowDidChangeScreen:];
-[NSWindowDelegate windowDidChangeScreenProfile:];
-[NSWindowDelegate windowDidChangeBackingProperties:];
-[NSWindowDelegate windowWillBeginSheet:];
-[NSWindowDelegate windowDidEndSheet:];
-[NSWindowDelegate windowWillStartLiveResize:];
-[NSWindowDelegate windowDidEndLiveResize:];
-[NSWindowDelegate windowWillEnterFullScreen:];
-[NSWindowDelegate windowDidEnterFullScreen:];
-[NSWindowDelegate windowWillExitFullScreen:];
-[NSWindowDelegate windowDidExitFullScreen:];
-[NSWindowDelegate windowWillEnterVersionBrowser:];
-[NSWindowDelegate windowDidEnterVersionBrowser:];
-[NSWindowDelegate windowWillExitVersionBrowser:];
-[NSWindowDelegate windowDidExitVersionBrowser:];
-[NSWindowDelegate windowDidChangeOcclusionState:];

@end

@protocol PrintJobPrintableView <NSObject>

@required

/* required instance methods */
-[PrintJobPrintableView knowsPageRange:];
-[PrintJobPrintableView rectForPage:];
-[PrintJobPrintableView adjustPagesRectUsingPrintableArea:];
-[PrintJobPrintableView updatePagesRectUsingPrintableArea:];

@optional

@end

@protocol QLPreviewItem <NSObject>

@required

@property (T@"NSURL",N,R) previewItemURL;
@property (T@"NSString",N,R) previewItemTitle;
@property (T@,N,R) previewItemDisplayState;

/* required instance methods */
-[QLPreviewItem previewItemURL];

@optional

/* optional instance methods */
-[QLPreviewItem previewItemTitle];
-[QLPreviewItem previewItemDisplayState];

@end

@protocol QLPreviewPanelDataSource

@required

/* required instance methods */
-[QLPreviewPanelDataSource numberOfPreviewItemsInPreviewPanel:];
-[QLPreviewPanelDataSource numberOfPreviewItemsInPreviewPanel:];
-[QLPreviewPanelDataSource previewPanel:previewItemAtIndex:];
-[QLPreviewPanelDataSource previewPanel:previewItemAtIndex:];

@optional

@end

@protocol StorageItemDelegateProtocol <NSObject>

@required

/* required instance methods */
-[StorageItemDelegateProtocol storageItem:updateDidEnd:];
-[StorageItemDelegateProtocol storageItem:updateDidFailWithError:notification:];

@optional

/* optional instance methods */
-[StorageItemDelegateProtocol storageItem:updateDidStart:];
-[StorageItemDelegateProtocol storageItem:updateInProgress:];

@end

@protocol VKDisplayable <NSObject>

@required

@property (T@"NSString",N,C) title;
@property (T@"NSString",N,C) subtitle;
@property (T@"NSImage",N,&) icon;
@property (T@"NSImage",N,&) selectedIcon;
@property (T@"NSImage",N,&) accessoryIcon;
@property (T@"NSString",N,C) accessoryText;
@property (TB,N) showStatusIcon;
@property (Tq,N) status;

/* required instance methods */
-[VKDisplayable title];
-[VKDisplayable setTitle:];
-[VKDisplayable subtitle];
-[VKDisplayable setSubtitle:];
-[VKDisplayable icon];
-[VKDisplayable setIcon:];
-[VKDisplayable selectedIcon];
-[VKDisplayable setSelectedIcon:];
-[VKDisplayable accessoryIcon];
-[VKDisplayable setAccessoryIcon:];
-[VKDisplayable accessoryText];
-[VKDisplayable setAccessoryText:];
-[VKDisplayable showStatusIcon];
-[VKDisplayable setShowStatusIcon:];
-[VKDisplayable status];
-[VKDisplayable setStatus:];

@optional

@end

@protocol VKHighlightListViewControllerDelegate

@required

@optional

/* optional instance methods */
-[VKHighlightListViewControllerDelegate highlightListView:shouldSelectItem:];

@end

@protocol WKNavigationDelegate <NSObject>

@required

@optional

/* optional instance methods */
-[WKNavigationDelegate webView:decidePolicyForNavigationAction:decisionHandler:];
-[WKNavigationDelegate webView:decidePolicyForNavigationAction:decisionHandler:];
-[WKNavigationDelegate webView:decidePolicyForNavigationAction:preferences:decisionHandler:];
-[WKNavigationDelegate webView:decidePolicyForNavigationAction:preferences:decisionHandler:];
-[WKNavigationDelegate webView:decidePolicyForNavigationResponse:decisionHandler:];
-[WKNavigationDelegate webView:decidePolicyForNavigationResponse:decisionHandler:];
-[WKNavigationDelegate webView:didStartProvisionalNavigation:];
-[WKNavigationDelegate webView:didReceiveServerRedirectForProvisionalNavigation:];
-[WKNavigationDelegate webView:didFailProvisionalNavigation:withError:];
-[WKNavigationDelegate webView:didCommitNavigation:];
-[WKNavigationDelegate webView:didCommitNavigation:];
-[WKNavigationDelegate webView:didFinishNavigation:];
-[WKNavigationDelegate webView:didFinishNavigation:];
-[WKNavigationDelegate webView:didFailNavigation:withError:];
-[WKNavigationDelegate webView:didFailNavigation:withError:];
-[WKNavigationDelegate webView:didReceiveAuthenticationChallenge:completionHandler:];
-[WKNavigationDelegate webView:didReceiveAuthenticationChallenge:completionHandler:];
-[WKNavigationDelegate webViewWebContentProcessDidTerminate:];
-[WKNavigationDelegate webView:authenticationChallenge:shouldAllowDeprecatedTLS:];
-[WKNavigationDelegate webView:navigationAction:didBecomeDownload:];
-[WKNavigationDelegate webView:navigationAction:didBecomeDownload:];
-[WKNavigationDelegate webView:navigationResponse:didBecomeDownload:];
-[WKNavigationDelegate webView:navigationResponse:didBecomeDownload:];

@end

@protocol WKUIDelegate <NSObject>

@required

@optional

/* optional instance methods */
-[WKUIDelegate webView:createWebViewWithConfiguration:forNavigationAction:windowFeatures:];
-[WKUIDelegate webView:createWebViewWithConfiguration:forNavigationAction:windowFeatures:];
-[WKUIDelegate webViewDidClose:];
-[WKUIDelegate webView:runJavaScriptAlertPanelWithMessage:initiatedByFrame:completionHandler:];
-[WKUIDelegate webView:runJavaScriptConfirmPanelWithMessage:initiatedByFrame:completionHandler:];
-[WKUIDelegate webView:runJavaScriptTextInputPanelWithPrompt:defaultText:initiatedByFrame:completionHandler:];
-[WKUIDelegate webView:requestMediaCapturePermissionForOrigin:initiatedByFrame:type:decisionHandler:];
-[WKUIDelegate webView:requestMediaCapturePermissionForOrigin:initiatedByFrame:type:decisionHandler:];
-[WKUIDelegate webView:requestDeviceOrientationAndMotionPermissionForOrigin:initiatedByFrame:decisionHandler:];
-[WKUIDelegate webView:requestDeviceOrientationAndMotionPermissionForOrigin:initiatedByFrame:decisionHandler:];
-[WKUIDelegate webView:runOpenPanelWithParameters:initiatedByFrame:completionHandler:];
-[WKUIDelegate webView:runOpenPanelWithParameters:initiatedByFrame:completionHandler:];

@end

@protocol WebFrameLoadDelegate <NSObject>

@required

@optional

/* optional instance methods */
-[WebFrameLoadDelegate webView:didStartProvisionalLoadForFrame:];
-[WebFrameLoadDelegate webView:didReceiveServerRedirectForProvisionalLoadForFrame:];
-[WebFrameLoadDelegate webView:didFailProvisionalLoadWithError:forFrame:];
-[WebFrameLoadDelegate webView:didCommitLoadForFrame:];
-[WebFrameLoadDelegate webView:didReceiveTitle:forFrame:];
-[WebFrameLoadDelegate webView:didReceiveIcon:forFrame:];
-[WebFrameLoadDelegate webView:didFinishLoadForFrame:];
-[WebFrameLoadDelegate webView:didFailLoadWithError:forFrame:];
-[WebFrameLoadDelegate webView:didChangeLocationWithinPageForFrame:];
-[WebFrameLoadDelegate webView:willPerformClientRedirectToURL:delay:fireDate:forFrame:];
-[WebFrameLoadDelegate webView:didCancelClientRedirectForFrame:];
-[WebFrameLoadDelegate webView:willCloseFrame:];
-[WebFrameLoadDelegate webView:didClearWindowObject:forFrame:];
-[WebFrameLoadDelegate webView:windowScriptObjectAvailable:];
-[WebFrameLoadDelegate webView:didCreateJavaScriptContext:forFrame:];

@end

@protocol WebPolicyDelegate <NSObject>

@required

@optional

/* optional instance methods */
-[WebPolicyDelegate webView:decidePolicyForNavigationAction:request:frame:decisionListener:];
-[WebPolicyDelegate webView:decidePolicyForNewWindowAction:request:newFrameName:decisionListener:];
-[WebPolicyDelegate webView:decidePolicyForMIMEType:request:frame:decisionListener:];
-[WebPolicyDelegate webView:unableToImplementPolicyWithError:frame:];

@end

@protocol WizardWindowDelegate <NSObject>

@required

@property (T@"WizardWindowController",N,W) wizard;
@property (Tq,N) behavior;
@property (T@"NSView",N,&) view;
@property (T@"NSString",N,C) title;

/* required instance methods */
-[WizardWindowDelegate wizard];
-[WizardWindowDelegate setWizard:];
-[WizardWindowDelegate behavior];
-[WizardWindowDelegate setBehavior:];
-[WizardWindowDelegate view];
-[WizardWindowDelegate setView:];
-[WizardWindowDelegate title];
-[WizardWindowDelegate setTitle:];

@optional

/* optional instance methods */
-[WizardWindowDelegate willBecomeActive];
-[WizardWindowDelegate didBecomeActive];
-[WizardWindowDelegate willResignActive];
-[WizardWindowDelegate didResignActive];
-[WizardWindowDelegate shouldBeSkipped];
-[WizardWindowDelegate showHelp:];

@end

@protocol WizardWindowDelegate <NSObject>

@required

@property (T@"WizardWindowController") wizard;
@property (Tq) behavior;
@property (T@"NSView",&) view;
@property (T@"NSString",&) title;

/* required instance methods */
-[WizardWindowDelegate wizard];
-[WizardWindowDelegate setWizard:];
-[WizardWindowDelegate behavior];
-[WizardWindowDelegate setBehavior:];
-[WizardWindowDelegate view];
-[WizardWindowDelegate setView:];
-[WizardWindowDelegate title];
-[WizardWindowDelegate setTitle:];

@optional

/* optional instance methods */
-[WizardWindowDelegate willBecomeActive];
-[WizardWindowDelegate didBecomeActive];
-[WizardWindowDelegate willResignActive];
-[WizardWindowDelegate didResignActive];
-[WizardWindowDelegate shouldBeSkipped];
-[WizardWindowDelegate showHelp:];

@end

@protocol WizardWindowScreenDataController <NSObject>

@required

@property (T@"UserInteractionScreenData",N,&) screenData;

/* required instance methods */
-[WizardWindowScreenDataController screenData];
-[WizardWindowScreenDataController setScreenData:];

@optional

@end

@protocol WizardWindowScreenDataController <NSObject>

@required

@property (T@"UserInteractionScreenData",&) screenData;

/* required instance methods */
-[WizardWindowScreenDataController screenData];
-[WizardWindowScreenDataController setScreenData:];

@optional

@end

@protocol _TtP7iMazing10Switchable_

@required

/* required instance methods */
-[_TtP7iMazing10Switchable_ onStatusChangedWithCallback:];

@optional

@end

@protocol _TtP7iMazing11UICheckable_

@required

@property (TB,N) isChecked;
@property (TB,N) canCheck;

/* required instance methods */
-[_TtP7iMazing11UICheckable_ isChecked];
-[_TtP7iMazing11UICheckable_ setIsChecked:];
-[_TtP7iMazing11UICheckable_ canCheck];
-[_TtP7iMazing11UICheckable_ setCanCheck:];

@optional

@end

@protocol _TtP7iMazing12DeviceViewer_

@required

@property (T@"NSString",N,R) deviceID;
@property (T@"NSString",N,R) locationScheme;

/* required instance methods */
-[_TtP7iMazing12DeviceViewer_ deviceID];
-[_TtP7iMazing12DeviceViewer_ locationScheme];
-[_TtP7iMazing12DeviceViewer_ showScreen:];
-[_TtP7iMazing12DeviceViewer_ showHint:];

@optional

@end

@protocol _TtP7iMazing13OperationItem_ <NSObject>

@required

@property (T@"NSObject",N,R) representedObject;
@property (T@"NSString",N,R) deviceUID;
@property (T@"NSString",N,R) deviceUDID;
@property (T@"NSString",N,R) title;
@property (T@"NSString",N,R) message;
@property (T@"NSImage",N,R) icon;
@property (Td,N,R) progress;
@property (T@"NSString",N,R) destinationPath;
@property (T@"NSString",N,R) destinationFileType;
@property (T@"NSArray",N,R) destinationFilenames;
@property (TB,N) animate;
@property (TB,N,R) indeterminate;
@property (TB,N,R) paused;
@property (TB,N,R) running;
@property (TB,N,R) stopped;
@property (TB,N,R) hidden;
@property (TB,N,R) hasFiles;
@property (TQ,N,R) totalItems;
@property (T@"NSDate",N,R) sortingDate;
@property (T@"NSImage",N,R) statusIcon;
@property (TQ,N,R) statusColor;
@property (T@"NSString",N,R) wizardImageName;

/* required instance methods */
-[_TtP7iMazing13OperationItem_ representedObject];
-[_TtP7iMazing13OperationItem_ deviceUID];
-[_TtP7iMazing13OperationItem_ deviceUDID];
-[_TtP7iMazing13OperationItem_ title];
-[_TtP7iMazing13OperationItem_ message];
-[_TtP7iMazing13OperationItem_ icon];
-[_TtP7iMazing13OperationItem_ progress];
-[_TtP7iMazing13OperationItem_ destinationPath];
-[_TtP7iMazing13OperationItem_ destinationFileType];
-[_TtP7iMazing13OperationItem_ destinationFilenames];
-[_TtP7iMazing13OperationItem_ animate];
-[_TtP7iMazing13OperationItem_ setAnimate:];
-[_TtP7iMazing13OperationItem_ indeterminate];
-[_TtP7iMazing13OperationItem_ paused];
-[_TtP7iMazing13OperationItem_ running];
-[_TtP7iMazing13OperationItem_ stopped];
-[_TtP7iMazing13OperationItem_ hidden];
-[_TtP7iMazing13OperationItem_ hasFiles];
-[_TtP7iMazing13OperationItem_ totalItems];
-[_TtP7iMazing13OperationItem_ sortingDate];
-[_TtP7iMazing13OperationItem_ statusIcon];
-[_TtP7iMazing13OperationItem_ statusColor];
-[_TtP7iMazing13OperationItem_ wizardImageName];
-[_TtP7iMazing13OperationItem_ refresh];
-[_TtP7iMazing13OperationItem_ stop];
-[_TtP7iMazing13OperationItem_ pause];
-[_TtP7iMazing13OperationItem_ resume];
-[_TtP7iMazing13OperationItem_ releaseOperation];

@optional

@end

@protocol _TtP7iMazing13UIDisplayable_

@required

@property (T@"NSString",N,C) title;
@property (T@"NSString",N,C) subtitle;
@property (T@"NSImage",N,&) icon;
@property (T@"NSImage",N,&) accessoryImage;
@property (T@"NSNumber",N,&) sortingValue;

/* required instance methods */
-[_TtP7iMazing13UIDisplayable_ title];
-[_TtP7iMazing13UIDisplayable_ setTitle:];
-[_TtP7iMazing13UIDisplayable_ subtitle];
-[_TtP7iMazing13UIDisplayable_ setSubtitle:];
-[_TtP7iMazing13UIDisplayable_ icon];
-[_TtP7iMazing13UIDisplayable_ setIcon:];
-[_TtP7iMazing13UIDisplayable_ accessoryImage];
-[_TtP7iMazing13UIDisplayable_ setAccessoryImage:];
-[_TtP7iMazing13UIDisplayable_ sortingValue];
-[_TtP7iMazing13UIDisplayable_ setSortingValue:];

@optional

@end

@protocol _TtP7iMazing14IndexedElement_

@required

@property (T@"NSIndexPath",N,C) indexPath;

/* required instance methods */
-[_TtP7iMazing14IndexedElement_ indexPath];
-[_TtP7iMazing14IndexedElement_ setIndexPath:];

@optional

@end

@protocol _TtP7iMazing22DataAccessViewDelegate_

@required

/* required instance methods */
-[_TtP7iMazing22DataAccessViewDelegate_ loadData];
-[_TtP7iMazing22DataAccessViewDelegate_ refreshData];
-[_TtP7iMazing22DataAccessViewDelegate_ setShouldPerformFullBackup:];

@optional

@end

@protocol _TtP7iMazing22DataAccessViewDelegate_

@required

/* required instance methods */
-[_TtP7iMazing22DataAccessViewDelegate_ loadData];
-[_TtP7iMazing22DataAccessViewDelegate_ refreshData];
-[_TtP7iMazing22DataAccessViewDelegate_ setShouldPerformFullBackup:];

@optional

@end

@protocol _TtP7iMazing24PlusMinusControlDelegate_

@required

/* required instance methods */
-[_TtP7iMazing24PlusMinusControlDelegate_ plusClicked:];
-[_TtP7iMazing24PlusMinusControlDelegate_ minusClicked:];

@optional

@end

@protocol _TtP7iMazing26DeviceOrBackupViewDelegate_

@required

/* required instance methods */
-[_TtP7iMazing26DeviceOrBackupViewDelegate_ loadFromDevice];
-[_TtP7iMazing26DeviceOrBackupViewDelegate_ loadFromBackup];

@optional

@end

@protocol _TtP7iMazing26DeviceOrBackupViewDelegate_

@required

/* required instance methods */
-[_TtP7iMazing26DeviceOrBackupViewDelegate_ loadFromDevice];
-[_TtP7iMazing26DeviceOrBackupViewDelegate_ loadFromBackup];

@optional

@end

@protocol _TtP7iMazing30UserInteractionManagerDelegate_

@required

/* required instance methods */
-[_TtP7iMazing30UserInteractionManagerDelegate_ deviceID];
-[_TtP7iMazing30UserInteractionManagerDelegate_ locationScheme];
-[_TtP7iMazing30UserInteractionManagerDelegate_ showScreenData:];
-[_TtP7iMazing30UserInteractionManagerDelegate_ showHintData:];
-[_TtP7iMazing30UserInteractionManagerDelegate_ shouldShowDialogBoxData:from:];

@optional

@end

@protocol _TtP7iMazing39InteractionAlertAccessoryViewController_ <NSObject>

@required

@property (T@"NSView",N,R) view;

/* required instance methods */
-[_TtP7iMazing39InteractionAlertAccessoryViewController_ view];
-[_TtP7iMazing39InteractionAlertAccessoryViewController_ initWithData:];
-[_TtP7iMazing39InteractionAlertAccessoryViewController_ alertWillShow:];
-[_TtP7iMazing39InteractionAlertAccessoryViewController_ alertDidEndWithButtonIndex:];

@optional

@end

@protocol _TtP7iMazing7Savable_

@required

@property (TB,N,R) enableSaveAndDiscard;

/* required instance methods */
-[_TtP7iMazing7Savable_ enableSaveAndDiscard];
-[_TtP7iMazing7Savable_ save];
-[_TtP7iMazing7Savable_ reset];
-[_TtP7iMazing7Savable_ canLeave];

@optional

@end

@interface AdaptableImage : NSImage {
    /* instance variables */
    @"NSImage" _main;
    @"NSImage" _variant;
}

@property (T@"NSImage",&,V_main) main;
@property (T@"NSImage",&,V_variant) variant;

/* class methods */
+[AdaptableImage imageNamed:];
+[AdaptableImage assetFromName:];

/* instance methods */
-[AdaptableImage initWithName:];
-[AdaptableImage displayAsDark];
-[AdaptableImage isTemplate];
-[AdaptableImage setTemplate:];
-[AdaptableImage size];
-[AdaptableImage setSize:];
-[AdaptableImage representations];
-[AdaptableImage bestRepresentationForRect:context:hints:];
-[AdaptableImage lockFocus];
-[AdaptableImage unlockFocus];
-[AdaptableImage main];
-[AdaptableImage setMain:];
-[AdaptableImage variant];
-[AdaptableImage setVariant:];

@end

@interface AddressBook : NSObject {
    /* instance variables */
    B _inited;
    @"NSLock" _lock;
    @"ABAddressBook" _addressBook;
    @"NSMutableArray" _peopleArray;
}

@property (TB,V_inited) inited;
@property (T@"NSLock",&,V_lock) lock;
@property (T@"ABAddressBook",&,V_addressBook) addressBook;
@property (T@"NSMutableArray",&,V_peopleArray) peopleArray;
@property (T@"NSArray",R) people;

/* class methods */
+[AddressBook sharedInstance];
+[AddressBook allocWithZone:];

/* instance methods */
-[AddressBook init];
-[AddressBook loadAllPeople:];
-[AddressBook people];
-[AddressBook inited];
-[AddressBook setInited:];
-[AddressBook lock];
-[AddressBook setLock:];
-[AddressBook addressBook];
-[AddressBook setAddressBook:];
-[AddressBook peopleArray];
-[AddressBook setPeopleArray:];

@end

@interface AddressBookPerson : NSObject {
    /* instance variables */
    B _isCompany;
    @"NSString" _firstName;
    @"NSString" _lastName;
    @"NSString" _company;
    @"NSImage" _image;
    @"ABPerson" _abRecord;
    Q _flags;
}

@property (T@"ABPerson",&,V_abRecord) abRecord;
@property (T@"NSString",&,V_firstName) firstName;
@property (T@"NSString",&,V_lastName) lastName;
@property (T@"NSString",&,V_company) company;
@property (T@"NSImage",&,V_image) image;
@property (TQ,V_flags) flags;
@property (TB,V_isCompany) isCompany;
@property (T@"NSData",R) vCardRepresentation;

/* instance methods */
-[AddressBookPerson initWithABPerson:];
-[AddressBookPerson vCardRepresentation];
-[AddressBookPerson firstName];
-[AddressBookPerson setFirstName:];
-[AddressBookPerson lastName];
-[AddressBookPerson setLastName:];
-[AddressBookPerson company];
-[AddressBookPerson setCompany:];
-[AddressBookPerson image];
-[AddressBookPerson setImage:];
-[AddressBookPerson isCompany];
-[AddressBookPerson setIsCompany:];
-[AddressBookPerson abRecord];
-[AddressBookPerson setAbRecord:];
-[AddressBookPerson flags];
-[AddressBookPerson setFlags:];

@end

@interface Analytics : NSObject

/* class methods */
+[Analytics trackAction:];
+[Analytics trackAction:properties:];
+[Analytics trackNavigation:];
+[Analytics trackNavigation:properties:];
+[Analytics dictionaryToMap:];
+[Analytics processString:];

@end

@interface Application : NSObject {
    /* instance variables */
    @"NSString" _name;
    @"NSURL" _url;
    @"NSString" _path;
    @"NSImage" _icon;
    @"NSString" _bundleIdentifier;
    @"NSString" _version;
}

@property (T@"NSString",R,V_name) name;
@property (T@"NSURL",R,V_url) url;
@property (T@"NSString",R,V_path) path;
@property (T@"NSImage",R,V_icon) icon;
@property (T@"NSString",R,V_bundleIdentifier) bundleIdentifier;
@property (T@"NSString",R,V_version) version;

/* class methods */
+[Application applicationsForFile:];
+[Application applicationsForFileExtension:];
+[Application applicationsMenuForFile:target:action:];
+[Application applicationsMenuForFileExtension:target:action:];
+[Application applicationWithPath:];
+[Application applicationWithURL:];

/* instance methods */
-[Application initWithPath:];
-[Application initWithURL:];
-[Application dealloc];
-[Application open];
-[Application openFile:];
-[Application description];
-[Application name];
-[Application url];
-[Application path];
-[Application icon];
-[Application bundleIdentifier];
-[Application version];

@end

@interface AppsLibraryViewController : NSViewController <NSTableViewDelegate, NSTableViewDataSource, NSMenuDelegate> {
    /* instance variables */
    B _isLoading;
    B _showLibraryApps;
    B _showSearchField;
    B _loadingFailed;
    B _awake;
    B _deviceCanBackup;
    B _hasDevice;
    B _isVPPAccount;
    B _firstButtonEnabled;
    @"NSObject<AppsLibraryViewControllerDelegate>" _delegate;
    @"LegacyOperation" _installOperation;
    @"iOSAppDownloadManager" _manager;
    @"NSArrayController" _libraryAppsArrayController;
    @"NSArrayController" _deviceAppsArrayController;
    @"NSView" _deviceAppsView;
    @"NSView" _libraryAppsView;
    @"NSView" _loadingView;
    @"NSSegmentedControl" _segmentedControl;
    @"NSMenu" _libraryMenu;
    @"NSMenu" _deviceMenu;
    @"NSSearchField" _librarySearchField;
    @"NSSearchField" _deviceSearchField;
    @"NSTableView" _libraryTableView;
    @"NSTableView" _deviceTableView;
    @"NSString" _appleID;
    @"NSString" _signButtonLabel;
    @"NSString" _loadingMessage;
    @"NSImage" _loadingImage;
    @"NSImageView" _loadingImageView;
    @"NSString" _lastLoadingImagePath;
    @"NSNumber" _loadingProgress;
    @"NSString" _selectedAppsLabel;
    @"NSString" _firstButtonLabel;
    @"NSMutableArray" _downloadOperations;
    @"ManageAppsSearchViewController" _searchController;
    @"ManageAppsUpdatesViewController" _updatesViewController;
    @"_TtC7iMazing27VPPLicensesWindowController" _vppLicensesWindowController;
    @"NSRecursiveLock" _lock;
}

@property (T@"NSArrayController",&,V_deviceAppsArrayController) deviceAppsArrayController;
@property (T@"NSArrayController",&,V_libraryAppsArrayController) libraryAppsArrayController;
@property (T@"NSView",&,V_deviceAppsView) deviceAppsView;
@property (T@"NSView",&,V_libraryAppsView) libraryAppsView;
@property (T@"NSView",&,V_loadingView) loadingView;
@property (T@"NSSegmentedControl",&,V_segmentedControl) segmentedControl;
@property (T@"NSMenu",&,V_libraryMenu) libraryMenu;
@property (T@"NSMenu",&,V_deviceMenu) deviceMenu;
@property (T@"NSSearchField",&,V_librarySearchField) librarySearchField;
@property (T@"NSSearchField",&,V_deviceSearchField) deviceSearchField;
@property (T@"NSTableView",&,V_libraryTableView) libraryTableView;
@property (T@"NSTableView",&,V_deviceTableView) deviceTableView;
@property (TB,V_isLoading) isLoading;
@property (TB,V_loadingFailed) loadingFailed;
@property (TB,V_showLibraryApps) showLibraryApps;
@property (TB,V_awake) awake;
@property (TB,V_deviceCanBackup) deviceCanBackup;
@property (TB,V_hasDevice) hasDevice;
@property (TB,V_isVPPAccount) isVPPAccount;
@property (TB,V_firstButtonEnabled) firstButtonEnabled;
@property (T@"iOSAppDownloadManager",&,V_manager) manager;
@property (T@"NSString",&,V_appleID) appleID;
@property (T@"NSString",&,V_signButtonLabel) signButtonLabel;
@property (T@"NSString",&,V_loadingMessage) loadingMessage;
@property (T@"NSImage",&,V_loadingImage) loadingImage;
@property (T@"NSImageView",&,V_loadingImageView) loadingImageView;
@property (T@"NSString",&,V_lastLoadingImagePath) lastLoadingImagePath;
@property (T@"NSNumber",&,V_loadingProgress) loadingProgress;
@property (T@"NSString",&,V_selectedAppsLabel) selectedAppsLabel;
@property (T@"NSString",&,V_firstButtonLabel) firstButtonLabel;
@property (T@"LegacyOperation",&,V_installOperation) installOperation;
@property (T@"NSMutableArray",&,V_downloadOperations) downloadOperations;
@property (T@"ManageAppsSearchViewController",&,V_searchController) searchController;
@property (T@"ManageAppsUpdatesViewController",&,V_updatesViewController) updatesViewController;
@property (T@"_TtC7iMazing27VPPLicensesWindowController",&,V_vppLicensesWindowController) vppLicensesWindowController;
@property (T@"NSRecursiveLock",&,V_lock) lock;
@property (T@"NSObject<AppsLibraryViewControllerDelegate>",W,V_delegate) delegate;
@property (TB,V_showSearchField) showSearchField;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[AppsLibraryViewController initWithDevice:];
-[AppsLibraryViewController awakeFromNib];
-[AppsLibraryViewController dealloc];
-[AppsLibraryViewController tableViewSelectionDidChange:];
-[AppsLibraryViewController tableView:writeRowsWithIndexes:toPasteboard:];
-[AppsLibraryViewController tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:];
-[AppsLibraryViewController tableView:validateDrop:proposedRow:proposedDropOperation:];
-[AppsLibraryViewController tableView:acceptDrop:row:dropOperation:];
-[AppsLibraryViewController selectedLibraryApps];
-[AppsLibraryViewController validateFirstButton];
-[AppsLibraryViewController updateLibraryMenu:];
-[AppsLibraryViewController menuWillOpen:];
-[AppsLibraryViewController operationNotification:];
-[AppsLibraryViewController handleDownloadOperationNotification:];
-[AppsLibraryViewController handleInstallOperationNotification:];
-[AppsLibraryViewController addFromPurchaseHistory:];
-[AppsLibraryViewController segmentedControlClicked:];
-[AppsLibraryViewController firstButtonAction:];
-[AppsLibraryViewController libraryAppDoubleClicked:];
-[AppsLibraryViewController manageVPPLicenses:];
-[AppsLibraryViewController manageVPPLicensesSheetDidEnd:returnCode:contextInfo:];
-[AppsLibraryViewController addFromAppStore:];
-[AppsLibraryViewController searchSheetDidEnd:returnCode:contextInfo:];
-[AppsLibraryViewController checkForUpdates:];
-[AppsLibraryViewController updatesSheetDidEnd:returnCode:contextInfo:];
-[AppsLibraryViewController signClicked:];
-[AppsLibraryViewController showLibraryMenu:];
-[AppsLibraryViewController showDeviceMenu:];
-[AppsLibraryViewController installToDevice:];
-[AppsLibraryViewController installApps:];
-[AppsLibraryViewController uninstall:];
-[AppsLibraryViewController libraryAppActionClicked:];
-[AppsLibraryViewController downloadToLibrary:];
-[AppsLibraryViewController stopDownload:];
-[AppsLibraryViewController deleteFromLibrary:];
-[AppsLibraryViewController deleteAndHideFromLibrary:];
-[AppsLibraryViewController exportIPA:];
-[AppsLibraryViewController installIPAFile:];
-[AppsLibraryViewController addIPA:];
-[AppsLibraryViewController addAppsToLibraryAsync:];
-[AppsLibraryViewController showInFinder:];
-[AppsLibraryViewController extractAppData:];
-[AppsLibraryViewController extractAppData:toPath:];
-[AppsLibraryViewController restoreAppData:];
-[AppsLibraryViewController restoreApps:];
-[AppsLibraryViewController searchFieldDidUpdate:];
-[AppsLibraryViewController reloadButtonClicked:];
-[AppsLibraryViewController loadData];
-[AppsLibraryViewController displayError];
-[AppsLibraryViewController buildAppItemsAsync];
-[AppsLibraryViewController appItemHavingOperation:inArrayController:];
-[AppsLibraryViewController updateSignLabel];
-[AppsLibraryViewController getSelectedAppsFromAC:];
-[AppsLibraryViewController getAllAppsFromAC:];
-[AppsLibraryViewController startDownloadOfAppItems:];
-[AppsLibraryViewController removeAndHideAppItems:];
-[AppsLibraryViewController removeAppItems:];
-[AppsLibraryViewController startLoadingWithMessage:];
-[AppsLibraryViewController updateSelectedAppsLabel];
-[AppsLibraryViewController keyedAppsForApps:];
-[AppsLibraryViewController downloadedAppsInAppItems:];
-[AppsLibraryViewController setSearchText:];
-[AppsLibraryViewController delegate];
-[AppsLibraryViewController setDelegate:];
-[AppsLibraryViewController installOperation];
-[AppsLibraryViewController setInstallOperation:];
-[AppsLibraryViewController manager];
-[AppsLibraryViewController setManager:];
-[AppsLibraryViewController isLoading];
-[AppsLibraryViewController setIsLoading:];
-[AppsLibraryViewController libraryAppsArrayController];
-[AppsLibraryViewController setLibraryAppsArrayController:];
-[AppsLibraryViewController showLibraryApps];
-[AppsLibraryViewController setShowLibraryApps:];
-[AppsLibraryViewController showSearchField];
-[AppsLibraryViewController setShowSearchField:];
-[AppsLibraryViewController deviceAppsArrayController];
-[AppsLibraryViewController setDeviceAppsArrayController:];
-[AppsLibraryViewController deviceAppsView];
-[AppsLibraryViewController setDeviceAppsView:];
-[AppsLibraryViewController libraryAppsView];
-[AppsLibraryViewController setLibraryAppsView:];
-[AppsLibraryViewController loadingView];
-[AppsLibraryViewController setLoadingView:];
-[AppsLibraryViewController segmentedControl];
-[AppsLibraryViewController setSegmentedControl:];
-[AppsLibraryViewController libraryMenu];
-[AppsLibraryViewController setLibraryMenu:];
-[AppsLibraryViewController deviceMenu];
-[AppsLibraryViewController setDeviceMenu:];
-[AppsLibraryViewController librarySearchField];
-[AppsLibraryViewController setLibrarySearchField:];
-[AppsLibraryViewController deviceSearchField];
-[AppsLibraryViewController setDeviceSearchField:];
-[AppsLibraryViewController libraryTableView];
-[AppsLibraryViewController setLibraryTableView:];
-[AppsLibraryViewController deviceTableView];
-[AppsLibraryViewController setDeviceTableView:];
-[AppsLibraryViewController loadingFailed];
-[AppsLibraryViewController setLoadingFailed:];
-[AppsLibraryViewController awake];
-[AppsLibraryViewController setAwake:];
-[AppsLibraryViewController deviceCanBackup];
-[AppsLibraryViewController setDeviceCanBackup:];
-[AppsLibraryViewController hasDevice];
-[AppsLibraryViewController setHasDevice:];
-[AppsLibraryViewController isVPPAccount];
-[AppsLibraryViewController setIsVPPAccount:];
-[AppsLibraryViewController firstButtonEnabled];
-[AppsLibraryViewController setFirstButtonEnabled:];
-[AppsLibraryViewController appleID];
-[AppsLibraryViewController setAppleID:];
-[AppsLibraryViewController signButtonLabel];
-[AppsLibraryViewController setSignButtonLabel:];
-[AppsLibraryViewController loadingMessage];
-[AppsLibraryViewController setLoadingMessage:];
-[AppsLibraryViewController loadingImage];
-[AppsLibraryViewController setLoadingImage:];
-[AppsLibraryViewController loadingImageView];
-[AppsLibraryViewController setLoadingImageView:];
-[AppsLibraryViewController lastLoadingImagePath];
-[AppsLibraryViewController setLastLoadingImagePath:];
-[AppsLibraryViewController loadingProgress];
-[AppsLibraryViewController setLoadingProgress:];
-[AppsLibraryViewController selectedAppsLabel];
-[AppsLibraryViewController setSelectedAppsLabel:];
-[AppsLibraryViewController firstButtonLabel];
-[AppsLibraryViewController setFirstButtonLabel:];
-[AppsLibraryViewController downloadOperations];
-[AppsLibraryViewController setDownloadOperations:];
-[AppsLibraryViewController searchController];
-[AppsLibraryViewController setSearchController:];
-[AppsLibraryViewController updatesViewController];
-[AppsLibraryViewController setUpdatesViewController:];
-[AppsLibraryViewController vppLicensesWindowController];
-[AppsLibraryViewController setVppLicensesWindowController:];
-[AppsLibraryViewController lock];
-[AppsLibraryViewController setLock:];

@end

@interface Backup : NSObject <DatasetObject, IAccessibleElement> {
    /* instance variables */
    ^v _backup;
    @"NSDate" _lastTime;
    @"NSNumber" _sizeNumber;
    Q _size;
    @"NSString" fullTextIndex;
}

@property (T@"NSString",R) backupFilePath;
@property (T@"NSString",R) deviceName;
@property (T@"NSString",R) deviceUDID;
@property (T@"NSString",R) deviceSerialNumber;
@property (T@"NSString",R) deviceProductType;
@property (T@"NSString",R) deviceModel;
@property (T@"NSString",R) deviceModelDetails;
@property (T@"NSString",R) deviceOSVersion;
@property (T@"NSString",R) backupRootPath;
@property (T@"NSString",R) password;
@property (TB,R) refreshed;
@property (Tq,R) backupType;
@property (T@"NSDate",R) lastTime;
@property (TQ,R) totalDiskUsage;
@property (TB,R) encrypted;
@property (TB,R) willBeEncrypted;
@property (TI,R) dataSets;
@property (TI,R) domainSets;
@property (TI,R) defaultRestoreOptions;
@property (T@"iOSDevice",R) iOSDevice;
@property (T@"NSString",R) iconPath;
@property (T@"NSString",R) displayName;
@property (T^v,R,V_backup) ddnaBackup;
@property (T@"NSString",R) backupPath;
@property (Tq,R) date;
@property (T@"iOSDevice",R) backupDevice;
@property (TQ,R) iMazingBackupVersion;
@property (TB,R) isPartialBackup;
@property (T@"NSString",R) uid;
@property (TB,R) linkedToDevice;
@property (T@"NSString",&,VfullTextIndex) fullTextIndex;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* class methods */
+[Backup backupWithDDNABackup:];

/* instance methods */
-[Backup initWithDDNABackup:];
-[Backup dealloc];
-[Backup uid];
-[Backup linkedToDevice];
-[Backup exists_dontCallFromMainThread];
-[Backup shouldExists];
-[Backup isCurrentBackup];
-[Backup encrypted];
-[Backup willBeEncrypted];
-[Backup isPartialBackup];
-[Backup backupFilePath];
-[Backup displayName];
-[Backup lastTime];
-[Backup refreshInfo];
-[Backup volumeName];
-[Backup exportToFile:runType:];
-[Backup exportToFolder:runType:];
-[Backup exportFullBackup:runType:];
-[Backup restoreToDevice:eraseTargetDevice:updateiOSOnTargetDevice:installDownloadedApps:allowMDMEnrollViaADE:dataSetsToRemove:appsToRemove:newTargetDeviceName:newSourceDeviceName:runType:];
-[Backup restoreToDevices:eraseTargetDevice:updateiOSOnTargetDevice:installDownloadedApps:allowMDMEnrollViaADE:dataSetsToRemove:appsToRemove:newTargetDeviceName:newSourceDeviceName:runType:];
-[Backup cloneToDevice:eraseTargetDevice:updateiOSOnTargetDevice:installDownloadedApps:allowMDMEnrollViaADE:dataSetsToRemove:appsToRemove:newTargetDeviceName:newSourceDeviceName:runType:];
-[Backup cloneToDevices:eraseTargetDevice:updateiOSOnTargetDevice:installDownloadedApps:allowMDMEnrollViaADE:dataSetsToRemove:appsToRemove:newTargetDeviceName:newSourceDeviceName:runType:];
-[Backup archiveASync];
-[Backup repairASync];
-[Backup deviceName];
-[Backup deviceUDID];
-[Backup deviceSerialNumber];
-[Backup deviceProductType];
-[Backup deviceModel];
-[Backup deviceModelDetails];
-[Backup deviceOSVersion];
-[Backup backupRootPath];
-[Backup password];
-[Backup refreshed];
-[Backup backupType];
-[Backup totalDiskUsage];
-[Backup dataSets];
-[Backup domainSets];
-[Backup defaultRestoreOptions];
-[Backup iOSDevice];
-[Backup iconPath];
-[Backup backupPath];
-[Backup date];
-[Backup accessibilityLabel];
-[Backup sizeOfDataset:];
-[Backup backupDevice];
-[Backup iMazingBackupVersion];
-[Backup isEqual:];
-[Backup fullTextIndex];
-[Backup setFullTextIndex:];
-[Backup ddnaBackup];

@end

@interface BackupDisplayItem : NSObject {
    /* instance variables */
    B _canBeRestored;
    B _isEncrypted;
    @"NSString" _title;
    @"NSString" _subtitle;
    @"NSImage" _icon;
    @"NSImage" _accessoryImage;
    d _dateInterval;
    @"VersionedBackupInfo" _versionInfo;
    @"Backup" _backup;
}

@property (T@"NSString",C,V_title) title;
@property (T@"NSString",C,V_subtitle) subtitle;
@property (T@"NSImage",&,V_icon) icon;
@property (T@"NSImage",&,V_accessoryImage) accessoryImage;
@property (Td,V_dateInterval) dateInterval;
@property (TB,V_canBeRestored) canBeRestored;
@property (TB,V_isEncrypted) isEncrypted;
@property (T@"VersionedBackupInfo",&,V_versionInfo) versionInfo;
@property (T@"Backup",&,V_backup) backup;

/* instance methods */
-[BackupDisplayItem title];
-[BackupDisplayItem setTitle:];
-[BackupDisplayItem subtitle];
-[BackupDisplayItem setSubtitle:];
-[BackupDisplayItem icon];
-[BackupDisplayItem setIcon:];
-[BackupDisplayItem accessoryImage];
-[BackupDisplayItem setAccessoryImage:];
-[BackupDisplayItem dateInterval];
-[BackupDisplayItem setDateInterval:];
-[BackupDisplayItem canBeRestored];
-[BackupDisplayItem setCanBeRestored:];
-[BackupDisplayItem isEncrypted];
-[BackupDisplayItem setIsEncrypted:];
-[BackupDisplayItem versionInfo];
-[BackupDisplayItem setVersionInfo:];
-[BackupDisplayItem backup];
-[BackupDisplayItem setBackup:];

@end

@interface BackupManager : DatasetManager {
    /* instance variables */
    ^v _ddnaBackupManager;
    @"NSArray" _backups;
    B _inited;
}

@property (TB,V_inited) inited;
@property (T@"NSArray",R) devices;
@property (T@"NSArray",R) backups;
@property (TB,R) backupsLoaded;

/* class methods */
+[BackupManager sharedInstance];
+[BackupManager allocWithZone:];
+[BackupManager appleMobileBackupExecutablePath];
+[BackupManager iTunesBackupRootPath];
+[BackupManager iTunesBackupAbsoluteRootPath];
+[BackupManager defaultBackupRootPath];
+[BackupManager checkWritePermissionsAtPath:showDialog:];

/* instance methods */
-[BackupManager init];
-[BackupManager dealloc];
-[BackupManager backups];
-[BackupManager devices];
-[BackupManager getBackupsASync];
-[BackupManager addBackupASync:forceBackupLocationRoot:];
-[BackupManager changeDefaultBackupLocationASync:];
-[BackupManager changeDefaultBackupLocationSync:];
-[BackupManager removeBackup:];
-[BackupManager archiveBackup:];
-[BackupManager updateRequestDidEnd:];
-[BackupManager removeBackupLocationASync:];
-[BackupManager makeEditableBackupFromVersion:];
-[BackupManager makeEditableBackupFromBackup:];
-[BackupManager backupForPath:];
-[BackupManager deviceForVersionedBackupInfo:];
-[BackupManager getBackupLocationVolumeName:];
-[BackupManager getBackupLocationsForDevice:];
-[BackupManager getBackupLocations];
-[BackupManager getDevicesForLocation:];
-[BackupManager deleteBackupsAndAssociatedSnapshots:];
-[BackupManager backupsLoaded];
-[BackupManager inited];
-[BackupManager setInited:];

@end

@interface BackupVersioningManager : NSObject {
    /* instance variables */
    {SafePointer<DDNA::BackupVersioningManager>="_o"^{BackupVersioningManager}} _manager;
    @"NSString" _versioningPath;
}

@property (T@"NSString",&,V_versioningPath) versioningPath;
@property (T@"NSArray",R) versionedBackups;
@property (T@"NSString",R) deviceUDID;
@property (T@"NSString",R) mainBackupUID;

/* class methods */
+[BackupVersioningManager versioningManagerForDevice:];

/* instance methods */
-[BackupVersioningManager initWithDevice:];
-[BackupVersioningManager versionedBackups];
-[BackupVersioningManager getDataAsync];
-[BackupVersioningManager updateVersionedBackupInfo:];
-[BackupVersioningManager confirmDeleteVersionedBackups:];
-[BackupVersioningManager deleteVersionedBackups:];
-[BackupVersioningManager volumeIsAvailable];
-[BackupVersioningManager archiveSize];
-[BackupVersioningManager lastBackupSize];
-[BackupVersioningManager aggregateBackupSize];
-[BackupVersioningManager readVersioningActivity];
-[BackupVersioningManager currentBackupArchive];
-[BackupVersioningManager currentBackupNotArchive];
-[BackupVersioningManager deviceUDID];
-[BackupVersioningManager mainBackupUID];
-[BackupVersioningManager versioningPath];
-[BackupVersioningManager setVersioningPath:];

@end

@interface BackupWizardChooseLocationViewController : NSViewController <ChooseBackupLocationDelegate, WizardWindowDelegate, WizardWindowScreenDataController> {
    /* instance variables */
    B _saving;
    B _locationIsMounted;
    @"WizardWindowController" wizard;
    q behavior;
    @"UserInteractionScreenData" screenData;
    @"NSView" _chooseContainer;
    @"ChooseBackupLocationViewController" _chooseController;
}

@property (T@"NSView",&,V_chooseContainer) chooseContainer;
@property (T@"ChooseBackupLocationViewController",&,V_chooseController) chooseController;
@property (T@"iOSDevice",R) iOSDevice;
@property (TB,V_saving) saving;
@property (TB,V_locationIsMounted) locationIsMounted;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;
@property (T@"WizardWindowController",Vwizard) wizard;
@property (Tq,Vbehavior) behavior;
@property (T@"NSView",&) view;
@property (T@"NSString",&) title;
@property (T@"UserInteractionScreenData",&,VscreenData) screenData;

/* instance methods */
-[BackupWizardChooseLocationViewController init];
-[BackupWizardChooseLocationViewController awakeFromNib];
-[BackupWizardChooseLocationViewController iOSDevice];
-[BackupWizardChooseLocationViewController didBecomeActive];
-[BackupWizardChooseLocationViewController cancel:];
-[BackupWizardChooseLocationViewController done:];
-[BackupWizardChooseLocationViewController controller:didChooseLocation:];
-[BackupWizardChooseLocationViewController wizard];
-[BackupWizardChooseLocationViewController setWizard:];
-[BackupWizardChooseLocationViewController behavior];
-[BackupWizardChooseLocationViewController setBehavior:];
-[BackupWizardChooseLocationViewController screenData];
-[BackupWizardChooseLocationViewController setScreenData:];
-[BackupWizardChooseLocationViewController chooseContainer];
-[BackupWizardChooseLocationViewController setChooseContainer:];
-[BackupWizardChooseLocationViewController chooseController];
-[BackupWizardChooseLocationViewController setChooseController:];
-[BackupWizardChooseLocationViewController saving];
-[BackupWizardChooseLocationViewController setSaving:];
-[BackupWizardChooseLocationViewController locationIsMounted];
-[BackupWizardChooseLocationViewController setLocationIsMounted:];

@end

@interface BackupWizardEncryptionViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
    B _waiting;
    @"WizardWindowController" wizard;
    q behavior;
    @"NSView" _encryptedView;
    @"NSView" _notEncryptedView;
    @"NSString" _infoLabel;
}

@property (TB,V_waiting) waiting;
@property (T@"NSView",&,V_encryptedView) encryptedView;
@property (T@"NSView",&,V_notEncryptedView) notEncryptedView;
@property (T@"NSString",&,V_infoLabel) infoLabel;
@property (T@"WizardWindowController",Vwizard) wizard;
@property (Tq,Vbehavior) behavior;
@property (T@"NSView",&) view;
@property (T@"NSString",&) title;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[BackupWizardEncryptionViewController init];
-[BackupWizardEncryptionViewController dealloc];
-[BackupWizardEncryptionViewController shouldBeSkipped];
-[BackupWizardEncryptionViewController didBecomeActive];
-[BackupWizardEncryptionViewController didResignActive];
-[BackupWizardEncryptionViewController changePassword:];
-[BackupWizardEncryptionViewController removePassword:];
-[BackupWizardEncryptionViewController deviceNotification:];
-[BackupWizardEncryptionViewController updateInfoLabel];
-[BackupWizardEncryptionViewController wizard];
-[BackupWizardEncryptionViewController setWizard:];
-[BackupWizardEncryptionViewController behavior];
-[BackupWizardEncryptionViewController setBehavior:];
-[BackupWizardEncryptionViewController waiting];
-[BackupWizardEncryptionViewController setWaiting:];
-[BackupWizardEncryptionViewController encryptedView];
-[BackupWizardEncryptionViewController setEncryptedView:];
-[BackupWizardEncryptionViewController notEncryptedView];
-[BackupWizardEncryptionViewController setNotEncryptedView:];
-[BackupWizardEncryptionViewController infoLabel];
-[BackupWizardEncryptionViewController setInfoLabel:];

@end

@interface BackupWizardWindowController : WizardWindowController

/* instance methods */
-[BackupWizardWindowController initWithDevice:];
-[BackupWizardWindowController initWithDevice:forceWizard:];
-[BackupWizardWindowController needsToRunAsWizard];

@end

@interface Blueprint : NSObject <IAccessibleElement> {
    /* instance variables */
    B _ignoreFindMyDevice;
    B _eraseDevice;
    B _eraseDeviceOptionPreserveDataPlan;
    B _eraseDeviceOptionDisallowProximitySetup;
    B _updateOS;
    B _restoreOS;
    B _backupBefore;
    B _shutdownOnceDone;
    B _supervise;
    B _allowPairingWithOtherComputers;
    B _allowUnpairedExternalBootToRecovery;
    B _deviceIsSharedBetweenMultipleUsers;
    B _userCannotSkipApplyingMDMConfig;
    B _userCannotRemoveMDMConfig;
    B _waitAtSetupAssitantUntilMDMConfigIsApplied;
    B _appleTVAutoAdvanceSetup;
    B _savePasscodeUnlockToken;
    B _disableUSBRestrictedMode;
    B _signProfilesWithOrganizationIdentity;
    B _allowActivationLockWhileSupervised;
    B _saveActivationLockBypassCode;
    B _unpairOnceDone;
    B _doNotArchiveBackup;
    B _exitSetupAssistant;
    B _ignoreNonCriticalErrors;
    B _shouldRestoreBackup;
    B _restoreLastDeviceBackup;
    B _restoreChangeBackupUDIDIfSameAsDevice;
    B _removeConfigurationFromBackup;
    B _removeKeychainDataFromBackup;
    B _shouldSetBackupPassword;
    B _backupOnceDone;
    B _uninstallRestrictedApps;
    B _shouldSetConnectivitySettings;
    B _dataRoaming;
    B _bluetooth;
    B _personalHotspot;
    B _waitForFullBatteryCharge;
    B _removeWiFiProfile;
    B _removeAllProfiles;
    B _uninstallAllApps;
    B _deleteAllPhotos;
    B _clearPasscode;
    B _clearRestrictionsPassword;
    B _removeSupervision;
    B _shouldSetBackupBeforeEncryptionStatus;
    B _failsIfFindMyDeviceIsEnabled;
    B _isDEP;
    @"NSString" _uid;
    @"NSString" _name;
    @"NSString" _descriptionText;
    @"NSString" _deviceClass;
    @"NSString" _deviceNameScheme;
    @"NSString" _customLockScreenTextScheme;
    @"NSString" _organizationUUID;
    @"NSString" _mdmServerUUID;
    @"NSString" _mdmUsername;
    @"NSString" _mdmPassword;
    @"NSString" _backupToRestorePassword;
    @"NSString" _backupEncryptionPassword;
    @"NSString" _fullTextIndex;
    @"NSString" _appleID;
    @"NSString" _appleIDPassword;
    @"NSString" _language;
    @"NSString" _region;
    @"NSNumber" _secondsToWaitAfterWiFiProfile;
    @"NSString" _backupBeforeEncryptionPassword;
    Q _failsIfBatteryHealthIsLessThan;
    q _appRestrictionMode;
    @"NSMutableDictionary" _setupAssistantSteps;
    @"NSMutableDictionary" _singleAppModeOptions;
    @"NSMutableDictionary" _accessibilityOptions;
    @"Backup" _backupToRestore;
    ^v _cppObject;
}

@property (T@"NSString",&,N,V_uid) uid;
@property (T@"Backup",&,N,V_backupToRestore) backupToRestore;
@property (T@"NSString",&,N,V_name) name;
@property (T@"NSString",&,N,V_descriptionText) descriptionText;
@property (T@"NSString",&,N,V_deviceClass) deviceClass;
@property (T@"NSString",&,N,V_deviceNameScheme) deviceNameScheme;
@property (T@"NSString",&,N,V_customLockScreenTextScheme) customLockScreenTextScheme;
@property (T@"NSString",&,N,V_organizationUUID) organizationUUID;
@property (T@"NSString",&,N,V_mdmServerUUID) mdmServerUUID;
@property (T@"NSString",&,N,V_mdmUsername) mdmUsername;
@property (T@"NSString",&,N,V_mdmPassword) mdmPassword;
@property (T@"NSString",&,N,V_backupToRestorePassword) backupToRestorePassword;
@property (T@"NSString",&,N,V_backupEncryptionPassword) backupEncryptionPassword;
@property (T@"NSString",&,N,V_fullTextIndex) fullTextIndex;
@property (T@"NSString",&,N,V_appleID) appleID;
@property (T@"NSString",&,N,V_appleIDPassword) appleIDPassword;
@property (T@"NSString",&,N,V_language) language;
@property (T@"NSString",&,N,V_region) region;
@property (T@"NSNumber",&,N,V_secondsToWaitAfterWiFiProfile) secondsToWaitAfterWiFiProfile;
@property (TB,N,V_ignoreFindMyDevice) ignoreFindMyDevice;
@property (TB,N,V_eraseDevice) eraseDevice;
@property (TB,N,V_eraseDeviceOptionPreserveDataPlan) eraseDeviceOptionPreserveDataPlan;
@property (TB,N,V_eraseDeviceOptionDisallowProximitySetup) eraseDeviceOptionDisallowProximitySetup;
@property (TB,N,V_updateOS) updateOS;
@property (TB,N,V_restoreOS) restoreOS;
@property (TB,N,V_backupBefore) backupBefore;
@property (TB,N,V_shutdownOnceDone) shutdownOnceDone;
@property (TB,N,V_supervise) supervise;
@property (TB,N,V_allowPairingWithOtherComputers) allowPairingWithOtherComputers;
@property (TB,N,V_allowUnpairedExternalBootToRecovery) allowUnpairedExternalBootToRecovery;
@property (TB,N,V_deviceIsSharedBetweenMultipleUsers) deviceIsSharedBetweenMultipleUsers;
@property (TB,N,V_userCannotSkipApplyingMDMConfig) userCannotSkipApplyingMDMConfig;
@property (TB,N,V_userCannotRemoveMDMConfig) userCannotRemoveMDMConfig;
@property (TB,N,V_waitAtSetupAssitantUntilMDMConfigIsApplied) waitAtSetupAssitantUntilMDMConfigIsApplied;
@property (TB,N,V_appleTVAutoAdvanceSetup) appleTVAutoAdvanceSetup;
@property (TB,N,V_savePasscodeUnlockToken) savePasscodeUnlockToken;
@property (TB,N,V_disableUSBRestrictedMode) disableUSBRestrictedMode;
@property (TB,N,V_signProfilesWithOrganizationIdentity) signProfilesWithOrganizationIdentity;
@property (TB,N,V_allowActivationLockWhileSupervised) allowActivationLockWhileSupervised;
@property (TB,N,V_saveActivationLockBypassCode) saveActivationLockBypassCode;
@property (TB,N,V_unpairOnceDone) unpairOnceDone;
@property (TB,N,V_doNotArchiveBackup) doNotArchiveBackup;
@property (TB,N,V_exitSetupAssistant) exitSetupAssistant;
@property (TB,N,V_ignoreNonCriticalErrors) ignoreNonCriticalErrors;
@property (TB,N,V_shouldRestoreBackup) shouldRestoreBackup;
@property (TB,N,V_restoreLastDeviceBackup) restoreLastDeviceBackup;
@property (TB,N,V_restoreChangeBackupUDIDIfSameAsDevice) restoreChangeBackupUDIDIfSameAsDevice;
@property (TB,N,V_removeConfigurationFromBackup) removeConfigurationFromBackup;
@property (TB,N,V_removeKeychainDataFromBackup) removeKeychainDataFromBackup;
@property (TB,N,V_shouldSetBackupPassword) shouldSetBackupPassword;
@property (TB,N,V_backupOnceDone) backupOnceDone;
@property (TB,N,V_uninstallRestrictedApps) uninstallRestrictedApps;
@property (TB,N,V_shouldSetConnectivitySettings) shouldSetConnectivitySettings;
@property (TB,N,V_dataRoaming) dataRoaming;
@property (TB,N,V_bluetooth) bluetooth;
@property (TB,N,V_personalHotspot) personalHotspot;
@property (TB,N,V_waitForFullBatteryCharge) waitForFullBatteryCharge;
@property (TB,N,V_removeWiFiProfile) removeWiFiProfile;
@property (TB,N,V_removeAllProfiles) removeAllProfiles;
@property (TB,N,V_uninstallAllApps) uninstallAllApps;
@property (TB,N,V_deleteAllPhotos) deleteAllPhotos;
@property (TB,N,V_clearPasscode) clearPasscode;
@property (TB,N,V_clearRestrictionsPassword) clearRestrictionsPassword;
@property (TB,N,V_removeSupervision) removeSupervision;
@property (TB,N,V_shouldSetBackupBeforeEncryptionStatus) shouldSetBackupBeforeEncryptionStatus;
@property (T@"NSString",&,N,V_backupBeforeEncryptionPassword) backupBeforeEncryptionPassword;
@property (TB,N,V_failsIfFindMyDeviceIsEnabled) failsIfFindMyDeviceIsEnabled;
@property (TQ,N,V_failsIfBatteryHealthIsLessThan) failsIfBatteryHealthIsLessThan;
@property (Tq,N,V_appRestrictionMode) appRestrictionMode;
@property (TB,N,V_isDEP) isDEP;
@property (T@"NSMutableDictionary",&,N,V_setupAssistantSteps) setupAssistantSteps;
@property (T@"NSMutableDictionary",&,N,V_singleAppModeOptions) singleAppModeOptions;
@property (T@"NSMutableDictionary",&,N,V_accessibilityOptions) accessibilityOptions;
@property (T^v,V_cppObject) cppObject;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* class methods */
+[Blueprint getBlueprints];
+[Blueprint getBlueprintWithUID:];
+[Blueprint removeBlueprint:showDialog:];
+[Blueprint exportBlueprints:atPath:];
+[Blueprint importBlueprints:];
+[Blueprint supportedLanguages];

/* instance methods */
-[Blueprint init];
-[Blueprint initWithCPPObject:];
-[Blueprint dealloc];
-[Blueprint accessibilityLabel];
-[Blueprint loadFromCPPObject];
-[Blueprint updateCPPObject];
-[Blueprint saveBlueprint];
-[Blueprint saveBlueprint:];
-[Blueprint duplicateBlueprint];
-[Blueprint nowSetBackupToRestore:];
-[Blueprint nowSetRestoreLastBackup:];
-[Blueprint promptAndSetBackupEncryptionPassword];
-[Blueprint promptAndSetBackupBeforeEncryptionPassword];
-[Blueprint removeOrganization];
-[Blueprint removeMDMServer];
-[Blueprint getLaunchApp];
-[Blueprint launchAppBundleID];
-[Blueprint setLaunchAppBundleID:];
-[Blueprint getSingleApp];
-[Blueprint singleAppBundleID];
-[Blueprint setSingleAppMode:];
-[Blueprint setSingleAppModeForCustomApp:];
-[Blueprint removeSingleAppMode];
-[Blueprint getAppsToInstall];
-[Blueprint getCustomAppsToInstall];
-[Blueprint getCustomAppToInstall:];
-[Blueprint getRestrictedApps];
-[Blueprint setAppsToInstallBundleIDs:];
-[Blueprint removeAppsToInstallBundleIDs:];
-[Blueprint setRestrictedAppsBundleIDs:];
-[Blueprint getAppsToUninstallBundleIDs];
-[Blueprint setAppsToUninstallBundleIDs:];
-[Blueprint arrayFromAppsVector:];
-[Blueprint cppDeviceClassForDeviceClass:];
-[Blueprint deviceClassForCppDeviceClass:];
-[Blueprint sectionGeneralInfoCount];
-[Blueprint sectionOrganizationCount];
-[Blueprint sectionActionsCount];
-[Blueprint sectionAppsCount];
-[Blueprint sectionAppsFilesAndConfigurationsCount];
-[Blueprint sectionAppsRestrictionsCount];
-[Blueprint sectionSetupAndAccessibilityCount];
-[Blueprint sectionProfilesCount];
-[Blueprint sectionGeneralDescription];
-[Blueprint sectionOrganizationDescription];
-[Blueprint sectionActionsDescription];
-[Blueprint sectionAppsDescription];
-[Blueprint sectionAppsFilesAndConfigurationsDescription];
-[Blueprint sectionAppsRestrictionsDescription];
-[Blueprint sectionSetupAndAccessibilityDescription];
-[Blueprint sectionProfilesDescription];
-[Blueprint getCustomAppsIpaFilenames];
-[Blueprint getCustomAppForIpaNamed:];
-[Blueprint addCustomAppsAtPaths:];
-[Blueprint removeCustomAppsNamed:];
-[Blueprint getFilesToTransfer];
-[Blueprint addFiles:toApp:];
-[Blueprint removeFiles:fromApp:];
-[Blueprint getAppConfigurations];
-[Blueprint addConfiguration:toApp:];
-[Blueprint removeConfigurationFromApp:];
-[Blueprint lockScreenWallpaperPath];
-[Blueprint homeScreenWallpaperPath];
-[Blueprint setLockScreenWallpaper:];
-[Blueprint setHomeScreenWallpaper:];
-[Blueprint removeLockScreenWallpaper];
-[Blueprint removeHomeScreenWallpaper];
-[Blueprint getProfiles];
-[Blueprint setProfilesWithIdentifiers:];
-[Blueprint setAllSteps:];
-[Blueprint mdmEnrollmentMode];
-[Blueprint setMDMEnrollmentMode:];
-[Blueprint wifiProfile];
-[Blueprint setWifiProfileIdentifier:];
-[Blueprint applyToDevices:];
-[Blueprint isEqual:];
-[Blueprint isApplicableViaWiFi];
-[Blueprint requiresOrganization];
-[Blueprint getBlueprintLocalPath];
-[Blueprint uid];
-[Blueprint setUid:];
-[Blueprint name];
-[Blueprint setName:];
-[Blueprint descriptionText];
-[Blueprint setDescriptionText:];
-[Blueprint deviceClass];
-[Blueprint setDeviceClass:];
-[Blueprint deviceNameScheme];
-[Blueprint setDeviceNameScheme:];
-[Blueprint customLockScreenTextScheme];
-[Blueprint setCustomLockScreenTextScheme:];
-[Blueprint organizationUUID];
-[Blueprint setOrganizationUUID:];
-[Blueprint mdmServerUUID];
-[Blueprint setMdmServerUUID:];
-[Blueprint mdmUsername];
-[Blueprint setMdmUsername:];
-[Blueprint mdmPassword];
-[Blueprint setMdmPassword:];
-[Blueprint backupToRestorePassword];
-[Blueprint setBackupToRestorePassword:];
-[Blueprint backupEncryptionPassword];
-[Blueprint setBackupEncryptionPassword:];
-[Blueprint fullTextIndex];
-[Blueprint setFullTextIndex:];
-[Blueprint appleID];
-[Blueprint setAppleID:];
-[Blueprint appleIDPassword];
-[Blueprint setAppleIDPassword:];
-[Blueprint language];
-[Blueprint setLanguage:];
-[Blueprint region];
-[Blueprint setRegion:];
-[Blueprint secondsToWaitAfterWiFiProfile];
-[Blueprint setSecondsToWaitAfterWiFiProfile:];
-[Blueprint ignoreFindMyDevice];
-[Blueprint setIgnoreFindMyDevice:];
-[Blueprint eraseDevice];
-[Blueprint setEraseDevice:];
-[Blueprint eraseDeviceOptionPreserveDataPlan];
-[Blueprint setEraseDeviceOptionPreserveDataPlan:];
-[Blueprint eraseDeviceOptionDisallowProximitySetup];
-[Blueprint setEraseDeviceOptionDisallowProximitySetup:];
-[Blueprint updateOS];
-[Blueprint setUpdateOS:];
-[Blueprint restoreOS];
-[Blueprint setRestoreOS:];
-[Blueprint backupBefore];
-[Blueprint setBackupBefore:];
-[Blueprint shutdownOnceDone];
-[Blueprint setShutdownOnceDone:];
-[Blueprint supervise];
-[Blueprint setSupervise:];
-[Blueprint allowPairingWithOtherComputers];
-[Blueprint setAllowPairingWithOtherComputers:];
-[Blueprint allowUnpairedExternalBootToRecovery];
-[Blueprint setAllowUnpairedExternalBootToRecovery:];
-[Blueprint deviceIsSharedBetweenMultipleUsers];
-[Blueprint setDeviceIsSharedBetweenMultipleUsers:];
-[Blueprint userCannotSkipApplyingMDMConfig];
-[Blueprint setUserCannotSkipApplyingMDMConfig:];
-[Blueprint userCannotRemoveMDMConfig];
-[Blueprint setUserCannotRemoveMDMConfig:];
-[Blueprint waitAtSetupAssitantUntilMDMConfigIsApplied];
-[Blueprint setWaitAtSetupAssitantUntilMDMConfigIsApplied:];
-[Blueprint appleTVAutoAdvanceSetup];
-[Blueprint setAppleTVAutoAdvanceSetup:];
-[Blueprint savePasscodeUnlockToken];
-[Blueprint setSavePasscodeUnlockToken:];
-[Blueprint disableUSBRestrictedMode];
-[Blueprint setDisableUSBRestrictedMode:];
-[Blueprint signProfilesWithOrganizationIdentity];
-[Blueprint setSignProfilesWithOrganizationIdentity:];
-[Blueprint allowActivationLockWhileSupervised];
-[Blueprint setAllowActivationLockWhileSupervised:];
-[Blueprint saveActivationLockBypassCode];
-[Blueprint setSaveActivationLockBypassCode:];
-[Blueprint unpairOnceDone];
-[Blueprint setUnpairOnceDone:];
-[Blueprint doNotArchiveBackup];
-[Blueprint setDoNotArchiveBackup:];
-[Blueprint exitSetupAssistant];
-[Blueprint setExitSetupAssistant:];
-[Blueprint ignoreNonCriticalErrors];
-[Blueprint setIgnoreNonCriticalErrors:];
-[Blueprint shouldRestoreBackup];
-[Blueprint setShouldRestoreBackup:];
-[Blueprint restoreLastDeviceBackup];
-[Blueprint setRestoreLastDeviceBackup:];
-[Blueprint restoreChangeBackupUDIDIfSameAsDevice];
-[Blueprint setRestoreChangeBackupUDIDIfSameAsDevice:];
-[Blueprint removeConfigurationFromBackup];
-[Blueprint setRemoveConfigurationFromBackup:];
-[Blueprint removeKeychainDataFromBackup];
-[Blueprint setRemoveKeychainDataFromBackup:];
-[Blueprint shouldSetBackupPassword];
-[Blueprint setShouldSetBackupPassword:];
-[Blueprint backupOnceDone];
-[Blueprint setBackupOnceDone:];
-[Blueprint uninstallRestrictedApps];
-[Blueprint setUninstallRestrictedApps:];
-[Blueprint shouldSetConnectivitySettings];
-[Blueprint setShouldSetConnectivitySettings:];
-[Blueprint dataRoaming];
-[Blueprint setDataRoaming:];
-[Blueprint bluetooth];
-[Blueprint setBluetooth:];
-[Blueprint personalHotspot];
-[Blueprint setPersonalHotspot:];
-[Blueprint waitForFullBatteryCharge];
-[Blueprint setWaitForFullBatteryCharge:];
-[Blueprint removeWiFiProfile];
-[Blueprint setRemoveWiFiProfile:];
-[Blueprint removeAllProfiles];
-[Blueprint setRemoveAllProfiles:];
-[Blueprint uninstallAllApps];
-[Blueprint setUninstallAllApps:];
-[Blueprint deleteAllPhotos];
-[Blueprint setDeleteAllPhotos:];
-[Blueprint clearPasscode];
-[Blueprint setClearPasscode:];
-[Blueprint clearRestrictionsPassword];
-[Blueprint setClearRestrictionsPassword:];
-[Blueprint removeSupervision];
-[Blueprint setRemoveSupervision:];
-[Blueprint shouldSetBackupBeforeEncryptionStatus];
-[Blueprint setShouldSetBackupBeforeEncryptionStatus:];
-[Blueprint backupBeforeEncryptionPassword];
-[Blueprint setBackupBeforeEncryptionPassword:];
-[Blueprint failsIfFindMyDeviceIsEnabled];
-[Blueprint setFailsIfFindMyDeviceIsEnabled:];
-[Blueprint failsIfBatteryHealthIsLessThan];
-[Blueprint setFailsIfBatteryHealthIsLessThan:];
-[Blueprint appRestrictionMode];
-[Blueprint setAppRestrictionMode:];
-[Blueprint isDEP];
-[Blueprint setIsDEP:];
-[Blueprint setupAssistantSteps];
-[Blueprint setSetupAssistantSteps:];
-[Blueprint singleAppModeOptions];
-[Blueprint setSingleAppModeOptions:];
-[Blueprint accessibilityOptions];
-[Blueprint setAccessibilityOptions:];
-[Blueprint backupToRestore];
-[Blueprint setBackupToRestore:];
-[Blueprint cppObject];
-[Blueprint setCppObject:];

@end

@interface Book : NSObject {
    /* instance variables */
    B _hasArtwork;
    B _isProtected;
    B _isSample;
    B _persistendIDGeneratedOnDevice;
    B _isPurchase;
    B _isSynced;
    @"NSString" _appleID;
    @"NSString" _artist;
    @"NSString" _dsid;
    @"NSString" _extension;
    @"NSString" _flavor;
    @"NSString" _genre;
    @"NSString" _itemID;
    @"NSString" _kind;
    @"NSArray" _languages;
    @"NSString" _mimeType;
    @"NSString" _name;
    q _playlistID;
    @"NSString" _sortArtist;
    @"NSString" _sortName;
    @"NSString" _pageProgressionDirection;
    @"NSString" _packageHash;
    @"NSString" _path;
    @"NSString" _persistentID;
    q _publicationVersion;
    @"NSString" _publisherUniqueID;
    @"NSDate" _releaseDate;
    @"NSString" _storefrontID;
    @"NSString" _uniqueID;
    q _s;
    @"NSImage" _icon;
    ^v _cppObject;
}

@property (T@"NSString",&,V_appleID) appleID;
@property (T@"NSString",&,V_artist) artist;
@property (T@"NSString",&,V_dsid) dsid;
@property (T@"NSString",&,V_extension) extension;
@property (T@"NSString",&,V_flavor) flavor;
@property (T@"NSString",&,V_genre) genre;
@property (TB,V_hasArtwork) hasArtwork;
@property (TB,V_isProtected) isProtected;
@property (T@"NSString",&,V_itemID) itemID;
@property (T@"NSString",&,V_kind) kind;
@property (T@"NSArray",&,V_languages) languages;
@property (T@"NSString",&,V_mimeType) mimeType;
@property (T@"NSString",&,V_name) name;
@property (TB,V_isSample) isSample;
@property (Tq,V_playlistID) playlistID;
@property (T@"NSString",&,V_sortArtist) sortArtist;
@property (T@"NSString",&,V_sortName) sortName;
@property (T@"NSString",&,V_pageProgressionDirection) pageProgressionDirection;
@property (T@"NSString",&,V_packageHash) packageHash;
@property (T@"NSString",&,V_path) path;
@property (TB,V_persistendIDGeneratedOnDevice) persistendIDGeneratedOnDevice;
@property (T@"NSString",&,V_persistentID) persistentID;
@property (Tq,V_publicationVersion) publicationVersion;
@property (T@"NSString",&,V_publisherUniqueID) publisherUniqueID;
@property (T@"NSDate",&,V_releaseDate) releaseDate;
@property (T@"NSString",&,V_storefrontID) storefrontID;
@property (T@"NSString",&,V_uniqueID) uniqueID;
@property (Tq,V_s) s;
@property (TB,V_isPurchase) isPurchase;
@property (TB,V_isSynced) isSynced;
@property (T@"NSImage",&,V_icon) icon;
@property (T^v,V_cppObject) cppObject;

/* instance methods */
-[Book initWithCPPObject:];
-[Book dealloc];
-[Book appleID];
-[Book setAppleID:];
-[Book artist];
-[Book setArtist:];
-[Book dsid];
-[Book setDsid:];
-[Book extension];
-[Book setExtension:];
-[Book flavor];
-[Book setFlavor:];
-[Book genre];
-[Book setGenre:];
-[Book hasArtwork];
-[Book setHasArtwork:];
-[Book isProtected];
-[Book setIsProtected:];
-[Book itemID];
-[Book setItemID:];
-[Book kind];
-[Book setKind:];
-[Book languages];
-[Book setLanguages:];
-[Book mimeType];
-[Book setMimeType:];
-[Book name];
-[Book setName:];
-[Book isSample];
-[Book setIsSample:];
-[Book playlistID];
-[Book setPlaylistID:];
-[Book sortArtist];
-[Book setSortArtist:];
-[Book sortName];
-[Book setSortName:];
-[Book pageProgressionDirection];
-[Book setPageProgressionDirection:];
-[Book packageHash];
-[Book setPackageHash:];
-[Book path];
-[Book setPath:];
-[Book persistendIDGeneratedOnDevice];
-[Book setPersistendIDGeneratedOnDevice:];
-[Book persistentID];
-[Book setPersistentID:];
-[Book publicationVersion];
-[Book setPublicationVersion:];
-[Book publisherUniqueID];
-[Book setPublisherUniqueID:];
-[Book releaseDate];
-[Book setReleaseDate:];
-[Book storefrontID];
-[Book setStorefrontID:];
-[Book uniqueID];
-[Book setUniqueID:];
-[Book s];
-[Book setS:];
-[Book isPurchase];
-[Book setIsPurchase:];
-[Book isSynced];
-[Book setIsSynced:];
-[Book icon];
-[Book setIcon:];
-[Book cppObject];
-[Book setCppObject:];

@end

@interface BookManager : ModernDatasetManager

@property (T^v,D) cppObject;

/* instance methods */
-[BookManager init];
-[BookManager copyToComputer:path:];
-[BookManager copyToDevice:];
-[BookManager deleteItems:];
-[BookManager openItems:];

@end

@interface BookViewController : SingleTableDatasetViewController

/* instance methods */
-[BookViewController initWithDevice:];
-[BookViewController dealloc];
-[BookViewController awakeFromNib];
-[BookViewController toolbarButtons];
-[BookViewController predicateForSearchString:];
-[BookViewController handleATHNotification:];
-[BookViewController helpURL];

@end

@interface BoolToYesNoStringValueTransformer : NSValueTransformer

/* class methods */
+[BoolToYesNoStringValueTransformer transformedValueClass];
+[BoolToYesNoStringValueTransformer allowsReverseTransformation];

/* instance methods */
-[BoolToYesNoStringValueTransformer transformedValue:];

@end

@interface Browser : VKBrowser <NSDraggingSource, LegacyPeriodicViewUpdaterDelegate> {
    /* instance variables */
    @"LegacyPeriodicViewUpdater" _periodicViewUpdater;
    @"BrowserViewDelegate" _browserViewDelegate;
}

@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;
@property (T@"BrowserCell",R) browserCell;
@property (T@"DraggingHandler",R) draggingHandler;
@property (T@"BrowserViewDelegate",&) browserViewDelegate;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* class methods */
+[Browser initialize];

/* instance methods */
-[Browser registerForPeriodicUpdateNotificationRequests];
-[Browser periodicUpdateRequestNotification:];
-[Browser dragImageForRowsWithIndexes:offset:];
-[Browser getDraggingHandler];
-[Browser releaseDraggingHandler];
-[Browser draggingImageForItemsAtIndexes:withEvent:offset:];
-[Browser canDragRowsWithIndexes:atPoint:];
-[Browser dragImageForRowsWithIndexes:tableColumns:event:offset:];
-[Browser canDragRowsWithIndexes:inColumn:withEvent:];
-[Browser draggingImageForRowsWithIndexes:inColumn:withEvent:offset:];
-[Browser draggingSession:sourceOperationMaskForDraggingContext:];
-[Browser draggingSession:willBeginAtPoint:];
-[Browser draggingSession:movedToPoint:];
-[Browser draggingSession:endedAtPoint:operation:];
-[Browser ignoreModifierKeysForDraggingSession:];
-[Browser namesOfPromisedFilesDroppedAtDestination:];
-[Browser initWithCoder:];
-[Browser initWithFrame:];
-[Browser dealloc];
-[Browser delegate];
-[Browser setDelegate:];
-[Browser browserViewDelegate];
-[Browser setBrowserViewDelegate:];
-[Browser selectedNodes];
-[Browser firstSelectedLeafNodeAllowingDirectory:];
-[Browser browserCell];
-[Browser draggingHandler];
-[Browser setSelectionIndexPath:];
-[Browser setSelectionIndexPaths:];
-[Browser selectRowIndexes:inColumn:];
-[Browser selectionIndexPath];
-[Browser doClick:];
-[Browser doDoubleClick:];
-[Browser keyDown:];
-[Browser selectRow:inColumn:];
-[Browser periodicViewUpdaterWillUpdateAllViews:];
-[Browser cancelOperation:];

@end

@interface BrowserCell : NSTextFieldCell {
    /* instance variables */
    @"BrowserNode" _browserNode;
}

/* instance methods */
-[BrowserCell initTextCell:];
-[BrowserCell dealloc];
-[BrowserCell copyWithZone:];
-[BrowserCell setObjectValue:];
-[BrowserCell drawWithFrame:inView:];
-[BrowserCell menu];
-[BrowserCell selectWithFrame:inView:editor:delegate:start:length:];
-[BrowserCell endEditing:];

@end

@interface BrowserCellStyle : NSObject {
    /* instance variables */
    d _height;
    @"LegacyTextAttributes" _textAttributes;
    @"LegacyTextAttributes" _disabledTextAttributes;
    {CGSize="width"d"height"d} _iconSize;
    {NSEdgeInsets="top"d"left"d"bottom"d"right"d} _iconHMargin;
    {CGSize="width"d"height"d} _bezelSize;
    {NSEdgeInsets="top"d"left"d"bottom"d"right"d} _bezelMargin;
}

@property (Td,V_height) height;
@property (T@"LegacyTextAttributes",R,V_textAttributes) textAttributes;
@property (T@"LegacyTextAttributes",R,V_disabledTextAttributes) disabledTextAttributes;
@property (T{CGSize=dd},V_iconSize) iconSize;
@property (T{NSEdgeInsets=dddd},V_iconHMargin) iconHMargin;
@property (T{CGSize=dd},V_bezelSize) bezelSize;
@property (T{NSEdgeInsets=dddd},V_bezelMargin) bezelMargin;

/* class methods */
+[BrowserCellStyle browserCellStyle];

/* instance methods */
-[BrowserCellStyle init];
-[BrowserCellStyle dealloc];
-[BrowserCellStyle height];
-[BrowserCellStyle setHeight:];
-[BrowserCellStyle textAttributes];
-[BrowserCellStyle disabledTextAttributes];
-[BrowserCellStyle iconSize];
-[BrowserCellStyle setIconSize:];
-[BrowserCellStyle iconHMargin];
-[BrowserCellStyle setIconHMargin:];
-[BrowserCellStyle bezelSize];
-[BrowserCellStyle setBezelSize:];
-[BrowserCellStyle bezelMargin];
-[BrowserCellStyle setBezelMargin:];

@end

@interface BrowserCollectionImageView : NSImageView {
    /* instance variables */
    B _awake;
    @"StorageItemNode" _browserNode;
}

@property (TB,V_awake) awake;
@property (T@"StorageItemNode",&,N,V_browserNode) browserNode;

/* instance methods */
-[BrowserCollectionImageView awakeFromNib];
-[BrowserCollectionImageView setImage:];
-[BrowserCollectionImageView dealloc];
-[BrowserCollectionImageView menu];
-[BrowserCollectionImageView drawRect:];
-[BrowserCollectionImageView browserNode];
-[BrowserCollectionImageView setBrowserNode:];
-[BrowserCollectionImageView awake];
-[BrowserCollectionImageView setAwake:];

@end

@interface BrowserCollectionView : VKCollectionView <NSDraggingSource> {
    /* instance variables */
    @"BrowserIconViewDataSource" _dataSource;
    Q _selectionStartIndex;
    Q _selectionEndIndex;
    B _awake;
}

@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;
@property (TB,V_awake) awake;
@property (T@"DraggingHandler",R) draggingHandler;
@property (T@"BrowserIconViewDataSource",&,V_dataSource) dataSource;

/* instance methods */
-[BrowserCollectionView dragImageForRowsWithIndexes:offset:];
-[BrowserCollectionView getDraggingHandler];
-[BrowserCollectionView releaseDraggingHandler];
-[BrowserCollectionView draggingImageForItemsAtIndexes:withEvent:offset:];
-[BrowserCollectionView canDragRowsWithIndexes:atPoint:];
-[BrowserCollectionView dragImageForRowsWithIndexes:tableColumns:event:offset:];
-[BrowserCollectionView canDragRowsWithIndexes:inColumn:withEvent:];
-[BrowserCollectionView draggingImageForRowsWithIndexes:inColumn:withEvent:offset:];
-[BrowserCollectionView draggingSession:sourceOperationMaskForDraggingContext:];
-[BrowserCollectionView draggingSession:willBeginAtPoint:];
-[BrowserCollectionView draggingSession:movedToPoint:];
-[BrowserCollectionView draggingSession:endedAtPoint:operation:];
-[BrowserCollectionView ignoreModifierKeysForDraggingSession:];
-[BrowserCollectionView namesOfPromisedFilesDroppedAtDestination:];
-[BrowserCollectionView dealloc];
-[BrowserCollectionView awakeFromNib];
-[BrowserCollectionView draggingHandler];
-[BrowserCollectionView setSelectionIndexes:];
-[BrowserCollectionView selectedNodes];
-[BrowserCollectionView selectItemForIconView:];
-[BrowserCollectionView firstSelectedLeafNodeAllowingDirectory:];
-[BrowserCollectionView performArrowKeyDown:modifiers:];
-[BrowserCollectionView keyDown:];
-[BrowserCollectionView mouseDown:];
-[BrowserCollectionView setContent:];
-[BrowserCollectionView dataSource];
-[BrowserCollectionView setDataSource:];
-[BrowserCollectionView awake];
-[BrowserCollectionView setAwake:];

@end

@interface BrowserCollectionViewItem : NSCollectionViewItem <NSTextFieldDelegate> {
    /* instance variables */
    @"BrowserCollectionImageView" _browserImageView;
    @"BrowserIconViewTextField" _browserTextField;
    @"BrowserIconViewTextFieldCell" _browserTextFieldCell;
    @"BrowserIconViewImageBox" _imageBox;
}

@property (T@"BrowserCollectionImageView",&,N,V_browserImageView) browserImageView;
@property (T@"BrowserIconViewTextField",&,N,V_browserTextField) browserTextField;
@property (T@"BrowserIconViewTextFieldCell",&,N,V_browserTextFieldCell) browserTextFieldCell;
@property (T@"BrowserIconViewImageBox",&,N,V_imageBox) imageBox;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[BrowserCollectionViewItem dealloc];
-[BrowserCollectionViewItem setRepresentedObject:];
-[BrowserCollectionViewItem setSelected:];
-[BrowserCollectionViewItem imageView];
-[BrowserCollectionViewItem textField];
-[BrowserCollectionViewItem browserImageView];
-[BrowserCollectionViewItem setBrowserImageView:];
-[BrowserCollectionViewItem browserTextField];
-[BrowserCollectionViewItem setBrowserTextField:];
-[BrowserCollectionViewItem browserTextFieldCell];
-[BrowserCollectionViewItem setBrowserTextFieldCell:];
-[BrowserCollectionViewItem imageBox];
-[BrowserCollectionViewItem setImageBox:];

@end

@interface BrowserCollectionViewRubberBand : NSObject

/* class methods */
+[BrowserCollectionViewRubberBand swizzle];

/* instance methods */
-[BrowserCollectionViewRubberBand _initWithFrameColor:fillColor:];

@end

@interface BrowserIconSlider : NSSlider

/* instance methods */
-[BrowserIconSlider mouseDown:];

@end

@interface BrowserIconViewDataSource : NSObject {
    /* instance variables */
    @"StorageItemNode" _rootNode;
    @"NSArrayController" _contentArrayController;
}

@property (T@"StorageItemNode",&,N,V_rootNode) rootNode;
@property (T@"NSArrayController",R,V_contentArrayController) contentArrayController;

/* class methods */
+[BrowserIconViewDataSource browserIconViewDataSourceWithRootNode:];

/* instance methods */
-[BrowserIconViewDataSource initWithRootNode:];
-[BrowserIconViewDataSource dealloc];
-[BrowserIconViewDataSource contentArrayController];
-[BrowserIconViewDataSource rootNode];
-[BrowserIconViewDataSource setRootNode:];

@end

@interface BrowserIconViewDelegate : NSObject <NSCollectionViewDelegate, DraggingHandlerDelegate, BrowserNodeEditing>

@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[BrowserIconViewDelegate collectionView:canDragItemsAtIndexes:withEvent:];
-[BrowserIconViewDelegate draggingHandler:canDragItemsAtIndexes:withEvent:];
-[BrowserIconViewDelegate collectionView:writeItemsAtIndexes:toPasteboard:];
-[BrowserIconViewDelegate collectionView:draggingImageForItemsAtIndexes:withEvent:offset:];
-[BrowserIconViewDelegate collectionView:validateDrop:proposedIndex:dropOperation:];
-[BrowserIconViewDelegate collectionView:acceptDrop:index:dropOperation:];
-[BrowserIconViewDelegate browserNode:didEndEditing:];
-[BrowserIconViewDelegate control:textShouldBeginEditing:];

@end

@interface BrowserIconViewImageBox : NSBox {
    /* instance variables */
    @"StorageItemNode" _browserNode;
    B _awake;
}

@property (TB,V_awake) awake;
@property (T@"StorageItemNode",&,N,V_browserNode) browserNode;

/* instance methods */
-[BrowserIconViewImageBox awakeFromNib];
-[BrowserIconViewImageBox dealloc];
-[BrowserIconViewImageBox mouseDown:];
-[BrowserIconViewImageBox menu];
-[BrowserIconViewImageBox browserNode];
-[BrowserIconViewImageBox setBrowserNode:];
-[BrowserIconViewImageBox awake];
-[BrowserIconViewImageBox setAwake:];

@end

@interface BrowserIconViewItemBox : NSBox {
    /* instance variables */
    B _mouseDown;
    @"StorageItemNode" _browserNode;
    @"NSProgressIndicator" _progress;
    B _awake;
}

@property (TB,V_awake) awake;
@property (T@"StorageItemNode",&,N) browserNode;

/* instance methods */
-[BrowserIconViewItemBox dealloc];
-[BrowserIconViewItemBox awakeFromNib];
-[BrowserIconViewItemBox browserNode];
-[BrowserIconViewItemBox setBrowserNode:];
-[BrowserIconViewItemBox drawRect:];
-[BrowserIconViewItemBox mouseDown:];
-[BrowserIconViewItemBox mouseUp:];
-[BrowserIconViewItemBox fillColor];
-[BrowserIconViewItemBox awake];
-[BrowserIconViewItemBox setAwake:];

@end

@interface BrowserIconViewTextField : NSTextField <NSControlTextEditingDelegate, BrowserNodeEditing> {
    /* instance variables */
    @"StorageItemNode" _browserNode;
}

@property (T@"StorageItemNode",&,N,V_browserNode) browserNode;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[BrowserIconViewTextField lineBreakMode];
-[BrowserIconViewTextField dealloc];
-[BrowserIconViewTextField truncatesLastVisibleLine];
-[BrowserIconViewTextField wraps];
-[BrowserIconViewTextField mouseDown:];
-[BrowserIconViewTextField menu];
-[BrowserIconViewTextField control:textShouldBeginEditing:];
-[BrowserIconViewTextField browserNode:didEndEditing:];
-[BrowserIconViewTextField browserNode];
-[BrowserIconViewTextField setBrowserNode:];

@end

@interface BrowserIconViewTextFieldCell : NSTextFieldCell {
    /* instance variables */
    @"StorageItemNode" _browserNode;
}

@property (T@"StorageItemNode",&,N,V_browserNode) browserNode;

/* instance methods */
-[BrowserIconViewTextFieldCell dealloc];
-[BrowserIconViewTextFieldCell selectWithFrame:inView:editor:delegate:start:length:];
-[BrowserIconViewTextFieldCell endEditing:];
-[BrowserIconViewTextFieldCell drawInteriorWithFrame:inView:];
-[BrowserIconViewTextFieldCell browserNode];
-[BrowserIconViewTextFieldCell setBrowserNode:];

@end

@interface BrowserListCellStyle : NSObject {
    /* instance variables */
    d _height;
    @"LegacyTextAttributes" _textAttributes;
    @"LegacyTextAttributes" _disabledTextAttributes;
    {CGSize="width"d"height"d} _iconSize;
    {NSEdgeInsets="top"d"left"d"bottom"d"right"d} _iconHMargin;
    {CGSize="width"d"height"d} _bezelSize;
    {NSEdgeInsets="top"d"left"d"bottom"d"right"d} _bezelMargin;
}

@property (Td,V_height) height;
@property (T@"LegacyTextAttributes",R,V_textAttributes) textAttributes;
@property (T@"LegacyTextAttributes",R,V_disabledTextAttributes) disabledTextAttributes;
@property (T{CGSize=dd},V_iconSize) iconSize;
@property (T{NSEdgeInsets=dddd},V_iconHMargin) iconHMargin;
@property (T{CGSize=dd},V_bezelSize) bezelSize;
@property (T{NSEdgeInsets=dddd},V_bezelMargin) bezelMargin;

/* class methods */
+[BrowserListCellStyle BrowserListCellStyle];

/* instance methods */
-[BrowserListCellStyle init];
-[BrowserListCellStyle dealloc];
-[BrowserListCellStyle height];
-[BrowserListCellStyle setHeight:];
-[BrowserListCellStyle textAttributes];
-[BrowserListCellStyle disabledTextAttributes];
-[BrowserListCellStyle iconSize];
-[BrowserListCellStyle setIconSize:];
-[BrowserListCellStyle iconHMargin];
-[BrowserListCellStyle setIconHMargin:];
-[BrowserListCellStyle bezelSize];
-[BrowserListCellStyle setBezelSize:];
-[BrowserListCellStyle bezelMargin];
-[BrowserListCellStyle setBezelMargin:];

@end

@interface BrowserListViewDataSource : NSObject <NSOutlineViewDataSource> {
    /* instance variables */
    @"StorageItemNode" _rootNode;
}

@property (T@,&,N,V_rootNode) rootNode;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* class methods */
+[BrowserListViewDataSource browserListViewDataSourceWithRootNode:];

/* instance methods */
-[BrowserListViewDataSource initWithRootNode:];
-[BrowserListViewDataSource dealloc];
-[BrowserListViewDataSource outlineView:numberOfChildrenOfItem:];
-[BrowserListViewDataSource outlineView:child:ofItem:];
-[BrowserListViewDataSource outlineView:objectValueForTableColumn:byItem:];
-[BrowserListViewDataSource outlineView:setObjectValue:forTableColumn:byItem:];
-[BrowserListViewDataSource outlineView:isItemExpandable:];
-[BrowserListViewDataSource outlineView:writeItems:toPasteboard:];
-[BrowserListViewDataSource outlineView:validateDrop:proposedItem:proposedChildIndex:];
-[BrowserListViewDataSource outlineView:acceptDrop:item:childIndex:];
-[BrowserListViewDataSource outlineView:sortDescriptorsDidChange:];
-[BrowserListViewDataSource rootNode];
-[BrowserListViewDataSource setRootNode:];

@end

@interface BrowserListViewDelegate : NSObject <NSOutlineViewDelegate, DraggingHandlerDelegate, BrowserNodeEditing> {
    /* instance variables */
    @"NSMutableArray" _itemsToRefresh;
}

@property (T@"NSMutableArray",&,V_itemsToRefresh) itemsToRefresh;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[BrowserListViewDelegate init];
-[BrowserListViewDelegate dealloc];
-[BrowserListViewDelegate outlineView:dataCellForTableColumn:item:];
-[BrowserListViewDelegate outlineView:shouldSelectItem:];
-[BrowserListViewDelegate outlineView:shouldEditTableColumn:item:];
-[BrowserListViewDelegate outlineView:shouldSelectTableColumn:];
-[BrowserListViewDelegate outlineView:shouldExpandItem:];
-[BrowserListViewDelegate outlineView:shouldCollapseItem:];
-[BrowserListViewDelegate outlineViewSelectionDidChange:];
-[BrowserListViewDelegate removeItemFromItemsToRefresh:];
-[BrowserListViewDelegate outlineView:willDisplayCell:forTableColumn:item:];
-[BrowserListViewDelegate draggingHandler:canDragRowsWithIndexes:atPoint:];
-[BrowserListViewDelegate browserNode:didEndEditing:];
-[BrowserListViewDelegate itemsToRefresh];
-[BrowserListViewDelegate setItemsToRefresh:];

@end

@interface BrowserListViewKindCell : NSTextFieldCell {
    /* instance variables */
    @"BrowserNode" _browserNode;
}

/* instance methods */
-[BrowserListViewKindCell initTextCell:];
-[BrowserListViewKindCell dealloc];
-[BrowserListViewKindCell copyWithZone:];
-[BrowserListViewKindCell setObjectValue:];
-[BrowserListViewKindCell menu];
-[BrowserListViewKindCell selectWithFrame:inView:editor:delegate:start:length:];
-[BrowserListViewKindCell endEditing:];

@end

@interface BrowserListViewNameCell : NSTextFieldCell {
    /* instance variables */
    @"BrowserNode" _browserNode;
}

/* instance methods */
-[BrowserListViewNameCell initTextCell:];
-[BrowserListViewNameCell dealloc];
-[BrowserListViewNameCell copyWithZone:];
-[BrowserListViewNameCell setObjectValue:];
-[BrowserListViewNameCell drawWithFrame:inView:];
-[BrowserListViewNameCell menu];
-[BrowserListViewNameCell selectWithFrame:inView:editor:delegate:start:length:];
-[BrowserListViewNameCell endEditing:];

@end

@interface BrowserListViewSizeCell : NSTextFieldCell {
    /* instance variables */
    @"BrowserNode" _browserNode;
}

/* instance methods */
-[BrowserListViewSizeCell initTextCell:];
-[BrowserListViewSizeCell dealloc];
-[BrowserListViewSizeCell copyWithZone:];
-[BrowserListViewSizeCell setObjectValue:];
-[BrowserListViewSizeCell menu];
-[BrowserListViewSizeCell selectWithFrame:inView:editor:delegate:start:length:];
-[BrowserListViewSizeCell endEditing:];

@end

@interface BrowserNode : NSObject {
    /* instance variables */
    @"NSURL" _url;
    @"NSImage" _icon;
    @"NSImage" _badge;
    @"BrowserCellStyle" _cellStyle;
    @"BrowserListCellStyle" _cellListStyle;
    @"NSString" _localizedName;
    B _childrenNeedsUpdate;
    @"BrowserNode" _parent;
    Q _level;
    @"NSNumber" _isLeaf;
    @"NSNumber" _isDirectory;
    @"NSNumber" _isLink;
    @"NSNumber" _isHidden;
    @"NSNumber" _hasHiddenExtension;
    @"NSNumber" _realSize;
    @"NSNumber" _allocatedSize;
    @"NSString" _typeDescription;
    @"NSDate" _creationDate;
    @"NSDate" _modificationDate;
    @"NSDate" _lastAccessDate;
    @"NSColor" _labelColor;
    {CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}} _textEditorFrame;
    @"<BrowserNodeEditing>" _browserNodeEditingDelegate;
    @"NSMenu" _menu;
    B _periodicUpdateHasBeenSet;
    @"NSView" _viewForPeriodicUpdate;
}

@property (T@"BrowserNode",R) root;
@property (T@"BrowserNode",R) parent;
@property (T@"NSArray",R) children;
@property (T@"NSURL",R,V_url) url;
@property (T@"NSImage",R,V_icon) icon;
@property (T@"NSImage",R,V_badge) badge;
@property (T@"BrowserCellStyle",&,V_cellStyle) cellStyle;
@property (T@"BrowserListCellStyle",&,V_cellListStyle) cellListStyle;
@property (Ti,R) updateStatus;
@property (T@"NSString",&) localizedName;
@property (T@"NSAttributedString",R) attributedLocalizedName;
@property (Td,R) attributedLocalizedNameHeight;
@property (TQ,R,V_level) level;
@property (TQ,R) realSize;
@property (TQ,R) allocatedSize;
@property (T@"NSString",R) typeDescription;
@property (T@"NSDate",R) creationDate;
@property (T@"NSDate",R) modificationDate;
@property (T@"NSDate",R) lastAccessDate;
@property (T@"NSColor",R) labelColor;
@property (T{CGRect={CGPoint=dd}{CGSize=dd}},V_textEditorFrame) textEditorFrame;
@property (T@"<BrowserNodeEditing>",V_browserNodeEditingDelegate) browserNodeEditingDelegate;
@property (T@"NSMenu",&) menu;

/* class methods */
+[BrowserNode browserNodeWithURL:];

/* instance methods */
-[BrowserNode init];
-[BrowserNode initWithURL:];
-[BrowserNode dealloc];
-[BrowserNode parent];
-[BrowserNode root];
-[BrowserNode menu];
-[BrowserNode setMenu:];
-[BrowserNode isParentOf:];
-[BrowserNode nodeAtIndexPath:];
-[BrowserNode indexPath];
-[BrowserNode path];
-[BrowserNode setChildrenNeedsUpdate];
-[BrowserNode enablePeriodicUpdateForView:];
-[BrowserNode disablePeriodicUpdateForView:];
-[BrowserNode children];
-[BrowserNode updateStatus];
-[BrowserNode localizedName];
-[BrowserNode attributedLocalizedName];
-[BrowserNode attributedLocalizedNameHeight];
-[BrowserNode setLocalizedName:];
-[BrowserNode isLeaf];
-[BrowserNode isDirectory];
-[BrowserNode isLink];
-[BrowserNode isHidden];
-[BrowserNode hasHiddenExtension];
-[BrowserNode realSize];
-[BrowserNode allocatedSize];
-[BrowserNode typeDescription];
-[BrowserNode creationDate];
-[BrowserNode modificationDate];
-[BrowserNode lastAccessDate];
-[BrowserNode labelColor];
-[BrowserNode url];
-[BrowserNode icon];
-[BrowserNode badge];
-[BrowserNode cellStyle];
-[BrowserNode setCellStyle:];
-[BrowserNode cellListStyle];
-[BrowserNode setCellListStyle:];
-[BrowserNode level];
-[BrowserNode textEditorFrame];
-[BrowserNode setTextEditorFrame:];
-[BrowserNode browserNodeEditingDelegate];
-[BrowserNode setBrowserNodeEditingDelegate:];

@end

@interface BrowserOutlineView : NSOutlineView <NSDraggingSource>

@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;
@property (T@"DraggingHandler",R) draggingHandler;

/* instance methods */
-[BrowserOutlineView dragImageForRowsWithIndexes:offset:];
-[BrowserOutlineView getDraggingHandler];
-[BrowserOutlineView releaseDraggingHandler];
-[BrowserOutlineView draggingImageForItemsAtIndexes:withEvent:offset:];
-[BrowserOutlineView canDragRowsWithIndexes:atPoint:];
-[BrowserOutlineView dragImageForRowsWithIndexes:tableColumns:event:offset:];
-[BrowserOutlineView canDragRowsWithIndexes:inColumn:withEvent:];
-[BrowserOutlineView draggingImageForRowsWithIndexes:inColumn:withEvent:offset:];
-[BrowserOutlineView draggingSession:sourceOperationMaskForDraggingContext:];
-[BrowserOutlineView draggingSession:willBeginAtPoint:];
-[BrowserOutlineView draggingSession:movedToPoint:];
-[BrowserOutlineView draggingSession:endedAtPoint:operation:];
-[BrowserOutlineView ignoreModifierKeysForDraggingSession:];
-[BrowserOutlineView namesOfPromisedFilesDroppedAtDestination:];
-[BrowserOutlineView draggingHandler];
-[BrowserOutlineView dealloc];
-[BrowserOutlineView firstSelectedLeafNodeAllowingDirectory:];
-[BrowserOutlineView selectedNodes];
-[BrowserOutlineView reloadItem:];
-[BrowserOutlineView reloadItem:reloadChildren:];
-[BrowserOutlineView reloadData];
-[BrowserOutlineView keyDown:];
-[BrowserOutlineView mouseDown:];

@end

@interface BrowserPathMenuDelegate : NSObject <NSMenuDelegate, NSCoding, NSCopying>

@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[BrowserPathMenuDelegate menuNeedsUpdate:];
-[BrowserPathMenuDelegate encodeWithCoder:];
-[BrowserPathMenuDelegate initWithCoder:];
-[BrowserPathMenuDelegate copyWithZone:];

@end

@interface BrowserPreviewFileInfoTableView : NSTableView {
    /* instance variables */
    B _awake;
    @"NSTrackingArea" _trackingArea;
}

@property (T@"NSTrackingArea",&,V_trackingArea) trackingArea;
@property (TB,V_awake) awake;

/* instance methods */
-[BrowserPreviewFileInfoTableView dealloc];
-[BrowserPreviewFileInfoTableView awakeFromNib];
-[BrowserPreviewFileInfoTableView mouseMoved:];
-[BrowserPreviewFileInfoTableView trackingArea];
-[BrowserPreviewFileInfoTableView setTrackingArea:];
-[BrowserPreviewFileInfoTableView awake];
-[BrowserPreviewFileInfoTableView setAwake:];

@end

@interface BrowserPreviewViewController : NSViewController <NSTableViewDataSource, NSTableViewDelegate> {
    /* instance variables */
    @"NSImageView" _imagePreview;
    @"NSTableView" _fileInfoTableView;
    @"NSTextFieldCell" _cellForLabels;
    @"NSTextFieldCell" _cellForValues;
    @"NSMenu" _menu;
    @"NSString" _name;
    @"NSString" _kind;
    @"NSString" _size;
    @"LegacyDateItem" _creationDate;
    @"LegacyDateItem" _modificationDate;
    @"LegacyDateItem" _lastAccessDate;
    @"DDNAMutableOrderedDictionary" _displayedInfo;
    i _displayedInfoFlags;
    B _awake;
}

@property (TB,V_awake) awake;
@property (T@"NSImageView",&,N,V_imagePreview) imagePreview;
@property (T@"NSTableView",&,N,V_fileInfoTableView) fileInfoTableView;
@property (T@"NSTextFieldCell",&,N,V_cellForLabels) cellForLabels;
@property (T@"NSTextFieldCell",&,N,V_cellForValues) cellForValues;
@property (T@"NSImage",&,N) icon;
@property (T@"NSString",&,N,V_name) name;
@property (T@"NSString",&,N,V_kind) kind;
@property (T@"NSString",&,N,V_size) size;
@property (T@"LegacyDateItem",&,N,V_creationDate) creationDate;
@property (T@"LegacyDateItem",&,N,V_modificationDate) modificationDate;
@property (T@"LegacyDateItem",&,N,V_lastAccessDate) lastAccessDate;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[BrowserPreviewViewController numberOfRowsInTableView:];
-[BrowserPreviewViewController tableView:objectValueForTableColumn:row:];
-[BrowserPreviewViewController tableView:shouldSelectRow:];
-[BrowserPreviewViewController tableView:heightOfRow:];
-[BrowserPreviewViewController tableView:dataCellForTableColumn:row:];
-[BrowserPreviewViewController tableView:willDisplayCell:forTableColumn:row:];
-[BrowserPreviewViewController tableView:shouldEditTableColumn:row:];
-[BrowserPreviewViewController tableViewColumnDidResize:];
-[BrowserPreviewViewController init];
-[BrowserPreviewViewController initWithDisplayedInfoFlags:];
-[BrowserPreviewViewController dealloc];
-[BrowserPreviewViewController awakeFromNib];
-[BrowserPreviewViewController menu];
-[BrowserPreviewViewController setMenu:];
-[BrowserPreviewViewController icon];
-[BrowserPreviewViewController setIcon:];
-[BrowserPreviewViewController setDisplayedInfoFlags:];
-[BrowserPreviewViewController imagePreview];
-[BrowserPreviewViewController setImagePreview:];
-[BrowserPreviewViewController fileInfoTableView];
-[BrowserPreviewViewController setFileInfoTableView:];
-[BrowserPreviewViewController cellForLabels];
-[BrowserPreviewViewController setCellForLabels:];
-[BrowserPreviewViewController cellForValues];
-[BrowserPreviewViewController setCellForValues:];
-[BrowserPreviewViewController name];
-[BrowserPreviewViewController setName:];
-[BrowserPreviewViewController kind];
-[BrowserPreviewViewController setKind:];
-[BrowserPreviewViewController size];
-[BrowserPreviewViewController setSize:];
-[BrowserPreviewViewController creationDate];
-[BrowserPreviewViewController setCreationDate:];
-[BrowserPreviewViewController modificationDate];
-[BrowserPreviewViewController setModificationDate:];
-[BrowserPreviewViewController lastAccessDate];
-[BrowserPreviewViewController setLastAccessDate:];
-[BrowserPreviewViewController awake];
-[BrowserPreviewViewController setAwake:];

@end

@interface BrowserPreviewViewDateCell : NSTextFieldCell

/* instance methods */
-[BrowserPreviewViewDateCell setFont:];
-[BrowserPreviewViewDateCell drawInteriorWithFrame:inView:];

@end

@interface BrowserViewController : DeviceContentViewController <DraggingHandlerDataProvider> {
    /* instance variables */
    @"NSURL" _baseUrl;
    @"Browser" _browser;
}

@property (T@"Browser",&,N,V_browser) browser;
@property (T@"DraggingHandler",R) draggingHandler;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[BrowserViewController showHiddenFilesDidChange];
-[BrowserViewController initWithDataset:device:];
-[BrowserViewController dealloc];
-[BrowserViewController observeValueForKeyPath:ofObject:change:context:];
-[BrowserViewController draggingHandler];
-[BrowserViewController setBaseURL:];
-[BrowserViewController draggingHandlerDraggingDidEnd:];
-[BrowserViewController browser];
-[BrowserViewController setBrowser:];

@end

@interface BrowserViewDelegate : NSObject <BrowserDelegate, DraggingHandlerDelegate, BrowserNodeEditing> {
    /* instance variables */
    @"BrowserNode" _rootNode;
    @"BrowserPreviewViewController" _previewViewController;
}

@property (T@,R,V_rootNode) rootNode;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* class methods */
+[BrowserViewDelegate browserViewDelegateWithRootNode:];

/* instance methods */
-[BrowserViewDelegate refreshFileInfoTableView];
-[BrowserViewDelegate initWithRootNode:];
-[BrowserViewDelegate dealloc];
-[BrowserViewDelegate rootItemForBrowser:];
-[BrowserViewDelegate browser:numberOfChildrenOfItem:];
-[BrowserViewDelegate browser:child:ofItem:];
-[BrowserViewDelegate browser:isLeafItem:];
-[BrowserViewDelegate browser:objectValueForItem:];
-[BrowserViewDelegate browser:setObjectValue:forItem:];
-[BrowserViewDelegate browser:heightOfRow:inColumn:];
-[BrowserViewDelegate browser:previewViewControllerForLeafItem:];
-[BrowserViewDelegate browser:shouldSizeColumn:forUserResize:toWidth:];
-[BrowserViewDelegate didClickOnBrowser:];
-[BrowserViewDelegate didDoubleClickOnBrowser:];
-[BrowserViewDelegate browser:shouldTypeSelectForEvent:withCurrentSearchString:];
-[BrowserViewDelegate browser:draggingImageForRowsWithIndexes:inColumn:withEvent:offset:];
-[BrowserViewDelegate browser:writeRowsWithIndexes:inColumn:toPasteboard:];
-[BrowserViewDelegate browser:validateDrop:proposedRow:column:dropOperation:];
-[BrowserViewDelegate browser:acceptDrop:atRow:column:dropOperation:];
-[BrowserViewDelegate browserNode:didEndEditing:];
-[BrowserViewDelegate rootNode];

@end

@interface BytesToStringValueTransformer : NSValueTransformer

/* class methods */
+[BytesToStringValueTransformer transformedValueClass];
+[BytesToStringValueTransformer allowsReverseTransformation];

/* instance methods */
-[BytesToStringValueTransformer transformedValue:];

@end

@interface CLIManager : NSObject {
    /* instance variables */
    ^v _cppObject;
}

@property (T^v,V_cppObject) cppObject;

/* class methods */
+[CLIManager defaultManager];

/* instance methods */
-[CLIManager executeCommand:];
-[CLIManager executeCommand:argv:];
-[CLIManager printHeader];
-[CLIManager cppObject];
-[CLIManager setCppObject:];

@end

@interface CPPWrappingHelpers : NSObject

/* class methods */
+[CPPWrappingHelpers arrayFromSet:];
+[CPPWrappingHelpers arrayFromVector:];
+[CPPWrappingHelpers vectorFromArray:];
+[CPPWrappingHelpers setFromArray:];

@end

@interface Calendar : NSObject {
    /* instance variables */
    B _isCalendar;
    B _enabled;
    q _storeId;
    @"NSColor" _color;
    @"NSString" _name;
    @"NSArray" _events;
    @"NSArray" _calendars;
    ^v _cppObject;
}

@property (T@"NSImage",R) checkBoxImageChecked;
@property (T@"NSImage",R) checkBoxImageUnchecked;
@property (TB,V_isCalendar) isCalendar;
@property (TB,V_enabled) enabled;
@property (Tq,V_storeId) storeId;
@property (T@"NSColor",&,V_color) color;
@property (T@"NSString",&,V_name) name;
@property (T@"NSArray",&,V_events) events;
@property (T@"NSArray",&,V_calendars) calendars;
@property (T^v,V_cppObject) cppObject;

/* class methods */
+[Calendar checkBoxImageWithColor:forCheckedState:];

/* instance methods */
-[Calendar checkBoxImageChecked];
-[Calendar checkBoxImageUnchecked];
-[Calendar initWithCPPObject:];
-[Calendar dealloc];
-[Calendar isCalendar];
-[Calendar setIsCalendar:];
-[Calendar enabled];
-[Calendar setEnabled:];
-[Calendar storeId];
-[Calendar setStoreId:];
-[Calendar color];
-[Calendar setColor:];
-[Calendar name];
-[Calendar setName:];
-[Calendar events];
-[Calendar setEvents:];
-[Calendar calendars];
-[Calendar setCalendars:];
-[Calendar cppObject];
-[Calendar setCppObject:];

@end

@interface CalendarEvent : NSObject {
    /* instance variables */
    B _displayDayHeader;
    B _isRepeated;
    B _isDeclined;
    B _allDay;
    @"NSMutableString" _fullTextSearchIndex;
    @"NSAttributedString" _nameOnList;
    @"NSString" _name;
    @"NSColor" _color;
    @"NSString" _dayHeader;
    @"NSAttributedString" _startHour;
    @"NSAttributedString" _endHour;
    @"NSDate" _startDate;
    @"NSDate" _endDate;
    @"NSString" _details;
    @"NSString" _url;
    @"NSAttributedString" _locationTitleOnList;
    @"NSString" _locationTitle;
    @"NSString" _locationAddress;
    @"NSString" _participants;
    @"NSString" _eventDateTimeSummary;
    @"NSString" _locationUrl;
    ^v _cppObject;
}

@property (T@"NSMutableString",&,V_fullTextSearchIndex) fullTextSearchIndex;
@property (TB,V_displayDayHeader) displayDayHeader;
@property (TB,V_isRepeated) isRepeated;
@property (TB,V_isDeclined) isDeclined;
@property (T@"NSAttributedString",&,V_nameOnList) nameOnList;
@property (T@"NSString",&,V_name) name;
@property (T@"NSColor",&,V_color) color;
@property (T@"NSString",&,V_dayHeader) dayHeader;
@property (T@"NSAttributedString",&,V_startHour) startHour;
@property (T@"NSAttributedString",&,V_endHour) endHour;
@property (TB,V_allDay) allDay;
@property (T@"NSDate",&,V_startDate) startDate;
@property (T@"NSDate",&,V_endDate) endDate;
@property (T@"NSString",&,V_details) details;
@property (T@"NSString",&,V_url) url;
@property (T@"NSAttributedString",&,V_locationTitleOnList) locationTitleOnList;
@property (T@"NSString",&,V_locationTitle) locationTitle;
@property (T@"NSString",&,V_locationAddress) locationAddress;
@property (T@"NSString",&,V_participants) participants;
@property (T@"NSString",&,V_eventDateTimeSummary) eventDateTimeSummary;
@property (T@"NSString",&,V_locationUrl) locationUrl;
@property (T^v,V_cppObject) cppObject;

/* instance methods */
-[CalendarEvent initWithCPPObject:];
-[CalendarEvent buildFullTextSearchIndex];
-[CalendarEvent asCsvString];
-[CalendarEvent CsvHeaderString];
-[CalendarEvent dealloc];
-[CalendarEvent fullTextSearchIndex];
-[CalendarEvent setFullTextSearchIndex:];
-[CalendarEvent displayDayHeader];
-[CalendarEvent setDisplayDayHeader:];
-[CalendarEvent isRepeated];
-[CalendarEvent setIsRepeated:];
-[CalendarEvent isDeclined];
-[CalendarEvent setIsDeclined:];
-[CalendarEvent nameOnList];
-[CalendarEvent setNameOnList:];
-[CalendarEvent name];
-[CalendarEvent setName:];
-[CalendarEvent color];
-[CalendarEvent setColor:];
-[CalendarEvent dayHeader];
-[CalendarEvent setDayHeader:];
-[CalendarEvent startHour];
-[CalendarEvent setStartHour:];
-[CalendarEvent endHour];
-[CalendarEvent setEndHour:];
-[CalendarEvent allDay];
-[CalendarEvent setAllDay:];
-[CalendarEvent startDate];
-[CalendarEvent setStartDate:];
-[CalendarEvent endDate];
-[CalendarEvent setEndDate:];
-[CalendarEvent details];
-[CalendarEvent setDetails:];
-[CalendarEvent url];
-[CalendarEvent setUrl:];
-[CalendarEvent locationTitleOnList];
-[CalendarEvent setLocationTitleOnList:];
-[CalendarEvent locationTitle];
-[CalendarEvent setLocationTitle:];
-[CalendarEvent locationAddress];
-[CalendarEvent setLocationAddress:];
-[CalendarEvent participants];
-[CalendarEvent setParticipants:];
-[CalendarEvent eventDateTimeSummary];
-[CalendarEvent setEventDateTimeSummary:];
-[CalendarEvent locationUrl];
-[CalendarEvent setLocationUrl:];
-[CalendarEvent cppObject];
-[CalendarEvent setCppObject:];

@end

@interface CalendarEventCellView : NSTableCellView {
    /* instance variables */
    @"NSTextField" _textCellHeader;
    @"NSTextField" _textHourFrom;
    @"NSTextField" _textHourTo;
    @"NSTextField" _textField2;
}

@property (T@"NSTextField",W,V_textCellHeader) textCellHeader;
@property (T@"NSTextField",W,V_textHourFrom) textHourFrom;
@property (T@"NSTextField",W,V_textHourTo) textHourTo;
@property (T@"NSTextField",W,V_textField2) textField2;

/* instance methods */
-[CalendarEventCellView textCellHeader];
-[CalendarEventCellView setTextCellHeader:];
-[CalendarEventCellView textHourFrom];
-[CalendarEventCellView setTextHourFrom:];
-[CalendarEventCellView textHourTo];
-[CalendarEventCellView setTextHourTo:];
-[CalendarEventCellView textField2];
-[CalendarEventCellView setTextField2:];

@end

@interface CalendarManager : ModernDatasetManager

@property (T^v,D) cppObject;

/* instance methods */
-[CalendarManager init];
-[CalendarManager exportToCSV:path:];
-[CalendarManager exportToXLS:path:];
-[CalendarManager copyToComputer:path:];
-[CalendarManager openItems:];

@end

@interface CalendarsViewController : ModernManagerDatasetViewController <NSOutlineViewDelegate, NSTableViewDelegate, NSDatePickerCellDelegate> {
    /* instance variables */
    B _outlineViewIsExpanded;
    B _displayRecurrences;
    B _displayDeclined;
    : _managerExportToCSVAction;
    : _managerExportToXLSAction;
    : _managerCopyToComputerAction;
    : _managerOpenAction;
    @"NSString" _defaultExtension;
    @"NSTreeController" _calendarsController;
    @"NSArrayController" _enabledCalendarsController;
    @"NSArrayController" _eventsController;
    @"NSOutlineView" _outlineView;
    @"NSTableView" _eventsTableView;
    @"NSView" _dateRangePickerView;
    @"DateRangePickerViewController" _dateRangePickerViewController;
    @"NSDate" _dateFilterFrom;
    @"NSDate" _dateFilterTo;
}

@property (T:,V_managerExportToCSVAction) managerExportToCSVAction;
@property (T:,V_managerExportToXLSAction) managerExportToXLSAction;
@property (T:,V_managerCopyToComputerAction) managerCopyToComputerAction;
@property (T:,V_managerOpenAction) managerOpenAction;
@property (T@"NSString",&,V_defaultExtension) defaultExtension;
@property (T@"NSTreeController",&,V_calendarsController) calendarsController;
@property (T@"NSArrayController",&,V_enabledCalendarsController) enabledCalendarsController;
@property (T@"NSArrayController",&,V_eventsController) eventsController;
@property (T@"NSOutlineView",&,V_outlineView) outlineView;
@property (T@"NSTableView",&,V_eventsTableView) eventsTableView;
@property (TB,V_outlineViewIsExpanded) outlineViewIsExpanded;
@property (T@"NSView",&,V_dateRangePickerView) dateRangePickerView;
@property (T@"DateRangePickerViewController",&,V_dateRangePickerViewController) dateRangePickerViewController;
@property (T@"NSDate",&,V_dateFilterFrom) dateFilterFrom;
@property (T@"NSDate",&,V_dateFilterTo) dateFilterTo;
@property (TB,V_displayRecurrences) displayRecurrences;
@property (TB,V_displayDeclined) displayDeclined;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[CalendarsViewController initWithDevice:];
-[CalendarsViewController awakeFromNib];
-[CalendarsViewController toolbarButtons];
-[CalendarsViewController dealloc];
-[CalendarsViewController filterRecurrences:];
-[CalendarsViewController filter];
-[CalendarsViewController observeValueForKeyPath:ofObject:change:context:];
-[CalendarsViewController validateAction:];
-[CalendarsViewController menuWillOpen:];
-[CalendarsViewController openWith:];
-[CalendarsViewController quickLook:];
-[CalendarsViewController copy:];
-[CalendarsViewController copyToComputer:];
-[CalendarsViewController exportToCSV:];
-[CalendarsViewController exportToXLS:];
-[CalendarsViewController export:];
-[CalendarsViewController calendarClicked];
-[CalendarsViewController eventsClickedOrSelectedOrArranged];
-[CalendarsViewController eventsClicked:];
-[CalendarsViewController showCopyConfirmationAlertSheetAllOrSelected];
-[CalendarsViewController outlineView:shouldSelectItem:];
-[CalendarsViewController outlineView:viewForTableColumn:item:];
-[CalendarsViewController outlineView:shouldShowOutlineCellForItem:];
-[CalendarsViewController outlineView:isGroupItem:];
-[CalendarsViewController tableView:shouldTypeSelectForEvent:withCurrentSearchString:];
-[CalendarsViewController tableView:heightOfRow:];
-[CalendarsViewController tableView:viewForTableColumn:row:];
-[CalendarsViewController tableView:writeRowsWithIndexes:toPasteboard:];
-[CalendarsViewController tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:];
-[CalendarsViewController helpURL];
-[CalendarsViewController managerExportToCSVAction];
-[CalendarsViewController setManagerExportToCSVAction:];
-[CalendarsViewController managerExportToXLSAction];
-[CalendarsViewController setManagerExportToXLSAction:];
-[CalendarsViewController managerCopyToComputerAction];
-[CalendarsViewController setManagerCopyToComputerAction:];
-[CalendarsViewController managerOpenAction];
-[CalendarsViewController setManagerOpenAction:];
-[CalendarsViewController defaultExtension];
-[CalendarsViewController setDefaultExtension:];
-[CalendarsViewController calendarsController];
-[CalendarsViewController setCalendarsController:];
-[CalendarsViewController enabledCalendarsController];
-[CalendarsViewController setEnabledCalendarsController:];
-[CalendarsViewController eventsController];
-[CalendarsViewController setEventsController:];
-[CalendarsViewController outlineView];
-[CalendarsViewController setOutlineView:];
-[CalendarsViewController eventsTableView];
-[CalendarsViewController setEventsTableView:];
-[CalendarsViewController outlineViewIsExpanded];
-[CalendarsViewController setOutlineViewIsExpanded:];
-[CalendarsViewController dateRangePickerView];
-[CalendarsViewController setDateRangePickerView:];
-[CalendarsViewController dateRangePickerViewController];
-[CalendarsViewController setDateRangePickerViewController:];
-[CalendarsViewController dateFilterFrom];
-[CalendarsViewController setDateFilterFrom:];
-[CalendarsViewController dateFilterTo];
-[CalendarsViewController setDateFilterTo:];
-[CalendarsViewController displayRecurrences];
-[CalendarsViewController setDisplayRecurrences:];
-[CalendarsViewController displayDeclined];
-[CalendarsViewController setDisplayDeclined:];

@end

@interface Call : NSObject <DatasetObject, IAccessibleElement> {
    /* instance variables */
    B _received;
    B _isAudio;
    B _isVideo;
    @"NSString" fullTextIndex;
    q _uid;
    Q _duration;
    q _status;
    @"NSDate" _date;
    @"Caller" _caller;
    @"Contact" _contact;
    @"NSString" _callerName;
    @"NSString" _address;
    @"NSString" _durationText;
    @"NSString" _durationTextSmall;
    @"NSNumber" _durationNumber;
    @"NSString" _serviceProvider;
    @"NSString" _location;
    ^v _ddnaCall;
}

@property (Tq,V_uid) uid;
@property (TQ,V_duration) duration;
@property (Tq,V_status) status;
@property (TB,V_received) received;
@property (T@"NSDate",&,V_date) date;
@property (T@"Caller",&,V_caller) caller;
@property (T@"Contact",&,V_contact) contact;
@property (T@"NSString",&,V_callerName) callerName;
@property (T@"NSString",&,V_address) address;
@property (T@"NSString",&,V_durationText) durationText;
@property (T@"NSString",&,V_durationTextSmall) durationTextSmall;
@property (T@"NSNumber",&,V_durationNumber) durationNumber;
@property (T@"NSString",&,V_serviceProvider) serviceProvider;
@property (T@"NSString",&,V_location) location;
@property (TB,N,V_isAudio) isAudio;
@property (TB,N,V_isVideo) isVideo;
@property (T^v,V_ddnaCall) ddnaCall;
@property (T@"NSString",&,VfullTextIndex) fullTextIndex;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* class methods */
+[Call callWithDDNACall:];

/* instance methods */
-[Call init];
-[Call initWithDDNACall:];
-[Call dealloc];
-[Call accessibilityLabel];
-[Call fullTextIndex];
-[Call setFullTextIndex:];
-[Call uid];
-[Call setUid:];
-[Call duration];
-[Call setDuration:];
-[Call status];
-[Call setStatus:];
-[Call received];
-[Call setReceived:];
-[Call date];
-[Call setDate:];
-[Call caller];
-[Call setCaller:];
-[Call contact];
-[Call setContact:];
-[Call callerName];
-[Call setCallerName:];
-[Call address];
-[Call setAddress:];
-[Call durationText];
-[Call setDurationText:];
-[Call durationTextSmall];
-[Call setDurationTextSmall:];
-[Call durationNumber];
-[Call setDurationNumber:];
-[Call serviceProvider];
-[Call setServiceProvider:];
-[Call location];
-[Call setLocation:];
-[Call isAudio];
-[Call setIsAudio:];
-[Call isVideo];
-[Call setIsVideo:];
-[Call ddnaCall];
-[Call setDdnaCall:];

@end

@interface CallManager : DatasetMobileManager {
    /* instance variables */
    ^v _ddnaCallManager;
    @"NSArray" _calls;
    @"NSArray" _callers;
}

@property (T@"NSArray",R) calls;
@property (T@"NSArray",R) callers;

/* class methods */
+[CallManager callManagerWithDDNACallManager:];

/* instance methods */
-[CallManager copyItems:toPath:runType:];
-[CallManager exportItemsAsCSV:runType:];
-[CallManager exportItemsAsXLS:toPath:runType:];
-[CallManager open:runType:];
-[CallManager openMultiple:runType:];
-[CallManager copyItemsASync:toPath:];
-[CallManager copyItemsSync:toPath:];
-[CallManager exportItemsAsCSVASync:];
-[CallManager exportItemsAsCSVSync:];
-[CallManager exportItemsAsXLSASync:toPath:];
-[CallManager openASync:];
-[CallManager openSync:];
-[CallManager openMultipleASync:];
-[CallManager openMultipleSync:];
-[CallManager initWithDDNACallManager:];
-[CallManager dealloc];
-[CallManager calls];
-[CallManager callers];
-[CallManager updateRequestDidEnd:];

@end

@interface CallViewController : iOSDeviceContentViewController {
    /* instance variables */
    @"CallManager" _callManager;
    @"LegacyDataFilter" _callersDataFilter;
    @"LegacyDataFilterSortDescriptorText" _callerSortDescriptorName;
    @"LegacyDataFilter" _callsDataFilter;
    @"LegacyDataFilterCriteriaMatchSelection" _callsSelectionMatch;
    @"LegacyDataFilterSortDescriptor" _callSortDescriptorDate;
    @"LegacyDataFilterSortDescriptorText" _callSortDescriptorCaller;
    @"LegacyDataFilterSortDescriptor" _callSortDescriptorDuration;
    @"LegacyDataFilterSortDescriptorText" _callSortDescriptorNumber;
    @"LegacyDataFilterSortDescriptorText" _callSortDescriptorService;
    @"LegacyDataFilterSortDescriptorText" _callSortDescriptorLocation;
    @"DragOutTableView" _callersTableView;
    @"CallersViewDataSource" _callersViewDataSource;
    @"CallersViewDelegate" _callersViewDelegate;
    @"DragOutTableView" _callTableView;
    @"CallViewDataSource" _callViewDataSource;
    @"CallViewDelegate" _callViewDelegate;
    @"NSSplitView" _callSplitView;
    @"DeviceViewSplitViewDelegate" _callSplitViewDelegate;
    B _awake;
}

@property (TB,V_awake) awake;
@property (T@"CallManager",&,V_callManager) callManager;
@property (T@"NSTableView",&,N,V_callersTableView) callersTableView;
@property (T@"NSTableView",&,N,V_callTableView) callTableView;
@property (T@"NSSplitView",&,N,V_callSplitView) callSplitView;

/* instance methods */
-[CallViewController copyCallsUsingDragOutInfo:];
-[CallViewController searchTextDidChange:];
-[CallViewController setSelectedCallers:];
-[CallViewController updateWindowStatusText:];
-[CallViewController copy:];
-[CallViewController performDoubleAction:];
-[CallViewController refreshData];
-[CallViewController quickLook:];
-[CallViewController openWith:];
-[CallViewController copyToComputer:];
-[CallViewController exportAsCSV:];
-[CallViewController exportAsXLS:];
-[CallViewController contextMenuCallQuickLook:];
-[CallViewController contextMenuCallOpenWith:];
-[CallViewController contextMenuCallCopyToComputer:];
-[CallViewController contextMenuCallExportAsCSV:];
-[CallViewController contextMenuCallExportAsXLS:];
-[CallViewController contextMenuCallersQuickLook:];
-[CallViewController contextMenuCallersCopyToComputer:];
-[CallViewController validateMenuItem:];
-[CallViewController validateToolbarItem:];
-[CallViewController menuWillOpen:];
-[CallViewController validateOpenWithMenuItem:call:action:delegate:];
-[CallViewController initWithDevice:];
-[CallViewController dealloc];
-[CallViewController awakeFromNib];
-[CallViewController toolbarButtons];
-[CallViewController loadData];
-[CallViewController archiveSelected:];
-[CallViewController willBeDisplayedByMainWindowController];
-[CallViewController datasetManager:updateDidEnd:];
-[CallViewController updateDisplay];
-[CallViewController helpURL];
-[CallViewController callManager];
-[CallViewController setCallManager:];
-[CallViewController callersTableView];
-[CallViewController setCallersTableView:];
-[CallViewController callTableView];
-[CallViewController setCallTableView:];
-[CallViewController callSplitView];
-[CallViewController setCallSplitView:];
-[CallViewController awake];
-[CallViewController setAwake:];

@end

@interface CallViewDataSource : DeviceTableViewDataSource {
    /* instance variables */
    @"CallManager" _callManager;
    @"Device" _device;
}

@property (T@"CallManager",V_callManager) callManager;
@property (T@"Device",&,V_device) device;

/* instance methods */
-[CallViewDataSource tableView:objectValueForTableColumn:row:];
-[CallViewDataSource dragOutTableView:proceedFilesPromiseUsingDragOutInfo:];
-[CallViewDataSource dragOutTableView:provideStringForType:];
-[CallViewDataSource callManager];
-[CallViewDataSource setCallManager:];
-[CallViewDataSource device];
-[CallViewDataSource setDevice:];

@end

@interface CallViewDelegate : DeviceTableViewDelegate

/* instance methods */
-[CallViewDelegate tableView:willDisplayCell:forTableColumn:row:];

@end

@interface Caller : NSObject {
    /* instance variables */
    @"NSString" _name;
    ^v _ddnaCaller;
}

@property (T@"NSString",&,V_name) name;
@property (T^v,V_ddnaCaller) ddnaCaller;

/* class methods */
+[Caller callerWithDDNACaller:];

/* instance methods */
-[Caller init];
-[Caller initWithDDNACaller:];
-[Caller dealloc];
-[Caller name];
-[Caller setName:];
-[Caller ddnaCaller];
-[Caller setDdnaCaller:];

@end

@interface CallersViewDataSource : DeviceTableViewDataSource

/* class methods */
+[CallersViewDataSource initialize];

/* instance methods */
-[CallersViewDataSource tableView:objectValueForTableColumn:row:];
-[CallersViewDataSource dragOutTableViewNumberOfDraggedItems:];
-[CallersViewDataSource dragOutTableView:proceedFilesPromiseUsingDragOutInfo:];

@end

@interface CallersViewDelegate : DeviceTableViewDelegate

/* instance methods */
-[CallersViewDelegate tableViewSelectionDidChange:];

@end

@interface ChooseBackupLocationViewController : NSViewController <NSTableViewDelegate, NSOpenSavePanelDelegate> {
    /* instance variables */
    B _awake;
    B _loaded;
    @"NSString" _defaultPath;
    @"<ChooseBackupLocationDelegate>" _delegate;
    Q _requiredSpace;
    @"NSString" _deviceName;
    @"NSString" _selectedPath;
    @"NSArrayController" _arrayController;
    @"NSTableView" _tableView;
}

@property (TB,V_awake) awake;
@property (TB,V_loaded) loaded;
@property (T@"NSArrayController",&,V_arrayController) arrayController;
@property (T@"NSTableView",&,V_tableView) tableView;
@property (T@"NSString",&,V_defaultPath) defaultPath;
@property (T@"<ChooseBackupLocationDelegate>",V_delegate) delegate;
@property (TQ,V_requiredSpace) requiredSpace;
@property (T@"NSString",&,V_deviceName) deviceName;
@property (T@"NSString",&,V_selectedPath) selectedPath;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[ChooseBackupLocationViewController init];
-[ChooseBackupLocationViewController awakeFromNib];
-[ChooseBackupLocationViewController dealloc];
-[ChooseBackupLocationViewController loadBackupLocationItems];
-[ChooseBackupLocationViewController volumeDidChanges:];
-[ChooseBackupLocationViewController openLocation:];
-[ChooseBackupLocationViewController chooseCustomLocation:];
-[ChooseBackupLocationViewController showCustomLocationPanel:];
-[ChooseBackupLocationViewController panel:validateURL:error:];
-[ChooseBackupLocationViewController panel:shouldEnableURL:];
-[ChooseBackupLocationViewController tableViewSelectionDidChange:];
-[ChooseBackupLocationViewController defaultPath];
-[ChooseBackupLocationViewController setDefaultPath:];
-[ChooseBackupLocationViewController delegate];
-[ChooseBackupLocationViewController setDelegate:];
-[ChooseBackupLocationViewController requiredSpace];
-[ChooseBackupLocationViewController setRequiredSpace:];
-[ChooseBackupLocationViewController deviceName];
-[ChooseBackupLocationViewController setDeviceName:];
-[ChooseBackupLocationViewController selectedPath];
-[ChooseBackupLocationViewController setSelectedPath:];
-[ChooseBackupLocationViewController awake];
-[ChooseBackupLocationViewController setAwake:];
-[ChooseBackupLocationViewController loaded];
-[ChooseBackupLocationViewController setLoaded:];
-[ChooseBackupLocationViewController arrayController];
-[ChooseBackupLocationViewController setArrayController:];
-[ChooseBackupLocationViewController tableView];
-[ChooseBackupLocationViewController setTableView:];

@end

@interface CompatibleAppItem : NSObject <IAccessibleElement> {
    /* instance variables */
    B _selected;
    @"NSImage" _icon;
    @"NSString" _title;
    @"NSString" _subtitle;
    @"NSString" _bundleID;
    @"NSNumber" _numFiles;
}

@property (T@"NSImage",&,V_icon) icon;
@property (T@"NSString",&,V_title) title;
@property (T@"NSString",&,V_subtitle) subtitle;
@property (T@"NSString",&,V_bundleID) bundleID;
@property (T@"NSNumber",&,V_numFiles) numFiles;
@property (TB,V_selected) selected;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[CompatibleAppItem accessibilityLabel];
-[CompatibleAppItem icon];
-[CompatibleAppItem setIcon:];
-[CompatibleAppItem title];
-[CompatibleAppItem setTitle:];
-[CompatibleAppItem subtitle];
-[CompatibleAppItem setSubtitle:];
-[CompatibleAppItem bundleID];
-[CompatibleAppItem setBundleID:];
-[CompatibleAppItem numFiles];
-[CompatibleAppItem setNumFiles:];
-[CompatibleAppItem selected];
-[CompatibleAppItem setSelected:];

@end

@interface Contact : NSObject <DatasetObject, IAccessibleElement> {
    /* instance variables */
    @"NSString" fullTextIndex;
    q _uid;
    @"ContactStore" _store;
    q _kind;
    @"NSDate" _creationDate;
    @"NSDate" _modificationDate;
    @"NSDate" _birthday;
    q _birthdayInt;
    @"NSString" _firstName;
    @"NSString" _lastName;
    @"NSString" _middleName;
    @"NSString" _firstPhonetic;
    @"NSString" _middlePhonetic;
    @"NSString" _lastPhonetic;
    @"NSString" _organization;
    @"NSString" _department;
    @"NSString" _note;
    @"NSString" _jobTitle;
    @"NSString" _nickname;
    @"NSString" _maidenName;
    @"NSString" _prefix;
    @"NSString" _suffix;
    @"NSString" _displayName;
    @"NSString" _contactName;
    @"NSString" _imagePath;
    @"NSNumber" _kindNumber;
    ^v _ddnaContact;
    @"NSArray" _detailsArray;
    @"NSImage" _contactImage;
}

@property (Tq,V_uid) uid;
@property (T@"ContactStore",&,V_store) store;
@property (Tq,V_kind) kind;
@property (T@"NSDate",&,V_creationDate) creationDate;
@property (T@"NSDate",&,V_modificationDate) modificationDate;
@property (T@"NSDate",&,V_birthday) birthday;
@property (Tq,V_birthdayInt) birthdayInt;
@property (T@"NSString",&,V_firstName) firstName;
@property (T@"NSString",&,V_lastName) lastName;
@property (T@"NSString",&,V_middleName) middleName;
@property (T@"NSString",&,V_firstPhonetic) firstPhonetic;
@property (T@"NSString",&,V_middlePhonetic) middlePhonetic;
@property (T@"NSString",&,V_lastPhonetic) lastPhonetic;
@property (T@"NSString",&,V_organization) organization;
@property (T@"NSString",&,V_department) department;
@property (T@"NSString",&,V_note) note;
@property (T@"NSString",&,V_jobTitle) jobTitle;
@property (T@"NSString",&,V_nickname) nickname;
@property (T@"NSString",&,V_maidenName) maidenName;
@property (T@"NSString",&,V_prefix) prefix;
@property (T@"NSString",&,V_suffix) suffix;
@property (T@"NSString",&,V_displayName) displayName;
@property (T@"NSString",&,V_contactName) contactName;
@property (T@"NSString",&,V_imagePath) imagePath;
@property (T@"NSArray",&,V_detailsArray) detailsArray;
@property (T@"NSImage",&,V_contactImage) contactImage;
@property (T@"NSNumber",&,V_kindNumber) kindNumber;
@property (T^v,V_ddnaContact) ddnaContact;
@property (T@"NSImage",R) image;
@property (T@"NSArray",R) details;
@property (T@"NSString",&,VfullTextIndex) fullTextIndex;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* class methods */
+[Contact contactsFromVCardData:manager:];
+[Contact contactsFromVCardFile:manager:];
+[Contact contactWithDDNAContact:];
+[Contact trimImage:];

/* instance methods */
-[Contact init];
-[Contact initWithDDNAContact:];
-[Contact dealloc];
-[Contact image];
-[Contact details];
-[Contact accessibilityLabel];
-[Contact fullTextIndex];
-[Contact setFullTextIndex:];
-[Contact uid];
-[Contact setUid:];
-[Contact store];
-[Contact setStore:];
-[Contact kind];
-[Contact setKind:];
-[Contact creationDate];
-[Contact setCreationDate:];
-[Contact modificationDate];
-[Contact setModificationDate:];
-[Contact birthday];
-[Contact setBirthday:];
-[Contact birthdayInt];
-[Contact setBirthdayInt:];
-[Contact firstName];
-[Contact setFirstName:];
-[Contact lastName];
-[Contact setLastName:];
-[Contact middleName];
-[Contact setMiddleName:];
-[Contact firstPhonetic];
-[Contact setFirstPhonetic:];
-[Contact middlePhonetic];
-[Contact setMiddlePhonetic:];
-[Contact lastPhonetic];
-[Contact setLastPhonetic:];
-[Contact organization];
-[Contact setOrganization:];
-[Contact department];
-[Contact setDepartment:];
-[Contact note];
-[Contact setNote:];
-[Contact jobTitle];
-[Contact setJobTitle:];
-[Contact nickname];
-[Contact setNickname:];
-[Contact maidenName];
-[Contact setMaidenName:];
-[Contact prefix];
-[Contact setPrefix:];
-[Contact suffix];
-[Contact setSuffix:];
-[Contact displayName];
-[Contact setDisplayName:];
-[Contact contactName];
-[Contact setContactName:];
-[Contact imagePath];
-[Contact setImagePath:];
-[Contact kindNumber];
-[Contact setKindNumber:];
-[Contact ddnaContact];
-[Contact setDdnaContact:];
-[Contact detailsArray];
-[Contact setDetailsArray:];
-[Contact contactImage];
-[Contact setContactImage:];

@end

@interface ContactDetail : NSObject {
    /* instance variables */
    q _uid;
    q _kind;
    @"NSDate" _date;
    @"NSString" _label;
    @"NSString" _value;
    @"NSString" _street;
    @"NSString" _city;
    @"NSString" _zip;
    @"NSString" _country;
    @"NSString" _countryCode;
    @"NSString" _state;
    @"NSString" _address;
    @"NSString" _service;
    @"NSString" _username;
    ^v _ddnaContactDetail;
}

@property (Tq,V_uid) uid;
@property (Tq,V_kind) kind;
@property (T@"NSDate",&,V_date) date;
@property (T@"NSString",&,V_label) label;
@property (T@"NSString",&,V_value) value;
@property (T@"NSString",&,V_street) street;
@property (T@"NSString",&,V_city) city;
@property (T@"NSString",&,V_zip) zip;
@property (T@"NSString",&,V_country) country;
@property (T@"NSString",&,V_countryCode) countryCode;
@property (T@"NSString",&,V_state) state;
@property (T@"NSString",&,V_address) address;
@property (T@"NSString",&,V_service) service;
@property (T@"NSString",&,V_username) username;
@property (T^v,V_ddnaContactDetail) ddnaContactDetail;

/* class methods */
+[ContactDetail contactDetailWithDDNAContactDetail:];

/* instance methods */
-[ContactDetail init];
-[ContactDetail initWithDDNAContactDetail:];
-[ContactDetail dealloc];
-[ContactDetail uid];
-[ContactDetail setUid:];
-[ContactDetail kind];
-[ContactDetail setKind:];
-[ContactDetail date];
-[ContactDetail setDate:];
-[ContactDetail label];
-[ContactDetail setLabel:];
-[ContactDetail value];
-[ContactDetail setValue:];
-[ContactDetail street];
-[ContactDetail setStreet:];
-[ContactDetail city];
-[ContactDetail setCity:];
-[ContactDetail zip];
-[ContactDetail setZip:];
-[ContactDetail country];
-[ContactDetail setCountry:];
-[ContactDetail countryCode];
-[ContactDetail setCountryCode:];
-[ContactDetail state];
-[ContactDetail setState:];
-[ContactDetail address];
-[ContactDetail setAddress:];
-[ContactDetail service];
-[ContactDetail setService:];
-[ContactDetail username];
-[ContactDetail setUsername:];
-[ContactDetail ddnaContactDetail];
-[ContactDetail setDdnaContactDetail:];

@end

@interface ContactDetailTableView : NSTableView {
    /* instance variables */
    @"NSTrackingArea" _trackingArea;
    B _awake;
    @"NSTrackingArea" trackingArea;
}

@property (T@"NSTrackingArea",&,VtrackingArea) trackingArea;
@property (TB,V_awake) awake;

/* instance methods */
-[ContactDetailTableView awakeFromNib];
-[ContactDetailTableView dealloc];
-[ContactDetailTableView updateTrackingAreas];
-[ContactDetailTableView mouseMoved:];
-[ContactDetailTableView mouseEntered:];
-[ContactDetailTableView mouseExited:];
-[ContactDetailTableView cursorUpdate:];
-[ContactDetailTableView trackingArea];
-[ContactDetailTableView setTrackingArea:];
-[ContactDetailTableView awake];
-[ContactDetailTableView setAwake:];

@end

@interface ContactDetailTableViewDelegate : DeviceTableViewDelegate {
    /* instance variables */
    @"NSDictionary" _dividerTextAttributes;
}

/* class methods */
+[ContactDetailTableViewDelegate initialize];

/* instance methods */
-[ContactDetailTableViewDelegate init];
-[ContactDetailTableViewDelegate dealloc];
-[ContactDetailTableViewDelegate tableView:heightOfRow:];
-[ContactDetailTableViewDelegate tableView:dataCellForTableColumn:row:];
-[ContactDetailTableViewDelegate tableView:isGroupRow:];
-[ContactDetailTableViewDelegate tableView:shouldEditTableColumn:row:];

@end

@interface ContactDetailViewTableViewDataSource : DeviceTableViewDataSource {
    /* instance variables */
    @"Contact" _contact;
}

@property (T@"Contact",&,V_contact) contact;

/* instance methods */
-[ContactDetailViewTableViewDataSource dealloc];
-[ContactDetailViewTableViewDataSource numberOfRowsInTableView:];
-[ContactDetailViewTableViewDataSource tableView:objectValueForTableColumn:row:];
-[ContactDetailViewTableViewDataSource contact];
-[ContactDetailViewTableViewDataSource setContact:];

@end

@interface ContactDetailsHeaderTextView : NSTextView

/* class methods */
+[ContactDetailsHeaderTextView initStyles];
+[ContactDetailsHeaderTextView initialize];

/* instance methods */
-[ContactDetailsHeaderTextView updatePrivateContactWithContact:];
-[ContactDetailsHeaderTextView updateCompanyContactWithContact:];
-[ContactDetailsHeaderTextView removeDoubleLineBreak:];
-[ContactDetailsHeaderTextView refreshWithContact:];

@end

@interface ContactDetailsTableViewDeviderCell : NSTextFieldCell

/* class methods */
+[ContactDetailsTableViewDeviderCell initialize];

/* instance methods */
-[ContactDetailsTableViewDeviderCell drawWithFrame:inView:];

@end

@interface ContactGroup : NSObject {
    /* instance variables */
    q _uid;
    @"NSNumber" _uidNumber;
    @"ContactStore" _store;
    @"NSString" _name;
    @"NSArray" _contactsArray;
    ^v _ddnaContactGroup;
}

@property (Tq,V_uid) uid;
@property (T@"NSNumber",&,V_uidNumber) uidNumber;
@property (T@"ContactStore",&,V_store) store;
@property (T@"NSString",&,V_name) name;
@property (T@"NSArray",&,V_contactsArray) contactsArray;
@property (T^v,V_ddnaContactGroup) ddnaContactGroup;
@property (T@"NSArray",R) contacts;

/* class methods */
+[ContactGroup contactGroupWithDDNAContactGroup:];
+[ContactGroup contactGrouptWithName:contacts:store:];

/* instance methods */
-[ContactGroup init];
-[ContactGroup initWithDDNAContactGroup:];
-[ContactGroup initWithName:contacts:store:];
-[ContactGroup dealloc];
-[ContactGroup contacts];
-[ContactGroup uid];
-[ContactGroup setUid:];
-[ContactGroup uidNumber];
-[ContactGroup setUidNumber:];
-[ContactGroup store];
-[ContactGroup setStore:];
-[ContactGroup name];
-[ContactGroup setName:];
-[ContactGroup contactsArray];
-[ContactGroup setContactsArray:];
-[ContactGroup ddnaContactGroup];
-[ContactGroup setDdnaContactGroup:];

@end

@interface ContactGroupsOutlineView : NSOutlineView

/* instance methods */
-[ContactGroupsOutlineView drawBackgroundInClipRect:];
-[ContactGroupsOutlineView selectFirstAvailableContactGroup:];

@end

@interface ContactGroupsOutlineViewCell : NSTextFieldCell {
    /* instance variables */
    @ _item;
}

@property (T@,&,V_item) item;

/* instance methods */
-[ContactGroupsOutlineViewCell copyWithZone:];
-[ContactGroupsOutlineViewCell dealloc];
-[ContactGroupsOutlineViewCell lineBreakMode];
-[ContactGroupsOutlineViewCell item];
-[ContactGroupsOutlineViewCell setItem:];

@end

@interface ContactGroupsOutlineViewDataSource : NSObject <NSOutlineViewDataSource> {
    /* instance variables */
    @"ContactManager" _contactManager;
}

@property (T@"ContactManager",V_contactManager) contactManager;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[ContactGroupsOutlineViewDataSource outlineView:numberOfChildrenOfItem:];
-[ContactGroupsOutlineViewDataSource outlineView:isItemExpandable:];
-[ContactGroupsOutlineViewDataSource outlineView:child:ofItem:];
-[ContactGroupsOutlineViewDataSource outlineView:objectValueForTableColumn:byItem:];
-[ContactGroupsOutlineViewDataSource dealloc];
-[ContactGroupsOutlineViewDataSource contactManager];
-[ContactGroupsOutlineViewDataSource setContactManager:];

@end

@interface ContactGroupsOutlineViewDelegate : NSObject <NSOutlineViewDelegate, NSTabViewDelegate>

@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[ContactGroupsOutlineViewDelegate outlineView:dataCellForTableColumn:item:];
-[ContactGroupsOutlineViewDelegate outlineView:shouldSelectItem:];
-[ContactGroupsOutlineViewDelegate outlineViewSelectionDidChange:];
-[ContactGroupsOutlineViewDelegate outlineView:isGroupItem:];
-[ContactGroupsOutlineViewDelegate outlineView:willDisplayCell:forTableColumn:item:];
-[ContactGroupsOutlineViewDelegate outlineView:shouldShowOutlineCellForItem:];

@end

@interface ContactManager : DatasetMobileManager {
    /* instance variables */
    ^v _ddnaContactManager;
    @"NSArray" _contacts;
    @"NSArray" _stores;
    ^v _localDatasetUpdater;
}

@property (T@"NSArray",R) contacts;
@property (T@"NSArray",R) stores;

/* class methods */
+[ContactManager contactManagerWithDDNAContactManager:];

/* instance methods */
-[ContactManager copyItemsAsVCard:toPath:runType:];
-[ContactManager copyItemsAsCSV:toPath:runType:];
-[ContactManager copyItemsAsXLS:toPath:runType:];
-[ContactManager exportItemsAsVCard:runType:];
-[ContactManager exportItemsAsCSV:runType:];
-[ContactManager open:runType:];
-[ContactManager openMultiple:runType:];
-[ContactManager copyToDevice:runType:];
-[ContactManager copyToDeviceFromVCardData:runType:];
-[ContactManager deleteFromDevice:runType:];
-[ContactManager copyItemsAsVCardASync:toPath:];
-[ContactManager copyItemsAsVCardSync:toPath:];
-[ContactManager copyItemsAsCSVASync:toPath:];
-[ContactManager copyItemsAsXLSASync:toPath:];
-[ContactManager copyItemsAsCSVSync:toPath:];
-[ContactManager exportItemsAsVCardASync:];
-[ContactManager exportItemsAsVCardSync:];
-[ContactManager exportItemsAsCSVASync:];
-[ContactManager exportItemsAsCSVSync:];
-[ContactManager openASync:];
-[ContactManager openSync:];
-[ContactManager openMultipleASync:];
-[ContactManager openMultipleSync:];
-[ContactManager copyToDeviceSync:];
-[ContactManager copyToDeviceASync:];
-[ContactManager copyToDeviceFromVCardDataSync:];
-[ContactManager copyToDeviceFromVCardDataASync:];
-[ContactManager deleteFromDeviceSync:];
-[ContactManager deleteFromDeviceASync:];
-[ContactManager initWithDDNAContactManager:];
-[ContactManager dealloc];
-[ContactManager ddnaContactManager];
-[ContactManager contacts];
-[ContactManager stores];
-[ContactManager refreshLocalContentData:];
-[ContactManager updateRequestDidStart:];
-[ContactManager updateRequestDidEnd:];

@end

@interface ContactSplitView : NSSplitView

@end

@interface ContactSplitViewDelegate : NSObject <NSSplitViewDelegate> {
    /* instance variables */
    d _maximumFirstView;
    d _minimumFirstView;
    d _maximumSecondView;
    d _minimumSecondView;
    d _maximumThirdView;
    d _minimumThirdView;
    d _currentSplitViewWidth;
    d _dividerOnePosition;
    d _dividerTwoPosition;
}

@property (Td,V_maximumFirstView) maximumFirstView;
@property (Td,V_minimumFirstView) minimumFirstView;
@property (Td,V_maximumSecondView) maximumSecondView;
@property (Td,V_minimumSecondView) minimumSecondView;
@property (Td,V_maximumThirdView) maximumThirdView;
@property (Td,V_minimumThirdView) minimumThirdView;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[ContactSplitViewDelegate splitViewDidResizeSubviews:];
-[ContactSplitViewDelegate splitView:constrainSplitPosition:ofSubviewAt:];
-[ContactSplitViewDelegate splitView:shouldAdjustSizeOfSubview:];
-[ContactSplitViewDelegate minimumFirstView];
-[ContactSplitViewDelegate setMinimumFirstView:];
-[ContactSplitViewDelegate maximumFirstView];
-[ContactSplitViewDelegate setMaximumFirstView:];
-[ContactSplitViewDelegate minimumSecondView];
-[ContactSplitViewDelegate setMinimumSecondView:];
-[ContactSplitViewDelegate maximumSecondView];
-[ContactSplitViewDelegate setMaximumSecondView:];
-[ContactSplitViewDelegate minimumThirdView];
-[ContactSplitViewDelegate setMinimumThirdView:];
-[ContactSplitViewDelegate maximumThirdView];
-[ContactSplitViewDelegate setMaximumThirdView:];

@end

@interface ContactStore : NSObject {
    /* instance variables */
    q _uid;
    @"NSNumber" _uidNumber;
    q _kind;
    @"NSString" _name;
    ^v _ddnaContactStore;
    @"NSArray" _groupsArray;
    @"NSArray" _contactsArray;
}

@property (Tq,V_uid) uid;
@property (T@"NSNumber",&,V_uidNumber) uidNumber;
@property (Tq,V_kind) kind;
@property (T@"NSString",&,V_name) name;
@property (T@"NSArray",&,V_groupsArray) groupsArray;
@property (T@"NSArray",&,V_contactsArray) contactsArray;
@property (T^v,V_ddnaContactStore) ddnaContactStore;
@property (T@"NSArray",R) groups;
@property (T@"NSArray",R) contacts;

/* class methods */
+[ContactStore contactStoreWithDDNAContactStore:];

/* instance methods */
-[ContactStore init];
-[ContactStore initWithDDNAContactStore:];
-[ContactStore dealloc];
-[ContactStore groups];
-[ContactStore contacts];
-[ContactStore uid];
-[ContactStore setUid:];
-[ContactStore uidNumber];
-[ContactStore setUidNumber:];
-[ContactStore kind];
-[ContactStore setKind:];
-[ContactStore name];
-[ContactStore setName:];
-[ContactStore ddnaContactStore];
-[ContactStore setDdnaContactStore:];
-[ContactStore groupsArray];
-[ContactStore setGroupsArray:];
-[ContactStore contactsArray];
-[ContactStore setContactsArray:];

@end

@interface ContactSyncWindowController : LegacyWindowController <NSTableViewDataSource, NSTableViewDelegate> {
    /* instance variables */
    B _displayed;
    B _copying;
    @"iOSDevice" _device;
    @"NSImageView" _iconView;
    @"NSTableView" _tableView;
    @"NSButton" _cancelButton;
    @"NSButton" _startButton;
    @"VKLegacyView" _loadView;
    @"VKLegacyView" _progressView;
    @"VKLegacyView" _noDataView;
    @"NSProgressIndicator" _loadProgressIndicator;
    @"NSProgressIndicator" _progressIndicator;
    @"NSMutableArray" _people;
    @"NSMutableSet" _selectedPeople;
    @"NSButton" _selectAllButton;
    @"NSMutableArray" _files;
    @"LegacyOperation" _operation;
    @"NSTextField" _titleMessage;
    @"NSTextField" _statusMessage;
    B _didCancel;
    @? _syncEndBlock;
    B _awake;
}

@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;
@property (TB,V_awake) awake;
@property (T@"NSImageView",&,N,V_iconView) iconView;
@property (T@"NSTableView",&,N,V_tableView) tableView;
@property (T@"NSButton",&,N,V_cancelButton) cancelButton;
@property (T@"NSButton",&,N,V_startButton) startButton;
@property (T@"VKLegacyView",&,N,V_loadView) loadView;
@property (T@"VKLegacyView",&,N,V_progressView) progressView;
@property (T@"VKLegacyView",&,N,V_noDataView) noDataView;
@property (T@"NSProgressIndicator",&,N,V_loadProgressIndicator) loadProgressIndicator;
@property (T@"NSProgressIndicator",&,N,V_progressIndicator) progressIndicator;
@property (T@"NSButton",&,N,V_selectAllButton) selectAllButton;
@property (T@"NSTextField",&,N,V_titleMessage) titleMessage;
@property (T@"NSTextField",&,N,V_statusMessage) statusMessage;
@property (T@?,C,V_syncEndBlock) syncEndBlock;

/* instance methods */
-[ContactSyncWindowController numberOfRowsInTableView:];
-[ContactSyncWindowController tableView:objectValueForTableColumn:row:];
-[ContactSyncWindowController tableView:sortDescriptorsDidChange:];
-[ContactSyncWindowController didEndSheet:returnCode:contextInfo:];
-[ContactSyncWindowController handleOperationProgressNotification:];
-[ContactSyncWindowController handleOperationEndedNotification:];
-[ContactSyncWindowController tableViewSelectionDidChange:];
-[ContactSyncWindowController initWithDevice:];
-[ContactSyncWindowController dealloc];
-[ContactSyncWindowController awakeFromNib];
-[ContactSyncWindowController showForWindow:];
-[ContactSyncWindowController startCopy:];
-[ContactSyncWindowController stopCopy:];
-[ContactSyncWindowController cancelCopy:];
-[ContactSyncWindowController toggleSelection:];
-[ContactSyncWindowController selectAll:];
-[ContactSyncWindowController deselectAll:];
-[ContactSyncWindowController chooseFile:];
-[ContactSyncWindowController iconView];
-[ContactSyncWindowController setIconView:];
-[ContactSyncWindowController syncEndBlock];
-[ContactSyncWindowController setSyncEndBlock:];
-[ContactSyncWindowController tableView];
-[ContactSyncWindowController setTableView:];
-[ContactSyncWindowController cancelButton];
-[ContactSyncWindowController setCancelButton:];
-[ContactSyncWindowController startButton];
-[ContactSyncWindowController setStartButton:];
-[ContactSyncWindowController loadView];
-[ContactSyncWindowController setLoadView:];
-[ContactSyncWindowController progressView];
-[ContactSyncWindowController setProgressView:];
-[ContactSyncWindowController noDataView];
-[ContactSyncWindowController setNoDataView:];
-[ContactSyncWindowController loadProgressIndicator];
-[ContactSyncWindowController setLoadProgressIndicator:];
-[ContactSyncWindowController progressIndicator];
-[ContactSyncWindowController setProgressIndicator:];
-[ContactSyncWindowController selectAllButton];
-[ContactSyncWindowController setSelectAllButton:];
-[ContactSyncWindowController titleMessage];
-[ContactSyncWindowController setTitleMessage:];
-[ContactSyncWindowController statusMessage];
-[ContactSyncWindowController setStatusMessage:];
-[ContactSyncWindowController awake];
-[ContactSyncWindowController setAwake:];

@end

@interface ContactTableViewDataSource : DeviceTableViewDataSource {
    /* instance variables */
    @"ContactManager" _contactManager;
    @? _onVCardDropped;
    @"Device" _device;
}

@property (T@"ContactManager",V_contactManager) contactManager;
@property (T@"Device",&,V_device) device;
@property (T@?,C,V_onVCardDropped) onVCardDropped;

/* instance methods */
-[ContactTableViewDataSource dealloc];
-[ContactTableViewDataSource tableView:objectValueForTableColumn:row:];
-[ContactTableViewDataSource dragOutTableView:proceedFilesPromiseUsingDragOutInfo:];
-[ContactTableViewDataSource dragOutTableView:provideStringForType:];
-[ContactTableViewDataSource tableView:validateDrop:proposedRow:proposedDropOperation:];
-[ContactTableViewDataSource tableView:acceptDrop:row:dropOperation:];
-[ContactTableViewDataSource contactManager];
-[ContactTableViewDataSource setContactManager:];
-[ContactTableViewDataSource onVCardDropped];
-[ContactTableViewDataSource setOnVCardDropped:];
-[ContactTableViewDataSource device];
-[ContactTableViewDataSource setDevice:];

@end

@interface ContactTableViewDelegate : DeviceTableViewDelegate

/* instance methods */
-[ContactTableViewDelegate tableViewSelectionDidChange:];

@end

@interface ContactViewController : iOSDeviceContentViewController {
    /* instance variables */
    @"ContactManager" _contactManager;
    @"LegacyDataFilterSortDescriptorText" _sortDescriptorContactFirstName;
    @"LegacyDataFilterSortDescriptorText" _sortDescriptorContactLastName;
    @"LegacyDataFilterSortDescriptor" _sortDescriptorContactCompany;
    @"LegacyDataFilterSortDescriptor" _sortDescriptorKind;
    @"LegacyDataFilterSortDescriptor" _sortDescriptorStoreKind;
    @"DragOutTableView" _contactsTableView;
    @"ContactDetailTableView" _contactDetailsTableView;
    @"ContactGroupsOutlineView" _contactGroupsOutlineView;
    @"ContactGroupsOutlineViewDelegate" _contactGroupsOutlineViewDelegate;
    @"ContactGroupsOutlineViewDataSource" _contactGroupsOutlineViewDataSource;
    @"NSView" _contactDetailNameView;
    @"ContactSplitView" _contactSplitView;
    @"ContactSplitViewDelegate" _contactSplitViewDelegate;
    @"NSTextField" _contactDetailViewHeaderViewTextFieldOne;
    @"NSTextField" _contactDetailViewHeaderViewTextFieldTwo;
    @"NSTextField" _contactDetailViewHeaderViewTextFieldThree;
    @"ContactDetailsHeaderTextView" _contactDetailsHeaderTextView;
    @"NSImageView" _contactImageView;
    @"ContactTableViewDataSource" _contactTableViewDataSource;
    @"ContactTableViewDelegate" _contactTableViewDelegate;
    @"ContactDetailViewTableViewDataSource" _contactDetailViewDataSource;
    @"ContactDetailTableViewDelegate" _contactDetailViewDelegate;
    @"NSMutableArray" _deleteOperations;
    @"NSMutableArray" _dropOperations;
    Q _contactGroupOutlineViewLastSelection;
    B _firstUpdateDone;
    B _awake;
}

@property (TB,V_awake) awake;
@property (T@"ContactManager",&,V_contactManager) contactManager;
@property (T@"ContactDetailTableViewDelegate",&,V_contactDetailViewDelegate) contactDetailViewDelegate;
@property (T@"ContactTableViewDataSource",&,V_contactTableViewDataSource) contactTableViewDataSource;
@property (T@"ContactDetailViewTableViewDataSource",&,V_contactDetailViewDataSource) contactDetailViewDataSource;
@property (T@"NSTableView",&,N,V_contactsTableView) contactsTableView;
@property (T@"ContactDetailTableView",&,N,V_contactDetailsTableView) contactDetailsTableView;
@property (T@"ContactGroupsOutlineView",&,N,V_contactGroupsOutlineView) contactGroupsOutlineView;
@property (T@"ContactGroupsOutlineViewDelegate",&,V_contactGroupsOutlineViewDelegate) contactGroupsOutlineViewDelegate;
@property (T@"ContactGroupsOutlineViewDataSource",&,V_contactGroupsOutlineViewDataSource) contactGroupsOutlineViewDataSource;
@property (T@"NSView",&,N,V_contactDetailNameView) contactDetailNameView;
@property (T@"ContactSplitView",&,N,V_contactSplitView) contactSplitView;
@property (T@"NSTextField",&,N,V_contactDetailViewHeaderViewTextFieldOne) contactDetailViewHeaderViewTextFieldOne;
@property (T@"NSTextField",&,N,V_contactDetailViewHeaderViewTextFieldTwo) contactDetailViewHeaderViewTextFieldTwo;
@property (T@"NSTextField",&,N,V_contactDetailViewHeaderViewTextFieldThree) contactDetailViewHeaderViewTextFieldThree;
@property (T@"NSImageView",&,N,V_contactImageView) contactImageView;
@property (T@"ContactDetailsHeaderTextView",&,N,V_contactDetailsHeaderTextView) contactDetailsHeaderTextView;

/* instance methods */
-[ContactViewController copy:];
-[ContactViewController performDoubleAction:];
-[ContactViewController copyToDevice:];
-[ContactViewController refreshData];
-[ContactViewController quickLook:];
-[ContactViewController openWith:];
-[ContactViewController copyToComputer:];
-[ContactViewController exportAsCSV:];
-[ContactViewController exportAsXLS:];
-[ContactViewController exportAsVCard:];
-[ContactViewController deleteSelectedItems:];
-[ContactViewController contextMenuContactQuickLook:];
-[ContactViewController contextMenuContactOpenWith:];
-[ContactViewController contextMenuContactCopyToComputer:];
-[ContactViewController contextMenuContactCopyToDevice:];
-[ContactViewController contextMenuContactExportAsCSV:];
-[ContactViewController contextMenuContactExportAsXLS:];
-[ContactViewController contextMenuContactExportAsVCard:];
-[ContactViewController contextMenuContactDeleteSelectedItems:];
-[ContactViewController validateMenuItem:];
-[ContactViewController validateToolbarItem:];
-[ContactViewController menuWillOpen:];
-[ContactViewController validateOpenWithMenuItem:contact:action:delegate:];
-[ContactViewController resizeContactDetailsTableColumns:];
-[ContactViewController handleOperationNotification:];
-[ContactViewController copyContactsUsingDragOutInfo:];
-[ContactViewController refreshContactDetailsViewWithSelection:];
-[ContactViewController searchTextDidChange:];
-[ContactViewController updateWindowStatusText:];
-[ContactViewController initWithDevice:];
-[ContactViewController dealloc];
-[ContactViewController awakeFromNib];
-[ContactViewController toolbarButtons];
-[ContactViewController loadData];
-[ContactViewController archiveSelected:];
-[ContactViewController willBeDisplayedByMainWindowController];
-[ContactViewController datasetManager:updateDidEnd:];
-[ContactViewController updateDisplay];
-[ContactViewController contactGroupsOutlineViewSelectionDidChange:];
-[ContactViewController helpURL];
-[ContactViewController contactManager];
-[ContactViewController setContactManager:];
-[ContactViewController contactsTableView];
-[ContactViewController setContactsTableView:];
-[ContactViewController contactGroupsOutlineView];
-[ContactViewController setContactGroupsOutlineView:];
-[ContactViewController contactDetailsTableView];
-[ContactViewController setContactDetailsTableView:];
-[ContactViewController contactDetailNameView];
-[ContactViewController setContactDetailNameView:];
-[ContactViewController contactSplitView];
-[ContactViewController setContactSplitView:];
-[ContactViewController contactDetailViewHeaderViewTextFieldOne];
-[ContactViewController setContactDetailViewHeaderViewTextFieldOne:];
-[ContactViewController contactDetailViewHeaderViewTextFieldTwo];
-[ContactViewController setContactDetailViewHeaderViewTextFieldTwo:];
-[ContactViewController contactDetailViewHeaderViewTextFieldThree];
-[ContactViewController setContactDetailViewHeaderViewTextFieldThree:];
-[ContactViewController contactImageView];
-[ContactViewController setContactImageView:];
-[ContactViewController contactDetailViewDelegate];
-[ContactViewController setContactDetailViewDelegate:];
-[ContactViewController contactDetailViewDataSource];
-[ContactViewController setContactDetailViewDataSource:];
-[ContactViewController contactTableViewDataSource];
-[ContactViewController setContactTableViewDataSource:];
-[ContactViewController contactDetailsHeaderTextView];
-[ContactViewController setContactDetailsHeaderTextView:];
-[ContactViewController contactGroupsOutlineViewDataSource];
-[ContactViewController setContactGroupsOutlineViewDataSource:];
-[ContactViewController contactGroupsOutlineViewDelegate];
-[ContactViewController setContactGroupsOutlineViewDelegate:];
-[ContactViewController awake];
-[ContactViewController setAwake:];

@end

@interface CoreAny : NSObject {
    /* instance variables */
    ^v _any;
}

@property (T^v,V_any) any;

/* instance methods */
-[CoreAny initWithCPPObject:];
-[CoreAny init];
-[CoreAny dealloc];
-[CoreAny stringValue];
-[CoreAny stringValueOr:];
-[CoreAny unsignedIntegerValue];
-[CoreAny unsignedIntegerValueOr:];
-[CoreAny integerValue];
-[CoreAny integerValueOr:];
-[CoreAny boolValue];
-[CoreAny boolValueOr:];
-[CoreAny stringArrayValue];
-[CoreAny stringDictionaryValue];
-[CoreAny any];
-[CoreAny setAny:];

@end

@interface CoreLocalizationManager : NSObject {
    /* instance variables */
    @"NSString" _preferredLanguageString;
}

@property (T@"NSString",&,V_preferredLanguageString) preferredLanguageString;
@property (T@"NSString",C) preferredLanguage;

/* class methods */
+[CoreLocalizationManager sharedInstance];

/* instance methods */
-[CoreLocalizationManager valueForKey:];
-[CoreLocalizationManager valueForKeyPath:];
-[CoreLocalizationManager localizedStringForKey:];
-[CoreLocalizationManager addTable:path:];
-[CoreLocalizationManager preferredLanguage];
-[CoreLocalizationManager setPreferredLanguage:];
-[CoreLocalizationManager overrideKey:withKey:condition:];
-[CoreLocalizationManager preferredLanguageString];
-[CoreLocalizationManager setPreferredLanguageString:];

@end

@interface CoreMimeType : NSObject {
    /* instance variables */
    @"NSString" _type;
    @"NSString" _extension;
}

@property (T@"NSString",&,V_type) type;
@property (T@"NSString",&,V_extension) extension;

/* instance methods */
-[CoreMimeType initWithCPPObject:];
-[CoreMimeType type];
-[CoreMimeType setType:];
-[CoreMimeType extension];
-[CoreMimeType setExtension:];

@end

@interface CoreObject : NSObject {
    /* instance variables */
    ^v _cppObject;
}

@property (T^v,V_cppObject) cppObject;

/* instance methods */
-[CoreObject initWithCPPObject:];
-[CoreObject init];
-[CoreObject dealloc];
-[CoreObject cppObject];
-[CoreObject setCppObject:];

@end

@interface CoreOperation : NSObject {
    /* instance variables */
    ^v _cppObject;
}

@property (T^v,V_cppObject) cppObject;
@property (TB,R) isLegacyBridge;
@property (TB,R) wasStarted;
@property (TB,R) executing;
@property (TB,R) finished;
@property (TB,R) cancelled;
@property (TB,R) cancelling;
@property (TB,R) paused;
@property (TB,R) endedWithoutProperStart;
@property (T@"NSUUID",R) uuid;
@property (T@"NSString",R) name;
@property (T@"CoreProgress",R) progress;
@property (T@"CoreMimeType",R) mimeType;
@property (T@"NSString",R) destinationPath;
@property (T@"NSArray",R) destinationFiles;
@property (T@"DDNAErrorObject",R) error;
@property (TB) isDisplayable;
@property (TB) isPrivate;
@property (TB) showErrors;
@property (TB,R) setupFailed;
@property (TB,R) notifyOnStart;

/* class methods */
+[CoreOperation initialize];
+[CoreOperation addOnOperationStart:];
+[CoreOperation removeOnOperationStart:];

/* instance methods */
-[CoreOperation initWithCPPObject:];
-[CoreOperation dealloc];
-[CoreOperation isEqualToOperation:];
-[CoreOperation isEqual:];
-[CoreOperation isLegacyBridge];
-[CoreOperation wasStarted];
-[CoreOperation executing];
-[CoreOperation finished];
-[CoreOperation cancelled];
-[CoreOperation cancelling];
-[CoreOperation paused];
-[CoreOperation endedWithoutProperStart];
-[CoreOperation uuid];
-[CoreOperation name];
-[CoreOperation progress];
-[CoreOperation mimeType];
-[CoreOperation destinationPath];
-[CoreOperation destinationFiles];
-[CoreOperation error];
-[CoreOperation isDisplayable];
-[CoreOperation setIsDisplayable:];
-[CoreOperation isPrivate];
-[CoreOperation setIsPrivate:];
-[CoreOperation showErrors];
-[CoreOperation setShowErrors:];
-[CoreOperation setupFailed];
-[CoreOperation notifyOnStart];
-[CoreOperation runSync];
-[CoreOperation runASync];
-[CoreOperation pause];
-[CoreOperation resume];
-[CoreOperation cancel];
-[CoreOperation waitUntilFinished];
-[CoreOperation addOnStart:];
-[CoreOperation addOnProgress:];
-[CoreOperation addOnCancel:];
-[CoreOperation addOnPause:];
-[CoreOperation addOnResume:];
-[CoreOperation addOnFinish:];
-[CoreOperation addOnStart:delay:];
-[CoreOperation addOnProgress:delay:];
-[CoreOperation addOnCancel:delay:];
-[CoreOperation addOnPause:delay:];
-[CoreOperation addOnResume:delay:];
-[CoreOperation addOnFinish:delay:];
-[CoreOperation removeOnStart:];
-[CoreOperation removeOnProgress:];
-[CoreOperation removeOnCancel:];
-[CoreOperation removeOnPause:];
-[CoreOperation removeOnResume:];
-[CoreOperation removeOnFinish:];
-[CoreOperation removeOptionShowDialogs];
-[CoreOperation infoForKey:];
-[CoreOperation isDispatched];
-[CoreOperation cppObject];
-[CoreOperation setCppObject:];

@end

@interface CoreProgress : NSObject {
    /* instance variables */
    B _indeterminate;
    @"NSString" _title;
    @"NSString" _message;
    Q _totalUnitCount;
    Q _completedUnitCount;
    d _fractionCompleted;
}

@property (T@"NSString",&,V_title) title;
@property (T@"NSString",&,V_message) message;
@property (TB,V_indeterminate) indeterminate;
@property (TQ,V_totalUnitCount) totalUnitCount;
@property (TQ,V_completedUnitCount) completedUnitCount;
@property (Td,V_fractionCompleted) fractionCompleted;

/* instance methods */
-[CoreProgress initWithCPPObject:];
-[CoreProgress title];
-[CoreProgress setTitle:];
-[CoreProgress message];
-[CoreProgress setMessage:];
-[CoreProgress indeterminate];
-[CoreProgress setIndeterminate:];
-[CoreProgress totalUnitCount];
-[CoreProgress setTotalUnitCount:];
-[CoreProgress completedUnitCount];
-[CoreProgress setCompletedUnitCount:];
-[CoreProgress fractionCompleted];
-[CoreProgress setFractionCompleted:];

@end

@interface CoreStringTemplate : NSObject {
    /* instance variables */
    {StringTemplate="impl"{shared_ptr<DDNA::Core::StringTemplate::IMPL>="__ptr_"^{IMPL}"__cntrl_"^{__shared_weak_count}}} _template;
}

@property (T@"NSString",&,N) label;

/* class methods */
+[CoreStringTemplate replace:key:value:];
+[CoreStringTemplate replace:variables:];

/* instance methods */
-[CoreStringTemplate init];
-[CoreStringTemplate initWithLabel:];
-[CoreStringTemplate label];
-[CoreStringTemplate setLabel:];
-[CoreStringTemplate setObject:forKey:];
-[CoreStringTemplate replace];

@end

@interface CoreTypesIcons : NSObject {
    /* instance variables */
    B _inited;
    @"NSBundle" _coreTypes;
    @"NSMutableDictionary" _images;
}

@property (TB,V_inited) inited;
@property (T@"NSBundle",&,V_coreTypes) coreTypes;
@property (T@"NSMutableDictionary",&,V_images) images;
@property (T@"NSImage",R,D,N) icon_Accounts;
@property (T@"NSImage",R,D,N) icon_Actions;
@property (T@"NSImage",R,D,N) icon_AirDrop;
@property (T@"NSImage",R,D,N) icon_AlertCautionBadgeIcon;
@property (T@"NSImage",R,D,N) icon_AlertCautionIcon;
@property (T@"NSImage",R,D,N) icon_AlertNoteIcon;
@property (T@"NSImage",R,D,N) icon_AlertStopIcon;
@property (T@"NSImage",R,D,N) icon_AliasBadgeIcon;
@property (T@"NSImage",R,D,N) icon_AllMyFiles;
@property (T@"NSImage",R,D,N) icon_ApplicationsFolderIcon;
@property (T@"NSImage",R,D,N) icon_BackwardArrowIcon;
@property (T@"NSImage",R,D,N) icon_Bonjour;
@property (T@"NSImage",R,D,N) icon_BookmarkIcon;
@property (T@"NSImage",R,D,N) icon_BurnableFolderIcon;
@property (T@"NSImage",R,D,N) icon_BurningIcon;
@property (T@"NSImage",R,D,N) icon_CDAudioVolumeIcon;
@property (T@"NSImage",R,D,N) icon_ClippingPicture;
@property (T@"NSImage",R,D,N) icon_ClippingSound;
@property (T@"NSImage",R,D,N) icon_ClippingText;
@property (T@"NSImage",R,D,N) icon_ClippingUnknown;
@property (T@"NSImage",R,D,N) icon_Clock;
@property (T@"NSImage",R,D,N) icon_ColorSyncProfileIcon;
@property (T@"NSImage",R,D,N) icon_com_apple_airport_express;
@property (T@"NSImage",R,D,N) icon_com_apple_airport_extreme;
@property (T@"NSImage",R,D,N) icon_com_apple_airport_extreme_tower;
@property (T@"NSImage",R,D,N) icon_com_apple_apple_tv;
@property (T@"NSImage",R,D,N) icon_com_apple_cinema_display;
@property (T@"NSImage",R,D,N) icon_com_apple_emac;
@property (T@"NSImage",R,D,N) icon_com_apple_ibook_g4_12;
@property (T@"NSImage",R,D,N) icon_com_apple_ibook_g4_14;
@property (T@"NSImage",R,D,N) icon_com_apple_imac_aluminum_20;
@property (T@"NSImage",R,D,N) icon_com_apple_imac_aluminum_24;
@property (T@"NSImage",R,D,N) icon_com_apple_imac_g4_15;
@property (T@"NSImage",R,D,N) icon_com_apple_imac_g4_17;
@property (T@"NSImage",R,D,N) icon_com_apple_imac_g4_20;
@property (T@"NSImage",R,D,N) icon_com_apple_imac_g5_17;
@property (T@"NSImage",R,D,N) icon_com_apple_imac_g5_20;
@property (T@"NSImage",R,D,N) icon_com_apple_imac_iSight_17;
@property (T@"NSImage",R,D,N) icon_com_apple_imac_iSight_20;
@property (T@"NSImage",R,D,N) icon_com_apple_imac_iSight_24;
@property (T@"NSImage",R,D,N) icon_com_apple_imac_unibody_21;
@property (T@"NSImage",R,D,N) icon_com_apple_imac_unibody_21_no_optical;
@property (T@"NSImage",R,D,N) icon_com_apple_imac_unibody_27;
@property (T@"NSImage",R,D,N) icon_com_apple_imac_unibody_27_no_optical;
@property (T@"NSImage",R,D,N) icon_com_apple_ipad;
@property (T@"NSImage",R,D,N) icon_com_apple_iphone;
@property (T@"NSImage",R,D,N) icon_com_apple_iphone_3g;
@property (T@"NSImage",R,D,N) icon_com_apple_iphone_4_black;
@property (T@"NSImage",R,D,N) icon_com_apple_iphone_4_white;
@property (T@"NSImage",R,D,N) icon_com_apple_ipod_touch;
@property (T@"NSImage",R,D,N) icon_com_apple_ipod_touch_2;
@property (T@"NSImage",R,D,N) icon_com_apple_ipod_touch_4_black;
@property (T@"NSImage",R,D,N) icon_com_apple_ipod_touch_4_white;
@property (T@"NSImage",R,D,N) icon_com_apple_led_cinema_display_24;
@property (T@"NSImage",R,D,N) icon_com_apple_led_cinema_display_27;
@property (T@"NSImage",R,D,N) icon_com_apple_macbook_black;
@property (T@"NSImage",R,D,N) icon_com_apple_macbook_unibody;
@property (T@"NSImage",R,D,N) icon_com_apple_macbook_unibody_plastic;
@property (T@"NSImage",R,D,N) icon_com_apple_macbook_white;
@property (T@"NSImage",R,D,N) icon_com_apple_macbookair;
@property (T@"NSImage",R,D,N) icon_com_apple_macbookair_11_unibody;
@property (T@"NSImage",R,D,N) icon_com_apple_macbookair_13_unibody;
@property (T@"NSImage",R,D,N) icon_com_apple_macbookpro_13_retina_display;
@property (T@"NSImage",R,D,N) icon_com_apple_macbookpro_13_unibody;
@property (T@"NSImage",R,D,N) icon_com_apple_macbookpro_15;
@property (T@"NSImage",R,D,N) icon_com_apple_macbookpro_15_retina_display;
@property (T@"NSImage",R,D,N) icon_com_apple_macbookpro_15_unibody;
@property (T@"NSImage",R,D,N) icon_com_apple_macbookpro_17;
@property (T@"NSImage",R,D,N) icon_com_apple_macbookpro_17_unibody;
@property (T@"NSImage",R,D,N) icon_com_apple_macmini;
@property (T@"NSImage",R,D,N) icon_com_apple_macmini_server;
@property (T@"NSImage",R,D,N) icon_com_apple_macmini_unibody;
@property (T@"NSImage",R,D,N) icon_com_apple_macmini_unibody_no_optical;
@property (T@"NSImage",R,D,N) icon_com_apple_macpro;
@property (T@"NSImage",R,D,N) icon_com_apple_macpro_cylinder;
@property (T@"NSImage",R,D,N) icon_com_apple_powerbook_g4_12;
@property (T@"NSImage",R,D,N) icon_com_apple_powerbook_g4_15;
@property (T@"NSImage",R,D,N) icon_com_apple_powerbook_g4_17;
@property (T@"NSImage",R,D,N) icon_com_apple_powerbook_g4_titanium;
@property (T@"NSImage",R,D,N) icon_com_apple_powermac_g4_graphite;
@property (T@"NSImage",R,D,N) icon_com_apple_powermac_g4_mirrored_drive_doors;
@property (T@"NSImage",R,D,N) icon_com_apple_powermac_g4_quicksilver;
@property (T@"NSImage",R,D,N) icon_com_apple_powermac_g5;
@property (T@"NSImage",R,D,N) icon_com_apple_time_capsule;
@property (T@"NSImage",R,D,N) icon_com_apple_xserve;
@property (T@"NSImage",R,D,N) icon_com_apple_xserve_g4;
@property (T@"NSImage",R,D,N) icon_ConnectToIcon;
@property (T@"NSImage",R,D,N) icon_DeleteAliasIcon;
@property (T@"NSImage",R,D,N) icon_DesktopFolderIcon;
@property (T@"NSImage",R,D,N) icon_DeveloperFolderIcon;
@property (T@"NSImage",R,D,N) icon_DocumentsFolderIcon;
@property (T@"NSImage",R,D,N) icon_DownloadsFolder;
@property (T@"NSImage",R,D,N) icon_DropFolderBadgeIcon;
@property (T@"NSImage",R,D,N) icon_EjectMediaIcon;
@property (T@"NSImage",R,D,N) icon_ErasingIcon;
@property (T@"NSImage",R,D,N) icon_Everyone;
@property (T@"NSImage",R,D,N) icon_ExecutableBinaryIcon;
@property (T@"NSImage",R,D,N) icon_FavoriteItemsIcon;
@property (T@"NSImage",R,D,N) icon_FileVaultIcon;
@property (T@"NSImage",R,D,N) icon_FinderIcon;
@property (T@"NSImage",R,D,N) icon_ForwardArrowIcon;
@property (T@"NSImage",R,D,N) icon_FullTrashIcon;
@property (T@"NSImage",R,D,N) icon_General;
@property (T@"NSImage",R,D,N) icon_GenericAirDiskIcon;
@property (T@"NSImage",R,D,N) icon_GenericApplicationIcon;
@property (T@"NSImage",R,D,N) icon_GenericDocumentIcon;
@property (T@"NSImage",R,D,N) icon_GenericFileServerIcon;
@property (T@"NSImage",R,D,N) icon_GenericFolderIcon;
@property (T@"NSImage",R,D,N) icon_GenericFontIcon;
@property (T@"NSImage",R,D,N) icon_GenericNetworkIcon;
@property (T@"NSImage",R,D,N) icon_GenericQuestionMarkIcon;
@property (T@"NSImage",R,D,N) icon_GenericSharepoint;
@property (T@"NSImage",R,D,N) icon_GenericStationeryIcon;
@property (T@"NSImage",R,D,N) icon_GenericTimeMachineDiskIcon;
@property (T@"NSImage",R,D,N) icon_GenericURLIcon;
@property (T@"NSImage",R,D,N) icon_GenericWindowIcon;
@property (T@"NSImage",R,D,N) icon_GridIcon;
@property (T@"NSImage",R,D,N) icon_GroupFolder;
@property (T@"NSImage",R,D,N) icon_GroupIcon;
@property (T@"NSImage",R,D,N) icon_GuestUserIcon;
@property (T@"NSImage",R,D,N) icon_HelpIcon;
@property (T@"NSImage",R,D,N) icon_HomeFolderIcon;
@property (T@"NSImage",R,D,N) icon_iDiskGenericIcon;
@property (T@"NSImage",R,D,N) icon_iDiskUserIcon;
@property (T@"NSImage",R,D,N) icon_InternetLocation;
@property (T@"NSImage",R,D,N) icon_InternetLocationAFP;
@property (T@"NSImage",R,D,N) icon_InternetLocationFile;
@property (T@"NSImage",R,D,N) icon_InternetLocationFTP;
@property (T@"NSImage",R,D,N) icon_InternetLocationGeneric;
@property (T@"NSImage",R,D,N) icon_InternetLocationHTTP;
@property (T@"NSImage",R,D,N) icon_InternetLocationMAILTO;
@property (T@"NSImage",R,D,N) icon_InternetLocationNEWS;
@property (T@"NSImage",R,D,N) icon_InternetLocationVNC;
@property (T@"NSImage",R,D,N) icon_KeepArrangedIcon;
@property (T@"NSImage",R,D,N) icon_KEXT;
@property (T@"NSImage",R,D,N) icon_LibraryFolderIcon;
@property (T@"NSImage",R,D,N) icon_LockedBadgeIcon;
@property (T@"NSImage",R,D,N) icon_LockedIcon;
@property (T@"NSImage",R,D,N) icon_MagnifyingGlassIcon;
@property (T@"NSImage",R,D,N) icon_MovieFolderIcon;
@property (T@"NSImage",R,D,N) icon_MultipleItemsIcon;
@property (T@"NSImage",R,D,N) icon_MusicFolderIcon;
@property (T@"NSImage",R,D,N) icon_NetBootVolume;
@property (T@"NSImage",R,D,N) icon_NewFolderBadgeIcon;
@property (T@"NSImage",R,D,N) icon_Notifications;
@property (T@"NSImage",R,D,N) icon_NotLoaded;
@property (T@"NSImage",R,D,N) icon_NoWriteIcon;
@property (T@"NSImage",R,D,N) icon_OpenFolderIcon;
@property (T@"NSImage",R,D,N) icon_PicturesFolderIcon;
@property (T@"NSImage",R,D,N) icon_PrivateFolderBadgeIcon;
@property (T@"NSImage",R,D,N) icon_ProblemReport;
@property (T@"NSImage",R,D,N) icon_ProfileBackgroundColor;
@property (T@"NSImage",R,D,N) icon_ProfileFont;
@property (T@"NSImage",R,D,N) icon_ProfileFontAndColor;
@property (T@"NSImage",R,D,N) icon_public_generic_lcd;
@property (T@"NSImage",R,D,N) icon_public_generic_pc;
@property (T@"NSImage",R,D,N) icon_PublicFolderIcon;
@property (T@"NSImage",R,D,N) icon_ReadOnlyFolderBadgeIcon;
@property (T@"NSImage",R,D,N) icon_RecentItemsIcon;
@property (T@"NSImage",R,D,N) icon_RightContainerArrowIcon;
@property (T@"NSImage",R,D,N) icon_ServerApplicationsFolderIcon;
@property (T@"NSImage",R,D,N) icon_SidebarAirDrop;
@property (T@"NSImage",R,D,N) icon_SidebarAirportDisk;
@property (T@"NSImage",R,D,N) icon_SidebarAirportExpress;
@property (T@"NSImage",R,D,N) icon_SidebarAirportExtreme;
@property (T@"NSImage",R,D,N) icon_SidebarAirportExtremeTower;
@property (T@"NSImage",R,D,N) icon_SidebarAllMyFiles;
@property (T@"NSImage",R,D,N) icon_SidebarApplicationsFolder;
@property (T@"NSImage",R,D,N) icon_SidebarBonjour;
@property (T@"NSImage",R,D,N) icon_SidebarBurnFolder;
@property (T@"NSImage",R,D,N) icon_SidebarDesktopFolder;
@property (T@"NSImage",R,D,N) icon_SidebarDisplay;
@property (T@"NSImage",R,D,N) icon_SidebarDocumentsFolder;
@property (T@"NSImage",R,D,N) icon_SidebarDownloadsFolder;
@property (T@"NSImage",R,D,N) icon_SidebarDropBoxFolder;
@property (T@"NSImage",R,D,N) icon_SidebarExternalDisk;
@property (T@"NSImage",R,D,N) icon_SidebarGenericFile;
@property (T@"NSImage",R,D,N) icon_SidebarGenericFolder;
@property (T@"NSImage",R,D,N) icon_SidebarHomeFolder;
@property (T@"NSImage",R,D,N) icon_SidebariCloud;
@property (T@"NSImage",R,D,N) icon_SidebariDisk;
@property (T@"NSImage",R,D,N) icon_SidebariMac;
@property (T@"NSImage",R,D,N) icon_SidebarInternalDisk;
@property (T@"NSImage",R,D,N) icon_SidebariPad;
@property (T@"NSImage",R,D,N) icon_SidebariPhone;
@property (T@"NSImage",R,D,N) icon_SidebariPodTouch;
@property (T@"NSImage",R,D,N) icon_SidebarLaptop;
@property (T@"NSImage",R,D,N) icon_SidebarMacMini;
@property (T@"NSImage",R,D,N) icon_SidebarMacPro;
@property (T@"NSImage",R,D,N) icon_SidebarMacProCylinder;
@property (T@"NSImage",R,D,N) icon_SidebarMoviesFolder;
@property (T@"NSImage",R,D,N) icon_SidebarMusicFolder;
@property (T@"NSImage",R,D,N) icon_SidebarNetwork;
@property (T@"NSImage",R,D,N) icon_SidebarOpticalDisk;
@property (T@"NSImage",R,D,N) icon_SidebarPC;
@property (T@"NSImage",R,D,N) icon_SidebarPicturesFolder;
@property (T@"NSImage",R,D,N) icon_SidebarPrefs;
@property (T@"NSImage",R,D,N) icon_SidebarRecents;
@property (T@"NSImage",R,D,N) icon_SidebarRemovableDisk;
@property (T@"NSImage",R,D,N) icon_SidebarServerDrive;
@property (T@"NSImage",R,D,N) icon_SidebarSmartFolder;
@property (T@"NSImage",R,D,N) icon_SidebarTimeCapsule;
@property (T@"NSImage",R,D,N) icon_SidebarTimeMachine;
@property (T@"NSImage",R,D,N) icon_SidebarUtilitiesFolder;
@property (T@"NSImage",R,D,N) icon_SidebarXserve;
@property (T@"NSImage",R,D,N) icon_SitesFolderIcon;
@property (T@"NSImage",R,D,N) icon_SmartFolderIcon;
@property (T@"NSImage",R,D,N) icon_StatusBarCDROMIcon;
@property (T@"NSImage",R,D,N) icon_StatusBarTrashIcon;
@property (T@"NSImage",R,D,N) icon_Sync;
@property (T@"NSImage",R,D,N) icon_SystemFolderIcon;
@property (T@"NSImage",R,D,N) icon_ToolbarAdvanced;
@property (T@"NSImage",R,D,N) icon_ToolbarCustomizeIcon;
@property (T@"NSImage",R,D,N) icon_ToolbarDeleteIcon;
@property (T@"NSImage",R,D,N) icon_ToolbarFavoritesIcon;
@property (T@"NSImage",R,D,N) icon_ToolbarInfo;
@property (T@"NSImage",R,D,N) icon_ToolbarLabels;
@property (T@"NSImage",R,D,N) icon_TrashIcon;
@property (T@"NSImage",R,D,N) icon_UnknownFSObjectIcon;
@property (T@"NSImage",R,D,N) icon_UnlockedIcon;
@property (T@"NSImage",R,D,N) icon_Unsupported;
@property (T@"NSImage",R,D,N) icon_UserIcon;
@property (T@"NSImage",R,D,N) icon_UsersFolderIcon;
@property (T@"NSImage",R,D,N) icon_UserUnknownIcon;
@property (T@"NSImage",R,D,N) icon_UtilitiesFolder;
@property (T@"NSImage",R,D,N) icon_VCard;

/* class methods */
+[CoreTypesIcons sharedInstance];
+[CoreTypesIcons allocWithZone:];

/* instance methods */
-[CoreTypesIcons init];
-[CoreTypesIcons valueForKey:];
-[CoreTypesIcons respondsToSelector:];
-[CoreTypesIcons methodSignatureForSelector:];
-[CoreTypesIcons forwardInvocation:];
-[CoreTypesIcons inited];
-[CoreTypesIcons setInited:];
-[CoreTypesIcons coreTypes];
-[CoreTypesIcons setCoreTypes:];
-[CoreTypesIcons images];
-[CoreTypesIcons setImages:];

@end

@interface DDNAConfig : NSObject {
    /* instance variables */
    B _manageVPPLicenseAutomatically;
    B _inited;
    i _minDeviceBatteryPercent;
    i _max;
    @"NSString" _iTunesLibraryXMLFile;
    @"NSString" _iTunesLibraryMediaFolder;
}

@property (TB,V_inited) inited;
@property (T@"NSString",&) appName;
@property (T@"NSString",&) appID;
@property (T@"NSString",&) appVersion;
@property (T@"NSString",&) licenseType;
@property (TB) isAgent;
@property (TB) isCLI;
@property (TB) trackingEnabled;
@property (TB) seriousMode;
@property (TB) disableSuccessfulNotifications;
@property (TB) darkModeEnabled;
@property (T@"NSString",&) trackingID;
@property (T@"NSString",&) osVersion;
@property (T@"NSString",&) iTunesVersion;
@property (T@"NSString",&) mobileDocumentFolder;
@property (T@"NSString",&) photoStreamFolder;
@property (T@"NSString",&) lang;
@property (T@"NSString",&) langForDateTime;
@property (TB) displayAlliOSApps;
@property (TB) displayHiddenFiles;
@property (T@"NSString",&) iTunesConfFile;
@property (T@"NSString",&,V_iTunesLibraryXMLFile) iTunesLibraryXMLFile;
@property (T@"NSString",&,V_iTunesLibraryMediaFolder) iTunesLibraryMediaFolder;
@property (Ti) iTunesLibraryMatchingMode;
@property (TB) contactExportAsSingleVCard;
@property (Ti,V_minDeviceBatteryPercent) minDeviceBatteryPercent;
@property (Ti) minComputerBatteryPercent;
@property (Tq) maxSimultaneousOperations;
@property (TQ) maxSimultaneousConfiguratorOperations;
@property (TQ) maxSimultaneousDownloads;
@property (Ti,V_max) max;
@property (T@"NSString",&) cacheFolder;
@property (T@"NSString",&) tempFolder;
@property (T@"NSString",&) prefFolder;
@property (T@"NSString",R) libraryFolder;
@property (T@"NSString",&) logFolder;
@property (T@"NSString",&) resourcesFolder;
@property (T@"NSString",&) imagesFolder;
@property (T@"NSString",&) toolKitResourceFolder;
@property (T@"NSString",&) defaultBackupRootPath;
@property (TB) isiTunesDontAutomaticallySyncIPods;
@property (TB) isiTunesAutomaticDeviceBackupsDisabled;
@property (TB) isiTunesDeviceBackupsDisabled;
@property (TB) isImageCaptureDisableHotPlug;
@property (TB) hasMigratedBackupDefaultBackupLocationSymlink;
@property (TB) automaticallyEnableWiFiConnectionWhenConnectingNewDevices;
@property (TB) wakeUpDevicesViaWiFiAtLaunch;
@property (TB) ignoreWiFiConnections;
@property (TB) ignoreCompanionProxyConnections;
@property (TB) ignoreRemotePairingConnections;
@property (TB) storeIPSWFilesInLibrary;
@property (TB,V_manageVPPLicenseAutomatically) manageVPPLicenseAutomatically;
@property (TB) presentationModeEnabled;
@property (T@"NSString",&) dataExportDelimiter;
@property (T@"NSString",R) uuid;
@property (T@"NSString",&) accountEmail;
@property (TQ,R) licenseTotalQuantity;
@property (TQ,R) licenseAvailableQuantity;
@property (TI) photoExportQuality;
@property (Ti) photoExportFormat;
@property (TI) videoExportQuality;
@property (Ti) videoExportFormat;
@property (Tq) proxyType;
@property (T@"NSString",&) proxyDomain;
@property (Ti) proxyPort;
@property (T@"NSString",R) proxyLogin;
@property (T@"NSString",R) proxyPassword;
@property (TB) clearCacheFolderOnQuit;
@property (TB) forgetDevicesAndPairingRecordsOnQuit;

/* class methods */
+[DDNAConfig setupLocalizationManager];
+[DDNAConfig sharedInstance];
+[DDNAConfig allocWithZone:];

/* instance methods */
-[DDNAConfig init];
-[DDNAConfig cleanTempFolder];
-[DDNAConfig getDatasetRemainingItems:defaultValue:];
-[DDNAConfig photoExportFormat];
-[DDNAConfig setPhotoExportFormat:];
-[DDNAConfig videoExportFormat];
-[DDNAConfig setVideoExportFormat:];
-[DDNAConfig languageIsChinese];
-[DDNAConfig libraryFolder];
-[DDNAConfig setLibraryFolder:error:];
-[DDNAConfig appName];
-[DDNAConfig setAppName:];
-[DDNAConfig appID];
-[DDNAConfig setAppID:];
-[DDNAConfig appVersion];
-[DDNAConfig setAppVersion:];
-[DDNAConfig licenseType];
-[DDNAConfig setLicenseType:];
-[DDNAConfig isAgent];
-[DDNAConfig setIsAgent:];
-[DDNAConfig isCLI];
-[DDNAConfig setIsCLI:];
-[DDNAConfig trackingEnabled];
-[DDNAConfig setTrackingEnabled:];
-[DDNAConfig seriousMode];
-[DDNAConfig setSeriousMode:];
-[DDNAConfig disableSuccessfulNotifications];
-[DDNAConfig setDisableSuccessfulNotifications:];
-[DDNAConfig darkModeEnabled];
-[DDNAConfig setDarkModeEnabled:];
-[DDNAConfig trackingID];
-[DDNAConfig setTrackingID:];
-[DDNAConfig osVersion];
-[DDNAConfig setOsVersion:];
-[DDNAConfig iTunesVersion];
-[DDNAConfig setITunesVersion:];
-[DDNAConfig mobileDocumentFolder];
-[DDNAConfig setMobileDocumentFolder:];
-[DDNAConfig photoStreamFolder];
-[DDNAConfig setPhotoStreamFolder:];
-[DDNAConfig lang];
-[DDNAConfig setLang:];
-[DDNAConfig langForDateTime];
-[DDNAConfig setLangForDateTime:];
-[DDNAConfig displayAlliOSApps];
-[DDNAConfig setDisplayAlliOSApps:];
-[DDNAConfig displayHiddenFiles];
-[DDNAConfig setDisplayHiddenFiles:];
-[DDNAConfig iTunesConfFile];
-[DDNAConfig setITunesConfFile:];
-[DDNAConfig iTunesLibraryMatchingMode];
-[DDNAConfig setITunesLibraryMatchingMode:];
-[DDNAConfig contactExportAsSingleVCard];
-[DDNAConfig setContactExportAsSingleVCard:];
-[DDNAConfig minComputerBatteryPercent];
-[DDNAConfig setMinComputerBatteryPercent:];
-[DDNAConfig maxSimultaneousOperations];
-[DDNAConfig setMaxSimultaneousOperations:];
-[DDNAConfig maxSimultaneousConfiguratorOperations];
-[DDNAConfig setMaxSimultaneousConfiguratorOperations:];
-[DDNAConfig maxSimultaneousDownloads];
-[DDNAConfig setMaxSimultaneousDownloads:];
-[DDNAConfig cacheFolder];
-[DDNAConfig setCacheFolder:];
-[DDNAConfig tempFolder];
-[DDNAConfig setTempFolder:];
-[DDNAConfig prefFolder];
-[DDNAConfig setPrefFolder:];
-[DDNAConfig logFolder];
-[DDNAConfig setLogFolder:];
-[DDNAConfig resourcesFolder];
-[DDNAConfig setResourcesFolder:];
-[DDNAConfig imagesFolder];
-[DDNAConfig setImagesFolder:];
-[DDNAConfig toolKitResourceFolder];
-[DDNAConfig setToolKitResourceFolder:];
-[DDNAConfig defaultBackupRootPath];
-[DDNAConfig setDefaultBackupRootPath:];
-[DDNAConfig isiTunesDontAutomaticallySyncIPods];
-[DDNAConfig setIsiTunesDontAutomaticallySyncIPods:];
-[DDNAConfig isiTunesAutomaticDeviceBackupsDisabled];
-[DDNAConfig setIsiTunesAutomaticDeviceBackupsDisabled:];
-[DDNAConfig isiTunesDeviceBackupsDisabled];
-[DDNAConfig setIsiTunesDeviceBackupsDisabled:];
-[DDNAConfig isImageCaptureDisableHotPlug];
-[DDNAConfig setIsImageCaptureDisableHotPlug:];
-[DDNAConfig hasMigratedBackupDefaultBackupLocationSymlink];
-[DDNAConfig setHasMigratedBackupDefaultBackupLocationSymlink:];
-[DDNAConfig wakeUpDevicesViaWiFiAtLaunch];
-[DDNAConfig setWakeUpDevicesViaWiFiAtLaunch:];
-[DDNAConfig ignoreWiFiConnections];
-[DDNAConfig setIgnoreWiFiConnections:];
-[DDNAConfig ignoreCompanionProxyConnections];
-[DDNAConfig setIgnoreCompanionProxyConnections:];
-[DDNAConfig ignoreRemotePairingConnections];
-[DDNAConfig setIgnoreRemotePairingConnections:];
-[DDNAConfig storeIPSWFilesInLibrary];
-[DDNAConfig setStoreIPSWFilesInLibrary:];
-[DDNAConfig manageVPPLicensesAutomatically];
-[DDNAConfig setManageVPPLicensesAutomatically:];
-[DDNAConfig presentationModeEnabled];
-[DDNAConfig setPresentationModeEnabled:];
-[DDNAConfig automaticallyEnableWiFiConnectionWhenConnectingNewDevices];
-[DDNAConfig setAutomaticallyEnableWiFiConnectionWhenConnectingNewDevices:];
-[DDNAConfig dataExportDelimiter];
-[DDNAConfig setDataExportDelimiter:];
-[DDNAConfig uuid];
-[DDNAConfig accountEmail];
-[DDNAConfig setAccountEmail:];
-[DDNAConfig licenseTotalQuantity];
-[DDNAConfig licenseAvailableQuantity];
-[DDNAConfig photoExportQuality];
-[DDNAConfig setPhotoExportQuality:];
-[DDNAConfig videoExportQuality];
-[DDNAConfig setVideoExportQuality:];
-[DDNAConfig proxyDomain];
-[DDNAConfig setProxyDomain:];
-[DDNAConfig proxyLogin];
-[DDNAConfig proxyPassword];
-[DDNAConfig proxyPort];
-[DDNAConfig setProxyPort:];
-[DDNAConfig clearCacheFolderOnQuit];
-[DDNAConfig setClearCacheFolderOnQuit:];
-[DDNAConfig forgetDevicesAndPairingRecordsOnQuit];
-[DDNAConfig setForgetDevicesAndPairingRecordsOnQuit:];
-[DDNAConfig proxyType];
-[DDNAConfig setProxyType:];
-[DDNAConfig setProxyAuthentication:password:];
-[DDNAConfig genericBoolPrefForKey:];
-[DDNAConfig setGenericBoolPrefForKey:value:];
-[DDNAConfig genericStringPrefForKey:];
-[DDNAConfig setGenericStringPrefForKey:value:];
-[DDNAConfig genericIntPrefForKey:];
-[DDNAConfig setGenericIntPrefForKey:value:];
-[DDNAConfig iTunesLibraryXMLFile];
-[DDNAConfig setITunesLibraryXMLFile:];
-[DDNAConfig iTunesLibraryMediaFolder];
-[DDNAConfig setITunesLibraryMediaFolder:];
-[DDNAConfig minDeviceBatteryPercent];
-[DDNAConfig setMinDeviceBatteryPercent:];
-[DDNAConfig max];
-[DDNAConfig setMax:];
-[DDNAConfig manageVPPLicenseAutomatically];
-[DDNAConfig setManageVPPLicenseAutomatically:];
-[DDNAConfig inited];
-[DDNAConfig setInited:];

@end

@interface DDNAErrorObject : NSObject <NSCoding> {
    /* instance variables */
    ^v _ddnaCPPErrorObject;
    B _isSerialized;
    @"NSString" _domain;
    q _code;
    @"NSString" _message;
    @"NSString" _stacktrace;
    B _success;
    B _failure;
}

@property (T@"NSString",C) domain;
@property (Tq) code;
@property (T@"NSString",C) message;
@property (TB,R) success;
@property (TB,R) failure;
@property (TB,R,V_isSerialized) isSerialized;

/* class methods */
+[DDNAErrorObject ddnaErrorObjectWithDDNAErrorObject:];
+[DDNAErrorObject ddnaErrorObjectWithDDNAErrorObjectFromUserInfoDictionary:];

/* instance methods */
-[DDNAErrorObject initWithDDNAErrorObject:];
-[DDNAErrorObject initWithDDNAErrorObjectFromUserInfoDictionary:];
-[DDNAErrorObject dealloc];
-[DDNAErrorObject domain];
-[DDNAErrorObject setDomain:];
-[DDNAErrorObject code];
-[DDNAErrorObject setCode:];
-[DDNAErrorObject message];
-[DDNAErrorObject setMessage:];
-[DDNAErrorObject success];
-[DDNAErrorObject failure];
-[DDNAErrorObject description];
-[DDNAErrorObject encodeWithCoder:];
-[DDNAErrorObject initWithCoder:];
-[DDNAErrorObject isSerialized];

@end

@interface DDNAFSMonitor : NSObject {
    /* instance variables */
    @"NSMutableSet" _watchPoints;
    B _running;
    B _threadShouldRestart;
}

@property (T@"NSArray",R) watchPoints;

/* class methods */
+[DDNAFSMonitor defaultFSMonitor];

/* instance methods */
-[DDNAFSMonitor listen];
-[DDNAFSMonitor init];
-[DDNAFSMonitor dealloc];
-[DDNAFSMonitor start];
-[DDNAFSMonitor stop];
-[DDNAFSMonitor addWatchPoint:];
-[DDNAFSMonitor removeWatchPoint:];
-[DDNAFSMonitor watchPoints];

@end

@interface DDNALengthConverter : NSObject {
    /* instance variables */
    @"NSNumberFormatter" _formatter;
}

@property (T@"NSNumberFormatter",&,V_formatter) formatter;

/* class methods */
+[DDNALengthConverter initialize];
+[DDNALengthConverter lengthConverter];

/* instance methods */
-[DDNALengthConverter init];
-[DDNALengthConverter dealloc];
-[DDNALengthConverter userPreferredLengthUnit];
-[DDNALengthConverter convert:fromUnit:toUnit:];
-[DDNALengthConverter convertPoint:toUnit:];
-[DDNALengthConverter convertInch:toUnit:];
-[DDNALengthConverter convertMillimeter:toUnit:];
-[DDNALengthConverter toString:fromUnit:toUnit:];
-[DDNALengthConverter pointToString:toUnit:];
-[DDNALengthConverter inchToString:toUnit:];
-[DDNALengthConverter millimeterToString:toUnit:];
-[DDNALengthConverter toCGFloat:fromUnit:toUnit:];
-[DDNALengthConverter pointToCGFloat:toUnit:];
-[DDNALengthConverter inchToCGFloat:toUnit:];
-[DDNALengthConverter millimeterToCGFloat:toUnit:];
-[DDNALengthConverter formatter];
-[DDNALengthConverter setFormatter:];

@end

@interface DDNAMutableOrderedDictionary : NSMutableDictionary {
    /* instance variables */
    @"NSMutableArray" _keys;
    @"NSMutableArray" _objects;
}

@property (T@"NSMutableArray",&,V_keys) keys;
@property (T@"NSMutableArray",&,V_objects) objects;

/* instance methods */
-[DDNAMutableOrderedDictionary init];
-[DDNAMutableOrderedDictionary initWithObjects:forKeys:count:];
-[DDNAMutableOrderedDictionary initWithCapacity:];
-[DDNAMutableOrderedDictionary dealloc];
-[DDNAMutableOrderedDictionary count];
-[DDNAMutableOrderedDictionary objectForKey:];
-[DDNAMutableOrderedDictionary keyEnumerator];
-[DDNAMutableOrderedDictionary setObject:forKey:];
-[DDNAMutableOrderedDictionary removeObjectForKey:];
-[DDNAMutableOrderedDictionary descriptionWithLocale:];
-[DDNAMutableOrderedDictionary keyAtIndex:];
-[DDNAMutableOrderedDictionary objectAtIndex:];
-[DDNAMutableOrderedDictionary keys];
-[DDNAMutableOrderedDictionary setKeys:];
-[DDNAMutableOrderedDictionary objects];
-[DDNAMutableOrderedDictionary setObjects:];

@end

@interface DDNATextEncoding : NSObject {
    /* instance variables */
    Q _value;
    @"NSString" _name;
}

@property (TQ,V_value) value;
@property (T@"NSString",C,V_name) name;

/* class methods */
+[DDNATextEncoding availableEncodings];

/* instance methods */
-[DDNATextEncoding description];
-[DDNATextEncoding value];
-[DDNATextEncoding setValue:];
-[DDNATextEncoding name];
-[DDNATextEncoding setName:];

@end

@interface DatasetManager : NSObject {
    /* instance variables */
    q _currentUpdateStatus;
    @"<DatasetManagerDelegateProtocol>" _delegate;
    ^v _updater;
    q _lastUpdateStatus;
}

@property (T^v,V_updater) updater;
@property (Tq,V_lastUpdateStatus) lastUpdateStatus;
@property (Tq,V_currentUpdateStatus) currentUpdateStatus;
@property (T@"<DatasetManagerDelegateProtocol>",W,V_delegate) delegate;
@property (T@"NSString",R) wizardImage;

/* instance methods */
-[DatasetManager initWithUpdater:updateNotificationName:];
-[DatasetManager initWithUpdater:updateNotificationNames:];
-[DatasetManager dealloc];
-[DatasetManager wizardImage];
-[DatasetManager updateRequestDidStart:];
-[DatasetManager updateRequestInProgress:];
-[DatasetManager updateRequestDidEnd:];
-[DatasetManager performUpdateRequest];
-[DatasetManager abortUpdateRequest];
-[DatasetManager refreshContentData:];
-[DatasetManager onNotification:];
-[DatasetManager currentUpdateStatus];
-[DatasetManager setCurrentUpdateStatus:];
-[DatasetManager delegate];
-[DatasetManager setDelegate:];
-[DatasetManager updater];
-[DatasetManager setUpdater:];
-[DatasetManager lastUpdateStatus];
-[DatasetManager setLastUpdateStatus:];

@end

@interface DatasetMobileManager : DatasetManager

/* instance methods */
-[DatasetMobileManager shouldReloadData];
-[DatasetMobileManager shouldDisplayPartialBackupScreen];
-[DatasetMobileManager shouldDisplayBackupRefreshScreen];
-[DatasetMobileManager shouldDisplayBackupRefreshScreenWhenUserClicksRefresh];
-[DatasetMobileManager setShouldPerformFullBackup:];
-[DatasetMobileManager ddnaManager];

@end

@interface DatasetViewController : NSViewController <_TtP7iMazing22DataAccessViewDelegate_> {
    /* instance variables */
    B _loading;
    B _didLoad;
    B _hasBeenShown;
    @"Device" _device;
    @"NSView" _datasetToolbarContainer;
    @"iOSDataset" _dataset;
    @"_TtC7iMazing24DataAccessViewController" _dataAccessController;
    @"_TtC7iMazing25DataRefreshViewController" _dataRefreshController;
    @"_TtC7iMazing28DeviceOrBackupViewController" _deviceOrBackupViewController;
    @"_TtC7iMazing28DatasetToolbarViewController" _toolbarViewController;
}

@property (T@"iOSDataset",&,V_dataset) dataset;
@property (T@"Device",&,V_device) device;
@property (T@"_TtC7iMazing24DataAccessViewController",&,V_dataAccessController) dataAccessController;
@property (T@"_TtC7iMazing25DataRefreshViewController",&,V_dataRefreshController) dataRefreshController;
@property (T@"_TtC7iMazing28DeviceOrBackupViewController",&,V_deviceOrBackupViewController) deviceOrBackupViewController;
@property (TB,V_hasBeenShown) hasBeenShown;
@property (T@"_TtC7iMazing28DatasetToolbarViewController",&,V_toolbarViewController) toolbarViewController;
@property (TB,V_loading) loading;
@property (TB,V_didLoad) didLoad;
@property (T@"NSView",&,V_datasetToolbarContainer) datasetToolbarContainer;

/* instance methods */
-[DatasetViewController initWithDataset:device:nibName:bundle:];
-[DatasetViewController viewDidLoad];
-[DatasetViewController viewWillAppear];
-[DatasetViewController viewDidAppear];
-[DatasetViewController viewWillDisappear];
-[DatasetViewController viewDidDisappear];
-[DatasetViewController sortSubviews];
-[DatasetViewController addControllerView:];
-[DatasetViewController refreshContentData:];
-[DatasetViewController toolbarButtons];
-[DatasetViewController loadData];
-[DatasetViewController refreshData];
-[DatasetViewController setShouldPerformFullBackup:];
-[DatasetViewController checkIfNeedsReload];
-[DatasetViewController datasetManagerWantsPartialBackupScreen];
-[DatasetViewController datasetManagerWantsBackupRefreshScreen];
-[DatasetViewController datasetManagerWantsBackupRefreshScreenWhenUserClicksRefresh];
-[DatasetViewController datasetManagerWantsDeviceOrBackupRefreshScreen];
-[DatasetViewController datasetManagerWantsDeviceOrBackupRefreshScreenWhenUserClicksRefresh];
-[DatasetViewController managerLoadState];
-[DatasetViewController modernDatasetManager];
-[DatasetViewController legacyDatasetManager];
-[DatasetViewController iDevice];
-[DatasetViewController device];
-[DatasetViewController setDevice:];
-[DatasetViewController loading];
-[DatasetViewController setLoading:];
-[DatasetViewController didLoad];
-[DatasetViewController setDidLoad:];
-[DatasetViewController datasetToolbarContainer];
-[DatasetViewController setDatasetToolbarContainer:];
-[DatasetViewController dataset];
-[DatasetViewController setDataset:];
-[DatasetViewController dataAccessController];
-[DatasetViewController setDataAccessController:];
-[DatasetViewController dataRefreshController];
-[DatasetViewController setDataRefreshController:];
-[DatasetViewController deviceOrBackupViewController];
-[DatasetViewController setDeviceOrBackupViewController:];
-[DatasetViewController hasBeenShown];
-[DatasetViewController setHasBeenShown:];
-[DatasetViewController toolbarViewController];
-[DatasetViewController setToolbarViewController:];

@end

@interface DateRangePickerViewController : NSViewController {
    /* instance variables */
    @? _onDateChangedCallback;
    B _awake;
    @"PopoverDatePicker" _fromDate;
    @"PopoverDatePicker" _toDate;
}

@property (T@"PopoverDatePicker",&,V_fromDate) fromDate;
@property (T@"PopoverDatePicker",&,V_toDate) toDate;
@property (TB,V_awake) awake;

/* instance methods */
-[DateRangePickerViewController init];
-[DateRangePickerViewController awakeFromNib];
-[DateRangePickerViewController setValues:toDate:];
-[DateRangePickerViewController setMin:];
-[DateRangePickerViewController setMax:];
-[DateRangePickerViewController setLimits:maxDate:];
-[DateRangePickerViewController setpopoverStyle:];
-[DateRangePickerViewController setOnDateChangedCallback:];
-[DateRangePickerViewController getFromDate];
-[DateRangePickerViewController getToDate];
-[DateRangePickerViewController fromChanged:];
-[DateRangePickerViewController toChanged:];
-[DateRangePickerViewController fromDate];
-[DateRangePickerViewController setFromDate:];
-[DateRangePickerViewController toDate];
-[DateRangePickerViewController setToDate:];
-[DateRangePickerViewController awake];
-[DateRangePickerViewController setAwake:];

@end

@interface Device : NSObject {
    /* instance variables */
    ^v _cppObject;
    @"NSString" _uid;
    @"MediaManager" _mediaManagerInstance;
}

@property (T^v,V_cppObject) cppObject;
@property (T@"MediaManager",&,V_mediaManagerInstance) mediaManagerInstance;
@property (T@"NSString",&,V_uid) uid;
@property (T@"MediaManager",R) mediaManager;
@property (T@"StorageManager",R) storageManager;
@property (T@"NSString",R) udid;
@property (T@"NSString",R) name;
@property (T@"NSString",R) displayName;
@property (T@"NSString",R) descriptionText;
@property (T@"NSString",R) groupName;
@property (T@"NSString",R) osName;
@property (T@"NSString",R) newOSUpdateAvailable;
@property (T@"NSString",R) modelNumber;
@property (T@"NSString",R) serialNumber;
@property (T@"NSString",R) productType;
@property (T@"NSString",R) productVersion;
@property (T@"NSString",R) deviceColor;
@property (T@"NSString",R) iconPath;
@property (T@"NSString",R) currentScreenshot;
@property (T@"NSString",R) liveScreenshot;
@property (T@"NSString",R) model;
@property (T@"NSString",R) modelDetails;
@property (T@"NSString",R) fullTextIndex;
@property (T@"NSString",R) lockScreenPath;
@property (T@"NSString",R) homeScreenPath;
@property (T@"NSString",R) cacheFolder;
@property (Tq,R) type;
@property (Tq,R) interfaceType;
@property (Tq,R) status;
@property (Tq,R) reachabilityStatus;
@property (TQ,R) elementSet;
@property (TQ,R) featureSet;
@property (Tq,R) kind;
@property (TQ,R) state;
@property (TB,R) reachable;
@property (T@"NSDate",R) dateLastConnection;
@property (Tq,R) timeLastConnection;
@property (T@"NSDictionary",R) deviceInfos;
@property (T@"NSDictionary",R) deviceAdvancedInfos;
@property (T@"NSArray",R) allDeviceInfos;
@property (TQ,R) availableDiskSpace;
@property (TQ,R) totalDiskSpace;
@property (TQ,R) purgeableDiskSpace;
@property (TQ,R) audioDiskUsage;
@property (TQ,R) audioPurgeableSize;
@property (TQ,R) musicDiskUsage;
@property (TQ,R) musicPurgeableSize;
@property (TQ,R) voiceMemosDiskUsage;
@property (TQ,R) voiceMemosPurgeableSize;
@property (TQ,R) ringtonesDiskUsage;
@property (TQ,R) ringtonesPurgeableSize;
@property (TQ,R) videoDiskUsage;
@property (TQ,R) videoPurgeableSize;
@property (TQ,R) podcastDiskUsage;
@property (TQ,R) podcastPurgeableSize;
@property (TQ,R) photosDiskUsage;
@property (TQ,R) photosPurgeableSize;
@property (TQ,R) appsDiskUsage;
@property (TQ,R) appsPurgeableSize;
@property (TQ,R) booksDiskUsage;
@property (TQ,R) booksPurgeableSize;
@property (TQ,R) logsDiskUsage;
@property (TQ,R) logsPurgeableSize;
@property (TQ,R) proofingDiskUsage;
@property (TQ,R) proofingPurgeableSize;
@property (TQ,R) documentsAndDataDiskUsage;
@property (TQ,R) documentsAndDataPurgeableSize;
@property (TQ,R) totalSystemCapacity;
@property (TQ,R) otherDiskUsage;
@property (TQ,R) otherPurgeableSize;

/* class methods */
+[Device deviceWithDDNADevice:];

/* instance methods */
-[Device init];
-[Device initWithDDNADevice:];
-[Device dealloc];
-[Device description];
-[Device mediaManager];
-[Device storageManager];
-[Device udid];
-[Device modelNumber];
-[Device serialNumber];
-[Device productType];
-[Device productVersion];
-[Device deviceColor];
-[Device model];
-[Device modelDetails];
-[Device name];
-[Device displayName];
-[Device descriptionText];
-[Device groupName];
-[Device osName];
-[Device newOSUpdateAvailable];
-[Device iconPath];
-[Device currentScreenshot];
-[Device liveScreenshot];
-[Device fullTextIndex];
-[Device lockScreenPath];
-[Device homeScreenPath];
-[Device cacheFolder];
-[Device type];
-[Device elementSet];
-[Device featureSet];
-[Device interfaceType];
-[Device status];
-[Device reachabilityStatus];
-[Device kind];
-[Device state];
-[Device reachable];
-[Device dateLastConnection];
-[Device timeLastConnection];
-[Device deviceInfos];
-[Device availableDiskSpace];
-[Device totalDiskSpace];
-[Device purgeableDiskSpace];
-[Device audioDiskUsage];
-[Device audioPurgeableSize];
-[Device musicDiskUsage];
-[Device musicPurgeableSize];
-[Device voiceMemosDiskUsage];
-[Device voiceMemosPurgeableSize];
-[Device ringtonesDiskUsage];
-[Device ringtonesPurgeableSize];
-[Device videoDiskUsage];
-[Device videoPurgeableSize];
-[Device podcastDiskUsage];
-[Device podcastPurgeableSize];
-[Device photosDiskUsage];
-[Device photosPurgeableSize];
-[Device appsDiskUsage];
-[Device appsPurgeableSize];
-[Device booksDiskUsage];
-[Device booksPurgeableSize];
-[Device logsDiskUsage];
-[Device logsPurgeableSize];
-[Device proofingDiskUsage];
-[Device proofingPurgeableSize];
-[Device documentsAndDataDiskUsage];
-[Device documentsAndDataPurgeableSize];
-[Device totalSystemCapacity];
-[Device otherDiskUsage];
-[Device otherPurgeableSize];
-[Device hasArchives];
-[Device deviceAdvancedInfos];
-[Device allDeviceInfos];
-[Device forgetASync];
-[Device screenRectWithOriginAtTop:];
-[Device refreshDeviceInfosASync:force:];
-[Device enableOpenAtLaunch];
-[Device disableOpenAtLaunch];
-[Device isOpenAtLaunchEnabled];
-[Device cppObject];
-[Device setCppObject:];
-[Device uid];
-[Device setUid:];
-[Device mediaManagerInstance];
-[Device setMediaManagerInstance:];

@end

@interface DeviceAction : NSObject {
    /* instance variables */
    B _isQuickAction;
    B _isAllowedOnMultipleDevices;
    B _isSeparator;
    B _isDestructive;
    B _notInTools;
    B _hasBadge;
    @"NSString" _title;
    @"NSString" _subtitle;
    @"NSImage" _icon;
    @"NSString" _iconName;
    @"NSString" _colorIconName;
    ^v _cppObject;
}

@property (T^v,V_cppObject) cppObject;
@property (T@"NSString",&,V_title) title;
@property (T@"NSString",&,V_subtitle) subtitle;
@property (T@"NSImage",&,V_icon) icon;
@property (T@"NSString",&,V_iconName) iconName;
@property (T@"NSString",&,V_colorIconName) colorIconName;
@property (TB,V_isQuickAction) isQuickAction;
@property (TB,V_isAllowedOnMultipleDevices) isAllowedOnMultipleDevices;
@property (TB,V_isSeparator) isSeparator;
@property (TB,V_isDestructive) isDestructive;
@property (TB,V_notInTools) notInTools;
@property (TB,V_hasBadge) hasBadge;

/* class methods */
+[DeviceAction actionsFor:];
+[DeviceAction quickActionsFor:];
+[DeviceAction menuFor:];
+[DeviceAction commonActionsFor:];
+[DeviceAction actions:];
+[DeviceAction actionsForDevice:];
+[DeviceAction quickActionsForDevice:];

/* instance methods */
-[DeviceAction executeASyncWith:];
-[DeviceAction initWithCPPObject:];
-[DeviceAction dealloc];
-[DeviceAction isEqual:];
-[DeviceAction isEqualTo:];
-[DeviceAction executeASync:];
-[DeviceAction matches:];
-[DeviceAction title];
-[DeviceAction setTitle:];
-[DeviceAction subtitle];
-[DeviceAction setSubtitle:];
-[DeviceAction icon];
-[DeviceAction setIcon:];
-[DeviceAction iconName];
-[DeviceAction setIconName:];
-[DeviceAction colorIconName];
-[DeviceAction setColorIconName:];
-[DeviceAction isQuickAction];
-[DeviceAction setIsQuickAction:];
-[DeviceAction isAllowedOnMultipleDevices];
-[DeviceAction setIsAllowedOnMultipleDevices:];
-[DeviceAction isSeparator];
-[DeviceAction setIsSeparator:];
-[DeviceAction isDestructive];
-[DeviceAction setIsDestructive:];
-[DeviceAction notInTools];
-[DeviceAction setNotInTools:];
-[DeviceAction hasBadge];
-[DeviceAction setHasBadge:];
-[DeviceAction cppObject];
-[DeviceAction setCppObject:];

@end

@interface DeviceAdvancedInfoViewController : NSViewController <NSTextFieldDelegate> {
    /* instance variables */
    B _awake;
    B _iOS;
    @"Device" _device;
    @"NSArray" _advancedInfos;
    @"NSArrayController" _arrayController;
    @"NSTextField" _searchField;
}

@property (TB,V_awake) awake;
@property (TB,V_iOS) iOS;
@property (T@"Device",&,V_device) device;
@property (T@"NSArray",&,V_advancedInfos) advancedInfos;
@property (T@"NSArrayController",&,V_arrayController) arrayController;
@property (T@"NSTextField",&,V_searchField) searchField;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[DeviceAdvancedInfoViewController init];
-[DeviceAdvancedInfoViewController initWithDevice:];
-[DeviceAdvancedInfoViewController dealloc];
-[DeviceAdvancedInfoViewController awakeFromNib];
-[DeviceAdvancedInfoViewController controlTextDidChange:];
-[DeviceAdvancedInfoViewController refreshDeviceInfo:];
-[DeviceAdvancedInfoViewController refresh];
-[DeviceAdvancedInfoViewController exportInfo:];
-[DeviceAdvancedInfoViewController device];
-[DeviceAdvancedInfoViewController setDevice:];
-[DeviceAdvancedInfoViewController awake];
-[DeviceAdvancedInfoViewController setAwake:];
-[DeviceAdvancedInfoViewController iOS];
-[DeviceAdvancedInfoViewController setIOS:];
-[DeviceAdvancedInfoViewController advancedInfos];
-[DeviceAdvancedInfoViewController setAdvancedInfos:];
-[DeviceAdvancedInfoViewController arrayController];
-[DeviceAdvancedInfoViewController setArrayController:];
-[DeviceAdvancedInfoViewController searchField];
-[DeviceAdvancedInfoViewController setSearchField:];

@end

@interface DeviceConsoleSettingsWindowController : NSWindowController {
    /* instance variables */
    @"NSString" _fontDescription;
    @"NSColor" _backgroundColor;
    @"NSColor" _foregroundColor;
    q _selectedTheme;
}

@property (T@"NSString",&,V_fontDescription) fontDescription;
@property (T@"NSColor",&,V_backgroundColor) backgroundColor;
@property (T@"NSColor",&,V_foregroundColor) foregroundColor;
@property (Tq,V_selectedTheme) selectedTheme;

/* instance methods */
-[DeviceConsoleSettingsWindowController init];
-[DeviceConsoleSettingsWindowController dealloc];
-[DeviceConsoleSettingsWindowController windowDidLoad];
-[DeviceConsoleSettingsWindowController observeValueForKeyPath:ofObject:change:context:];
-[DeviceConsoleSettingsWindowController update];
-[DeviceConsoleSettingsWindowController done:];
-[DeviceConsoleSettingsWindowController chooseFont:];
-[DeviceConsoleSettingsWindowController changeFont:];
-[DeviceConsoleSettingsWindowController setTheme:];
-[DeviceConsoleSettingsWindowController fontDescription];
-[DeviceConsoleSettingsWindowController setFontDescription:];
-[DeviceConsoleSettingsWindowController backgroundColor];
-[DeviceConsoleSettingsWindowController setBackgroundColor:];
-[DeviceConsoleSettingsWindowController foregroundColor];
-[DeviceConsoleSettingsWindowController setForegroundColor:];
-[DeviceConsoleSettingsWindowController selectedTheme];
-[DeviceConsoleSettingsWindowController setSelectedTheme:];

@end

@interface DeviceConsoleWindowController : NSWindowController {
    /* instance variables */
    B _listening;
    B _editable;
    B _paused;
    @"iOSDevice" _device;
    @"DeviceDetailViewController" _deviceDetailViewController;
    @"NSString" _searchText;
    @"NSMutableArray" _messages;
    @"NSMutableArray" _pendingMessages;
    @"NSMutableArray" _newerMessages;
    @"NSDictionary" _attributes;
    @"DeviceConsoleSettingsWindowController" _settingsWindowController;
    @"NSString" _pauseButtonLabel;
    @"NSView" _deviceView;
    @"NSTextView" _textView;
    @"NSTextField" _searchField;
}

@property (T@"iOSDevice",&,V_device) device;
@property (T@"DeviceDetailViewController",&,V_deviceDetailViewController) deviceDetailViewController;
@property (T@"NSString",&,V_searchText) searchText;
@property (T@"NSMutableArray",&,V_messages) messages;
@property (T@"NSMutableArray",&,V_pendingMessages) pendingMessages;
@property (T@"NSMutableArray",&,V_newerMessages) newerMessages;
@property (T@"NSDictionary",&,V_attributes) attributes;
@property (T@"DeviceConsoleSettingsWindowController",&,V_settingsWindowController) settingsWindowController;
@property (T@"NSString",&,V_pauseButtonLabel) pauseButtonLabel;
@property (TB,V_listening) listening;
@property (TB,V_editable) editable;
@property (TB,V_paused) paused;
@property (T@"NSView",&,V_deviceView) deviceView;
@property (T@"NSTextView",&,V_textView) textView;
@property (T@"NSTextField",&,V_searchField) searchField;

/* class methods */
+[DeviceConsoleWindowController controllerForDevice:];

/* instance methods */
-[DeviceConsoleWindowController init];
-[DeviceConsoleWindowController initWithDevice:];
-[DeviceConsoleWindowController dealloc];
-[DeviceConsoleWindowController observeValueForKeyPath:ofObject:change:context:];
-[DeviceConsoleWindowController windowDidLoad];
-[DeviceConsoleWindowController windowWillClose:];
-[DeviceConsoleWindowController windowDidBecomeKey:];
-[DeviceConsoleWindowController deviceNotification:];
-[DeviceConsoleWindowController updateSettings];
-[DeviceConsoleWindowController refresh];
-[DeviceConsoleWindowController scrollToEnd];
-[DeviceConsoleWindowController print:];
-[DeviceConsoleWindowController save:];
-[DeviceConsoleWindowController clear:];
-[DeviceConsoleWindowController pause:];
-[DeviceConsoleWindowController showSettings:];
-[DeviceConsoleWindowController device];
-[DeviceConsoleWindowController setDevice:];
-[DeviceConsoleWindowController deviceDetailViewController];
-[DeviceConsoleWindowController setDeviceDetailViewController:];
-[DeviceConsoleWindowController searchText];
-[DeviceConsoleWindowController setSearchText:];
-[DeviceConsoleWindowController messages];
-[DeviceConsoleWindowController setMessages:];
-[DeviceConsoleWindowController pendingMessages];
-[DeviceConsoleWindowController setPendingMessages:];
-[DeviceConsoleWindowController newerMessages];
-[DeviceConsoleWindowController setNewerMessages:];
-[DeviceConsoleWindowController attributes];
-[DeviceConsoleWindowController setAttributes:];
-[DeviceConsoleWindowController settingsWindowController];
-[DeviceConsoleWindowController setSettingsWindowController:];
-[DeviceConsoleWindowController pauseButtonLabel];
-[DeviceConsoleWindowController setPauseButtonLabel:];
-[DeviceConsoleWindowController listening];
-[DeviceConsoleWindowController setListening:];
-[DeviceConsoleWindowController editable];
-[DeviceConsoleWindowController setEditable:];
-[DeviceConsoleWindowController paused];
-[DeviceConsoleWindowController setPaused:];
-[DeviceConsoleWindowController deviceView];
-[DeviceConsoleWindowController setDeviceView:];
-[DeviceConsoleWindowController textView];
-[DeviceConsoleWindowController setTextView:];
-[DeviceConsoleWindowController searchField];
-[DeviceConsoleWindowController setSearchField:];

@end

@interface DeviceContentViewController : DatasetViewController <DatasetManagerDelegateProtocol, NSMenuDelegate, MainWindowDeviceContentViewController> {
    /* instance variables */
    @"NSView" _contentViewContainer;
    @"NSView" _contentView;
    @"LegacyDataFilterCollection" _dataFilterCollection;
    @"LegacyDataFilter" _searchDataFilter;
    @"LegacyDataFilterCriteriaTextSearch" _searchDataFilterCriteria;
    @"NSString" _statusText;
    @"NSString" _searchString;
    B hasRefreshFeature;
    B hasQuickLookFeature;
    B hasGoBackOrForwardFeature;
    B hasChangeViewFeature;
    B hasChangePathFeature;
    B hasSearchFeature;
    B hasSliderFeature;
    B _awake;
    @"NSString" searchPlaceholder;
    @"UserInteractionScreenData" screenData;
    @"_TtC7iMazing25DatasetLoadViewController" _loadViewController;
    @"NSMenu" _contextMenu;
    @"NSMenuItem" _contextMenuOpenWithItem;
}

@property (TB,V_awake) awake;
@property (T@"_TtC7iMazing25DatasetLoadViewController",&,V_loadViewController) loadViewController;
@property (T@"NSView",&) contentView;
@property (T@"NSMenu",&,V_contextMenu) contextMenu;
@property (T@"NSMenuItem",&,V_contextMenuOpenWithItem) contextMenuOpenWithItem;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;
@property (T@"_TtC7iMazing20MainWindowController") mainWindowController;
@property (T@"NSString",C,V_statusText) statusText;
@property (T@"NSString",C,V_searchString) searchString;
@property (TB,VhasRefreshFeature) hasRefreshFeature;
@property (TB,VhasQuickLookFeature) hasQuickLookFeature;
@property (TB,VhasGoBackOrForwardFeature) hasGoBackOrForwardFeature;
@property (TB,VhasChangeViewFeature) hasChangeViewFeature;
@property (TB,VhasChangePathFeature) hasChangePathFeature;
@property (TB,VhasSearchFeature) hasSearchFeature;
@property (TB,VhasSliderFeature) hasSliderFeature;
@property (T@"UserInteractionScreenData",&,VscreenData) screenData;
@property (T@"NSString",&,VsearchPlaceholder) searchPlaceholder;
@property (T@"NSString",R,D) helpURL;
@property (T@"NSString",?,R) deviceUID;

/* instance methods */
-[DeviceContentViewController showCopyConfirmationAlertSheetAllOrNothing];
-[DeviceContentViewController showCopyConfirmationAlertSheetAllOrSelected];
-[DeviceContentViewController showCopyOpenPanelUsingCompletionHandler:];
-[DeviceContentViewController showFileSavePanelWithProposedFileName:usingCompletionHandler:];
-[DeviceContentViewController showFilesSelectionPanelUsingCompletionHandler:];
-[DeviceContentViewController showFilesSelectionPanelUsingCompletionHandler:allowedFileTypes:];
-[DeviceContentViewController updateWindowStatusText:];
-[DeviceContentViewController performDoubleAction:];
-[DeviceContentViewController copyToComputer:];
-[DeviceContentViewController copyToDevice:];
-[DeviceContentViewController open:];
-[DeviceContentViewController openWith:];
-[DeviceContentViewController quickLook:];
-[DeviceContentViewController rename:];
-[DeviceContentViewController deleteSelectedItems:];
-[DeviceContentViewController newFolder:];
-[DeviceContentViewController newShortcut:];
-[DeviceContentViewController getInfo:];
-[DeviceContentViewController undo:];
-[DeviceContentViewController redo:];
-[DeviceContentViewController copy:];
-[DeviceContentViewController paste:];
-[DeviceContentViewController selectAll:];
-[DeviceContentViewController mediaCopyToFolder:];
-[DeviceContentViewController mediaCopyToiTunes:];
-[DeviceContentViewController mediaImportFromFolder:];
-[DeviceContentViewController validateMenuItem:];
-[DeviceContentViewController validateToolbarItem:];
-[DeviceContentViewController initWithDataset:device:];
-[DeviceContentViewController dealloc];
-[DeviceContentViewController mainWindowController];
-[DeviceContentViewController setMainWindowController:];
-[DeviceContentViewController observeValueForKeyPath:ofObject:change:context:];
-[DeviceContentViewController setView:];
-[DeviceContentViewController contentView];
-[DeviceContentViewController setContentView:];
-[DeviceContentViewController willBecomeActive];
-[DeviceContentViewController didBecomeActive];
-[DeviceContentViewController willResignActive];
-[DeviceContentViewController didResignActive];
-[DeviceContentViewController willBeDisplayedByMainWindowController];
-[DeviceContentViewController hasBeenDisplayedByMainWindowController];
-[DeviceContentViewController willBeRemovedByMainWindowController];
-[DeviceContentViewController hasBeenRemovedByMainWindowController];
-[DeviceContentViewController updateDisplay];
-[DeviceContentViewController datasetManager:updateDidStart:];
-[DeviceContentViewController datasetManager:updateInProgress:];
-[DeviceContentViewController datasetManager:updateDidEnd:];
-[DeviceContentViewController datasetManager:updateDidFailWithError:notification:];
-[DeviceContentViewController loadData];
-[DeviceContentViewController refreshData];
-[DeviceContentViewController deviceUID];
-[DeviceContentViewController helpURL];
-[DeviceContentViewController setAsEmpty];
-[DeviceContentViewController showProgressIndicatorHudViewUsingDismissBlock:];
-[DeviceContentViewController hideProgressIndicatorHudView];
-[DeviceContentViewController statusText];
-[DeviceContentViewController setStatusText:];
-[DeviceContentViewController searchString];
-[DeviceContentViewController setSearchString:];
-[DeviceContentViewController searchPlaceholder];
-[DeviceContentViewController setSearchPlaceholder:];
-[DeviceContentViewController hasRefreshFeature];
-[DeviceContentViewController setHasRefreshFeature:];
-[DeviceContentViewController hasQuickLookFeature];
-[DeviceContentViewController setHasQuickLookFeature:];
-[DeviceContentViewController hasGoBackOrForwardFeature];
-[DeviceContentViewController setHasGoBackOrForwardFeature:];
-[DeviceContentViewController hasChangeViewFeature];
-[DeviceContentViewController setHasChangeViewFeature:];
-[DeviceContentViewController hasChangePathFeature];
-[DeviceContentViewController setHasChangePathFeature:];
-[DeviceContentViewController hasSearchFeature];
-[DeviceContentViewController setHasSearchFeature:];
-[DeviceContentViewController hasSliderFeature];
-[DeviceContentViewController setHasSliderFeature:];
-[DeviceContentViewController screenData];
-[DeviceContentViewController setScreenData:];
-[DeviceContentViewController loadViewController];
-[DeviceContentViewController setLoadViewController:];
-[DeviceContentViewController contextMenu];
-[DeviceContentViewController setContextMenu:];
-[DeviceContentViewController contextMenuOpenWithItem];
-[DeviceContentViewController setContextMenuOpenWithItem:];
-[DeviceContentViewController awake];
-[DeviceContentViewController setAwake:];

@end

@interface DeviceDetailViewController : NSViewController {
    /* instance variables */
    B _awake;
    B _wakingUp;
    @"Device" _device;
    @"iOSDevice" _iOSDevice;
    @"NSMutableArray" _infos;
    @"NSImage" _deviceImage;
    @"NSString" _detailsLabel;
    @"DeviceAdvancedInfoViewController" _infoPopoverViewController;
    @"NSPopover" _infoPopover;
    @"NSButton" _infoButton;
    @"NSArrayController" _infosArrayController;
    @"NSTableView" _infosTableView;
}

@property (TB,V_awake) awake;
@property (T@"Device",&,V_device) device;
@property (T@"iOSDevice",&,V_iOSDevice) iOSDevice;
@property (T@"NSMutableArray",&,V_infos) infos;
@property (T@"NSImage",&,V_deviceImage) deviceImage;
@property (TB,V_wakingUp) wakingUp;
@property (T@"NSString",V_detailsLabel) detailsLabel;
@property (T@"DeviceAdvancedInfoViewController",&,V_infoPopoverViewController) infoPopoverViewController;
@property (T@"NSPopover",&,V_infoPopover) infoPopover;
@property (T@"NSButton",&,V_infoButton) infoButton;
@property (T@"NSArrayController",&,V_infosArrayController) infosArrayController;
@property (T@"NSTableView",&,V_infosTableView) infosTableView;

/* instance methods */
-[DeviceDetailViewController init];
-[DeviceDetailViewController initWithDevice:];
-[DeviceDetailViewController dealloc];
-[DeviceDetailViewController awakeFromNib];
-[DeviceDetailViewController refreshDeviceInfo:];
-[DeviceDetailViewController refresh];
-[DeviceDetailViewController showInfoPopover:];
-[DeviceDetailViewController awake];
-[DeviceDetailViewController setAwake:];
-[DeviceDetailViewController device];
-[DeviceDetailViewController setDevice:];
-[DeviceDetailViewController iOSDevice];
-[DeviceDetailViewController setIOSDevice:];
-[DeviceDetailViewController infos];
-[DeviceDetailViewController setInfos:];
-[DeviceDetailViewController deviceImage];
-[DeviceDetailViewController setDeviceImage:];
-[DeviceDetailViewController wakingUp];
-[DeviceDetailViewController setWakingUp:];
-[DeviceDetailViewController detailsLabel];
-[DeviceDetailViewController setDetailsLabel:];
-[DeviceDetailViewController infoPopoverViewController];
-[DeviceDetailViewController setInfoPopoverViewController:];
-[DeviceDetailViewController infoPopover];
-[DeviceDetailViewController setInfoPopover:];
-[DeviceDetailViewController infoButton];
-[DeviceDetailViewController setInfoButton:];
-[DeviceDetailViewController infosArrayController];
-[DeviceDetailViewController setInfosArrayController:];
-[DeviceDetailViewController infosTableView];
-[DeviceDetailViewController setInfosTableView:];

@end

@interface DeviceIcon : NSObject

/* class methods */
+[DeviceIcon cache];
+[DeviceIcon setCache:];
+[DeviceIcon queue];
+[DeviceIcon setQueue:];
+[DeviceIcon sketchyIconForDevice:];
+[DeviceIcon modelIconForDevice:];
+[DeviceIcon accessoryImageForDevice:];
+[DeviceIcon accessoryImageForDeviceKind:reachability:];
+[DeviceIcon accessoryImageTooltipForDevice:];
+[DeviceIcon accessoryImageSortIdForDevice:];
+[DeviceIcon iconForDevice:screenshotType:];
+[DeviceIcon iconForDevice:screenshotType:live:];
+[DeviceIcon iconForDevice:info:];
+[DeviceIcon iconForDevice:info:screenshotType:];
+[DeviceIcon iconForDevice:screenshotType:completion:];
+[DeviceIcon iconForDevice:screenshotType:live:completion:];
+[DeviceIcon iconForDevice:info:completion:];
+[DeviceIcon iconForDevice:info:screenshotType:completion:];
+[DeviceIcon iconForDevice:completion:];
+[DeviceIcon iconForDevice:live:completion:];
+[DeviceIcon clearImageFor:];
+[DeviceIcon drawBackupScreenWithScreen:for:];
+[DeviceIcon drawScreenWithScreen:for:];
+[DeviceIcon callCompletion:queue:provider:];

@end

@interface DeviceInfoDetailItem : NSObject {
    /* instance variables */
    @"NSString" _text;
    @"NSImage" _icon;
    @"NSString" _tooltip;
}

@property (T@"NSString",&,V_text) text;
@property (T@"NSImage",&,V_icon) icon;
@property (T@"NSString",&,V_tooltip) tooltip;

/* instance methods */
-[DeviceInfoDetailItem text];
-[DeviceInfoDetailItem setText:];
-[DeviceInfoDetailItem icon];
-[DeviceInfoDetailItem setIcon:];
-[DeviceInfoDetailItem tooltip];
-[DeviceInfoDetailItem setTooltip:];

@end

@interface DeviceManager : NSObject {
    /* instance variables */
    B _deviceCacheLoaded;
    B _inited;
    ^v _deviceManager;
}

@property (TB,V_inited) inited;
@property (T^v,V_deviceManager) deviceManager;
@property (TB,N,V_deviceCacheLoaded) deviceCacheLoaded;

/* class methods */
+[DeviceManager sharedInstance];
+[DeviceManager allocWithZone:];

/* instance methods */
-[DeviceManager init];
-[DeviceManager dealloc];
-[DeviceManager exit];
-[DeviceManager startNotifications];
-[DeviceManager deviceForUID:];
-[DeviceManager iOSDeviceForUDID:];
-[DeviceManager iOSDeviceForSerialNumber:];
-[DeviceManager registeriPodDeviceWithUDID:name:mountPoint:];
-[DeviceManager unregisteriPodDeviceWithUDID:];
-[DeviceManager getAlliOSDevices];
-[DeviceManager wakeUpAllDevicesASync];
-[DeviceManager removeAllPairingRecords];
-[DeviceManager deviceOperationDispatcher];
-[DeviceManager backupDevices:];
-[DeviceManager updateOSforDevices:];
-[DeviceManager eraseDevices:];
-[DeviceManager restartDevices:];
-[DeviceManager shutdownDevices:];
-[DeviceManager forgetDevices:];
-[DeviceManager exportDeviceInfos:toPath:];
-[DeviceManager exportDeviceSerials:toPath:];
-[DeviceManager disableSingleAppModeOfDevices:];
-[DeviceManager refreshAllConnectedDevicesInfo];
-[DeviceManager deviceCacheLoaded];
-[DeviceManager setDeviceCacheLoaded:];
-[DeviceManager inited];
-[DeviceManager setInited:];
-[DeviceManager deviceManager];
-[DeviceManager setDeviceManager:];

@end

@interface DeviceOperationDispatcher : CoreOperation {
    /* instance variables */
    ^v _cppDispatcher;
}

@property (T^v,N,V_cppDispatcher) cppDispatcher;

/* instance methods */
-[DeviceOperationDispatcher initWithCPPObject:];
-[DeviceOperationDispatcher setOptions:maxOps:applyToNew:showDialogs:];
-[DeviceOperationDispatcher maxSimultaneousConfiguratorOperations];
-[DeviceOperationDispatcher showDialogs];
-[DeviceOperationDispatcher applyToOtherNewConnectedDevices];
-[DeviceOperationDispatcher logPath];
-[DeviceOperationDispatcher iterateDeviceOperations:];
-[DeviceOperationDispatcher cancelOrRemoveOperationForDeviceUDIDs:];
-[DeviceOperationDispatcher clearInactiveDevices];
-[DeviceOperationDispatcher cppDispatcher];
-[DeviceOperationDispatcher setCppDispatcher:];

@end

@interface DeviceTableViewDataSource : NSObject <NSTableViewDataSource, DragOutTableViewDelegate, DragOutTableViewDataProvider> {
    /* instance variables */
    @"LegacyDataFilter" _dataFilter;
    @"DragOutInfo" _dragOutInfo;
}

@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[DeviceTableViewDataSource initWithDataFilter:];
-[DeviceTableViewDataSource dealloc];
-[DeviceTableViewDataSource numberOfRowsInTableView:];
-[DeviceTableViewDataSource tableView:sortDescriptorsDidChange:];
-[DeviceTableViewDataSource resetSelectionOfTableView:];
-[DeviceTableViewDataSource dragOutTableView:canDragRowsWithIndexes:atPoint:];
-[DeviceTableViewDataSource tableView:writeRowsWithIndexes:toPasteboard:];
-[DeviceTableViewDataSource dragOutTableViewNumberOfDraggedItems:];
-[DeviceTableViewDataSource tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:];
-[DeviceTableViewDataSource dragOutTableView:draggingSession:sourceOperationMaskForDraggingContext:];
-[DeviceTableViewDataSource dragOutTableView:draggedImage:endedAt:operation:];
-[DeviceTableViewDataSource dragOutTableView:draggingSession:endedAtPoint:operation:];
-[DeviceTableViewDataSource dragOutTableView:proceedFilesPromiseUsingDragOutInfo:];
-[DeviceTableViewDataSource dragOutTableView:provideStringForType:];
-[DeviceTableViewDataSource dragOutTableView:provideDataForType:];

@end

@interface DeviceTableViewDelegate : NSObject <NSTableViewDelegate> {
    /* instance variables */
    @"LegacyDataFilter" _dataFilter;
}

@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[DeviceTableViewDelegate initWithDataFilter:];
-[DeviceTableViewDelegate dealloc];
-[DeviceTableViewDelegate tableViewSelectionDidChange:];
-[DeviceTableViewDelegate tableView:shouldTypeSelectForEvent:withCurrentSearchString:];

@end

@interface DeviceViewSplitViewDelegate : NSObject <NSSplitViewDelegate> {
    /* instance variables */
    d _maximum;
    d _minimum;
}

@property (Td,V_maximum) maximum;
@property (Td,V_minimum) minimum;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[DeviceViewSplitViewDelegate splitView:constrainMaxCoordinate:ofSubviewAt:];
-[DeviceViewSplitViewDelegate splitView:constrainMinCoordinate:ofSubviewAt:];
-[DeviceViewSplitViewDelegate maximum];
-[DeviceViewSplitViewDelegate setMaximum:];
-[DeviceViewSplitViewDelegate minimum];
-[DeviceViewSplitViewDelegate setMinimum:];

@end

@interface DisablingTextField : NSTextField {
    /* instance variables */
    @"NSColor" _activeTextColor;
}

@property (T@"NSColor",&,V_activeTextColor) activeTextColor;

/* instance methods */
-[DisablingTextField setTextColor:];
-[DisablingTextField setEnabled:];
-[DisablingTextField activeTextColor];
-[DisablingTextField setActiveTextColor:];

@end

@interface DragInInfo : NSObject {
    /* instance variables */
    @"NSArray" _selectedObjects;
    @ _targetItem;
    @"NSView" _destinationView;
    q _rowIndex;
    q _columnIndex;
}

@property (T@"NSArray",&,V_selectedObjects) selectedObjects;
@property (T@,&,V_targetItem) targetItem;
@property (T@"NSView",&,V_destinationView) destinationView;
@property (Tq,V_rowIndex) rowIndex;
@property (Tq,V_columnIndex) columnIndex;

/* class methods */
+[DragInInfo dragInInfoWithSelectedObjects:destinationView:targetItem:];

/* instance methods */
-[DragInInfo init];
-[DragInInfo initWithSelectedObjects:destinationView:targetItem:];
-[DragInInfo dealloc];
-[DragInInfo reset];
-[DragInInfo selectedObjects];
-[DragInInfo setSelectedObjects:];
-[DragInInfo targetItem];
-[DragInInfo setTargetItem:];
-[DragInInfo destinationView];
-[DragInInfo setDestinationView:];
-[DragInInfo rowIndex];
-[DragInInfo setRowIndex:];
-[DragInInfo columnIndex];
-[DragInInfo setColumnIndex:];

@end

@interface DragOutInfo : NSObject {
    /* instance variables */
    @"NSArray" _selectedObjects;
    @"NSURL" _dropDestination;
    Q _operation;
}

@property (T@"NSArray",&,V_selectedObjects) selectedObjects;
@property (T@"NSURL",&,V_dropDestination) dropDestination;
@property (TQ,V_operation) operation;

/* class methods */
+[DragOutInfo dragOutInfoWithSelectedObjects:dropDestination:];

/* instance methods */
-[DragOutInfo init];
-[DragOutInfo initWithSelectedObjects:dropDestination:];
-[DragOutInfo dealloc];
-[DragOutInfo reset];
-[DragOutInfo selectedObjects];
-[DragOutInfo setSelectedObjects:];
-[DragOutInfo dropDestination];
-[DragOutInfo setDropDestination:];
-[DragOutInfo operation];
-[DragOutInfo setOperation:];

@end

@interface DragOutTableView : VKTableView <NSPasteboardItemDataProvider> {
    /* instance variables */
    @"NSImage" _draggingIcon;
    @"NSImage" _badgeIcon;
    Q _draggingSourceOperationMaskForLocal;
    Q _draggingSourceOperationMaskForNonLocal;
    @"<DragOutTableViewDelegate>" _dragOutTableViewDelegate;
    B _dragOutUsesFilesPromise;
    @"NSMutableDictionary" _providersForDataType;
}

@property (T@"NSImage",&,V_draggingIcon) draggingIcon;
@property (T@"NSImage",&) badgeIcon;
@property (TQ,R,V_draggingSourceOperationMaskForNonLocal) draggingSourceOperationMaskForNonLocal;
@property (T@"<DragOutTableViewDelegate>",V_dragOutTableViewDelegate) dragOutTableViewDelegate;
@property (TB,V_dragOutUsesFilesPromise) dragOutUsesFilesPromise;
@property (T@"NSArray",R) providedDataTypes;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* class methods */
+[DragOutTableView initialize];

/* instance methods */
-[DragOutTableView initWithCoder:];
-[DragOutTableView initWithFrame:];
-[DragOutTableView dealloc];
-[DragOutTableView badgeIcon];
-[DragOutTableView setBadgeIcon:];
-[DragOutTableView stringProviderForType:];
-[DragOutTableView setStringProvider:forType:];
-[DragOutTableView dataProviderForType:];
-[DragOutTableView setDataProvider:forType:];
-[DragOutTableView providedDataTypes];
-[DragOutTableView pasteboard:item:provideDataForType:];
-[DragOutTableView mouseDown:];
-[DragOutTableView setDraggingSourceOperationMask:forLocal:];
-[DragOutTableView canDragRowsWithIndexes:atPoint:];
-[DragOutTableView dragImageForRowsWithIndexes:tableColumns:event:offset:];
-[DragOutTableView draggingSession:sourceOperationMaskForDraggingContext:];
-[DragOutTableView draggingSession:willBeginAtPoint:];
-[DragOutTableView draggingSession:movedToPoint:];
-[DragOutTableView draggingSession:endedAtPoint:operation:];
-[DragOutTableView ignoreModifierKeysForDraggingSession:];
-[DragOutTableView namesOfPromisedFilesDroppedAtDestination:];
-[DragOutTableView draggingIcon];
-[DragOutTableView setDraggingIcon:];
-[DragOutTableView draggingSourceOperationMaskForNonLocal];
-[DragOutTableView dragOutTableViewDelegate];
-[DragOutTableView setDragOutTableViewDelegate:];
-[DragOutTableView dragOutUsesFilesPromise];
-[DragOutTableView setDragOutUsesFilesPromise:];

@end

@interface DraggedIcon : NSObject {
    /* instance variables */
    @"NSImage" _icon;
    @"NSImage" _badge;
    {CGSize="width"d"height"d} _iconSize;
    {CGSize="width"d"height"d} _badgeSize;
    @"NSString" _counterFontName;
    @"NSColor" _counterFontColor;
    {CGPoint="x"d"y"d} _dragPoint;
    {CGSize="width"d"height"d} _size;
}

@property (T@"NSImage",&,V_icon) icon;
@property (T@"NSImage",&,V_badge) badge;
@property (T{CGSize=dd}) iconSize;
@property (T{CGSize=dd}) badgeSize;
@property (T@"NSString",&) counterFontName;
@property (T@"NSColor",&) counterFontColor;
@property (T{CGSize=dd},R) size;

/* class methods */
+[DraggedIcon draggedIconWithIcon:badge:];

/* instance methods */
-[DraggedIcon initWithIcon:badge:];
-[DraggedIcon dealloc];
-[DraggedIcon iconSize];
-[DraggedIcon setIconSize:];
-[DraggedIcon badgeSize];
-[DraggedIcon setBadgeSize:];
-[DraggedIcon counterFontName];
-[DraggedIcon setCounterFontName:];
-[DraggedIcon counterFontColor];
-[DraggedIcon setCounterFontColor:];
-[DraggedIcon imageCountNumber:fontSize:];
-[DraggedIcon size];
-[DraggedIcon icon];
-[DraggedIcon setIcon:];
-[DraggedIcon badge];
-[DraggedIcon setBadge:];

@end

@interface DraggingHandler : NSObject <NSPasteboardItemDataProvider> {
    /* instance variables */
    @"NSView" _ownerView;
    @"NSImage" _draggingIcon;
    @"NSImage" _badgeIcon;
    Q _draggingSourceOperationMaskForLocal;
    Q _draggingSourceOperationMaskForNonLocal;
    @"<DraggingHandlerDelegate>" _draggingHandlerDelegate;
    @"<DraggingHandlerDataProvider>" _draggingHandlerDataProvider;
    @? _draggingHandlerActionBlock;
    B _dragOutUsesFilesPromise;
    @"NSMutableDictionary" _providersForDataType;
    @"DragOutInfo" _dragOutInfo;
    @"DragInInfo" _dragInInfo;
    Q _draggingOperation;
    i _draggingType;
    B _isDragging;
    @ _lastTargetItem;
}

@property (T@"NSView",R,V_ownerView) ownerView;
@property (T@"NSImage",&,V_draggingIcon) draggingIcon;
@property (T@"NSImage",&) badgeIcon;
@property (TQ,R,V_draggingSourceOperationMaskForLocal) draggingSourceOperationMaskForLocal;
@property (TQ,R,V_draggingSourceOperationMaskForNonLocal) draggingSourceOperationMaskForNonLocal;
@property (T@"<DraggingHandlerDelegate>",V_draggingHandlerDelegate) draggingHandlerDelegate;
@property (T@"<DraggingHandlerDataProvider>",V_draggingHandlerDataProvider) draggingHandlerDataProvider;
@property (T@?,C,V_draggingHandlerActionBlock) draggingHandlerActionBlock;
@property (TB,V_dragOutUsesFilesPromise) dragOutUsesFilesPromise;
@property (TB,V_isDragging) isDragging;
@property (T@"NSArray",R) providedDataTypes;
@property (T@"DragOutInfo",R,V_dragOutInfo) dragOutInfo;
@property (T@"DragInInfo",R,V_dragInInfo) dragInInfo;
@property (TQ,V_draggingOperation) draggingOperation;
@property (Ti,V_draggingType) draggingType;
@property (T@,V_lastTargetItem) lastTargetItem;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* class methods */
+[DraggingHandler initialize];
+[DraggingHandler draggingHandlerWithOwnerView:];

/* instance methods */
-[DraggingHandler initWithOwnerView:];
-[DraggingHandler dealloc];
-[DraggingHandler badgeIcon];
-[DraggingHandler setBadgeIcon:];
-[DraggingHandler setDraggingSourceOperationMask:forLocal:];
-[DraggingHandler stringProviderForType:];
-[DraggingHandler setStringProvider:forType:];
-[DraggingHandler dataProviderForType:];
-[DraggingHandler setDataProvider:forType:];
-[DraggingHandler providedDataTypes];
-[DraggingHandler writeToPastBoard:];
-[DraggingHandler pasteboard:item:provideDataForType:];
-[DraggingHandler acceptDrop];
-[DraggingHandler resetDraggingInfo];
-[DraggingHandler ownerView];
-[DraggingHandler draggingIcon];
-[DraggingHandler setDraggingIcon:];
-[DraggingHandler draggingSourceOperationMaskForLocal];
-[DraggingHandler draggingSourceOperationMaskForNonLocal];
-[DraggingHandler draggingHandlerDelegate];
-[DraggingHandler setDraggingHandlerDelegate:];
-[DraggingHandler draggingHandlerDataProvider];
-[DraggingHandler setDraggingHandlerDataProvider:];
-[DraggingHandler draggingHandlerActionBlock];
-[DraggingHandler setDraggingHandlerActionBlock:];
-[DraggingHandler dragOutUsesFilesPromise];
-[DraggingHandler setDragOutUsesFilesPromise:];
-[DraggingHandler isDragging];
-[DraggingHandler setIsDragging:];
-[DraggingHandler dragOutInfo];
-[DraggingHandler dragInInfo];
-[DraggingHandler draggingOperation];
-[DraggingHandler setDraggingOperation:];
-[DraggingHandler draggingType];
-[DraggingHandler setDraggingType:];
-[DraggingHandler lastTargetItem];
-[DraggingHandler setLastTargetItem:];

@end

@interface DropView : VKFileDropView {
    /* instance variables */
    B _invisible;
    B _alwaysDraw;
    B _drawBackground;
    B _noVibrancy;
    d _padding;
}

@property (TB,N,V_invisible) invisible;
@property (TB,N,V_alwaysDraw) alwaysDraw;
@property (TB,N,V_drawBackground) drawBackground;
@property (Td,N,V_padding) padding;
@property (TB,N,V_noVibrancy) noVibrancy;

/* instance methods */
-[DropView initWithCoder:];
-[DropView initWithFrame:];
-[DropView dealloc];
-[DropView observeValueForKeyPath:ofObject:change:context:];
-[DropView allowsVibrancy];
-[DropView drawRect:];
-[DropView invisible];
-[DropView setInvisible:];
-[DropView alwaysDraw];
-[DropView setAlwaysDraw:];
-[DropView drawBackground];
-[DropView setDrawBackground:];
-[DropView padding];
-[DropView setPadding:];
-[DropView noVibrancy];
-[DropView setNoVibrancy:];

@end

@interface EmojiHelper : NSObject

/* class methods */
+[EmojiHelper setEmojisFilePath:];
+[EmojiHelper setEmojisFontPath:];
+[EmojiHelper setEmojisCachePath:];
+[EmojiHelper loadEmojis];

@end

@interface EraseWizardConfirmationViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
    B _waiting;
    B _ignoreFindMy;
    B _preserveDataPlan;
    B _noProximitySetup;
    I _flags;
    @"WizardWindowController" wizard;
    q behavior;
    @"NSImage" _icon;
    @"NSString" _infoText;
    @"NSString" _verificationText;
}

@property (T@"NSImage",&,V_icon) icon;
@property (T@"NSString",&,V_infoText) infoText;
@property (T@"NSString",&,V_verificationText) verificationText;
@property (TI,V_flags) flags;
@property (TB,V_waiting) waiting;
@property (TB,V_ignoreFindMy) ignoreFindMy;
@property (TB,V_preserveDataPlan) preserveDataPlan;
@property (TB,V_noProximitySetup) noProximitySetup;
@property (T@"WizardWindowController",Vwizard) wizard;
@property (Tq,Vbehavior) behavior;
@property (T@"NSView",&) view;
@property (T@"NSString",&) title;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[EraseWizardConfirmationViewController init];
-[EraseWizardConfirmationViewController didResignActive];
-[EraseWizardConfirmationViewController didBecomeActive];
-[EraseWizardConfirmationViewController observeValueForKeyPath:ofObject:change:context:];
-[EraseWizardConfirmationViewController proceedWithErase:];
-[EraseWizardConfirmationViewController wizard];
-[EraseWizardConfirmationViewController setWizard:];
-[EraseWizardConfirmationViewController behavior];
-[EraseWizardConfirmationViewController setBehavior:];
-[EraseWizardConfirmationViewController icon];
-[EraseWizardConfirmationViewController setIcon:];
-[EraseWizardConfirmationViewController infoText];
-[EraseWizardConfirmationViewController setInfoText:];
-[EraseWizardConfirmationViewController verificationText];
-[EraseWizardConfirmationViewController setVerificationText:];
-[EraseWizardConfirmationViewController flags];
-[EraseWizardConfirmationViewController setFlags:];
-[EraseWizardConfirmationViewController waiting];
-[EraseWizardConfirmationViewController setWaiting:];
-[EraseWizardConfirmationViewController ignoreFindMy];
-[EraseWizardConfirmationViewController setIgnoreFindMy:];
-[EraseWizardConfirmationViewController preserveDataPlan];
-[EraseWizardConfirmationViewController setPreserveDataPlan:];
-[EraseWizardConfirmationViewController noProximitySetup];
-[EraseWizardConfirmationViewController setNoProximitySetup:];

@end

@interface EraseWizardWindowController : WizardWindowController

/* instance methods */
-[EraseWizardWindowController initWithDevice:];

@end

@interface ExportAllWizardViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
    B _awake;
    B _selectAllIsChecked;
    @"WizardWindowController" wizard;
    q behavior;
    @"NSArrayController" _arrayController;
}

@property (T@"NSArrayController",&,V_arrayController) arrayController;
@property (TB,V_awake) awake;
@property (TB,V_selectAllIsChecked) selectAllIsChecked;
@property (T@"WizardWindowController",Vwizard) wizard;
@property (Tq,Vbehavior) behavior;
@property (T@"NSView",&) view;
@property (T@"NSString",&) title;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[ExportAllWizardViewController init];
-[ExportAllWizardViewController awakeFromNib];
-[ExportAllWizardViewController willBecomeActive];
-[ExportAllWizardViewController didBecomeActive];
-[ExportAllWizardViewController loadData];
-[ExportAllWizardViewController selectAllClicked:];
-[ExportAllWizardViewController updateSelectAllCheckbox];
-[ExportAllWizardViewController applySelectAll:];
-[ExportAllWizardViewController checkboxClicked:];
-[ExportAllWizardViewController tableViewSelectionDidChange:];
-[ExportAllWizardViewController showOpenPanel];
-[ExportAllWizardViewController subtitleForDataset:];
-[ExportAllWizardViewController wizard];
-[ExportAllWizardViewController setWizard:];
-[ExportAllWizardViewController behavior];
-[ExportAllWizardViewController setBehavior:];
-[ExportAllWizardViewController arrayController];
-[ExportAllWizardViewController setArrayController:];
-[ExportAllWizardViewController awake];
-[ExportAllWizardViewController setAwake:];
-[ExportAllWizardViewController selectAllIsChecked];
-[ExportAllWizardViewController setSelectAllIsChecked:];

@end

@interface ExportAllWizardWindowController : WizardWindowController

/* instance methods */
-[ExportAllWizardWindowController initWithDevice:];

@end

@interface FileInfoWindowCell : NSCell {
    /* instance variables */
    @"NSView" _view;
}

@property (T@"NSView",&,V_view) view;

/* instance methods */
-[FileInfoWindowCell copyWithZone:];
-[FileInfoWindowCell drawWithFrame:inView:];
-[FileInfoWindowCell view];
-[FileInfoWindowCell setView:];

@end

@interface FileInfoWindowController : LegacyWindowController <NSOutlineViewDataSource, NSOutlineViewDelegate> {
    /* instance variables */
    B _isDirectory;
    B _awake;
    @"NSString" _path;
    @"NSOutlineView" _outlineView;
    @"NSView" _infoView;
    @"NSView" _generalLabelView;
    @"NSView" _iconLabelView;
    @"NSView" _permissionsLabelView;
    @"NSView" _generalView;
    @"NSView" _iconView;
    @"NSView" _permissionsView;
    @"NSImageView" _smallIconView;
    @"NSImageView" _largeIconView;
    @"NSTextField" _infoNameTextField;
    @"NSTextField" _infoSizeTextField;
    @"NSTextField" _infoDateTextField;
    @"NSTextField" _generalKindTextField;
    @"NSTextField" _generalSizeTextField;
    @"NSTextField" _generalPathTextField;
    @"NSTextField" _generalCTimeTextField;
    @"NSTextField" _generalMTimeTextField;
    @"NSTextField" _permissionsReadableTextField;
    @"NSTextField" _permissionsWriteableTextField;
    @"NSTextField" _permissionsOwnerTextField;
    @"NSTextField" _permissionsGroupTextField;
    @"NSTextField" _permissionsOctalTextField;
    @"NSTextField" _permissionsHumanTextField;
    @"StorageItemNode" _storageItemNode;
    @"NSDictionary" _attributes;
}

@property (T@"NSString",&,V_path) path;
@property (T@"StorageItemNode",&,V_storageItemNode) storageItemNode;
@property (T@"NSDictionary",&,V_attributes) attributes;
@property (TB,V_isDirectory) isDirectory;
@property (TB,V_awake) awake;
@property (T@"NSOutlineView",&,N,V_outlineView) outlineView;
@property (T@"NSView",&,N,V_infoView) infoView;
@property (T@"NSView",&,N,V_generalLabelView) generalLabelView;
@property (T@"NSView",&,N,V_iconLabelView) iconLabelView;
@property (T@"NSView",&,N,V_permissionsLabelView) permissionsLabelView;
@property (T@"NSView",&,N,V_generalView) generalView;
@property (T@"NSView",&,N,V_iconView) iconView;
@property (T@"NSView",&,N,V_permissionsView) permissionsView;
@property (T@"NSImageView",&,N,V_smallIconView) smallIconView;
@property (T@"NSImageView",&,N,V_largeIconView) largeIconView;
@property (T@"NSTextField",&,N,V_infoNameTextField) infoNameTextField;
@property (T@"NSTextField",&,N,V_infoSizeTextField) infoSizeTextField;
@property (T@"NSTextField",&,N,V_infoDateTextField) infoDateTextField;
@property (T@"NSTextField",&,N,V_generalKindTextField) generalKindTextField;
@property (T@"NSTextField",&,N,V_generalSizeTextField) generalSizeTextField;
@property (T@"NSTextField",&,N,V_generalPathTextField) generalPathTextField;
@property (T@"NSTextField",&,N,V_generalCTimeTextField) generalCTimeTextField;
@property (T@"NSTextField",&,N,V_generalMTimeTextField) generalMTimeTextField;
@property (T@"NSTextField",&,N,V_permissionsReadableTextField) permissionsReadableTextField;
@property (T@"NSTextField",&,N,V_permissionsWriteableTextField) permissionsWriteableTextField;
@property (T@"NSTextField",&,N,V_permissionsOwnerTextField) permissionsOwnerTextField;
@property (T@"NSTextField",&,N,V_permissionsGroupTextField) permissionsGroupTextField;
@property (T@"NSTextField",&,N,V_permissionsOctalTextField) permissionsOctalTextField;
@property (T@"NSTextField",&,N,V_permissionsHumanTextField) permissionsHumanTextField;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* class methods */
+[FileInfoWindowController fileInfoWindowControllerWithStorageItemNode:];

/* instance methods */
-[FileInfoWindowController initWithPath:];
-[FileInfoWindowController initWithStorageItemNode:];
-[FileInfoWindowController dealloc];
-[FileInfoWindowController awakeFromNib];
-[FileInfoWindowController showWindow:];
-[FileInfoWindowController outlineView:numberOfChildrenOfItem:];
-[FileInfoWindowController outlineView:isItemExpandable:];
-[FileInfoWindowController outlineView:child:ofItem:];
-[FileInfoWindowController outlineView:objectValueForTableColumn:byItem:];
-[FileInfoWindowController outlineView:itemForPersistentObject:];
-[FileInfoWindowController outlineView:persistentObjectForItem:];
-[FileInfoWindowController outlineView:shouldSelectItem:];
-[FileInfoWindowController outlineView:heightOfRowByItem:];
-[FileInfoWindowController outlineViewItemWillCollapse:];
-[FileInfoWindowController outlineViewItemWillExpand:];
-[FileInfoWindowController outlineView:dataCellForTableColumn:item:];
-[FileInfoWindowController resizeWindow:];
-[FileInfoWindowController path];
-[FileInfoWindowController setPath:];
-[FileInfoWindowController outlineView];
-[FileInfoWindowController setOutlineView:];
-[FileInfoWindowController infoView];
-[FileInfoWindowController setInfoView:];
-[FileInfoWindowController generalLabelView];
-[FileInfoWindowController setGeneralLabelView:];
-[FileInfoWindowController iconLabelView];
-[FileInfoWindowController setIconLabelView:];
-[FileInfoWindowController permissionsLabelView];
-[FileInfoWindowController setPermissionsLabelView:];
-[FileInfoWindowController generalView];
-[FileInfoWindowController setGeneralView:];
-[FileInfoWindowController iconView];
-[FileInfoWindowController setIconView:];
-[FileInfoWindowController permissionsView];
-[FileInfoWindowController setPermissionsView:];
-[FileInfoWindowController smallIconView];
-[FileInfoWindowController setSmallIconView:];
-[FileInfoWindowController largeIconView];
-[FileInfoWindowController setLargeIconView:];
-[FileInfoWindowController infoNameTextField];
-[FileInfoWindowController setInfoNameTextField:];
-[FileInfoWindowController infoSizeTextField];
-[FileInfoWindowController setInfoSizeTextField:];
-[FileInfoWindowController infoDateTextField];
-[FileInfoWindowController setInfoDateTextField:];
-[FileInfoWindowController generalKindTextField];
-[FileInfoWindowController setGeneralKindTextField:];
-[FileInfoWindowController generalSizeTextField];
-[FileInfoWindowController setGeneralSizeTextField:];
-[FileInfoWindowController generalPathTextField];
-[FileInfoWindowController setGeneralPathTextField:];
-[FileInfoWindowController generalCTimeTextField];
-[FileInfoWindowController setGeneralCTimeTextField:];
-[FileInfoWindowController generalMTimeTextField];
-[FileInfoWindowController setGeneralMTimeTextField:];
-[FileInfoWindowController permissionsReadableTextField];
-[FileInfoWindowController setPermissionsReadableTextField:];
-[FileInfoWindowController permissionsWriteableTextField];
-[FileInfoWindowController setPermissionsWriteableTextField:];
-[FileInfoWindowController permissionsOwnerTextField];
-[FileInfoWindowController setPermissionsOwnerTextField:];
-[FileInfoWindowController permissionsGroupTextField];
-[FileInfoWindowController setPermissionsGroupTextField:];
-[FileInfoWindowController permissionsOctalTextField];
-[FileInfoWindowController setPermissionsOctalTextField:];
-[FileInfoWindowController permissionsHumanTextField];
-[FileInfoWindowController setPermissionsHumanTextField:];
-[FileInfoWindowController storageItemNode];
-[FileInfoWindowController setStorageItemNode:];
-[FileInfoWindowController attributes];
-[FileInfoWindowController setAttributes:];
-[FileInfoWindowController isDirectory];
-[FileInfoWindowController setIsDirectory:];
-[FileInfoWindowController awake];
-[FileInfoWindowController setAwake:];

@end

@interface FileInfoWindowOutlineView : NSOutlineView

/* instance methods */
-[FileInfoWindowOutlineView initWithFrame:];
-[FileInfoWindowOutlineView initWithCoder:];
-[FileInfoWindowOutlineView isOpaque];
-[FileInfoWindowOutlineView drawBackgroundInClipRect:];

@end

@interface FilesViewController : StorageViewController

/* instance methods */
-[FilesViewController initWithDevice:];
-[FilesViewController awakeFromNib];

@end

@interface IMazingAppDocument : NSDocument

/* class methods */
+[IMazingAppDocument autosavesInPlace];

/* instance methods */
-[IMazingAppDocument windowControllerDidLoadNib:];
-[IMazingAppDocument dataOfType:error:];
-[IMazingAppDocument readFromData:ofType:error:];
-[IMazingAppDocument makeWindowControllers];

@end

@interface IMazingBackupDocument : NSDocument

/* class methods */
+[IMazingBackupDocument autosavesInPlace];

/* instance methods */
-[IMazingBackupDocument windowControllerDidLoadNib:];
-[IMazingBackupDocument dataOfType:error:];
-[IMazingBackupDocument readFromData:ofType:error:];
-[IMazingBackupDocument makeWindowControllers];

@end

@interface INoteDocument : NSObject <DatasetObject, IAccessibleElement> {
    /* instance variables */
    B _isProtected;
    B _hasAttachments;
    @"NSString" fullTextIndex;
    q _uid;
    @"NSDate" _creationDate;
    @"NSDate" _modificationDate;
    @"NSString" _title;
    ^v _ddnaNote;
}

@property (Tq,V_uid) uid;
@property (T@"NSDate",&,V_creationDate) creationDate;
@property (T@"NSDate",&,V_modificationDate) modificationDate;
@property (T@"NSString",&,V_title) title;
@property (T^v,V_ddnaNote) ddnaNote;
@property (TB,V_isProtected) isProtected;
@property (TB,V_hasAttachments) hasAttachments;
@property (T@"NSString",R) htmlContent;
@property (T@"NSString",R) textContent;
@property (T@"NSString",&,VfullTextIndex) fullTextIndex;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* class methods */
+[INoteDocument htmlLayout];
+[INoteDocument noteDocumentWithDDNAINoteDocument:];

/* instance methods */
-[INoteDocument init];
-[INoteDocument initWithDDNAINoteDocument:];
-[INoteDocument dealloc];
-[INoteDocument htmlContent];
-[INoteDocument textContent];
-[INoteDocument accessibilityLabel];
-[INoteDocument fullTextIndex];
-[INoteDocument setFullTextIndex:];
-[INoteDocument uid];
-[INoteDocument setUid:];
-[INoteDocument creationDate];
-[INoteDocument setCreationDate:];
-[INoteDocument modificationDate];
-[INoteDocument setModificationDate:];
-[INoteDocument title];
-[INoteDocument setTitle:];
-[INoteDocument isProtected];
-[INoteDocument setIsProtected:];
-[INoteDocument hasAttachments];
-[INoteDocument setHasAttachments:];
-[INoteDocument ddnaNote];
-[INoteDocument setDdnaNote:];

@end

@interface ImageHelper : NSObject

/* class methods */
+[ImageHelper setResizeCallback:];
+[ImageHelper generateThumbnail:destination:size:];

@end

@interface InfoValue : NSObject {
    /* instance variables */
    {InfoValue="_bool"B"_unsigned"Q"_double"d"_string"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}"_list"{vector<DDNA::InfoValue, std::allocator<DDNA::InfoValue>>="__begin_"^{InfoValue}"__end_"^{InfoValue}"__end_cap_"{__compressed_pair<DDNA::InfoValue *, std::allocator<DDNA::InfoValue>>="__value_"^{InfoValue}}}"_object"{SafePointer<DDNA::Core::Object>="_o"^{Object}}} _cppObject;
}

@property (TB,N) boolValue;
@property (Tc,N) int8Value;
@property (Ts,N) int16Value;
@property (Ti,N) int32Value;
@property (Tq,N) int64Value;
@property (TC,N) uint8Value;
@property (TS,N) uint16Value;
@property (TI,N) uint32Value;
@property (TQ,N) uint64Value;
@property (Tf,N) floatValue;
@property (Td,N) doubleValue;
@property (T@"NSString",&,N) stringValue;
@property (T@"NSArray",&,N) listValue;
@property (T{InfoValue=BQd{basic_string<char, std::char_traits<char>, std::allocator<char>>={__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>={__rep=(?={__short=[23c][0C]b7b1}{__long=*Qb63b1}{__raw=[3Q]})}}}{vector<DDNA::InfoValue, std::allocator<DDNA::InfoValue>>=^{InfoValue}^{InfoValue}{__compressed_pair<DDNA::InfoValue *, std::allocator<DDNA::InfoValue>>=^{InfoValue}}}{SafePointer<DDNA::Core::Object>=^{Object}}},N) cppObject;
@property (T{SafePointer<DDNA::Core::Object>=^{Object}},N) objectValue;

/* instance methods */
-[InfoValue initWithCPPObject:];
-[InfoValue init];
-[InfoValue initWithBoolValue:];
-[InfoValue initWithInt8Value:];
-[InfoValue initWithInt16Value:];
-[InfoValue initWithInt32Value:];
-[InfoValue initWithInt64Value:];
-[InfoValue initWithUint8Value:];
-[InfoValue initWithUint16Value:];
-[InfoValue initWithUint32Value:];
-[InfoValue initWithUint64Value:];
-[InfoValue initWithFloatValue:];
-[InfoValue initWithDoubleValue:];
-[InfoValue initWithStringValue:];
-[InfoValue initWithListValue:];
-[InfoValue initWithObjectValue:];
-[InfoValue cppObject];
-[InfoValue setCppObject:];
-[InfoValue boolValue];
-[InfoValue int8Value];
-[InfoValue int16Value];
-[InfoValue int32Value];
-[InfoValue int64Value];
-[InfoValue uint8Value];
-[InfoValue uint16Value];
-[InfoValue uint32Value];
-[InfoValue uint64Value];
-[InfoValue floatValue];
-[InfoValue doubleValue];
-[InfoValue stringValue];
-[InfoValue listValue];
-[InfoValue objectValue];
-[InfoValue setBoolValue:];
-[InfoValue setInt8Value:];
-[InfoValue setInt16Value:];
-[InfoValue setInt32Value:];
-[InfoValue setInt64Value:];
-[InfoValue setUint8Value:];
-[InfoValue setUint16Value:];
-[InfoValue setUint32Value:];
-[InfoValue setUint64Value:];
-[InfoValue setFloatValue:];
-[InfoValue setDoubleValue:];
-[InfoValue setStringValue:];
-[InfoValue setListValue:];
-[InfoValue setObjectValue:];
-[InfoValue wrappedObjectValueWithClass:];
-[InfoValue wrappedObjectValueWithClass:initSelector:];

@end

@interface KVOObjectKey : NSObject <NSCopying> {
    /* instance variables */
    Q _address;
}

@property (TQ,N,V_address) address;

/* instance methods */
-[KVOObjectKey initWithObject:];
-[KVOObjectKey initWithAddress:];
-[KVOObjectKey copyWithZone:];
-[KVOObjectKey isEqual:];
-[KVOObjectKey isEqualTo:];
-[KVOObjectKey hash];
-[KVOObjectKey address];
-[KVOObjectKey setAddress:];

@end

@interface KVOObserverInfo : NSObject {
    /* instance variables */
    @ _object;
    @"NSString" _keyPath;
}

@property (T@,N,V_object) object;
@property (T@"NSString",&,N,V_keyPath) keyPath;

/* instance methods */
-[KVOObserverInfo initWithObject:keyPath:];
-[KVOObserverInfo object];
-[KVOObserverInfo setObject:];
-[KVOObserverInfo keyPath];
-[KVOObserverInfo setKeyPath:];

@end

@interface LegacyBackupLocationItem : NSObject {
    /* instance variables */
    B _mounted;
    B _didShowSpaceWarning;
    q _priority;
    @"NSString" _name;
    @"NSString" _path;
    @"NSString" _iconPath;
    @"NSString" _volume;
    @"NSURL" _url;
    @"NSImage" _icon;
    @"NSNumber" _totalBytes;
    @"NSNumber" _availableBytes;
    @"NSString" _totalSpace;
    @"NSString" _availableSpace;
}

@property (Tq,V_priority) priority;
@property (TB,V_mounted) mounted;
@property (TB,V_didShowSpaceWarning) didShowSpaceWarning;
@property (T@"NSString",&,V_name) name;
@property (T@"NSString",&,V_path) path;
@property (T@"NSString",&,V_iconPath) iconPath;
@property (T@"NSString",&,V_volume) volume;
@property (T@"NSURL",&,V_url) url;
@property (T@"NSImage",&,V_icon) icon;
@property (T@"NSNumber",&,V_totalBytes) totalBytes;
@property (T@"NSNumber",&,V_availableBytes) availableBytes;
@property (T@"NSString",&,V_totalSpace) totalSpace;
@property (T@"NSString",&,V_availableSpace) availableSpace;

/* instance methods */
-[LegacyBackupLocationItem initWithPath:name:];
-[LegacyBackupLocationItem initWithPath:];
-[LegacyBackupLocationItem updateInfo:];
-[LegacyBackupLocationItem priority];
-[LegacyBackupLocationItem setPriority:];
-[LegacyBackupLocationItem mounted];
-[LegacyBackupLocationItem setMounted:];
-[LegacyBackupLocationItem didShowSpaceWarning];
-[LegacyBackupLocationItem setDidShowSpaceWarning:];
-[LegacyBackupLocationItem name];
-[LegacyBackupLocationItem setName:];
-[LegacyBackupLocationItem path];
-[LegacyBackupLocationItem setPath:];
-[LegacyBackupLocationItem iconPath];
-[LegacyBackupLocationItem setIconPath:];
-[LegacyBackupLocationItem volume];
-[LegacyBackupLocationItem setVolume:];
-[LegacyBackupLocationItem url];
-[LegacyBackupLocationItem setUrl:];
-[LegacyBackupLocationItem icon];
-[LegacyBackupLocationItem setIcon:];
-[LegacyBackupLocationItem totalBytes];
-[LegacyBackupLocationItem setTotalBytes:];
-[LegacyBackupLocationItem availableBytes];
-[LegacyBackupLocationItem setAvailableBytes:];
-[LegacyBackupLocationItem totalSpace];
-[LegacyBackupLocationItem setTotalSpace:];
-[LegacyBackupLocationItem availableSpace];
-[LegacyBackupLocationItem setAvailableSpace:];

@end

@interface LegacyDataFilter : NSObject {
    /* instance variables */
    @"NSString" _identifier;
    @"LegacyDataFilter" _previousFilter;
    @"NSMutableArray" _filterCriterias;
    B _filterCriteriasEnabled;
    @"NSMutableArray" _filteredData;
    @"NSString" _noDuplicateKeyPath;
    @? _noDuplicateValueGetter;
    B _objectAdded;
    @"NSMutableArray" _sortDescriptors;
    @"NSIndexSet" _selectedIndexes;
    Q _selectedIndexesShift;
    @"<LegacyDataFilterDelegate>" _delegate;
    @"LegacyDataFilterCollection" _collection;
    @"NSMutableArray" _selectedObjectsList;
    @"NSMutableArray" _noDuplicateValuesCache;
}

@property (T@"LegacyDataFilterCollection") collection;
@property (TB) objectAdded;
@property (T@"LegacyDataFilterCollection",R,D) collection;
@property (T@"NSString",&,V_identifier) identifier;
@property (T@"LegacyDataFilter",&,V_previousFilter) previousFilter;
@property (T@"NSArray",R,V_filterCriterias) filterCriterias;
@property (TB,V_filterCriteriasEnabled) filterCriteriasEnabled;
@property (T@"NSArray",R,V_filteredData) filteredData;
@property (T@"NSString",&,V_noDuplicateKeyPath) noDuplicateKeyPath;
@property (T@?,C,V_noDuplicateValueGetter) noDuplicateValueGetter;
@property (T@"NSIndexSet",&,V_selectedIndexes) selectedIndexes;
@property (TQ,V_selectedIndexesShift) selectedIndexesShift;
@property (T@"<LegacyDataFilterDelegate>",W,V_delegate) delegate;
@property (T@"LegacyDataFilterSortDescriptor",R) firstSortDescriptor;

/* class methods */
+[LegacyDataFilter dataFilterWithPreviousFilter:];
+[LegacyDataFilter dataFilterWithNoDuplicateKeyPath:];
+[LegacyDataFilter dataFilterWithNoDuplicateValueGetter:];
+[LegacyDataFilter dataFilterWithSelectedIndexesShift:];
+[LegacyDataFilter dataFilterWithNoDuplicateKeyPath:selectedIndexesShift:];
+[LegacyDataFilter dataFilterWithNoDuplicateValueGetter:selectedIndexesShift:];
+[LegacyDataFilter dataFilterWithPreviousFilter:noDuplicateKeyPath:selectedIndexesShift:];
+[LegacyDataFilter dataFilterWithPreviousFilter:noDuplicateValueGetter:selectedIndexesShift:];

/* instance methods */
-[LegacyDataFilter collection];
-[LegacyDataFilter setCollection:];
-[LegacyDataFilter objectAdded];
-[LegacyDataFilter setObjectAdded:];
-[LegacyDataFilter updateWillStart];
-[LegacyDataFilter updateDidEnd];
-[LegacyDataFilter init];
-[LegacyDataFilter initWithPreviousFilter:];
-[LegacyDataFilter initWithNoDuplicateKeyPath:];
-[LegacyDataFilter initWithNoDuplicateValueGetter:];
-[LegacyDataFilter initWithSelectedIndexesShift:];
-[LegacyDataFilter initWithNoDuplicateKeyPath:selectedIndexesShift:];
-[LegacyDataFilter initWithNoDuplicateValueGetter:selectedIndexesShift:];
-[LegacyDataFilter initWithPreviousFilter:noDuplicateKeyPath:selectedIndexesShift:];
-[LegacyDataFilter initWithPreviousFilter:noDuplicateValueGetter:selectedIndexesShift:];
-[LegacyDataFilter dealloc];
-[LegacyDataFilter addFilterCriteria:];
-[LegacyDataFilter addFilterCriteriaCompoundANDWithLast:];
-[LegacyDataFilter addFilterCriteriaCompoundORWithLast:];
-[LegacyDataFilter filterCriteriaAtIndex:];
-[LegacyDataFilter addObject:];
-[LegacyDataFilter removeAllObjects];
-[LegacyDataFilter addSortDescriptor:];
-[LegacyDataFilter sortDescriptorAtIndex:];
-[LegacyDataFilter sortDescriptorWithKeyPath:];
-[LegacyDataFilter moveSortDescriptor:toIndex:];
-[LegacyDataFilter moveSortDescriptorFont:];
-[LegacyDataFilter moveSortDescriptorWithKeyPath:toIndex:];
-[LegacyDataFilter moveSortDescriptorWithKeyPathFront:];
-[LegacyDataFilter updateSortOrderOfFilteredData];
-[LegacyDataFilter objectAtIndex:usingIndexesShift:];
-[LegacyDataFilter resetSelectedIndexes];
-[LegacyDataFilter selectedIndexesUsingIndexesShift];
-[LegacyDataFilter setSelectedIndexesUsingIndexesShift:];
-[LegacyDataFilter firstSelectedObject];
-[LegacyDataFilter lastSelectedObject];
-[LegacyDataFilter selectedObjects];
-[LegacyDataFilter storeObjectsListFromSelectedIndexes];
-[LegacyDataFilter restoreSelectedIndexesFromStoredObjectsList];
-[LegacyDataFilter firstSortDescriptor];
-[LegacyDataFilter identifier];
-[LegacyDataFilter setIdentifier:];
-[LegacyDataFilter previousFilter];
-[LegacyDataFilter setPreviousFilter:];
-[LegacyDataFilter filterCriterias];
-[LegacyDataFilter filterCriteriasEnabled];
-[LegacyDataFilter setFilterCriteriasEnabled:];
-[LegacyDataFilter filteredData];
-[LegacyDataFilter noDuplicateKeyPath];
-[LegacyDataFilter setNoDuplicateKeyPath:];
-[LegacyDataFilter noDuplicateValueGetter];
-[LegacyDataFilter setNoDuplicateValueGetter:];
-[LegacyDataFilter selectedIndexes];
-[LegacyDataFilter setSelectedIndexes:];
-[LegacyDataFilter selectedIndexesShift];
-[LegacyDataFilter setSelectedIndexesShift:];
-[LegacyDataFilter delegate];
-[LegacyDataFilter setDelegate:];

@end

@interface LegacyDataFilterCollection : NSObject {
    /* instance variables */
    @"NSArray" _unfilteredData;
    @"NSMutableArray" _dataFilters;
    @"<LegacyDataFilterCollectionDelegate>" _delegate;
}

@property (T@"<LegacyDataFilterCollectionDelegate>",W,V_delegate) delegate;
@property (TB,R) containsData;

/* instance methods */
-[LegacyDataFilterCollection init];
-[LegacyDataFilterCollection initWithUnfilteredData:];
-[LegacyDataFilterCollection dealloc];
-[LegacyDataFilterCollection containsData];
-[LegacyDataFilterCollection setUnfilteredData:];
-[LegacyDataFilterCollection addDataFilter:];
-[LegacyDataFilterCollection insertDataFilter:atIndex:];
-[LegacyDataFilterCollection dataFilterAtIndex:];
-[LegacyDataFilterCollection dataFilterWithIdentifier:];
-[LegacyDataFilterCollection removeFilterAtIndex:];
-[LegacyDataFilterCollection removeAllFilters];
-[LegacyDataFilterCollection updateDataFilters];
-[LegacyDataFilterCollection delegate];
-[LegacyDataFilterCollection setDelegate:];

@end

@interface LegacyDataFilterCriteria : NSObject {
    /* instance variables */
    @"NSString" _keyPathToTest;
    @? _valueGetter;
    @ _valueToTest;
    i _compoundOperator;
    B _allowsNil;
    B _enabled;
}

@property (T@"NSString",&,V_keyPathToTest) keyPathToTest;
@property (T@?,C,V_valueGetter) valueGetter;
@property (T@,&,V_valueToTest) valueToTest;
@property (Ti,V_compoundOperator) compoundOperator;
@property (TB,V_allowsNil) allowsNil;
@property (TB,V_enabled) enabled;

/* instance methods */
-[LegacyDataFilterCriteria updateWillStart];
-[LegacyDataFilterCriteria updateDidEnd];
-[LegacyDataFilterCriteria init];
-[LegacyDataFilterCriteria initWithKeyPathToTest:];
-[LegacyDataFilterCriteria initWithValueGetter:];
-[LegacyDataFilterCriteria dealloc];
-[LegacyDataFilterCriteria objectMatches:];
-[LegacyDataFilterCriteria keyPathToTest];
-[LegacyDataFilterCriteria setKeyPathToTest:];
-[LegacyDataFilterCriteria valueGetter];
-[LegacyDataFilterCriteria setValueGetter:];
-[LegacyDataFilterCriteria valueToTest];
-[LegacyDataFilterCriteria setValueToTest:];
-[LegacyDataFilterCriteria compoundOperator];
-[LegacyDataFilterCriteria setCompoundOperator:];
-[LegacyDataFilterCriteria allowsNil];
-[LegacyDataFilterCriteria setAllowsNil:];
-[LegacyDataFilterCriteria enabled];
-[LegacyDataFilterCriteria setEnabled:];

@end

@interface LegacyDataFilterCriteriaMatch : LegacyDataFilterCriteria {
    /* instance variables */
    i _matchOperator;
}

@property (Ti,V_matchOperator) matchOperator;

/* class methods */
+[LegacyDataFilterCriteriaMatch dataFilterCriteriaMatchWithKeyPathToTest:];
+[LegacyDataFilterCriteriaMatch dataFilterCriteriaMatchWithValueGetter:];

/* instance methods */
-[LegacyDataFilterCriteriaMatch objectMatches:];
-[LegacyDataFilterCriteriaMatch matchOperator];
-[LegacyDataFilterCriteriaMatch setMatchOperator:];

@end

@interface LegacyDataFilterCriteriaMatchSelection : LegacyDataFilterCriteriaMatch {
    /* instance variables */
    @"NSArray" _selectedObjectsToTest;
    B _emptySelectionAlwaysMatches;
    @"NSMutableArray" _selectedObjectValuesCache;
}

@property (T@"NSArray",&,V_selectedObjectsToTest) selectedObjectsToTest;
@property (TB,V_emptySelectionAlwaysMatches) emptySelectionAlwaysMatches;

/* class methods */
+[LegacyDataFilterCriteriaMatchSelection dataFilterCriteriaMatchSelectionWithKeyPathToTest:];
+[LegacyDataFilterCriteriaMatchSelection dataFilterCriteriaMatchSelectionWithValueGetter:];

/* instance methods */
-[LegacyDataFilterCriteriaMatchSelection initWithKeyPathToTest:];
-[LegacyDataFilterCriteriaMatchSelection initWithValueGetter:];
-[LegacyDataFilterCriteriaMatchSelection dealloc];
-[LegacyDataFilterCriteriaMatchSelection valueToTest];
-[LegacyDataFilterCriteriaMatchSelection setValueToTest:];
-[LegacyDataFilterCriteriaMatchSelection objectMatches:];
-[LegacyDataFilterCriteriaMatchSelection updateWillStart];
-[LegacyDataFilterCriteriaMatchSelection selectedObjectsToTest];
-[LegacyDataFilterCriteriaMatchSelection setSelectedObjectsToTest:];
-[LegacyDataFilterCriteriaMatchSelection emptySelectionAlwaysMatches];
-[LegacyDataFilterCriteriaMatchSelection setEmptySelectionAlwaysMatches:];

@end

@interface LegacyDataFilterCriteriaMatchText : LegacyDataFilterCriteriaMatch {
    /* instance variables */
    i _textOptions;
    Q _textOptionsNS;
    B _allowsEmpty;
}

@property (Ti) textOptions;
@property (TB,V_allowsEmpty) allowsEmpty;

/* class methods */
+[LegacyDataFilterCriteriaMatchText dataFilterCriteriaMatchTextWithKeyPathToTest:];
+[LegacyDataFilterCriteriaMatchText dataFilterCriteriaMatchTextWithValueGetter:];

/* instance methods */
-[LegacyDataFilterCriteriaMatchText initWithKeyPathToTest:];
-[LegacyDataFilterCriteriaMatchText initWithValueGetter:];
-[LegacyDataFilterCriteriaMatchText textOptions];
-[LegacyDataFilterCriteriaMatchText setTextOptions:];
-[LegacyDataFilterCriteriaMatchText objectMatches:];
-[LegacyDataFilterCriteriaMatchText allowsEmpty];
-[LegacyDataFilterCriteriaMatchText setAllowsEmpty:];

@end

@interface LegacyDataFilterCriteriaTextSearch : LegacyDataFilterCriteria {
    /* instance variables */
    i _textOptions;
    Q _textOptionsNS;
    B _allowsEmpty;
}

@property (Ti) textOptions;
@property (TB,V_allowsEmpty) allowsEmpty;

/* class methods */
+[LegacyDataFilterCriteriaTextSearch dataFilterCriteriaTextSearchWithKeyPathToTest:];
+[LegacyDataFilterCriteriaTextSearch dataFilterCriteriaTextSearcWithValueGetter:];

/* instance methods */
-[LegacyDataFilterCriteriaTextSearch initWithKeyPathToTest:];
-[LegacyDataFilterCriteriaTextSearch initWithValueGetter:];
-[LegacyDataFilterCriteriaTextSearch textOptions];
-[LegacyDataFilterCriteriaTextSearch setTextOptions:];
-[LegacyDataFilterCriteriaTextSearch objectMatches:];
-[LegacyDataFilterCriteriaTextSearch allowsEmpty];
-[LegacyDataFilterCriteriaTextSearch setAllowsEmpty:];

@end

@interface LegacyDataFilterSortDescriptor : NSObject {
    /* instance variables */
    @"NSString" _keyPathToTest;
    @? _valueGetter;
    i _sortOrder;
}

@property (T@"NSString",&,V_keyPathToTest) keyPathToTest;
@property (T@?,C,V_valueGetter) valueGetter;
@property (Ti,V_sortOrder) sortOrder;
@property (T@"NSSortDescriptor",R) nsSortDescriptor;

/* class methods */
+[LegacyDataFilterSortDescriptor dataFilterSortDescriptorWithKeyPathToTest:];
+[LegacyDataFilterSortDescriptor dataFilterSortDescriptorWithKeyPathIdentifier:valueGetter:];

/* instance methods */
-[LegacyDataFilterSortDescriptor initWithKeyPathToTest:];
-[LegacyDataFilterSortDescriptor initWithKeyPathIdentifier:valueGetter:];
-[LegacyDataFilterSortDescriptor dealloc];
-[LegacyDataFilterSortDescriptor setSortOrderAscending:];
-[LegacyDataFilterSortDescriptor setSortOrderFromNSOrdering:];
-[LegacyDataFilterSortDescriptor compareObject:withObject:];
-[LegacyDataFilterSortDescriptor nsSortDescriptor];
-[LegacyDataFilterSortDescriptor keyPathToTest];
-[LegacyDataFilterSortDescriptor setKeyPathToTest:];
-[LegacyDataFilterSortDescriptor valueGetter];
-[LegacyDataFilterSortDescriptor setValueGetter:];
-[LegacyDataFilterSortDescriptor sortOrder];
-[LegacyDataFilterSortDescriptor setSortOrder:];

@end

@interface LegacyDataFilterSortDescriptorText : LegacyDataFilterSortDescriptor {
    /* instance variables */
    i _textOptions;
    Q _textOptionsNS;
}

@property (Ti) textOptions;

/* class methods */
+[LegacyDataFilterSortDescriptorText dataFilterSortDescriptorTextWithKeyPathToTest:];
+[LegacyDataFilterSortDescriptorText dataFilterSortDescriptorTextWithKeyPathIdentifier:valueGetter:];

/* instance methods */
-[LegacyDataFilterSortDescriptorText initWithKeyPathToTest:];
-[LegacyDataFilterSortDescriptorText initWithKeyPathIdentifier:valueGetter:];
-[LegacyDataFilterSortDescriptorText textOptions];
-[LegacyDataFilterSortDescriptorText setTextOptions:];
-[LegacyDataFilterSortDescriptorText compareObject:withObject:];

@end

@interface LegacyDateCell : LegacyTextFieldCell {
    /* instance variables */
    @"LegacyDateItem" _dateItem;
}

/* instance methods */
-[LegacyDateCell init];
-[LegacyDateCell dealloc];
-[LegacyDateCell copyWithZone:];
-[LegacyDateCell setFont:];
-[LegacyDateCell setObjectValue:];
-[LegacyDateCell drawWithFrame:inView:];

@end

@interface LegacyDateItem : NSObject <NSCopying> {
    /* instance variables */
    @"NSDate" _date;
    @"NSFont" _font;
    @"LegacyDateItemFormatter" _dateItemFormatter;
    @"NSString" _shortDateOnly;
    @"NSString" _shortTimeOnly;
    @"NSString" _shortDateTime;
    @"NSString" _mediumDateTime;
    @"NSString" _longDateTime;
    d _shortDateOnlyWidth;
    d _shortDateTimeWidth;
    d _mediumDateTimeWidth;
    d _longDateTimeWidth;
    d _shortTimeOnlyWidth;
    d _lastWidthUsedForCalculation;
    @"NSFont" _lastFontUsedForCalculation;
    @"NSString" _lastRepresentaionReturned;
    {CGSize="width"d"height"d} _size;
}

@property (T@"NSDate",&) date;
@property (T@"NSFont",&) font;
@property (T@"LegacyDateItemFormatter",&) dateItemFormatter;
@property (T{CGSize=dd},V_size) size;

/* class methods */
+[LegacyDateItem dateItemWithDate:];

/* instance methods */
-[LegacyDateItem initWithDate:];
-[LegacyDateItem dealloc];
-[LegacyDateItem copyWithZone:];
-[LegacyDateItem date];
-[LegacyDateItem setDate:];
-[LegacyDateItem font];
-[LegacyDateItem setFont:];
-[LegacyDateItem dateItemFormatter];
-[LegacyDateItem setDateItemFormatter:];
-[LegacyDateItem bestRepresentationToFitInWidth:];
-[LegacyDateItem description];
-[LegacyDateItem updateStringRepresentations];
-[LegacyDateItem size];
-[LegacyDateItem setSize:];

@end

@interface LegacyDateItemFormatter : NSObject {
    /* instance variables */
    @"NSLocale" _locale;
    B _useRelativeFormatting;
    @"NSDateFormatter" _shortDateOnlyFormatter;
    @"NSDateFormatter" _shortTimeOnlyFormatter;
    @"NSDateFormatter" _shortDateTimeFormatter;
    @"NSDateFormatter" _mediumDateTimeFormatter;
    @"NSDateFormatter" _longDateTimeFormatter;
}

@property (T@"NSLocale",&) locale;
@property (TB) useRelativeFormatting;

/* class methods */
+[LegacyDateItemFormatter defaultFormatter];
+[LegacyDateItemFormatter dateItemFormatterWithLocale:useRelativeFormatting:];

/* instance methods */
-[LegacyDateItemFormatter initWithLocale:useRelativeFormatting:];
-[LegacyDateItemFormatter dealloc];
-[LegacyDateItemFormatter locale];
-[LegacyDateItemFormatter setLocale:];
-[LegacyDateItemFormatter useRelativeFormatting];
-[LegacyDateItemFormatter setUseRelativeFormatting:];
-[LegacyDateItemFormatter shortDateOnlyStringFromDate:];
-[LegacyDateItemFormatter shortTimeOnlyStringFromDate:];
-[LegacyDateItemFormatter shortDateTimeStringFromDate:];
-[LegacyDateItemFormatter mediumDateTimeStringFromDate:];
-[LegacyDateItemFormatter longDateTimeStringFromDate:];

@end

@interface LegacyOperation : NSObject {
    /* instance variables */
    ^v _ddnaOperation;
}

@property (T^v,V_ddnaOperation) ddnaOperation;
@property (T@"DDNAErrorObject",R) error;
@property (Tq,R) runType;
@property (Tq,R) status;
@property (Tq,R) type;
@property (TB,R) paused;
@property (TB,R) stopped;
@property (T@"NSString",R) title;
@property (T@"NSString",R) message;
@property (T@"NSString",R) destinationPath;
@property (T@"NSString",R) destinationFileType;
@property (T@"NSArray",R) destinationFilenames;
@property (Tq,R) progressBarKind;
@property (TQ,R) progressBarMaxValue;
@property (TQ,R) progressBarCurrentValue;
@property (TQ,R) totalItems;
@property (TQ,R) currentItem;
@property (TQ,R) remainingItems;
@property (TQ,R) totalBytes;
@property (TQ,R) processedBytes;
@property (TQ,R) remainingBytes;
@property (T@"NSString",R) stringResult;
@property (T@"NSString",R) uuid;
@property (T@"NSString",R) iconPath;
@property (T@"NSString",R) deviceUID;
@property (T@"NSString",R) deviceUDID;
@property (T@"NSString",R) wizardImage;
@property (TB,R) endedWithoutProperStart;

/* class methods */
+[LegacyOperation operationWithDDNAOperation:];

/* instance methods */
-[LegacyOperation init];
-[LegacyOperation initWithDDNAOperation:];
-[LegacyOperation dealloc];
-[LegacyOperation isEqualToOperation:];
-[LegacyOperation isEqual:];
-[LegacyOperation stop];
-[LegacyOperation pause];
-[LegacyOperation resume];
-[LegacyOperation error];
-[LegacyOperation runType];
-[LegacyOperation type];
-[LegacyOperation status];
-[LegacyOperation paused];
-[LegacyOperation stopped];
-[LegacyOperation title];
-[LegacyOperation message];
-[LegacyOperation destinationPath];
-[LegacyOperation destinationFileType];
-[LegacyOperation destinationFilenames];
-[LegacyOperation progressBarKind];
-[LegacyOperation progressBarMaxValue];
-[LegacyOperation progressBarCurrentValue];
-[LegacyOperation totalItems];
-[LegacyOperation currentItem];
-[LegacyOperation remainingItems];
-[LegacyOperation totalBytes];
-[LegacyOperation processedBytes];
-[LegacyOperation remainingBytes];
-[LegacyOperation stringResult];
-[LegacyOperation uuid];
-[LegacyOperation iconPath];
-[LegacyOperation deviceUID];
-[LegacyOperation deviceUDID];
-[LegacyOperation wizardImage];
-[LegacyOperation endedWithoutProperStart];
-[LegacyOperation ddnaOperation];
-[LegacyOperation setDdnaOperation:];

@end

@interface LegacyPMPaper : NSObject {
    /* instance variables */
    ^{OpaquePMPaper=} _pmPaper;
    @"LegacyPMPrinter" _printer;
    @"NSString" _paperID;
    @"NSString" _localizedName;
    d _width;
    d _height;
    B _widthInitialized;
    B _heightInitialized;
}

@property (T^{OpaquePMPaper=},R,V_pmPaper) pmPaper;
@property (T@"LegacyPMPrinter",R) printer;
@property (T@"NSString",R) paperID;
@property (T@"NSString",R) localizedName;
@property (Td,R) width;
@property (Td,R) height;

/* class methods */
+[LegacyPMPaper paperWithPMPaper:];

/* instance methods */
-[LegacyPMPaper initWithPMPaper:];
-[LegacyPMPaper dealloc];
-[LegacyPMPaper printer];
-[LegacyPMPaper paperID];
-[LegacyPMPaper localizedName];
-[LegacyPMPaper width];
-[LegacyPMPaper height];
-[LegacyPMPaper pmPaper];

@end

@interface LegacyPMPrinter : NSObject {
    /* instance variables */
    ^{OpaquePMPrinter=} _pmPrinter;
    @"NSPrinter" _nsPrinter;
    @"NSString" _printerID;
    @"NSString" _printerName;
    @"NSArray" _paperList;
    @"NSArray" _paperNames;
}

@property (T^{OpaquePMPrinter=},R,V_pmPrinter) pmPrinter;
@property (T@"NSPrinter",R) nsPrinter;
@property (T@"NSString",R) printerID;
@property (T@"NSString",R) printerName;
@property (T@"NSArray",R) paperList;
@property (T@"NSArray",R) paperNames;

/* class methods */
+[LegacyPMPrinter printersList];
+[LegacyPMPrinter genericPrinter];
+[LegacyPMPrinter printerWithPMPrinter:];

/* instance methods */
-[LegacyPMPrinter initWithPMPrinter:];
-[LegacyPMPrinter dealloc];
-[LegacyPMPrinter nsPrinter];
-[LegacyPMPrinter printerID];
-[LegacyPMPrinter printerName];
-[LegacyPMPrinter paperList];
-[LegacyPMPrinter paperNames];
-[LegacyPMPrinter isGeneric];
-[LegacyPMPrinter paperForPMPaper:];
-[LegacyPMPrinter paperWithID:];
-[LegacyPMPrinter paperWithLocalizedName:];
-[LegacyPMPrinter indexOfPaper:];
-[LegacyPMPrinter indexOfPaperWithID:];
-[LegacyPMPrinter indexOfPaperWithLocalizedName:];
-[LegacyPMPrinter pmPrinter];

@end

@interface LegacyPMServer : NSObject {
    /* instance variables */
    ^{OpaquePMServer=} _pmServer;
    @"NSArray" _printers;
    @"NSArray" _printerNames;
    @"NSArray" _printerIDs;
    @"NSDictionary" _printerByNames;
    @"NSDictionary" _printerByIDs;
}

@property (T^{OpaquePMServer=},R,V_pmServer) pmServer;
@property (T@"NSArray",R) printers;
@property (T@"NSArray",R) printerNames;
@property (T@"NSArray",R) printerIDs;

/* class methods */
+[LegacyPMServer localPMServer];
+[LegacyPMServer genericPrinter];

/* instance methods */
-[LegacyPMServer initWithPMServer:];
-[LegacyPMServer dealloc];
-[LegacyPMServer printers];
-[LegacyPMServer printerNames];
-[LegacyPMServer printerIDs];
-[LegacyPMServer printerForPMPrinter:];
-[LegacyPMServer printerWithName:];
-[LegacyPMServer printerWithID:];
-[LegacyPMServer indexOfPrinterWithID:];
-[LegacyPMServer isGenericPrinter:];
-[LegacyPMServer pmServer];

@end

@interface LegacyPeriodicViewUpdater : NSObject {
    /* instance variables */
    @"NSMutableDictionary" _viewsToUpdate;
    B _autoStartStop;
    @"<LegacyPeriodicViewUpdaterDelegate>" _delegate;
    d _updateTimeInterval;
    @"NSTimer" _refreshTimer;
    @"NSSet" _uniqueViews;
}

@property (T@"NSSet",C,V_uniqueViews) uniqueViews;
@property (TB,V_autoStartStop) autoStartStop;
@property (Td) updateTimeInterval;
@property (T@"<LegacyPeriodicViewUpdaterDelegate>",V_delegate) delegate;

/* instance methods */
-[LegacyPeriodicViewUpdater init];
-[LegacyPeriodicViewUpdater dealloc];
-[LegacyPeriodicViewUpdater updateTimeInterval];
-[LegacyPeriodicViewUpdater setUpdateTimeInterval:];
-[LegacyPeriodicViewUpdater addView:forKeyObject:];
-[LegacyPeriodicViewUpdater removeView:forKeyObject:];
-[LegacyPeriodicViewUpdater startPeriodicUpdate];
-[LegacyPeriodicViewUpdater stopPeriodicUpdate];
-[LegacyPeriodicViewUpdater getUniqueViews];
-[LegacyPeriodicViewUpdater updateViews:];
-[LegacyPeriodicViewUpdater autoStartStop];
-[LegacyPeriodicViewUpdater setAutoStartStop:];
-[LegacyPeriodicViewUpdater delegate];
-[LegacyPeriodicViewUpdater setDelegate:];
-[LegacyPeriodicViewUpdater uniqueViews];
-[LegacyPeriodicViewUpdater setUniqueViews:];

@end

@interface LegacyPrintInfo : NSPrintInfo {
    /* instance variables */
    @"LegacyPMPrinter" _currentPrinter;
}

@property (T@"LegacyPMPrinter",&) currentPrinter;
@property (T@"LegacyPMPaper",&) currentPaper;
@property (Td,R) paperWidth;
@property (Td,R) paperHeight;

/* class methods */
+[LegacyPrintInfo printersList];
+[LegacyPrintInfo printerNames];
+[LegacyPrintInfo genericPrinter];
+[LegacyPrintInfo papersListForPrinter:];
+[LegacyPrintInfo newPrintInfoWithSharedPrintInfo];

/* instance methods */
-[LegacyPrintInfo dealloc];
-[LegacyPrintInfo papersListOfCurrentPrinter];
-[LegacyPrintInfo currentPrinter];
-[LegacyPrintInfo setCurrentPrinter:];
-[LegacyPrintInfo currentPaper];
-[LegacyPrintInfo setCurrentPaper:];
-[LegacyPrintInfo paperWidth];
-[LegacyPrintInfo paperHeight];

@end

@interface LegacyProgressIndicatorCell : NSCell {
    /* instance variables */
    @"NSColor" _color;
    @"NSShadow" _shadow;
    d _redComponent;
    d _greenComponent;
    d _blueComponent;
    d _animationTimeInterval;
    d _animationPhase;
    B _spinning;
    B _displayedWhenStopped;
}

@property (T@"NSColor",&) color;
@property (T@"NSShadow",&) shadow;
@property (Td,V_animationTimeInterval) animationTimeInterval;
@property (Td) animationPhase;
@property (TB,V_spinning) spinning;
@property (TB,V_displayedWhenStopped) displayedWhenStopped;

/* class methods */
+[LegacyProgressIndicatorCell globalCellForIdentifier:];

/* instance methods */
-[LegacyProgressIndicatorCell init];
-[LegacyProgressIndicatorCell dealloc];
-[LegacyProgressIndicatorCell color];
-[LegacyProgressIndicatorCell setColor:];
-[LegacyProgressIndicatorCell shadow];
-[LegacyProgressIndicatorCell setShadow:];
-[LegacyProgressIndicatorCell animationPhase];
-[LegacyProgressIndicatorCell setAnimationPhase:];
-[LegacyProgressIndicatorCell drawWithFrame:inView:];
-[LegacyProgressIndicatorCell setObjectValue:];
-[LegacyProgressIndicatorCell animationTimeInterval];
-[LegacyProgressIndicatorCell setAnimationTimeInterval:];
-[LegacyProgressIndicatorCell spinning];
-[LegacyProgressIndicatorCell setSpinning:];
-[LegacyProgressIndicatorCell displayedWhenStopped];
-[LegacyProgressIndicatorCell setDisplayedWhenStopped:];

@end

@interface LegacyTextAttributes : NSObject <NSCopying> {
    /* instance variables */
    @"NSMutableParagraphStyle" _paragraphStyle;
    @"NSMutableDictionary" _attributes;
}

/* instance methods */
-[LegacyTextAttributes init];
-[LegacyTextAttributes dealloc];
-[LegacyTextAttributes attributes];
-[LegacyTextAttributes mutableAttributes];
-[LegacyTextAttributes setTabStops:];
-[LegacyTextAttributes addTabStop:];
-[LegacyTextAttributes removeTabStop:];
-[LegacyTextAttributes setParagraphStyle:];
-[LegacyTextAttributes setAlignment:];
-[LegacyTextAttributes setAlignmentLeft];
-[LegacyTextAttributes setAlignmentRight];
-[LegacyTextAttributes setAlignmentCenter];
-[LegacyTextAttributes setAlignmentJustified];
-[LegacyTextAttributes setAlignmentNatural];
-[LegacyTextAttributes setFirstLineHeadIndent:];
-[LegacyTextAttributes setHeadIndent:];
-[LegacyTextAttributes setTailIndent:];
-[LegacyTextAttributes setLineBreakMode:];
-[LegacyTextAttributes setLineBreakModeWordWrapping];
-[LegacyTextAttributes setLineBreakModeCharWrapping];
-[LegacyTextAttributes setLineBreakModeClipping];
-[LegacyTextAttributes setLineBreakModeTruncatingHead];
-[LegacyTextAttributes setLineBreakModeTruncatingTail];
-[LegacyTextAttributes setLineBreakModeTruncatingMiddle];
-[LegacyTextAttributes setMaximumLineHeight:];
-[LegacyTextAttributes setMinimumLineHeight:];
-[LegacyTextAttributes setLineSpacing:];
-[LegacyTextAttributes setParagraphSpacing:];
-[LegacyTextAttributes setBaseWritingDirection:];
-[LegacyTextAttributes setBaseWritingDirectionLeftToRight];
-[LegacyTextAttributes setBaseWritingDirectionRightToLeft];
-[LegacyTextAttributes setLineHeightMultiple:];
-[LegacyTextAttributes setParagraphSpacingBefore:];
-[LegacyTextAttributes setDefaultTabInterval:];
-[LegacyTextAttributes setTextBlocks:];
-[LegacyTextAttributes setTextLists:];
-[LegacyTextAttributes setHyphenationFactor:];
-[LegacyTextAttributes setTighteningFactorForTruncation:];
-[LegacyTextAttributes setAttachment:];
-[LegacyTextAttributes setBackgroundColor:];
-[LegacyTextAttributes setBaselineOffset:];
-[LegacyTextAttributes setFont:];
-[LegacyTextAttributes setForgroundColor:];
-[LegacyTextAttributes setKerning:];
-[LegacyTextAttributes setLigature:];
-[LegacyTextAttributes setLink:];
-[LegacyTextAttributes setSuperscript:];
-[LegacyTextAttributes setUnderline:];
-[LegacyTextAttributes copyWithZone:];

@end

@interface LegacyTextField : NSTextField {
    /* instance variables */
    B _autoSelectOnEnterFocus;
    @"<LegacyTextFieldDelegate>" _ddnaDelegate;
}

@property (TB,V_autoSelectOnEnterFocus) autoSelectOnEnterFocus;
@property (T@"<LegacyTextFieldDelegate>",V_ddnaDelegate) ddnaDelegate;

/* instance methods */
-[LegacyTextField initWithFrame:];
-[LegacyTextField acceptsFirstResponder];
-[LegacyTextField becomeFirstResponder];
-[LegacyTextField autoSelectOnEnterFocus];
-[LegacyTextField setAutoSelectOnEnterFocus:];
-[LegacyTextField ddnaDelegate];
-[LegacyTextField setDdnaDelegate:];

@end

@interface LegacyTextFieldCell : NSTextFieldCell

/* instance methods */
-[LegacyTextFieldCell drawInteriorWithFrame:inView:];
-[LegacyTextFieldCell titleRectForBounds:];

@end

@interface LegacyWindowController : NSWindowController {
    /* instance variables */
    B _releaseOnWindowClose;
}

@property (TB) releaseOnWindowClose;

/* instance methods */
-[LegacyWindowController init];
-[LegacyWindowController dealloc];
-[LegacyWindowController showWindowCentered:];
-[LegacyWindowController releaseOnWindowClose];
-[LegacyWindowController setReleaseOnWindowClose:];
-[LegacyWindowController windowWillClose:];

@end

@interface LocalThumbnailManager : NSObject {
    /* instance variables */
    B _inited;
    @"NSObject<OS_dispatch_queue>" _dispatchQueue;
}

@property (TB,V_inited) inited;
@property (T@"NSObject<OS_dispatch_queue>",&,V_dispatchQueue) dispatchQueue;

/* class methods */
+[LocalThumbnailManager sharedInstance];
+[LocalThumbnailManager allocWithZone:];

/* instance methods */
-[LocalThumbnailManager init];
-[LocalThumbnailManager generateThumbnailForStorageItem:completion:];
-[LocalThumbnailManager generateThumbnailForStorageItem:completion:delay:];
-[LocalThumbnailManager inited];
-[LocalThumbnailManager setInited:];
-[LocalThumbnailManager dispatchQueue];
-[LocalThumbnailManager setDispatchQueue:];

@end

@interface MDMServer : NSObject <IAccessibleElement> {
    /* instance variables */
    B _isAdded;
    S _port;
    @"NSString" _uuid;
    @"NSString" _name;
    @"NSString" _enrollmentURL;
    @"NSString" _enrollmentProfileID;
    ^v _cppObject;
}

@property (T@"NSString",&,N,V_uuid) uuid;
@property (TB,N,V_isAdded) isAdded;
@property (T@"NSString",&,N,V_name) name;
@property (T@"NSString",&,N,V_enrollmentURL) enrollmentURL;
@property (T@"NSString",&,N,V_enrollmentProfileID) enrollmentProfileID;
@property (TS,N,V_port) port;
@property (T^v,V_cppObject) cppObject;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* class methods */
+[MDMServer getMDMServers];
+[MDMServer addMDMServer:];
+[MDMServer addMDMServerWithProfile:named:port:];
+[MDMServer removeServerWithUUID:];
+[MDMServer installOnDevices:serverUID:];

/* instance methods */
-[MDMServer init];
-[MDMServer initWithCPPObject:];
-[MDMServer accessibilityLabel];
-[MDMServer dealloc];
-[MDMServer getCertificateCommonNames];
-[MDMServer addCertificateAtPath:];
-[MDMServer removeCertificateWithCommonName:];
-[MDMServer saveMDMServer];
-[MDMServer isEqual:];
-[MDMServer description];
-[MDMServer uuid];
-[MDMServer setUuid:];
-[MDMServer name];
-[MDMServer setName:];
-[MDMServer enrollmentURL];
-[MDMServer setEnrollmentURL:];
-[MDMServer enrollmentProfileID];
-[MDMServer setEnrollmentProfileID:];
-[MDMServer port];
-[MDMServer setPort:];
-[MDMServer isAdded];
-[MDMServer setIsAdded:];
-[MDMServer cppObject];
-[MDMServer setCppObject:];

@end

@interface ManageAppsSearchViewController : NSWindowController <NSTabViewDelegate> {
    /* instance variables */
    B _didAddApps;
    B _awake;
    B _showResults;
    B _isLoading;
    @"iOSAppDownloadManager" _manager;
    @"NSArrayController" _arrayController;
    @"NSString" _lastSearchString;
    @"NSString" _infoLabel;
    @"NSString" _searchText;
}

@property (T@"iOSAppDownloadManager",&,V_manager) manager;
@property (T@"NSArrayController",&,V_arrayController) arrayController;
@property (T@"NSString",&,V_lastSearchString) lastSearchString;
@property (TB,V_awake) awake;
@property (TB,V_showResults) showResults;
@property (T@"NSString",&,V_infoLabel) infoLabel;
@property (TB,V_isLoading) isLoading;
@property (TB,V_didAddApps) didAddApps;
@property (T@"NSString",&,V_searchText) searchText;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[ManageAppsSearchViewController initWithManager:];
-[ManageAppsSearchViewController init];
-[ManageAppsSearchViewController dealloc];
-[ManageAppsSearchViewController awakeFromNib];
-[ManageAppsSearchViewController observeValueForKeyPath:ofObject:change:context:];
-[ManageAppsSearchViewController tableView:shouldSelectRow:];
-[ManageAppsSearchViewController searchFieldDidUpdate:];
-[ManageAppsSearchViewController loadApps:];
-[ManageAppsSearchViewController addToLibrary:];
-[ManageAppsSearchViewController showHelp:];
-[ManageAppsSearchViewController doneClicked:];
-[ManageAppsSearchViewController downloadOperationNotification:];
-[ManageAppsSearchViewController didAddApps];
-[ManageAppsSearchViewController setDidAddApps:];
-[ManageAppsSearchViewController manager];
-[ManageAppsSearchViewController setManager:];
-[ManageAppsSearchViewController arrayController];
-[ManageAppsSearchViewController setArrayController:];
-[ManageAppsSearchViewController lastSearchString];
-[ManageAppsSearchViewController setLastSearchString:];
-[ManageAppsSearchViewController awake];
-[ManageAppsSearchViewController setAwake:];
-[ManageAppsSearchViewController showResults];
-[ManageAppsSearchViewController setShowResults:];
-[ManageAppsSearchViewController infoLabel];
-[ManageAppsSearchViewController setInfoLabel:];
-[ManageAppsSearchViewController isLoading];
-[ManageAppsSearchViewController setIsLoading:];
-[ManageAppsSearchViewController searchText];
-[ManageAppsSearchViewController setSearchText:];

@end

@interface ManageAppsUpdatesViewController : NSWindowController <NSTabViewDelegate> {
    /* instance variables */
    B _didUpdate;
    B _awake;
    B _isLoading;
    B _noApps;
    B _isDevice;
    B _checkboxValue;
    @"LegacyOperation" _installOperation;
    @"iOSAppDownloadManager" _manager;
    @"NSArrayController" _arrayController;
    @"NSString" _confirmButtonTitle;
    @"NSString" _checkboxTitle;
    @"NSArray" _apps;
}

@property (T@"iOSAppDownloadManager",&,V_manager) manager;
@property (T@"NSArrayController",&,V_arrayController) arrayController;
@property (TB,V_awake) awake;
@property (T@"NSString",&,V_confirmButtonTitle) confirmButtonTitle;
@property (TB,V_isLoading) isLoading;
@property (TB,V_noApps) noApps;
@property (TB,V_isDevice) isDevice;
@property (TB,V_checkboxValue) checkboxValue;
@property (T@"NSString",&,V_checkboxTitle) checkboxTitle;
@property (T@"NSArray",&,V_apps) apps;
@property (TB,V_didUpdate) didUpdate;
@property (T@"LegacyOperation",&,V_installOperation) installOperation;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[ManageAppsUpdatesViewController initWithManager:apps:isDevice:];
-[ManageAppsUpdatesViewController init];
-[ManageAppsUpdatesViewController dealloc];
-[ManageAppsUpdatesViewController awakeFromNib];
-[ManageAppsUpdatesViewController updateConfirmButtonTitle];
-[ManageAppsUpdatesViewController observeValueForKeyPath:ofObject:change:context:];
-[ManageAppsUpdatesViewController loadAsync];
-[ManageAppsUpdatesViewController loadApps:];
-[ManageAppsUpdatesViewController showHelp:];
-[ManageAppsUpdatesViewController doneClicked:];
-[ManageAppsUpdatesViewController cancelClicked:];
-[ManageAppsUpdatesViewController didUpdate];
-[ManageAppsUpdatesViewController setDidUpdate:];
-[ManageAppsUpdatesViewController installOperation];
-[ManageAppsUpdatesViewController setInstallOperation:];
-[ManageAppsUpdatesViewController manager];
-[ManageAppsUpdatesViewController setManager:];
-[ManageAppsUpdatesViewController arrayController];
-[ManageAppsUpdatesViewController setArrayController:];
-[ManageAppsUpdatesViewController awake];
-[ManageAppsUpdatesViewController setAwake:];
-[ManageAppsUpdatesViewController confirmButtonTitle];
-[ManageAppsUpdatesViewController setConfirmButtonTitle:];
-[ManageAppsUpdatesViewController isLoading];
-[ManageAppsUpdatesViewController setIsLoading:];
-[ManageAppsUpdatesViewController noApps];
-[ManageAppsUpdatesViewController setNoApps:];
-[ManageAppsUpdatesViewController isDevice];
-[ManageAppsUpdatesViewController setIsDevice:];
-[ManageAppsUpdatesViewController checkboxValue];
-[ManageAppsUpdatesViewController setCheckboxValue:];
-[ManageAppsUpdatesViewController checkboxTitle];
-[ManageAppsUpdatesViewController setCheckboxTitle:];
-[ManageAppsUpdatesViewController apps];
-[ManageAppsUpdatesViewController setApps:];

@end

@interface ManageAppsWizardExtractAppViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
    B _fromLastBackup;
    @"WizardWindowController" wizard;
    q behavior;
    @"iOSAppDownloadManager" _manager;
    @"NSArray" _apps;
    @"NSString" _targetPath;
    @"NSString" _targetFolderName;
    @"NSImage" _icon;
    @"NSString" _imazingappInfoTitleLabel;
    @"NSString" _imazingappInfoLabel;
    @"NSString" _extractOptionsInfoLabel;
}

@property (T@"iOSAppDownloadManager",&,V_manager) manager;
@property (T@"NSArray",&,V_apps) apps;
@property (TB,V_fromLastBackup) fromLastBackup;
@property (T@"NSString",&,V_targetPath) targetPath;
@property (T@"NSString",&,V_targetFolderName) targetFolderName;
@property (T@"NSImage",&,V_icon) icon;
@property (T@"NSString",&,V_imazingappInfoTitleLabel) imazingappInfoTitleLabel;
@property (T@"NSString",&,V_imazingappInfoLabel) imazingappInfoLabel;
@property (T@"NSString",&,V_extractOptionsInfoLabel) extractOptionsInfoLabel;
@property (T@"WizardWindowController",Vwizard) wizard;
@property (Tq,Vbehavior) behavior;
@property (T@"NSView",&) view;
@property (T@"NSString",&) title;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[ManageAppsWizardExtractAppViewController initWithManager:apps:targetPath:];
-[ManageAppsWizardExtractAppViewController init];
-[ManageAppsWizardExtractAppViewController didBecomeActive];
-[ManageAppsWizardExtractAppViewController viewDidAppear];
-[ManageAppsWizardExtractAppViewController updateFolderSelection];
-[ManageAppsWizardExtractAppViewController leftButtonClicked];
-[ManageAppsWizardExtractAppViewController extractApps];
-[ManageAppsWizardExtractAppViewController chooseDestination:];
-[ManageAppsWizardExtractAppViewController showOpenPanel];
-[ManageAppsWizardExtractAppViewController extractModeClicked:];
-[ManageAppsWizardExtractAppViewController wizard];
-[ManageAppsWizardExtractAppViewController setWizard:];
-[ManageAppsWizardExtractAppViewController behavior];
-[ManageAppsWizardExtractAppViewController setBehavior:];
-[ManageAppsWizardExtractAppViewController manager];
-[ManageAppsWizardExtractAppViewController setManager:];
-[ManageAppsWizardExtractAppViewController apps];
-[ManageAppsWizardExtractAppViewController setApps:];
-[ManageAppsWizardExtractAppViewController fromLastBackup];
-[ManageAppsWizardExtractAppViewController setFromLastBackup:];
-[ManageAppsWizardExtractAppViewController targetPath];
-[ManageAppsWizardExtractAppViewController setTargetPath:];
-[ManageAppsWizardExtractAppViewController targetFolderName];
-[ManageAppsWizardExtractAppViewController setTargetFolderName:];
-[ManageAppsWizardExtractAppViewController icon];
-[ManageAppsWizardExtractAppViewController setIcon:];
-[ManageAppsWizardExtractAppViewController imazingappInfoTitleLabel];
-[ManageAppsWizardExtractAppViewController setImazingappInfoTitleLabel:];
-[ManageAppsWizardExtractAppViewController imazingappInfoLabel];
-[ManageAppsWizardExtractAppViewController setImazingappInfoLabel:];
-[ManageAppsWizardExtractAppViewController extractOptionsInfoLabel];
-[ManageAppsWizardExtractAppViewController setExtractOptionsInfoLabel:];

@end

@interface ManageAppsWizardExtractConfirmViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
    @"WizardWindowController" wizard;
    q behavior;
}

@property (T@"WizardWindowController",Vwizard) wizard;
@property (Tq,Vbehavior) behavior;
@property (T@"NSView",&) view;
@property (T@"NSString",&) title;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[ManageAppsWizardExtractConfirmViewController init];
-[ManageAppsWizardExtractConfirmViewController shouldBeSkipped];
-[ManageAppsWizardExtractConfirmViewController didBecomeActive];
-[ManageAppsWizardExtractConfirmViewController cancel];
-[ManageAppsWizardExtractConfirmViewController wizard];
-[ManageAppsWizardExtractConfirmViewController setWizard:];
-[ManageAppsWizardExtractConfirmViewController behavior];
-[ManageAppsWizardExtractConfirmViewController setBehavior:];

@end

@interface ManageAppsWizardRestoreAppViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
    @"WizardWindowController" wizard;
    q behavior;
    @"iOSAppDownloadManager" _manager;
    @"NSString" _infoTitleLabel;
    @"NSString" _infoLabel;
    @"NSString" _filenamesLabel;
    @"NSMutableArray" _sourcePaths;
    @"DropView" _dropView;
}

@property (T@"iOSAppDownloadManager",&,V_manager) manager;
@property (T@"NSString",&,V_infoTitleLabel) infoTitleLabel;
@property (T@"NSString",&,V_infoLabel) infoLabel;
@property (T@"NSString",&,V_filenamesLabel) filenamesLabel;
@property (T@"NSMutableArray",&,V_sourcePaths) sourcePaths;
@property (T@"DropView",W,N,V_dropView) dropView;
@property (T@"WizardWindowController",Vwizard) wizard;
@property (Tq,Vbehavior) behavior;
@property (T@"NSView",&) view;
@property (T@"NSString",&) title;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[ManageAppsWizardRestoreAppViewController init];
-[ManageAppsWizardRestoreAppViewController initWithManager:appPaths:];
-[ManageAppsWizardRestoreAppViewController didBecomeActive];
-[ManageAppsWizardRestoreAppViewController leftButtonAction];
-[ManageAppsWizardRestoreAppViewController rightButtonAction];
-[ManageAppsWizardRestoreAppViewController chooseFiles:];
-[ManageAppsWizardRestoreAppViewController updateFilenamesLabel];
-[ManageAppsWizardRestoreAppViewController wizard];
-[ManageAppsWizardRestoreAppViewController setWizard:];
-[ManageAppsWizardRestoreAppViewController behavior];
-[ManageAppsWizardRestoreAppViewController setBehavior:];
-[ManageAppsWizardRestoreAppViewController manager];
-[ManageAppsWizardRestoreAppViewController setManager:];
-[ManageAppsWizardRestoreAppViewController infoTitleLabel];
-[ManageAppsWizardRestoreAppViewController setInfoTitleLabel:];
-[ManageAppsWizardRestoreAppViewController infoLabel];
-[ManageAppsWizardRestoreAppViewController setInfoLabel:];
-[ManageAppsWizardRestoreAppViewController filenamesLabel];
-[ManageAppsWizardRestoreAppViewController setFilenamesLabel:];
-[ManageAppsWizardRestoreAppViewController sourcePaths];
-[ManageAppsWizardRestoreAppViewController setSourcePaths:];
-[ManageAppsWizardRestoreAppViewController dropView];
-[ManageAppsWizardRestoreAppViewController setDropView:];

@end

@interface ManageAppsWizardWindowController : WizardWindowController

/* instance methods */
-[ManageAppsWizardWindowController initWithDevice:];

@end

@interface ManageArchivesBytesToString : NSValueTransformer

/* class methods */
+[ManageArchivesBytesToString transformedValueClass];
+[ManageArchivesBytesToString allowsReverseTransformation];

/* instance methods */
-[ManageArchivesBytesToString transformedValue:];
-[ManageArchivesBytesToString init];

@end

@interface MediaCopyDuplicatedPlaylistsDialogBox : UserInteractionDialogBoxData {
    /* instance variables */
    B _shouldSkip;
}

@property (TB,V_shouldSkip) shouldSkip;

/* instance methods */
-[MediaCopyDuplicatedPlaylistsDialogBox init];
-[MediaCopyDuplicatedPlaylistsDialogBox show:playlistName:];
-[MediaCopyDuplicatedPlaylistsDialogBox shouldSkip];
-[MediaCopyDuplicatedPlaylistsDialogBox setShouldSkip:];

@end

@interface MediaCopyOperation : LegacyOperation {
    /* instance variables */
    @"NSArray" _processedTracksArray;
}

@property (T@"NSArray",&,V_processedTracksArray) processedTracksArray;
@property (T@"NSString",R) copyMessage;
@property (T@"NSArray",R) processedTracks;
@property (TB) iTunesIsBusy;
@property (TB) copyToiTunesMediaFolder;
@property (TQ,R) duplicatedItems;

/* instance methods */
-[MediaCopyOperation copyMessage];
-[MediaCopyOperation lock];
-[MediaCopyOperation unlock];
-[MediaCopyOperation processedTracks];
-[MediaCopyOperation exportProcessedTracks:];
-[MediaCopyOperation iTunesIsBusy];
-[MediaCopyOperation setITunesIsBusy:];
-[MediaCopyOperation copyToiTunesMediaFolder];
-[MediaCopyOperation setCopyToiTunesMediaFolder:];
-[MediaCopyOperation duplicatedItems];
-[MediaCopyOperation processedTracksArray];
-[MediaCopyOperation setProcessedTracksArray:];

@end

@interface MediaDurationTransformer : NSValueTransformer

/* class methods */
+[MediaDurationTransformer transformedValueClass];
+[MediaDurationTransformer allowsReverseTransformation];

/* instance methods */
-[MediaDurationTransformer transformedValue:];
-[MediaDurationTransformer init];

@end

@interface MediaLibraryHelper : NSObject

/* class methods */
+[MediaLibraryHelper getMediaFolder:];
+[MediaLibraryHelper getLayoutVersion:];
+[MediaLibraryHelper getLegacyLibraryXMLFile];

@end

@interface MediaManager : DatasetMobileManager <DatasetManagerDelegateProtocol> {
    /* instance variables */
    @"NSArray" _tracks;
    @"NSArray" _playlists;
    @"Device" _device;
    ^v _cppObject;
    @"NSDictionary" _tracksByUIDs;
    @"NSMutableArray" _delegates;
}

@property (T@"NSArray",&,V_tracks) tracks;
@property (T@"NSArray",&,V_playlists) playlists;
@property (T^v,V_cppObject) cppObject;
@property (T@"Device",&,V_device) device;
@property (T@"NSDictionary",&,V_tracksByUIDs) tracksByUIDs;
@property (T@"NSMutableArray",&,V_delegates) delegates;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* class methods */
+[MediaManager initialize];
+[MediaManager addPlaylist:];
+[MediaManager loadITTracks:];

/* instance methods */
-[MediaManager initWithCPPObject:];
-[MediaManager dealloc];
-[MediaManager copyToComputer:toPath:createFolderArtist:createFolderAlbum:];
-[MediaManager legacyCopyItemsToiTunes:copyToiTunesImportPlaylists:copyType:];
-[MediaManager createPlaylist];
-[MediaManager renamePlaylist:name:];
-[MediaManager deletePlaylists:confirmDelete:];
-[MediaManager deleteTracks:];
-[MediaManager addTracksToPlaylist:paths:copyToDevice:index:];
-[MediaManager addTracksToPlaylist:tracks:];
-[MediaManager removeFromPlaylist:tracks:];
-[MediaManager updatePlaylist:tracks:];
-[MediaManager copyPathsToDevice:isPodcast:];
-[MediaManager open:];
-[MediaManager updateRequestDidEnd:];
-[MediaManager refreshArtwork:];
-[MediaManager updateCachePath:];
-[MediaManager extractArtworksAsync];
-[MediaManager updateArtworksQueue:];
-[MediaManager getTracks:];
-[MediaManager addDelegate:];
-[MediaManager removeDelegate:];
-[MediaManager datasetManager:updateDidStart:];
-[MediaManager datasetManager:updateInProgress:];
-[MediaManager datasetManager:updateDidEnd:];
-[MediaManager datasetManager:updateDidFailWithError:notification:];
-[MediaManager tracks];
-[MediaManager setTracks:];
-[MediaManager playlists];
-[MediaManager setPlaylists:];
-[MediaManager device];
-[MediaManager setDevice:];
-[MediaManager cppObject];
-[MediaManager setCppObject:];
-[MediaManager tracksByUIDs];
-[MediaManager setTracksByUIDs:];
-[MediaManager delegates];
-[MediaManager setDelegates:];

@end

@interface MediaOperationImportIniTunesData : NSObject {
    /* instance variables */
    ^v _data;
}

@property (T^v,V_data) data;
@property (T@"MediaTrack",R) track;
@property (T@"DDNAErrorObject",&) error;

/* class methods */
+[MediaOperationImportIniTunesData dataWithDDNAMediaOperationImportIniTunesData:];

/* instance methods */
-[MediaOperationImportIniTunesData initWithDDNAMediaOperationImportIniTunesData:];
-[MediaOperationImportIniTunesData track];
-[MediaOperationImportIniTunesData error];
-[MediaOperationImportIniTunesData setError:];
-[MediaOperationImportIniTunesData data];
-[MediaOperationImportIniTunesData setData:];

@end

@interface MediaPlaylist : NSObject <DatasetObject, IAccessibleElement> {
    /* instance variables */
    B _isAlreadyIniTunes;
    @"NSString" fullTextIndex;
    @"NSString" _name;
    @"NSString" _persistentID;
    @"NSArray" _tracks;
    q _uid;
    q _kind;
    q _distinguishedKind;
    ^v _cppObject;
}

@property (T@"NSString",&,V_name) name;
@property (T@"NSString",&,V_persistentID) persistentID;
@property (T@"NSArray",&,V_tracks) tracks;
@property (Tq,V_uid) uid;
@property (Tq,V_kind) kind;
@property (Tq,V_distinguishedKind) distinguishedKind;
@property (TB,V_isAlreadyIniTunes) isAlreadyIniTunes;
@property (T^v,N,V_cppObject) cppObject;
@property (T@"NSString",&,VfullTextIndex) fullTextIndex;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[MediaPlaylist init];
-[MediaPlaylist initWithCPPObject:tracksByUIDs:];
-[MediaPlaylist description];
-[MediaPlaylist createTracks:];
-[MediaPlaylist accessibilityLabel];
-[MediaPlaylist fullTextIndex];
-[MediaPlaylist setFullTextIndex:];
-[MediaPlaylist name];
-[MediaPlaylist setName:];
-[MediaPlaylist persistentID];
-[MediaPlaylist setPersistentID:];
-[MediaPlaylist tracks];
-[MediaPlaylist setTracks:];
-[MediaPlaylist uid];
-[MediaPlaylist setUid:];
-[MediaPlaylist kind];
-[MediaPlaylist setKind:];
-[MediaPlaylist distinguishedKind];
-[MediaPlaylist setDistinguishedKind:];
-[MediaPlaylist isAlreadyIniTunes];
-[MediaPlaylist setIsAlreadyIniTunes:];
-[MediaPlaylist cppObject];
-[MediaPlaylist setCppObject:];

@end

@interface MediaTimeTransformer : NSValueTransformer

/* class methods */
+[MediaTimeTransformer transformedValueClass];
+[MediaTimeTransformer allowsReverseTransformation];

/* instance methods */
-[MediaTimeTransformer transformedValue:];
-[MediaTimeTransformer init];

@end

@interface MediaTrack : NSObject <DatasetObject, IAccessibleElement> {
    /* instance variables */
    B _isAppleMusic;
    B _isPurchase;
    B _isAvailableOffline;
    B _isPlaying;
    B _isLoading;
    B _isProtected;
    B _isTransferable;
    B _isPlayable;
    B _isCompilation;
    @"NSString" fullTextIndex;
    q _uid;
    q _iTunesLibraryTrackID;
    q _kind;
    Q _trackNumber;
    Q _trackCount;
    Q _discNumber;
    Q _discCount;
    Q _ratingNumber;
    Q _displayRating;
    Q _playCount;
    Q _skipCount;
    Q _bpm;
    Q _bitrate;
    d _sampleRate;
    Q _physicalOrder;
    Q _length;
    Q _size;
    Q _startTime;
    Q _stopTime;
    @"NSString" _title;
    @"NSString" _album;
    @"NSString" _artist;
    @"NSString" _albumArtist;
    @"NSString" _displayArtist;
    @"NSString" _composer;
    @"NSString" _genre;
    @"NSString" _comment;
    @"NSString" _fileType;
    @"NSString" _format;
    @"NSString" _path;
    @"NSString" _cachePath;
    @"NSString" _durationText;
    @"NSString" _durationTextSmall;
    @"NSString" _bitrateText;
    @"NSString" _sampleRateText;
    @"NSString" _sizeText;
    @"NSDate" _timeAdded;
    @"NSDate" _timePlayed;
    @"NSDate" _lastSkipped;
    @"NSDate" _timeModified;
    @"NSDate" _timePurchased;
    @"NSImage" _artwork;
    q _purchasedOrAppleMusic;
    ^v _cppObject;
}

@property (T^v,N,V_cppObject) cppObject;
@property (Tq,V_uid) uid;
@property (Tq,V_iTunesLibraryTrackID) iTunesLibraryTrackID;
@property (Tq,V_kind) kind;
@property (TQ,V_trackNumber) trackNumber;
@property (TQ,V_trackCount) trackCount;
@property (TQ,V_discNumber) discNumber;
@property (TQ,V_discCount) discCount;
@property (TQ,V_ratingNumber) ratingNumber;
@property (TQ,V_displayRating) displayRating;
@property (TQ,V_playCount) playCount;
@property (TQ,V_skipCount) skipCount;
@property (TQ,V_bpm) bpm;
@property (TQ,V_bitrate) bitrate;
@property (Td,V_sampleRate) sampleRate;
@property (TQ,V_physicalOrder) physicalOrder;
@property (TQ,V_length) length;
@property (TQ,V_size) size;
@property (TQ,V_startTime) startTime;
@property (TQ,V_stopTime) stopTime;
@property (TB,V_isAppleMusic) isAppleMusic;
@property (TB,V_isPurchase) isPurchase;
@property (TB,V_isAvailableOffline) isAvailableOffline;
@property (TB) isAlreadyIniTunes;
@property (TB,V_isPlaying) isPlaying;
@property (TB,V_isLoading) isLoading;
@property (TB,V_isProtected) isProtected;
@property (TB,V_isTransferable) isTransferable;
@property (TB,V_isPlayable) isPlayable;
@property (TB,V_isCompilation) isCompilation;
@property (T@"NSString",&,V_title) title;
@property (T@"NSString",&,V_album) album;
@property (T@"NSString",&,V_artist) artist;
@property (T@"NSString",&,V_albumArtist) albumArtist;
@property (T@"NSString",&,V_displayArtist) displayArtist;
@property (T@"NSString",&,V_composer) composer;
@property (T@"NSString",&,V_genre) genre;
@property (T@"NSString",&,V_comment) comment;
@property (T@"NSString",&,V_fileType) fileType;
@property (T@"NSString",&,V_format) format;
@property (T@"NSString",&,V_path) path;
@property (T@"NSString",&,V_cachePath) cachePath;
@property (T@"NSString",&) iTunesImportPath;
@property (T@"NSString",&) iTunesLibraryPersistentID;
@property (T@"NSString",&,V_durationText) durationText;
@property (T@"NSString",&,V_durationTextSmall) durationTextSmall;
@property (T@"NSString",&,V_bitrateText) bitrateText;
@property (T@"NSString",&,V_sampleRateText) sampleRateText;
@property (T@"NSString",&,V_sizeText) sizeText;
@property (T@"NSDate",&,V_timeAdded) timeAdded;
@property (T@"NSDate",&,V_timePlayed) timePlayed;
@property (T@"NSDate",&,V_lastSkipped) lastSkipped;
@property (T@"NSDate",&,V_timeModified) timeModified;
@property (T@"NSDate",&,V_timePurchased) timePurchased;
@property (T@"NSImage",&,V_artwork) artwork;
@property (Tq,V_purchasedOrAppleMusic) purchasedOrAppleMusic;
@property (T@"NSString",&,VfullTextIndex) fullTextIndex;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* class methods */
+[MediaTrack artworkUpdatedNotification];
+[MediaTrack mediaTrackWithCPPObject:];

/* instance methods */
-[MediaTrack init];
-[MediaTrack initWithCPPObject:];
-[MediaTrack dealloc];
-[MediaTrack observeValueForKeyPath:ofObject:change:context:];
-[MediaTrack description];
-[MediaTrack isAlreadyIniTunes];
-[MediaTrack setIsAlreadyIniTunes:];
-[MediaTrack iTunesImportPath];
-[MediaTrack setITunesImportPath:];
-[MediaTrack iTunesLibraryPersistentID];
-[MediaTrack setITunesLibraryPersistentID:];
-[MediaTrack accessibilityLabel];
-[MediaTrack refreshArtwork];
-[MediaTrack updateCachePath];
-[MediaTrack fullTextIndex];
-[MediaTrack setFullTextIndex:];
-[MediaTrack uid];
-[MediaTrack setUid:];
-[MediaTrack iTunesLibraryTrackID];
-[MediaTrack setITunesLibraryTrackID:];
-[MediaTrack kind];
-[MediaTrack setKind:];
-[MediaTrack trackNumber];
-[MediaTrack setTrackNumber:];
-[MediaTrack trackCount];
-[MediaTrack setTrackCount:];
-[MediaTrack discNumber];
-[MediaTrack setDiscNumber:];
-[MediaTrack discCount];
-[MediaTrack setDiscCount:];
-[MediaTrack ratingNumber];
-[MediaTrack setRatingNumber:];
-[MediaTrack displayRating];
-[MediaTrack setDisplayRating:];
-[MediaTrack playCount];
-[MediaTrack setPlayCount:];
-[MediaTrack skipCount];
-[MediaTrack setSkipCount:];
-[MediaTrack bpm];
-[MediaTrack setBpm:];
-[MediaTrack bitrate];
-[MediaTrack setBitrate:];
-[MediaTrack sampleRate];
-[MediaTrack setSampleRate:];
-[MediaTrack physicalOrder];
-[MediaTrack setPhysicalOrder:];
-[MediaTrack length];
-[MediaTrack setLength:];
-[MediaTrack size];
-[MediaTrack setSize:];
-[MediaTrack startTime];
-[MediaTrack setStartTime:];
-[MediaTrack stopTime];
-[MediaTrack setStopTime:];
-[MediaTrack isAppleMusic];
-[MediaTrack setIsAppleMusic:];
-[MediaTrack isPurchase];
-[MediaTrack setIsPurchase:];
-[MediaTrack isAvailableOffline];
-[MediaTrack setIsAvailableOffline:];
-[MediaTrack isPlaying];
-[MediaTrack setIsPlaying:];
-[MediaTrack isLoading];
-[MediaTrack setIsLoading:];
-[MediaTrack isProtected];
-[MediaTrack setIsProtected:];
-[MediaTrack isTransferable];
-[MediaTrack setIsTransferable:];
-[MediaTrack isPlayable];
-[MediaTrack setIsPlayable:];
-[MediaTrack isCompilation];
-[MediaTrack setIsCompilation:];
-[MediaTrack title];
-[MediaTrack setTitle:];
-[MediaTrack album];
-[MediaTrack setAlbum:];
-[MediaTrack artist];
-[MediaTrack setArtist:];
-[MediaTrack albumArtist];
-[MediaTrack setAlbumArtist:];
-[MediaTrack displayArtist];
-[MediaTrack setDisplayArtist:];
-[MediaTrack composer];
-[MediaTrack setComposer:];
-[MediaTrack genre];
-[MediaTrack setGenre:];
-[MediaTrack comment];
-[MediaTrack setComment:];
-[MediaTrack fileType];
-[MediaTrack setFileType:];
-[MediaTrack format];
-[MediaTrack setFormat:];
-[MediaTrack path];
-[MediaTrack setPath:];
-[MediaTrack cachePath];
-[MediaTrack setCachePath:];
-[MediaTrack durationText];
-[MediaTrack setDurationText:];
-[MediaTrack durationTextSmall];
-[MediaTrack setDurationTextSmall:];
-[MediaTrack bitrateText];
-[MediaTrack setBitrateText:];
-[MediaTrack sampleRateText];
-[MediaTrack setSampleRateText:];
-[MediaTrack sizeText];
-[MediaTrack setSizeText:];
-[MediaTrack timeAdded];
-[MediaTrack setTimeAdded:];
-[MediaTrack timePlayed];
-[MediaTrack setTimePlayed:];
-[MediaTrack lastSkipped];
-[MediaTrack setLastSkipped:];
-[MediaTrack timeModified];
-[MediaTrack setTimeModified:];
-[MediaTrack timePurchased];
-[MediaTrack setTimePurchased:];
-[MediaTrack artwork];
-[MediaTrack setArtwork:];
-[MediaTrack purchasedOrAppleMusic];
-[MediaTrack setPurchasedOrAppleMusic:];
-[MediaTrack cppObject];
-[MediaTrack setCppObject:];

@end

@interface MediaTrackSubtitleTransformer : NSValueTransformer

/* class methods */
+[MediaTrackSubtitleTransformer transformedValueClass];
+[MediaTrackSubtitleTransformer allowsReverseTransformation];

/* instance methods */
-[MediaTrackSubtitleTransformer transformedValue:];
-[MediaTrackSubtitleTransformer init];

@end

@interface MessageBase : NSObject {
    /* instance variables */
    B _isFromMe;
    B _isStarred;
    B _shouldBeProcessedAsync;
    B _displayMapView;
    B _mediaIsLoaded;
    B _mediaIsMissingInBackup;
    B _webDataAvailable;
    B _isDeleted;
    B _shouldDrawTail;
    B _isHidden;
    B _isDateHeader;
    B _showInAttachmentsOnly;
    f _mediaMapLongitude;
    f _mediaMapLatitude;
    @"NSString" _text;
    @"NSString" _displayText;
    q _displayTextFontSize;
    q _textFontSize;
    @"NSDate" _messageDate;
    @"NSDate" _dateOnly;
    @"NSDate" _sentDate;
    @"NSString" _displaySender;
    @"NSString" _senderContact;
    @"NSString" _senderID;
    @"NSString" _path;
    q _status;
    q _kind;
    @"NSString" _replyToText;
    @"NSString" _chatSessionUniqueName;
    @"NSString" _mediaInfo;
    @"NSString" _mediaBackupPath;
    @"NSString" _mediaCachePath;
    @"NSString" _mediaThumbCachePath;
    @"NSString" _errorText;
    q _mediaDisplayWidth;
    q _mediaDisplayHeight;
    @"NSString" _url;
    @"NSString" _urlTitle;
    @"NSString" _urlDescription;
    @"NSString" _urlImagePath;
    @"NSString" _fullTextSearchIndex;
    @"NSString" _extension;
    @"NSImage" _attachmentIcon;
    @"NSImage" _mediaImage;
    @"AVPlayer" _player;
    ^v _cppObject;
}

@property (T@"NSString",&,V_text) text;
@property (T@"NSString",&,V_displayText) displayText;
@property (Tq,V_displayTextFontSize) displayTextFontSize;
@property (Tq,V_textFontSize) textFontSize;
@property (T@"NSDate",V_messageDate) messageDate;
@property (T@"NSDate",V_dateOnly) dateOnly;
@property (T@"NSDate",V_sentDate) sentDate;
@property (T@"NSString",&,V_displaySender) displaySender;
@property (T@"NSString",&,V_senderContact) senderContact;
@property (T@"NSString",&,V_senderID) senderID;
@property (T@"NSString",&,V_path) path;
@property (Tq,V_status) status;
@property (Tq,V_kind) kind;
@property (TB,V_isFromMe) isFromMe;
@property (TB,V_isStarred) isStarred;
@property (TB,V_shouldBeProcessedAsync) shouldBeProcessedAsync;
@property (T@"NSString",&,V_replyToText) replyToText;
@property (T@"NSString",&,V_chatSessionUniqueName) chatSessionUniqueName;
@property (T@"NSString",&,V_mediaInfo) mediaInfo;
@property (T@"NSString",&,V_mediaBackupPath) mediaBackupPath;
@property (T@"NSString",&,V_mediaCachePath) mediaCachePath;
@property (T@"NSString",&,V_mediaThumbCachePath) mediaThumbCachePath;
@property (T@"NSString",&,V_errorText) errorText;
@property (Tq,V_mediaDisplayWidth) mediaDisplayWidth;
@property (Tq,V_mediaDisplayHeight) mediaDisplayHeight;
@property (Tf,V_mediaMapLongitude) mediaMapLongitude;
@property (Tf,V_mediaMapLatitude) mediaMapLatitude;
@property (TB,V_displayMapView) displayMapView;
@property (TB,V_mediaIsLoaded) mediaIsLoaded;
@property (TB,V_mediaIsMissingInBackup) mediaIsMissingInBackup;
@property (TB,V_webDataAvailable) webDataAvailable;
@property (TB,V_isDeleted) isDeleted;
@property (T@"NSString",&,V_url) url;
@property (T@"NSString",&,V_urlTitle) urlTitle;
@property (T@"NSString",&,V_urlDescription) urlDescription;
@property (T@"NSString",&,V_urlImagePath) urlImagePath;
@property (T@"NSString",&,V_fullTextSearchIndex) fullTextSearchIndex;
@property (T@"NSString",&,V_extension) extension;
@property (T@"NSImage",&,V_attachmentIcon) attachmentIcon;
@property (T@"NSImage",&,V_mediaImage) mediaImage;
@property (T@"AVPlayer",&,V_player) player;
@property (TB,V_shouldDrawTail) shouldDrawTail;
@property (TB,V_isHidden) isHidden;
@property (TB,V_isDateHeader) isDateHeader;
@property (TB,V_showInAttachmentsOnly) showInAttachmentsOnly;
@property (T^v,V_cppObject) cppObject;

/* instance methods */
-[MessageBase initWithCPPObject:];
-[MessageBase dealloc];
-[MessageBase isKindExportableAttachment:includeLocations:];
-[MessageBase asText:];
-[MessageBase text];
-[MessageBase setText:];
-[MessageBase displayText];
-[MessageBase setDisplayText:];
-[MessageBase displayTextFontSize];
-[MessageBase setDisplayTextFontSize:];
-[MessageBase textFontSize];
-[MessageBase setTextFontSize:];
-[MessageBase messageDate];
-[MessageBase setMessageDate:];
-[MessageBase dateOnly];
-[MessageBase setDateOnly:];
-[MessageBase sentDate];
-[MessageBase setSentDate:];
-[MessageBase displaySender];
-[MessageBase setDisplaySender:];
-[MessageBase senderContact];
-[MessageBase setSenderContact:];
-[MessageBase senderID];
-[MessageBase setSenderID:];
-[MessageBase path];
-[MessageBase setPath:];
-[MessageBase status];
-[MessageBase setStatus:];
-[MessageBase kind];
-[MessageBase setKind:];
-[MessageBase isFromMe];
-[MessageBase setIsFromMe:];
-[MessageBase isStarred];
-[MessageBase setIsStarred:];
-[MessageBase shouldBeProcessedAsync];
-[MessageBase setShouldBeProcessedAsync:];
-[MessageBase replyToText];
-[MessageBase setReplyToText:];
-[MessageBase chatSessionUniqueName];
-[MessageBase setChatSessionUniqueName:];
-[MessageBase mediaInfo];
-[MessageBase setMediaInfo:];
-[MessageBase mediaBackupPath];
-[MessageBase setMediaBackupPath:];
-[MessageBase mediaCachePath];
-[MessageBase setMediaCachePath:];
-[MessageBase mediaThumbCachePath];
-[MessageBase setMediaThumbCachePath:];
-[MessageBase errorText];
-[MessageBase setErrorText:];
-[MessageBase mediaDisplayWidth];
-[MessageBase setMediaDisplayWidth:];
-[MessageBase mediaDisplayHeight];
-[MessageBase setMediaDisplayHeight:];
-[MessageBase mediaMapLongitude];
-[MessageBase setMediaMapLongitude:];
-[MessageBase mediaMapLatitude];
-[MessageBase setMediaMapLatitude:];
-[MessageBase displayMapView];
-[MessageBase setDisplayMapView:];
-[MessageBase mediaIsLoaded];
-[MessageBase setMediaIsLoaded:];
-[MessageBase mediaIsMissingInBackup];
-[MessageBase setMediaIsMissingInBackup:];
-[MessageBase webDataAvailable];
-[MessageBase setWebDataAvailable:];
-[MessageBase isDeleted];
-[MessageBase setIsDeleted:];
-[MessageBase url];
-[MessageBase setUrl:];
-[MessageBase urlTitle];
-[MessageBase setUrlTitle:];
-[MessageBase urlDescription];
-[MessageBase setUrlDescription:];
-[MessageBase urlImagePath];
-[MessageBase setUrlImagePath:];
-[MessageBase fullTextSearchIndex];
-[MessageBase setFullTextSearchIndex:];
-[MessageBase extension];
-[MessageBase setExtension:];
-[MessageBase attachmentIcon];
-[MessageBase setAttachmentIcon:];
-[MessageBase mediaImage];
-[MessageBase setMediaImage:];
-[MessageBase player];
-[MessageBase setPlayer:];
-[MessageBase shouldDrawTail];
-[MessageBase setShouldDrawTail:];
-[MessageBase isHidden];
-[MessageBase setIsHidden:];
-[MessageBase isDateHeader];
-[MessageBase setIsDateHeader:];
-[MessageBase showInAttachmentsOnly];
-[MessageBase setShowInAttachmentsOnly:];
-[MessageBase cppObject];
-[MessageBase setCppObject:];

@end

@interface MessageManager : MessagingDatasetManager

@property (T^v,D) cppObject;

/* instance methods */
-[MessageManager init];
-[MessageManager extractMediaWithThumbnail:];

@end

@interface MessageMessage : MessageBase {
    /* instance variables */
    @"NSString" _subject;
    @"NSString" _statusText;
    @"NSString" _detailedDateAsString;
    q _service;
}

@property (T@"NSString",&,V_subject) subject;
@property (T@"NSString",&,V_statusText) statusText;
@property (T@"NSString",&,V_detailedDateAsString) detailedDateAsString;
@property (Tq,V_service) service;

/* instance methods */
-[MessageMessage initWithCPPObject:];
-[MessageMessage updateAVPlayerDimensions];
-[MessageMessage subject];
-[MessageMessage setSubject:];
-[MessageMessage statusText];
-[MessageMessage setStatusText:];
-[MessageMessage detailedDateAsString];
-[MessageMessage setDetailedDateAsString:];
-[MessageMessage service];
-[MessageMessage setService:];

@end

@interface MessageSession : SessionBase {
    /* instance variables */
    B _isMultipleContactSession;
    @"NSArray" _contacts;
    @"NSImage" _sessionImage;
    @"NSImage" _sessionImage2;
}

@property (T@"NSArray",&,V_contacts) contacts;
@property (TB,V_isMultipleContactSession) isMultipleContactSession;
@property (T@"NSImage",&,V_sessionImage) sessionImage;
@property (T@"NSImage",&,V_sessionImage2) sessionImage2;

/* instance methods */
-[MessageSession initWithCPPObject:];
-[MessageSession getSessionImages:];
-[MessageSession createSquareContactImage:];
-[MessageSession contacts];
-[MessageSession setContacts:];
-[MessageSession isMultipleContactSession];
-[MessageSession setIsMultipleContactSession:];
-[MessageSession sessionImage];
-[MessageSession setSessionImage:];
-[MessageSession sessionImage2];
-[MessageSession setSessionImage2:];

@end

@interface MessageViewController : MessagesViewController <NSTableViewDelegate> {
    /* instance variables */
    B _showDetailedDate;
    B _enableShowTimeMenuItem;
    @"NSDictionary" _bubblesTextAttributes;
    @"NSDictionary" _groupHeadersTextAttributes;
    @"NSArray" _filteredSessionItems;
    @"NSArray" _filteredMessageItems;
}

@property (T@"NSDictionary",&,V_bubblesTextAttributes) bubblesTextAttributes;
@property (T@"NSDictionary",&,V_groupHeadersTextAttributes) groupHeadersTextAttributes;
@property (T@"NSArray",&,V_filteredSessionItems) filteredSessionItems;
@property (T@"NSArray",&,V_filteredMessageItems) filteredMessageItems;
@property (TB,N,V_showDetailedDate) showDetailedDate;
@property (TB,N,V_enableShowTimeMenuItem) enableShowTimeMenuItem;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[MessageViewController messageHeightOfRow:];
-[MessageViewController messageViewForTableColumn:];
-[MessageViewController filterSessions];
-[MessageViewController filterMessages];
-[MessageViewController messageDidClickTableColumn];
-[MessageViewController shouldSelectRow:];
-[MessageViewController sessionHeightOfRow];
-[MessageViewController sessionViewForTableColumn:];
-[MessageViewController awakeFromNib];
-[MessageViewController mediaProcessedCallback:];
-[MessageViewController observeValueForKeyPath:ofObject:change:context:];
-[MessageViewController getIsShowContactDetails];
-[MessageViewController getIsHideAttachments];
-[MessageViewController getIsShowTimesForAllMessages];
-[MessageViewController getIsOnlyShowAttachments];
-[MessageViewController getIsShowOriginalMessagesOfReplies];
-[MessageViewController exportToTextContextMenu:];
-[MessageViewController exportToText:];
-[MessageViewController exportToXLSContextMenu:];
-[MessageViewController exportToXLS:];
-[MessageViewController exportToCSVContextMenu:];
-[MessageViewController exportToCSV:];
-[MessageViewController copyToComputer:];
-[MessageViewController copyToComputerContextMenu:];
-[MessageViewController exportToPDFContextMenu:];
-[MessageViewController exportToPDF:];
-[MessageViewController exportToPrinterContextMenu:];
-[MessageViewController exportToPrinter:];
-[MessageViewController exportToRSMFContextMenu:];
-[MessageViewController exportToRSMF:];
-[MessageViewController onShowOptionsMenu:];
-[MessageViewController initWithDevice:];
-[MessageViewController dealloc];
-[MessageViewController toolbarButtons];
-[MessageViewController helpURL];
-[MessageViewController bubblesTextAttributes];
-[MessageViewController setBubblesTextAttributes:];
-[MessageViewController groupHeadersTextAttributes];
-[MessageViewController setGroupHeadersTextAttributes:];
-[MessageViewController filteredSessionItems];
-[MessageViewController setFilteredSessionItems:];
-[MessageViewController filteredMessageItems];
-[MessageViewController setFilteredMessageItems:];
-[MessageViewController showDetailedDate];
-[MessageViewController setShowDetailedDate:];
-[MessageViewController enableShowTimeMenuItem];
-[MessageViewController setEnableShowTimeMenuItem:];

@end

@interface MessagesViewController : ModernManagerDatasetViewController <NSTableViewDelegate> {
    /* instance variables */
    B _messageViewContentChanged;
    B _isFiltering;
    @"NSTableView" _sessionTableView;
    @"NSArrayController" _messageItemsController;
    @"NSScrollView" _messageScrollView;
    @"NSTableView" _messageTableView;
    @"NSMenu" _optionsMenu;
    @"NSSearchField" _sessionSearchField;
    @"CoreLocalizationManager" _localisationManager;
    @"SessionBase" _selectedSession;
    @"NSTimer" _updateVisibleMediasTimer;
    @"_TtC7iMazing29MessagesPrintWindowController" _printWindowController;
    @"_TtC7iMazing30MessagesExportWindowController" _exportWindowController;
    @"NSString" _exportFilenameLabel;
    @"NSString" _exportMultipleSessionLabel;
    @"NSString" _sessionNameFilter;
    @"NSDate" _dateFilterFrom;
    @"NSDate" _dateFilterTo;
    @"NSString" _multipleChatSessionLabel;
    @"NSView" _dateRangePickerView;
    @"DateRangePickerViewController" _dateRangePickerViewController;
    @"_TtC7iMazing20MessagesMediaHandler" _mediaHandler;
}

@property (T@"NSView",&,V_dateRangePickerView) dateRangePickerView;
@property (T@"DateRangePickerViewController",&,V_dateRangePickerViewController) dateRangePickerViewController;
@property (T@"_TtC7iMazing20MessagesMediaHandler",&,V_mediaHandler) mediaHandler;
@property (T@"NSTableView",&,V_sessionTableView) sessionTableView;
@property (T@"NSArrayController",&,V_messageItemsController) messageItemsController;
@property (T@"NSScrollView",&,V_messageScrollView) messageScrollView;
@property (T@"NSTableView",&,V_messageTableView) messageTableView;
@property (T@"NSMenu",&,V_optionsMenu) optionsMenu;
@property (T@"NSSearchField",&,V_sessionSearchField) sessionSearchField;
@property (T@"CoreLocalizationManager",R,V_localisationManager) localisationManager;
@property (T@"SessionBase",&,V_selectedSession) selectedSession;
@property (TB,V_messageViewContentChanged) messageViewContentChanged;
@property (T@"NSTimer",&,V_updateVisibleMediasTimer) updateVisibleMediasTimer;
@property (T@"_TtC7iMazing29MessagesPrintWindowController",&,V_printWindowController) printWindowController;
@property (T@"_TtC7iMazing30MessagesExportWindowController",&,V_exportWindowController) exportWindowController;
@property (T@"NSString",&,V_exportFilenameLabel) exportFilenameLabel;
@property (T@"NSString",&,V_exportMultipleSessionLabel) exportMultipleSessionLabel;
@property (T@"NSString",&,V_sessionNameFilter) sessionNameFilter;
@property (T@"NSDate",&,V_dateFilterFrom) dateFilterFrom;
@property (T@"NSDate",&,V_dateFilterTo) dateFilterTo;
@property (TB,V_isFiltering) isFiltering;
@property (T@"NSString",&,V_multipleChatSessionLabel) multipleChatSessionLabel;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[MessagesViewController sessionViewForTableColumn:];
-[MessagesViewController messageViewForTableColumn:];
-[MessagesViewController sessionHeightOfRow];
-[MessagesViewController messageHeightOfRow:];
-[MessagesViewController shouldSelectRow:];
-[MessagesViewController messageDidClickTableColumn];
-[MessagesViewController tableView:isGroupRow:];
-[MessagesViewController tableView:viewForTableColumn:row:];
-[MessagesViewController tableView:heightOfRow:];
-[MessagesViewController tableView:shouldSelectRow:];
-[MessagesViewController tableView:shouldTypeSelectForEvent:withCurrentSearchString:];
-[MessagesViewController tableView:writeRowsWithIndexes:toPasteboard:];
-[MessagesViewController tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:];
-[MessagesViewController tableView:rowViewForRow:];
-[MessagesViewController tableView:didClickTableColumn:];
-[MessagesViewController hasExportableAsAttachmentItems:includeURLs:includeLocations:];
-[MessagesViewController hasNonAttachmentItems:];
-[MessagesViewController CountableItems:];
-[MessagesViewController getOnlyQuickLookItems:max:];
-[MessagesViewController selectFirstSession];
-[MessagesViewController updateContactDetails:showContactDetails:];
-[MessagesViewController filterSessions];
-[MessagesViewController filterMessages];
-[MessagesViewController applySearchFilter];
-[MessagesViewController updateSelectedSessionCount];
-[MessagesViewController initWithDataset:device:];
-[MessagesViewController dealloc];
-[MessagesViewController hasBeenRemoved];
-[MessagesViewController awakeFromNib];
-[MessagesViewController mediaProcessedCallback:];
-[MessagesViewController defaultSuccessCallback];
-[MessagesViewController initializeDateRangePicker];
-[MessagesViewController clearSessionFilter:];
-[MessagesViewController updateVisibleMedias:];
-[MessagesViewController messageViewOnWidthChanged:];
-[MessagesViewController messageViewOnScrolling:];
-[MessagesViewController getIsShowContactDetails];
-[MessagesViewController getIsHideAttachments];
-[MessagesViewController getIsShowTimesForAllMessages];
-[MessagesViewController getIsOnlyShowAttachments];
-[MessagesViewController getIsShowOriginalMessagesOfReplies];
-[MessagesViewController tableViewSelectionDidChange:];
-[MessagesViewController tableViewColumnDidResize:];
-[MessagesViewController validateAction:];
-[MessagesViewController doubleClick:];
-[MessagesViewController openContextMenu:];
-[MessagesViewController open:];
-[MessagesViewController quickLookContextMenu:];
-[MessagesViewController quickLook:];
-[MessagesViewController searchFieldDidUpdate:];
-[MessagesViewController copy:];
-[MessagesViewController messageTableClickedOrSelected:];
-[MessagesViewController observeValueForKeyPath:ofObject:change:context:];
-[MessagesViewController sessionTableView];
-[MessagesViewController setSessionTableView:];
-[MessagesViewController messageItemsController];
-[MessagesViewController setMessageItemsController:];
-[MessagesViewController messageScrollView];
-[MessagesViewController setMessageScrollView:];
-[MessagesViewController messageTableView];
-[MessagesViewController setMessageTableView:];
-[MessagesViewController optionsMenu];
-[MessagesViewController setOptionsMenu:];
-[MessagesViewController sessionSearchField];
-[MessagesViewController setSessionSearchField:];
-[MessagesViewController localisationManager];
-[MessagesViewController selectedSession];
-[MessagesViewController setSelectedSession:];
-[MessagesViewController messageViewContentChanged];
-[MessagesViewController setMessageViewContentChanged:];
-[MessagesViewController updateVisibleMediasTimer];
-[MessagesViewController setUpdateVisibleMediasTimer:];
-[MessagesViewController printWindowController];
-[MessagesViewController setPrintWindowController:];
-[MessagesViewController exportWindowController];
-[MessagesViewController setExportWindowController:];
-[MessagesViewController exportFilenameLabel];
-[MessagesViewController setExportFilenameLabel:];
-[MessagesViewController exportMultipleSessionLabel];
-[MessagesViewController setExportMultipleSessionLabel:];
-[MessagesViewController sessionNameFilter];
-[MessagesViewController setSessionNameFilter:];
-[MessagesViewController dateFilterFrom];
-[MessagesViewController setDateFilterFrom:];
-[MessagesViewController dateFilterTo];
-[MessagesViewController setDateFilterTo:];
-[MessagesViewController isFiltering];
-[MessagesViewController setIsFiltering:];
-[MessagesViewController multipleChatSessionLabel];
-[MessagesViewController setMultipleChatSessionLabel:];
-[MessagesViewController dateRangePickerView];
-[MessagesViewController setDateRangePickerView:];
-[MessagesViewController dateRangePickerViewController];
-[MessagesViewController setDateRangePickerViewController:];
-[MessagesViewController mediaHandler];
-[MessagesViewController setMediaHandler:];

@end

@interface MessagingDatasetManager : ModernDatasetManager

@property (T^v,D) cppObject;
@property (T@"NSDate",R) oldestMessageDate;
@property (T@"NSDate",R) latestMessageDate;

/* class methods */
+[MessagingDatasetManager buildLabelForMissingMedia:];
+[MessagingDatasetManager getSuffixFor:];

/* instance methods */
-[MessagingDatasetManager init];
-[MessagingDatasetManager oldestMessageDate];
-[MessagingDatasetManager latestMessageDate];
-[MessagingDatasetManager extractMediaWithThumbnail:];
-[MessagingDatasetManager operationExportSessionsAttachment:startDate:endDate:textFilter:path:askForOverwrite:createSessionFolder:];
-[MessagingDatasetManager operationExportAttachment:path:askForOverwrite:createSessionFolder:];
-[MessagingDatasetManager operationOpenAttachment:];
-[MessagingDatasetManager operationExportSessionsToPDF:startDate:endDate:textFilter:paperWidth:paperHeight:marginTop:marginBottom:marginLeft:marginRight:scale:addChatName:addPageNumbers:addMetadata:addContactDetails:showAllTimes:attachmentsOnly:hideAttachments:addReplyTo:reverseOrder:mergeIntoOneFile:path:askForOverwrite:signingOrgUUID:];
-[MessagingDatasetManager operationExportToPDF:paperWidth:paperHeight:marginTop:marginBottom:marginLeft:marginRight:scale:addChatName:addPageNumbers:addMetadata:addContactDetails:showAllTimes:attachmentsOnly:hideAttachments:addReplyTo:path:askForOverwrite:signingOrgUUID:];
-[MessagingDatasetManager operationExportSessionsTo:sessions:startDate:endDate:textFilter:path:options:attachmentsOnly:hideAttachments:mergeIntoOneFile:askForOverwrite:reverseOrder:signingOrgUUID:];
-[MessagingDatasetManager operationExportTo:items:path:options:askForOverwrite:signingOrgUUID:];

@end

@interface MimeType : NSObject {
    /* instance variables */
    @"NSString" _type;
    @"NSString" _extension;
}

@property (T@"NSString",&,V_type) type;
@property (T@"NSString",&,V_extension) extension;

/* instance methods */
-[MimeType initWithCPPObject:];
-[MimeType type];
-[MimeType setType:];
-[MimeType extension];
-[MimeType setExtension:];

@end

@interface MobileDeviceServices : NSObject {
    /* instance variables */
    B _inited;
}

@property (TB,V_inited) inited;

/* class methods */
+[MobileDeviceServices sharedInstance];
+[MobileDeviceServices allocWithZone:];

/* instance methods */
-[MobileDeviceServices init];
-[MobileDeviceServices restart];
-[MobileDeviceServices inited];
-[MobileDeviceServices setInited:];

@end

@interface ModernDatasetManager : NSObject {
    /* instance variables */
    # _objectClass;
    : _objectInitSelector;
    ^v _cppObject;
}

@property (Tq,R) loadState;
@property (Tq,R) loadType;
@property (T@"NSError",R) error;
@property (Td,R) progress;
@property (Td,R) progressMax;
@property (TB,R) progressIsIndeterminate;
@property (T@"NSString",R) message;
@property (T@"NSString",R) wizardImage;
@property (T@"NSArray",R) items;
@property (T#,V_objectClass) objectClass;
@property (T:,V_objectInitSelector) objectInitSelector;
@property (T^v,V_cppObject) cppObject;

/* instance methods */
-[ModernDatasetManager initWithCPPObject:];
-[ModernDatasetManager dealloc];
-[ModernDatasetManager loadState];
-[ModernDatasetManager loadType];
-[ModernDatasetManager error];
-[ModernDatasetManager progress];
-[ModernDatasetManager progressMax];
-[ModernDatasetManager progressIsIndeterminate];
-[ModernDatasetManager message];
-[ModernDatasetManager wizardImage];
-[ModernDatasetManager items];
-[ModernDatasetManager load:error:progress:];
-[ModernDatasetManager refresh:error:progress:];
-[ModernDatasetManager load:error:progress:preferredLoadType:];
-[ModernDatasetManager refresh:error:progress:preferredLoadType:];
-[ModernDatasetManager requestStop];
-[ModernDatasetManager shouldReloadData];
-[ModernDatasetManager shouldDisplayPartialBackupScreen];
-[ModernDatasetManager shouldDisplayBackupRefreshScreen];
-[ModernDatasetManager shouldDisplayBackupRefreshScreenWhenUserClicksRefresh];
-[ModernDatasetManager shouldDisplayDeviceOrBackupRefreshScreen];
-[ModernDatasetManager shouldDisplayDeviceOrBackupRefreshScreenWhenUserClicksRefresh];
-[ModernDatasetManager setShouldPerformFullBackup:];
-[ModernDatasetManager objectClass];
-[ModernDatasetManager setObjectClass:];
-[ModernDatasetManager objectInitSelector];
-[ModernDatasetManager setObjectInitSelector:];
-[ModernDatasetManager cppObject];
-[ModernDatasetManager setCppObject:];

@end

@interface ModernManagerDatasetViewController : DatasetViewController <_TtP7iMazing26DeviceOrBackupViewDelegate_, MainWindowDeviceContentViewController, NSMenuDelegate> {
    /* instance variables */
    B hasSearchFeature;
    B hasChangePathFeature;
    B hasSliderFeature;
    B hasQuickLookFeature;
    B hasRefreshFeature;
    B hasGoBackOrForwardFeature;
    B hasChangeViewFeature;
    B _awake;
    B _showEmptyScreen;
    B _ignoreErrors;
    @"_TtC7iMazing20MainWindowController" mainWindowController;
    @"NSString" searchString;
    @"NSString" searchPlaceholder;
    @"UserInteractionScreenData" screenData;
    @"NSString" statusText;
    @"ModernDatasetManager" _manager;
    @"NSArray" _items;
    @"_TtC7iMazing25DatasetLoadViewController" _loadViewController;
    @"NSArrayController" _itemsController;
}

@property (T@"NSArray",&,V_items) items;
@property (T@"_TtC7iMazing25DatasetLoadViewController",&,V_loadViewController) loadViewController;
@property (TB,V_ignoreErrors) ignoreErrors;
@property (T@"iOSDevice",R) iOSDevice;
@property (T@"ModernDatasetManager",&,V_manager) manager;
@property (TB,V_awake) awake;
@property (TB,V_showEmptyScreen) showEmptyScreen;
@property (T@"NSArrayController",&,V_itemsController) itemsController;
@property (T@"NSView",&,D) view;
@property (T@?,R) defaultSuccessCallback;
@property (T@?,R) defaultErrorCallback;
@property (T@?,R) defaultProgressCallback;
@property (T@"_TtC7iMazing20MainWindowController",VmainWindowController) mainWindowController;
@property (T@"NSString",C,VstatusText) statusText;
@property (T@"NSString",C,VsearchString) searchString;
@property (TB,VhasRefreshFeature) hasRefreshFeature;
@property (TB,VhasQuickLookFeature) hasQuickLookFeature;
@property (TB,VhasGoBackOrForwardFeature) hasGoBackOrForwardFeature;
@property (TB,VhasChangeViewFeature) hasChangeViewFeature;
@property (TB,VhasChangePathFeature) hasChangePathFeature;
@property (TB,VhasSearchFeature) hasSearchFeature;
@property (TB,VhasSliderFeature) hasSliderFeature;
@property (T@"UserInteractionScreenData",&,VscreenData) screenData;
@property (T@"NSString",&,VsearchPlaceholder) searchPlaceholder;
@property (T@"NSString",R,D) helpURL;
@property (T@"NSString",?,R) deviceUID;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[ModernManagerDatasetViewController initWithDataset:device:];
-[ModernManagerDatasetViewController iOSDevice];
-[ModernManagerDatasetViewController dealloc];
-[ModernManagerDatasetViewController awakeFromNib];
-[ModernManagerDatasetViewController loadData];
-[ModernManagerDatasetViewController loadData:];
-[ModernManagerDatasetViewController deviceUID];
-[ModernManagerDatasetViewController archiveSelected:];
-[ModernManagerDatasetViewController observeValueForKeyPath:ofObject:change:context:];
-[ModernManagerDatasetViewController refreshData];
-[ModernManagerDatasetViewController refreshData:];
-[ModernManagerDatasetViewController didBecomeActive];
-[ModernManagerDatasetViewController searchTextDidChange:];
-[ModernManagerDatasetViewController defaultSuccessCallback];
-[ModernManagerDatasetViewController defaultErrorCallback];
-[ModernManagerDatasetViewController defaultProgressCallback];
-[ModernManagerDatasetViewController setAsEmpty];
-[ModernManagerDatasetViewController displayError:];
-[ModernManagerDatasetViewController showSavePanel:allowedFileTypes:completion:];
-[ModernManagerDatasetViewController showChooseDestinationPanel:];
-[ModernManagerDatasetViewController showOpenPanel:];
-[ModernManagerDatasetViewController showOpenPanel:allowedUTIs:];
-[ModernManagerDatasetViewController clickedOrSelected:];
-[ModernManagerDatasetViewController clickedOrSelectedOrArranged:];
-[ModernManagerDatasetViewController filesFromDraggingInfo:allowedTypes:];
-[ModernManagerDatasetViewController menuWillOpen:];
-[ModernManagerDatasetViewController validateAction:];
-[ModernManagerDatasetViewController validateMenuItem:];
-[ModernManagerDatasetViewController validateToolbarItem:];
-[ModernManagerDatasetViewController predicateForSearchString:];
-[ModernManagerDatasetViewController loadFromDevice];
-[ModernManagerDatasetViewController loadFromBackup];
-[ModernManagerDatasetViewController mainWindowController];
-[ModernManagerDatasetViewController setMainWindowController:];
-[ModernManagerDatasetViewController searchString];
-[ModernManagerDatasetViewController setSearchString:];
-[ModernManagerDatasetViewController searchPlaceholder];
-[ModernManagerDatasetViewController setSearchPlaceholder:];
-[ModernManagerDatasetViewController screenData];
-[ModernManagerDatasetViewController setScreenData:];
-[ModernManagerDatasetViewController hasSearchFeature];
-[ModernManagerDatasetViewController setHasSearchFeature:];
-[ModernManagerDatasetViewController hasChangePathFeature];
-[ModernManagerDatasetViewController setHasChangePathFeature:];
-[ModernManagerDatasetViewController hasSliderFeature];
-[ModernManagerDatasetViewController setHasSliderFeature:];
-[ModernManagerDatasetViewController statusText];
-[ModernManagerDatasetViewController setStatusText:];
-[ModernManagerDatasetViewController hasQuickLookFeature];
-[ModernManagerDatasetViewController setHasQuickLookFeature:];
-[ModernManagerDatasetViewController hasRefreshFeature];
-[ModernManagerDatasetViewController setHasRefreshFeature:];
-[ModernManagerDatasetViewController hasGoBackOrForwardFeature];
-[ModernManagerDatasetViewController setHasGoBackOrForwardFeature:];
-[ModernManagerDatasetViewController hasChangeViewFeature];
-[ModernManagerDatasetViewController setHasChangeViewFeature:];
-[ModernManagerDatasetViewController manager];
-[ModernManagerDatasetViewController setManager:];
-[ModernManagerDatasetViewController items];
-[ModernManagerDatasetViewController setItems:];
-[ModernManagerDatasetViewController loadViewController];
-[ModernManagerDatasetViewController setLoadViewController:];
-[ModernManagerDatasetViewController awake];
-[ModernManagerDatasetViewController setAwake:];
-[ModernManagerDatasetViewController showEmptyScreen];
-[ModernManagerDatasetViewController setShowEmptyScreen:];
-[ModernManagerDatasetViewController itemsController];
-[ModernManagerDatasetViewController setItemsController:];
-[ModernManagerDatasetViewController ignoreErrors];
-[ModernManagerDatasetViewController setIgnoreErrors:];

@end

@interface NetworkReachability : NSObject {
    /* instance variables */
    B _localWiFi;
    ^{__SCNetworkReachability=} _reachability;
}

/* class methods */
+[NetworkReachability networkReachabilityWithHostName:];
+[NetworkReachability networkReachabilityWithAddress:];
+[NetworkReachability networkReachabilityForInternetConnection];
+[NetworkReachability networkReachabilityForLocalWiFi];

/* instance methods */
-[NetworkReachability startNotifier];
-[NetworkReachability stopNotifier];
-[NetworkReachability dealloc];
-[NetworkReachability localWiFiStatusForFlags:];
-[NetworkReachability networkStatusForFlags:];
-[NetworkReachability connectionRequired];
-[NetworkReachability currentReachabilityStatus];

@end

@interface NoteManager : DatasetMobileManager {
    /* instance variables */
    ^v _ddnaNoteManager;
    @"NSArray" _notes;
}

@property (T@"NSArray",R) notes;

/* class methods */
+[NoteManager noteManagerWithDDNANoteManager:];

/* instance methods */
-[NoteManager copyItems:toPath:runType:];
-[NoteManager exportItemsAsText:runType:];
-[NoteManager open:runType:];
-[NoteManager openMultiple:runType:];
-[NoteManager checkTrialModeMaxItemsExceeded:deviceUDID:];
-[NoteManager setDatasetRemainingItems];
-[NoteManager copyItemsASync:toPath:];
-[NoteManager copyItemsSync:toPath:];
-[NoteManager exportItemsAsTextASync:];
-[NoteManager exportItemsAsTextSync:];
-[NoteManager openASync:];
-[NoteManager openSync:];
-[NoteManager openMultipleASync:];
-[NoteManager openMultipleSync:];
-[NoteManager exportAttachments:toPath:];
-[NoteManager initWithDDNANoteManager:];
-[NoteManager dealloc];
-[NoteManager notes];
-[NoteManager updateRequestDidEnd:];

@end

@interface NoteViewController : iOSDeviceContentViewController <WebPolicyDelegate, WebFrameLoadDelegate> {
    /* instance variables */
    @"NoteManager" _noteManager;
    @"LegacyDataFilterSortDescriptor" _sortDescriptorDate;
    @"LegacyDataFilterSortDescriptorText" _sortDescriptorTitle;
    @"DragOutTableView" _noteTableView;
    @"NoteViewDataSource" _noteViewDataSource;
    @"NoteViewDelegate" _noteViewDelegate;
    @"NSSplitView" _noteSplitView;
    @"DeviceViewSplitViewDelegate" _noteSplitViewDelegate;
    @"WebView" _noteWebView;
    @"PrintJobWindowController" _printJob;
    B _awake;
}

@property (TB,V_awake) awake;
@property (T@"NoteManager",&,V_noteManager) noteManager;
@property (T@"WebView",&,N,V_noteWebView) noteWebView;
@property (T@"NSTableView",&,N,V_noteTableView) noteTableView;
@property (T@"NSSplitView",&,N,V_noteSplitView) noteSplitView;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[NoteViewController copyNotesUsingDragOutInfo:];
-[NoteViewController refreshNoteWithSelection:];
-[NoteViewController searchTextDidChange:];
-[NoteViewController updateWindowStatusText:];
-[NoteViewController copy:];
-[NoteViewController performDoubleAction:];
-[NoteViewController refreshData];
-[NoteViewController quickLook:];
-[NoteViewController openWith:];
-[NoteViewController copyToComputer:];
-[NoteViewController exportAttachments:];
-[NoteViewController contextMenuNoteQuickLook:];
-[NoteViewController contextMenuNoteOpenWith:];
-[NoteViewController contextMenuNoteCopyToComputer:];
-[NoteViewController contextMenuNoteExportAttachments:];
-[NoteViewController exportAsPDF:];
-[NoteViewController contextMenuNoteExportAsPDF:];
-[NoteViewController exportToPrinter:];
-[NoteViewController contextMenuNotePrint:];
-[NoteViewController validateMenuItem:];
-[NoteViewController validateToolbarItem:];
-[NoteViewController menuWillOpen:];
-[NoteViewController validateOpenWithMenuItem:note:action:delegate:];
-[NoteViewController initWithDevice:];
-[NoteViewController dealloc];
-[NoteViewController awakeFromNib];
-[NoteViewController toolbarButtons];
-[NoteViewController loadData];
-[NoteViewController archiveSelected:];
-[NoteViewController willBeDisplayedByMainWindowController];
-[NoteViewController datasetManager:updateDidStart:];
-[NoteViewController datasetManager:updateDidEnd:];
-[NoteViewController updateDisplay];
-[NoteViewController webView:decidePolicyForNewWindowAction:request:newFrameName:decisionListener:];
-[NoteViewController proceedPrintJobWitMode:note:];
-[NoteViewController helpURL];
-[NoteViewController noteManager];
-[NoteViewController setNoteManager:];
-[NoteViewController noteTableView];
-[NoteViewController setNoteTableView:];
-[NoteViewController noteWebView];
-[NoteViewController setNoteWebView:];
-[NoteViewController noteSplitView];
-[NoteViewController setNoteSplitView:];
-[NoteViewController awake];
-[NoteViewController setAwake:];

@end

@interface NoteViewDataSource : DeviceTableViewDataSource {
    /* instance variables */
    @"NoteManager" _noteManager;
    @"Device" _device;
}

@property (T@"NoteManager",V_noteManager) noteManager;
@property (T@"Device",&,V_device) device;

/* instance methods */
-[NoteViewDataSource tableView:objectValueForTableColumn:row:];
-[NoteViewDataSource dragOutTableView:proceedFilesPromiseUsingDragOutInfo:];
-[NoteViewDataSource dragOutTableView:provideStringForType:];
-[NoteViewDataSource noteManager];
-[NoteViewDataSource setNoteManager:];
-[NoteViewDataSource device];
-[NoteViewDataSource setDevice:];

@end

@interface NoteViewDelegate : DeviceTableViewDelegate {
    /* instance variables */
    @"NoteViewController" controller;
}

@property (T@"NoteViewController",N,Vcontroller) controller;

/* instance methods */
-[NoteViewDelegate tableViewSelectionDidChange:];
-[NoteViewDelegate tableView:willDisplayCell:forTableColumn:row:];
-[NoteViewDelegate controller];
-[NoteViewDelegate setController:];

@end

@interface ObjectPair : NSObject {
    /* instance variables */
    @ _key;
    @ _value;
}

@property (T@,&,V_key) key;
@property (T@,&,V_value) value;

/* instance methods */
-[ObjectPair initWithKey:value:];
-[ObjectPair key];
-[ObjectPair setKey:];
-[ObjectPair value];
-[ObjectPair setValue:];

@end

@interface OperationSchedulerManager : NSObject {
    /* instance variables */
    ^v _cppObject;
}

@property (T^v,V_cppObject) cppObject;

/* class methods */
+[OperationSchedulerManager defaultManager];

/* instance methods */
-[OperationSchedulerManager pauseScheduler];
-[OperationSchedulerManager resumeScheduler];
-[OperationSchedulerManager cppObject];
-[OperationSchedulerManager setCppObject:];

@end

@interface OptionsWizardWindowController : WizardWindowController

/* instance methods */
-[OptionsWizardWindowController initWithDevice:];

@end

@interface Organization : NSObject <IAccessibleElement> {
    /* instance variables */
    @"NSString" _uuid;
    @"NSString" _name;
    @"NSString" _department;
    @"NSString" _phone;
    @"NSString" _supportPhone;
    @"NSString" _email;
    @"NSString" _address;
    @"NSString" _address1;
    @"NSString" _address2;
    @"NSString" _city;
    @"NSString" _zipCode;
    @"NSString" _state;
    @"NSString" _countryCode;
    @"NSString" _certificateCommonName;
    @"NSString" _fullTextIndex;
    ^v _cppObject;
}

@property (T@"NSString",&,N,V_uuid) uuid;
@property (T@"NSString",&,N,V_name) name;
@property (T@"NSString",&,N,V_department) department;
@property (T@"NSString",&,N,V_phone) phone;
@property (T@"NSString",&,N,V_supportPhone) supportPhone;
@property (T@"NSString",&,N,V_email) email;
@property (T@"NSString",&,N,V_address) address;
@property (T@"NSString",&,N,V_address1) address1;
@property (T@"NSString",&,N,V_address2) address2;
@property (T@"NSString",&,N,V_city) city;
@property (T@"NSString",&,N,V_zipCode) zipCode;
@property (T@"NSString",&,N,V_state) state;
@property (T@"NSString",&,N,V_countryCode) countryCode;
@property (T@"NSString",&,N,V_certificateCommonName) certificateCommonName;
@property (T@"NSString",&,N,V_fullTextIndex) fullTextIndex;
@property (T^v,V_cppObject) cppObject;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* class methods */
+[Organization getOrganizations];
+[Organization addOrganization:pkcs12Path:];
+[Organization removeOrganization:];
+[Organization exportOrganization:toPath:];
+[Organization exportOrganizationPKCS12:toPath:];
+[Organization exportOrganizationCertificate:toPath:];
+[Organization importOrganizationAtPath:];

/* instance methods */
-[Organization initWithCPPObject:];
-[Organization init];
-[Organization accessibilityLabel];
-[Organization dealloc];
-[Organization getCertificateFromKeychain];
-[Organization isEqual:];
-[Organization description];
-[Organization uuid];
-[Organization setUuid:];
-[Organization name];
-[Organization setName:];
-[Organization department];
-[Organization setDepartment:];
-[Organization phone];
-[Organization setPhone:];
-[Organization supportPhone];
-[Organization setSupportPhone:];
-[Organization email];
-[Organization setEmail:];
-[Organization address];
-[Organization setAddress:];
-[Organization address1];
-[Organization setAddress1:];
-[Organization address2];
-[Organization setAddress2:];
-[Organization city];
-[Organization setCity:];
-[Organization zipCode];
-[Organization setZipCode:];
-[Organization state];
-[Organization setState:];
-[Organization countryCode];
-[Organization setCountryCode:];
-[Organization certificateCommonName];
-[Organization setCertificateCommonName:];
-[Organization fullTextIndex];
-[Organization setFullTextIndex:];
-[Organization cppObject];
-[Organization setCppObject:];

@end

@interface Photo : NSObject {
    /* instance variables */
    B _isOtherPhoto;
    B _isLivePhoto;
    B _isPortrait;
    B _isPanorama;
    B _isScreenshot;
    B _isOtherVideo;
    B _isTimeLaps;
    B _isSloMo;
    B _displayRAWBadge;
    B _displayJPGBadge;
    B _isHidden;
    B _isFavorite;
    B _isTrashed;
    B _isHDR;
    B _isProRes;
    B _isOriginalRAW;
    B _isBurstSelected;
    B _isBurstKept;
    B _isBurstBestFocus;
    B _isMainBurst;
    B _isLivePhotoLive;
    B _isLivePhotoLoop;
    B _isLivePhotoLongExposure;
    B _isLivePhotoBounce;
    B _isPlayable;
    B _isLandscapeOrientation;
    B _canBeDeleted;
    B _isACamerarollItem;
    B _mediaIsInCloud;
    B _hasThumbnail;
    B _isLargeMedia;
    B _showPlayVideoButton;
    B _isWaitingOnLargeMedia;
    B _operationFinished;
    B _allowPlay;
    I _sectionID;
    i _viewCount;
    i _playCount;
    i _mediaTypes;
    i _flags;
    i _BurstTypes;
    I _percentageCompleted;
    i _burstTypes;
    q _iMazingUID;
    q _id;
    @"NSString" _uuid;
    @"NSString" _filename;
    @"NSString" _path;
    @"NSString" _extension;
    @"NSString" _typeIdentifier;
    @"NSString" _originalFilename;
    Q _originalFileSize;
    @"NSString" _fileSizeAsString;
    @"NSDate" _addedDate;
    @"NSDate" _createdDate;
    @"NSDate" _modificationDate;
    @"NSDate" _lastSharedDate;
    @"NSDate" _trashedDate;
    @"NSString" _mediaTitle;
    @"NSString" _mediaCaption;
    @"NSString" _mediaDescription;
    @"NSString" _mediaKeywords;
    @"NSString" _dimensions;
    q _width;
    q _height;
    d _duration;
    @"NSString" _durationAsString;
    d _latitude;
    d _longitude;
    @"NSString" _latitudeAsString;
    @"NSString" _longitudeAsString;
    @"NSString" _originalColorSpace;
    @"NSString" _suggestedExportedFilename;
    @"NSString" _thumbnailBadge;
    @"NSString" _livePhotoBadge;
    @"NSString" _assetTypeAsString;
    @"NSString" _burstUid;
    @"NSArray" _albums;
    @"NSArray" _infoData;
    @"NSString" _fullTextSearchIndex;
    @"NSString" _cacheThumbnailPath;
    @"NSString" _cacheSmallThumbnailPath;
    @"NSString" _cacheMediaPath;
    @"NSString" _displayThumbnailPath;
    ^v _cppObject;
    @"NSArray" _additionalAssetsWithoutSelf;
}

@property (Tq,V_iMazingUID) iMazingUID;
@property (Tq,V_id) id;
@property (T@"NSString",&,V_uuid) uuid;
@property (TI,V_sectionID) sectionID;
@property (T@"NSString",&,V_filename) filename;
@property (T@"NSString",&,V_path) path;
@property (T@"NSString",&,V_extension) extension;
@property (T@"NSString",&,V_typeIdentifier) typeIdentifier;
@property (T@"NSString",&,V_originalFilename) originalFilename;
@property (TQ,V_originalFileSize) originalFileSize;
@property (T@"NSString",&,V_fileSizeAsString) fileSizeAsString;
@property (T@"NSDate",&,V_addedDate) addedDate;
@property (T@"NSDate",&,V_createdDate) createdDate;
@property (T@"NSDate",&,V_modificationDate) modificationDate;
@property (T@"NSDate",&,V_lastSharedDate) lastSharedDate;
@property (T@"NSDate",&,V_trashedDate) trashedDate;
@property (T@"NSString",&,V_mediaTitle) mediaTitle;
@property (T@"NSString",&,V_mediaCaption) mediaCaption;
@property (T@"NSString",&,V_mediaDescription) mediaDescription;
@property (T@"NSString",&,V_mediaKeywords) mediaKeywords;
@property (T@"NSString",&,V_dimensions) dimensions;
@property (Tq,V_width) width;
@property (Tq,V_height) height;
@property (Td,V_duration) duration;
@property (T@"NSString",&,V_durationAsString) durationAsString;
@property (Td,V_latitude) latitude;
@property (Td,V_longitude) longitude;
@property (T@"NSString",&,V_latitudeAsString) latitudeAsString;
@property (T@"NSString",&,V_longitudeAsString) longitudeAsString;
@property (T@"NSString",&,V_originalColorSpace) originalColorSpace;
@property (T@"NSString",&,V_suggestedExportedFilename) suggestedExportedFilename;
@property (TB,V_isOtherPhoto) isOtherPhoto;
@property (TB,V_isLivePhoto) isLivePhoto;
@property (TB,V_isPortrait) isPortrait;
@property (TB,V_isPanorama) isPanorama;
@property (TB,V_isScreenshot) isScreenshot;
@property (TB,V_isOtherVideo) isOtherVideo;
@property (TB,V_isTimeLaps) isTimeLaps;
@property (TB,V_isSloMo) isSloMo;
@property (TB,V_displayRAWBadge) displayRAWBadge;
@property (TB,V_displayJPGBadge) displayJPGBadge;
@property (TB,V_isHidden) isHidden;
@property (TB,V_isFavorite) isFavorite;
@property (TB,V_isTrashed) isTrashed;
@property (TB,V_isHDR) isHDR;
@property (TB,V_isProRes) isProRes;
@property (TB,V_isOriginalRAW) isOriginalRAW;
@property (TB,V_isBurstSelected) isBurstSelected;
@property (TB,V_isBurstKept) isBurstKept;
@property (TB,V_isBurstBestFocus) isBurstBestFocus;
@property (TB,V_isMainBurst) isMainBurst;
@property (TB,V_isLivePhotoLive) isLivePhotoLive;
@property (TB,V_isLivePhotoLoop) isLivePhotoLoop;
@property (TB,V_isLivePhotoLongExposure) isLivePhotoLongExposure;
@property (TB,V_isLivePhotoBounce) isLivePhotoBounce;
@property (TB,V_isPlayable) isPlayable;
@property (TB,V_allowPlay) allowPlay;
@property (TB,V_isLandscapeOrientation) isLandscapeOrientation;
@property (TB,V_canBeDeleted) canBeDeleted;
@property (TB,V_isACamerarollItem) isACamerarollItem;
@property (TB,V_mediaIsInCloud) mediaIsInCloud;
@property (T@"NSString",&,V_thumbnailBadge) thumbnailBadge;
@property (T@"NSString",&,V_livePhotoBadge) livePhotoBadge;
@property (T@"NSString",&,V_assetTypeAsString) assetTypeAsString;
@property (T@"NSString",&,V_burstUid) burstUid;
@property (Ti,V_viewCount) viewCount;
@property (Ti,V_playCount) playCount;
@property (Ti,V_mediaTypes) mediaTypes;
@property (Ti,V_flags) flags;
@property (Ti,V_burstTypes) burstTypes;
@property (T@"NSArray",&,V_albums) albums;
@property (T@"NSArray",&,V_additionalAssetsWithoutSelf) additionalAssetsWithoutSelf;
@property (T@"NSArray",&,V_infoData) infoData;
@property (T@"NSString",&,V_fullTextSearchIndex) fullTextSearchIndex;
@property (TB,V_hasThumbnail) hasThumbnail;
@property (T@"NSString",&,V_cacheThumbnailPath) cacheThumbnailPath;
@property (T@"NSString",&,V_cacheSmallThumbnailPath) cacheSmallThumbnailPath;
@property (T@"NSString",&,V_cacheMediaPath) cacheMediaPath;
@property (T^v,V_cppObject) cppObject;
@property (Ti,R,V_BurstTypes) BurstTypes;
@property (T@"NSArray",R) additionalAssets;
@property (T@"NSArray",R) assetInfoData;
@property (T@"NSString",&,V_displayThumbnailPath) displayThumbnailPath;
@property (TI,V_percentageCompleted) percentageCompleted;
@property (TB,V_isLargeMedia) isLargeMedia;
@property (TB,V_showPlayVideoButton) showPlayVideoButton;
@property (TB,V_isWaitingOnLargeMedia) isWaitingOnLargeMedia;
@property (TB,V_operationFinished) operationFinished;

/* class methods */
+[Photo dateFromDDNADateTime:];

/* instance methods */
-[Photo initWithCPPObject:];
-[Photo dealloc];
-[Photo updateMedia];
-[Photo updatePercentageCompleted];
-[Photo updateThumbnail];
-[Photo initInfoData];
-[Photo updateInfoData];
-[Photo additionalAssets];
-[Photo initAssets];
-[Photo updateAssetsThumbnails];
-[Photo updateAssetsPaths];
-[Photo updateAssetInfoData];
-[Photo assetInfoData];
-[Photo iMazingUID];
-[Photo setIMazingUID:];
-[Photo id];
-[Photo setId:];
-[Photo uuid];
-[Photo setUuid:];
-[Photo sectionID];
-[Photo setSectionID:];
-[Photo filename];
-[Photo setFilename:];
-[Photo path];
-[Photo setPath:];
-[Photo extension];
-[Photo setExtension:];
-[Photo typeIdentifier];
-[Photo setTypeIdentifier:];
-[Photo originalFilename];
-[Photo setOriginalFilename:];
-[Photo originalFileSize];
-[Photo setOriginalFileSize:];
-[Photo fileSizeAsString];
-[Photo setFileSizeAsString:];
-[Photo addedDate];
-[Photo setAddedDate:];
-[Photo createdDate];
-[Photo setCreatedDate:];
-[Photo modificationDate];
-[Photo setModificationDate:];
-[Photo lastSharedDate];
-[Photo setLastSharedDate:];
-[Photo trashedDate];
-[Photo setTrashedDate:];
-[Photo mediaTitle];
-[Photo setMediaTitle:];
-[Photo mediaCaption];
-[Photo setMediaCaption:];
-[Photo mediaDescription];
-[Photo setMediaDescription:];
-[Photo mediaKeywords];
-[Photo setMediaKeywords:];
-[Photo dimensions];
-[Photo setDimensions:];
-[Photo width];
-[Photo setWidth:];
-[Photo height];
-[Photo setHeight:];
-[Photo duration];
-[Photo setDuration:];
-[Photo durationAsString];
-[Photo setDurationAsString:];
-[Photo latitude];
-[Photo setLatitude:];
-[Photo longitude];
-[Photo setLongitude:];
-[Photo latitudeAsString];
-[Photo setLatitudeAsString:];
-[Photo longitudeAsString];
-[Photo setLongitudeAsString:];
-[Photo originalColorSpace];
-[Photo setOriginalColorSpace:];
-[Photo suggestedExportedFilename];
-[Photo setSuggestedExportedFilename:];
-[Photo isOtherPhoto];
-[Photo setIsOtherPhoto:];
-[Photo isLivePhoto];
-[Photo setIsLivePhoto:];
-[Photo isPortrait];
-[Photo setIsPortrait:];
-[Photo isPanorama];
-[Photo setIsPanorama:];
-[Photo isScreenshot];
-[Photo setIsScreenshot:];
-[Photo isOtherVideo];
-[Photo setIsOtherVideo:];
-[Photo isTimeLaps];
-[Photo setIsTimeLaps:];
-[Photo isSloMo];
-[Photo setIsSloMo:];
-[Photo displayRAWBadge];
-[Photo setDisplayRAWBadge:];
-[Photo displayJPGBadge];
-[Photo setDisplayJPGBadge:];
-[Photo isHidden];
-[Photo setIsHidden:];
-[Photo isFavorite];
-[Photo setIsFavorite:];
-[Photo isTrashed];
-[Photo setIsTrashed:];
-[Photo isHDR];
-[Photo setIsHDR:];
-[Photo isProRes];
-[Photo setIsProRes:];
-[Photo isOriginalRAW];
-[Photo setIsOriginalRAW:];
-[Photo isBurstSelected];
-[Photo setIsBurstSelected:];
-[Photo isBurstKept];
-[Photo setIsBurstKept:];
-[Photo isBurstBestFocus];
-[Photo setIsBurstBestFocus:];
-[Photo isMainBurst];
-[Photo setIsMainBurst:];
-[Photo isLivePhotoLive];
-[Photo setIsLivePhotoLive:];
-[Photo isLivePhotoLoop];
-[Photo setIsLivePhotoLoop:];
-[Photo isLivePhotoLongExposure];
-[Photo setIsLivePhotoLongExposure:];
-[Photo isLivePhotoBounce];
-[Photo setIsLivePhotoBounce:];
-[Photo isPlayable];
-[Photo setIsPlayable:];
-[Photo isLandscapeOrientation];
-[Photo setIsLandscapeOrientation:];
-[Photo canBeDeleted];
-[Photo setCanBeDeleted:];
-[Photo isACamerarollItem];
-[Photo setIsACamerarollItem:];
-[Photo mediaIsInCloud];
-[Photo setMediaIsInCloud:];
-[Photo thumbnailBadge];
-[Photo setThumbnailBadge:];
-[Photo livePhotoBadge];
-[Photo setLivePhotoBadge:];
-[Photo assetTypeAsString];
-[Photo setAssetTypeAsString:];
-[Photo viewCount];
-[Photo setViewCount:];
-[Photo playCount];
-[Photo setPlayCount:];
-[Photo mediaTypes];
-[Photo setMediaTypes:];
-[Photo flags];
-[Photo setFlags:];
-[Photo BurstTypes];
-[Photo burstUid];
-[Photo setBurstUid:];
-[Photo albums];
-[Photo setAlbums:];
-[Photo infoData];
-[Photo setInfoData:];
-[Photo fullTextSearchIndex];
-[Photo setFullTextSearchIndex:];
-[Photo hasThumbnail];
-[Photo setHasThumbnail:];
-[Photo cacheThumbnailPath];
-[Photo setCacheThumbnailPath:];
-[Photo cacheSmallThumbnailPath];
-[Photo setCacheSmallThumbnailPath:];
-[Photo cacheMediaPath];
-[Photo setCacheMediaPath:];
-[Photo displayThumbnailPath];
-[Photo setDisplayThumbnailPath:];
-[Photo percentageCompleted];
-[Photo setPercentageCompleted:];
-[Photo isLargeMedia];
-[Photo setIsLargeMedia:];
-[Photo showPlayVideoButton];
-[Photo setShowPlayVideoButton:];
-[Photo isWaitingOnLargeMedia];
-[Photo setIsWaitingOnLargeMedia:];
-[Photo operationFinished];
-[Photo setOperationFinished:];
-[Photo cppObject];
-[Photo setCppObject:];
-[Photo allowPlay];
-[Photo setAllowPlay:];
-[Photo burstTypes];
-[Photo setBurstTypes:];
-[Photo additionalAssetsWithoutSelf];
-[Photo setAdditionalAssetsWithoutSelf:];

@end

@interface PhotoInfoDataItem : NSObject {
    /* instance variables */
    B _isLeaf;
    q _itemType;
    @"NSString" _key;
    @"NSString" _value;
    d _latitude;
    d _longitude;
    @"NSArray" _subItems;
    ^v _cppObject;
}

@property (Tq,V_itemType) itemType;
@property (T@"NSString",&,V_key) key;
@property (T@"NSString",&,V_value) value;
@property (TB,V_isLeaf) isLeaf;
@property (Td,V_latitude) latitude;
@property (Td,V_longitude) longitude;
@property (T@"NSArray",&,V_subItems) subItems;
@property (T^v,V_cppObject) cppObject;

/* instance methods */
-[PhotoInfoDataItem initWithCPPObject:];
-[PhotoInfoDataItem updateSubItemsValues];
-[PhotoInfoDataItem dealloc];
-[PhotoInfoDataItem itemType];
-[PhotoInfoDataItem setItemType:];
-[PhotoInfoDataItem key];
-[PhotoInfoDataItem setKey:];
-[PhotoInfoDataItem value];
-[PhotoInfoDataItem setValue:];
-[PhotoInfoDataItem isLeaf];
-[PhotoInfoDataItem setIsLeaf:];
-[PhotoInfoDataItem latitude];
-[PhotoInfoDataItem setLatitude:];
-[PhotoInfoDataItem longitude];
-[PhotoInfoDataItem setLongitude:];
-[PhotoInfoDataItem subItems];
-[PhotoInfoDataItem setSubItems:];
-[PhotoInfoDataItem cppObject];
-[PhotoInfoDataItem setCppObject:];

@end

@interface PhotoLibraryViewController : PhotosBaseViewController

/* instance methods */
-[PhotoLibraryViewController menuWillOpen:];
-[PhotoLibraryViewController validateInstallAppMenuItem:folderNode:];
-[PhotoLibraryViewController initWithDevice:];
-[PhotoLibraryViewController dealloc];
-[PhotoLibraryViewController awakeFromNib];
-[PhotoLibraryViewController handleATHNotification:];
-[PhotoLibraryViewController deviceBrowser:didAddDevice:moreComing:];
-[PhotoLibraryViewController respondsToSelector:];
-[PhotoLibraryViewController toolbarButtons];

@end

@interface PhotoManager : ModernDatasetManager {
    /* instance variables */
    @"NSArray" _cachedMomentItems;
}

@property (T^v,D) cppObject;
@property (T@"NSArray",&,V_cachedMomentItems) cachedMomentItems;
@property (T@"NSDate",R) firstAvailableDate;
@property (T@"NSDate",R) lastAvailableDate;
@property (T@"NSArray",R) sidebarItems;
@property (T@"NSArray",R) momentItems;
@property (TB,R) hasThumbnails;
@property (TB,R) isProcessingThumbnails;

/* instance methods */
-[PhotoManager init];
-[PhotoManager hasThumbnails];
-[PhotoManager isProcessingThumbnails];
-[PhotoManager firstAvailableDate];
-[PhotoManager lastAvailableDate];
-[PhotoManager getLastImportedAlbum];
-[PhotoManager sidebarItems];
-[PhotoManager momentItems];
-[PhotoManager resetMoments];
-[PhotoManager updateBurstsAssetsThumbnails:];
-[PhotoManager updateHighPriorityThumbnails:];
-[PhotoManager operationCountLivePhotoVideoAssets:];
-[PhotoManager operationCountPortraitHEICOriginalsAssets:];
-[PhotoManager operationCountOriginalsAssets:ignoreLivePhotoOriginalVideos:includeAllBursts:];
-[PhotoManager operationGetAllBurstItems:];
-[PhotoManager operationCountUltraWideAssets:ignoreLivePhotoUltraWideVideos:includeAllBursts:];
-[PhotoManager operationCountJPGAssets:includeOriginals:];
-[PhotoManager operationGetDetailViewInfosFor:includeLargeMedias:];
-[PhotoManager operationCopySidebarItemsToComputer:];
-[PhotoManager operationCopyAssetsToComputer:path:];
-[PhotoManager operationCopyToComputer:path:includeLivePhotoVideos:burstsOnly:];
-[PhotoManager operationCopyToComputer:path:includeLivePhotoVideos:ignoreLivePhotoImage:includePortraitOriginals:ignorePortraitFinals:includeAllBursts:includeOriginals:includeUltraWide:includeJPGFromRAW:ignoreCurrentRAW:convertHEICtoJPG:convertHEVCtoMP4:burstsOnly:createMomentsFolder:useLocationDateAsMomentsFolder:createMediaTypesFolder:createAlbumFolder:useOriginalFilenames:photoExportQuality:videoExportQuality:];
-[PhotoManager operationOpenItems:];
-[PhotoManager operationCopyToDevice:];
-[PhotoManager operationCopyToDevice:sidebar:];
-[PhotoManager operationRemoveAlbumsFromDevice:];
-[PhotoManager operationRemoveFromDevice:sidebar:];
-[PhotoManager operationRemoveFromCameraroll:];
-[PhotoManager operationRenameAlbumOnDevice:newName:];
-[PhotoManager thumbnailsThreadStarted];
-[PhotoManager thumbnailsThreadEnded];
-[PhotoManager camerarollDeleteCallback:endOperation:];
-[PhotoManager cachedMomentItems];
-[PhotoManager setCachedMomentItems:];

@end

@interface PhotoMomentItem : NSObject {
    /* instance variables */
    @"NSString" _title;
    @"NSString" _dateIntervalAsString;
    @"NSDate" _startDate;
    @"NSDate" _endDate;
    ^v _cppObject;
}

@property (T@"NSString",&,V_title) title;
@property (T@"NSString",&,V_dateIntervalAsString) dateIntervalAsString;
@property (T@"NSDate",&,V_startDate) startDate;
@property (T@"NSDate",&,V_endDate) endDate;
@property (T^v,V_cppObject) cppObject;

/* instance methods */
-[PhotoMomentItem initWithCPPObject:];
-[PhotoMomentItem dealloc];
-[PhotoMomentItem title];
-[PhotoMomentItem setTitle:];
-[PhotoMomentItem dateIntervalAsString];
-[PhotoMomentItem setDateIntervalAsString:];
-[PhotoMomentItem startDate];
-[PhotoMomentItem setStartDate:];
-[PhotoMomentItem endDate];
-[PhotoMomentItem setEndDate:];
-[PhotoMomentItem cppObject];
-[PhotoMomentItem setCppObject:];

@end

@interface PhotoSidebarItem : NSObject {
    /* instance variables */
    B _isHeader;
    B _isLeaf;
    B _isSelectable;
    B _isCamerarollSidebar;
    B _isBurstSidebar;
    B _acceptImport;
    B _canBeDeleted;
    Q _uid;
    @"NSString" _title;
    @"NSImage" _icon;
    @"NSString" _filter;
    @"NSArray" _subItems;
    @"PhotoAlbum" _album;
    d _lastScrollPosition;
    ^v _cppObject;
}

@property (TQ,V_uid) uid;
@property (T@"NSString",&,V_title) title;
@property (TB,V_isHeader) isHeader;
@property (TB,V_isLeaf) isLeaf;
@property (TB,V_isSelectable) isSelectable;
@property (TB,V_isCamerarollSidebar) isCamerarollSidebar;
@property (TB,V_isBurstSidebar) isBurstSidebar;
@property (T@"NSString",&,V_filter) filter;
@property (T@"NSArray",&,V_subItems) subItems;
@property (TB,V_acceptImport) acceptImport;
@property (TB,V_canBeDeleted) canBeDeleted;
@property (T^v,V_cppObject) cppObject;
@property (T@"NSImage",&,V_icon) icon;
@property (T@"PhotoAlbum",R,V_album) album;
@property (Td,V_lastScrollPosition) lastScrollPosition;

/* instance methods */
-[PhotoSidebarItem initWithCPPObject:];
-[PhotoSidebarItem dealloc];
-[PhotoSidebarItem uid];
-[PhotoSidebarItem setUid:];
-[PhotoSidebarItem title];
-[PhotoSidebarItem setTitle:];
-[PhotoSidebarItem icon];
-[PhotoSidebarItem setIcon:];
-[PhotoSidebarItem isHeader];
-[PhotoSidebarItem setIsHeader:];
-[PhotoSidebarItem isLeaf];
-[PhotoSidebarItem setIsLeaf:];
-[PhotoSidebarItem isSelectable];
-[PhotoSidebarItem setIsSelectable:];
-[PhotoSidebarItem isCamerarollSidebar];
-[PhotoSidebarItem setIsCamerarollSidebar:];
-[PhotoSidebarItem isBurstSidebar];
-[PhotoSidebarItem setIsBurstSidebar:];
-[PhotoSidebarItem filter];
-[PhotoSidebarItem setFilter:];
-[PhotoSidebarItem subItems];
-[PhotoSidebarItem setSubItems:];
-[PhotoSidebarItem album];
-[PhotoSidebarItem acceptImport];
-[PhotoSidebarItem setAcceptImport:];
-[PhotoSidebarItem canBeDeleted];
-[PhotoSidebarItem setCanBeDeleted:];
-[PhotoSidebarItem lastScrollPosition];
-[PhotoSidebarItem setLastScrollPosition:];
-[PhotoSidebarItem cppObject];
-[PhotoSidebarItem setCppObject:];

@end

@interface PhotoViewController : ModernManagerDatasetViewController <NSOutlineViewDelegate, NSOutlineViewDataSource, NSTableViewDataSource, NSTableViewDelegate, NSTabViewDelegate> {
    /* instance variables */
    B _isAnimating;
    B _isShowingDetailView;
    B _isShowingCollectionView;
    B _disableMenuActions;
    B _renameSyncedAlbumOperationStarted;
    B _isInitializing;
    @"NSTimer" _updateThumbnailsTimer;
    @"DateRangePickerViewController" _dateRangePickerViewController;
    @"_TtC7iMazing29PhotoCollectionViewController" _photoCollectionViewController;
    @"_TtC7iMazing25PhotoDetailViewController" _photoDetailViewController;
    q _currentSidebarSelection;
    @"NSArray" _sidebarItems;
    @"NSString" _multipleSidebarSelectionLabel;
    @"NSDate" _dateFilterFrom;
    @"NSDate" _dateFilterTo;
    q _sidebarSelectedRowBeforeEnteringDetailView;
    q _selectedIndexBeforeEnteringDetailView;
    @"_TtC7iMazing17PhotoMediaHandler" _mediaHandler;
    @"_TtC7iMazing27PhotoExportWindowController" _photoExportWindowController;
    @"_TtC7iMazing24PhotoImageCaptureManager" _imageCaptureManager;
    @"NSString" _sidebarTextBeforeRename;
    @"NSString" _sidebarTitleToSelect;
    @"NSArray" _allowedUTIs;
    @"NSArray" _tableViewSortDescriptors;
    @"NSObject" _sortDescriptorsObserver;
    @"NSDictionary" _photosByIDs;
    @"NSView" _dateRangePickerViewContainerView;
    @"_TtC7iMazing14PhotoTableView" _tableView;
    @"NSView" _collectionViewContainer;
    @"_TtC7iMazing13PhotoFadeView" _mainView;
    @"_TtC7iMazing13PhotoFadeView" _detailView;
    @"NSSegmentedControl" _viewTypeSegmentedControl;
    @"NSSlider" _collectionViewSlider;
    @"NSOutlineView" _sidebarOutlineView;
    @"NSScrollView" _sidebarScrollView;
    @"NSTreeController" _sidebarItemsController;
    @"_TtC7iMazing18PhotoFadeImageView" _animationPhoto;
    @"_TtC7iMazing24PhotoDropDestinationView" _photoDropDestination;
    @"NSButton" _deleteAlbumButton;
}

@property (T@?,N,R) defaultProgressCallback;
@property (T@?,N,R) defaultSuccessCallback;
@property (T@"NSView",&,N,V_dateRangePickerViewContainerView) dateRangePickerViewContainerView;
@property (T@"_TtC7iMazing14PhotoTableView",&,N,V_tableView) tableView;
@property (T@"NSView",&,N,V_collectionViewContainer) collectionViewContainer;
@property (T@"_TtC7iMazing13PhotoFadeView",&,N,V_mainView) mainView;
@property (T@"_TtC7iMazing13PhotoFadeView",&,N,V_detailView) detailView;
@property (T@"NSSegmentedControl",&,N,V_viewTypeSegmentedControl) viewTypeSegmentedControl;
@property (T@"NSSlider",&,N,V_collectionViewSlider) collectionViewSlider;
@property (T@"NSOutlineView",&,N,V_sidebarOutlineView) sidebarOutlineView;
@property (T@"NSScrollView",&,N,V_sidebarScrollView) sidebarScrollView;
@property (T@"NSTreeController",&,N,V_sidebarItemsController) sidebarItemsController;
@property (T@"_TtC7iMazing18PhotoFadeImageView",&,N,V_animationPhoto) animationPhoto;
@property (T@"_TtC7iMazing24PhotoDropDestinationView",&,N,V_photoDropDestination) photoDropDestination;
@property (T@"NSButton",&,N,V_deleteAlbumButton) deleteAlbumButton;
@property (T@"NSTimer",&,N,V_updateThumbnailsTimer) updateThumbnailsTimer;
@property (T@"DateRangePickerViewController",&,N,V_dateRangePickerViewController) dateRangePickerViewController;
@property (T@"_TtC7iMazing29PhotoCollectionViewController",&,N,V_photoCollectionViewController) photoCollectionViewController;
@property (T@"_TtC7iMazing25PhotoDetailViewController",&,N,V_photoDetailViewController) photoDetailViewController;
@property (TB,N,V_isAnimating) isAnimating;
@property (Tq,N,V_currentSidebarSelection) currentSidebarSelection;
@property (TB,N,V_isShowingDetailView) isShowingDetailView;
@property (TB,N,V_isShowingCollectionView) isShowingCollectionView;
@property (T@"NSArray",&,N,V_sidebarItems) sidebarItems;
@property (T@"NSString",&,N,V_multipleSidebarSelectionLabel) multipleSidebarSelectionLabel;
@property (T@"NSDate",&,N,V_dateFilterFrom) dateFilterFrom;
@property (T@"NSDate",&,N,V_dateFilterTo) dateFilterTo;
@property (Tq,N,V_sidebarSelectedRowBeforeEnteringDetailView) sidebarSelectedRowBeforeEnteringDetailView;
@property (Tq,N,V_selectedIndexBeforeEnteringDetailView) selectedIndexBeforeEnteringDetailView;
@property (T@"_TtC7iMazing17PhotoMediaHandler",&,N,V_mediaHandler) mediaHandler;
@property (T@"_TtC7iMazing27PhotoExportWindowController",&,N,V_photoExportWindowController) photoExportWindowController;
@property (T@"_TtC7iMazing24PhotoImageCaptureManager",&,N,V_imageCaptureManager) imageCaptureManager;
@property (TB,N,V_disableMenuActions) disableMenuActions;
@property (T@"NSString",&,N,V_sidebarTextBeforeRename) sidebarTextBeforeRename;
@property (TB,N,V_renameSyncedAlbumOperationStarted) renameSyncedAlbumOperationStarted;
@property (TB,N,V_isInitializing) isInitializing;
@property (T@"NSString",&,N,V_sidebarTitleToSelect) sidebarTitleToSelect;
@property (T@"NSArray",&,N,V_allowedUTIs) allowedUTIs;
@property (T@"NSArray",&,N,V_tableViewSortDescriptors) tableViewSortDescriptors;
@property (T@"NSObject",&,N,V_sortDescriptorsObserver) sortDescriptorsObserver;
@property (T@"NSDictionary",&,N,V_photosByIDs) photosByIDs;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[PhotoViewController outlineViewSelectionDidChange:];
-[PhotoViewController outlineView:isGroupItem:];
-[PhotoViewController outlineView:shouldSelectItem:];
-[PhotoViewController outlineView:viewForTableColumn:item:];
-[PhotoViewController outlineView:writeItems:toPasteboard:];
-[PhotoViewController outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:];
-[PhotoViewController outlineView:validateDrop:proposedItem:proposedChildIndex:];
-[PhotoViewController outlineView:acceptDrop:item:childIndex:];
-[PhotoViewController tableView:writeRowsWithIndexes:toPasteboard:];
-[PhotoViewController tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:];
-[PhotoViewController tableView:shouldTypeSelectForEvent:withCurrentSearchString:];
-[PhotoViewController tableView:shouldSelectRow:];
-[PhotoViewController initSartState];
-[PhotoViewController awakeFromNib];
-[PhotoViewController viewDidAppear];
-[PhotoViewController viewDidDisappear];
-[PhotoViewController defaultProgressCallback];
-[PhotoViewController defaultSuccessCallback];
-[PhotoViewController onBeginEditingSidebar:];
-[PhotoViewController onEndEditingSidebar:];
-[PhotoViewController onPhotoTableViewDoubleClick:];
-[PhotoViewController onPhotoCollectionDoubleClick:];
-[PhotoViewController onDragOutSectionHeader:];
-[PhotoViewController onPhotoSelectionChanged:];
-[PhotoViewController hideDetailView];
-[PhotoViewController onUpdateThumbnailsTimer];
-[PhotoViewController updateViewType];
-[PhotoViewController onSortDescriptorsChange];
-[PhotoViewController applySearchFilter];
-[PhotoViewController observeValueForKeyPath:ofObject:change:context:];
-[PhotoViewController validateMenuItem:];
-[PhotoViewController validateAction:];
-[PhotoViewController menuWillOpen:];
-[PhotoViewController quickLook:];
-[PhotoViewController open:];
-[PhotoViewController copyToComputer:];
-[PhotoViewController deleteSelectedItems:];
-[PhotoViewController copyToDevice:];
-[PhotoViewController quickLookContextMenu:];
-[PhotoViewController openContextMenu:];
-[PhotoViewController openWith:];
-[PhotoViewController copyToComputerContextMenu:];
-[PhotoViewController deleteSelectedItemsContextMenu:];
-[PhotoViewController sidebarCopyToComputer:];
-[PhotoViewController sidebarNewAlbum:];
-[PhotoViewController sidebarCopyToDevice:];
-[PhotoViewController sidebarDeleteFromDevice:];
-[PhotoViewController buttonSidebarDelete:];
-[PhotoViewController sidebarRenameAlbumOnDevice:];
-[PhotoViewController initWithDevice:];
-[PhotoViewController dealloc];
-[PhotoViewController onViewTypeChanged:];
-[PhotoViewController onSliderChanged:];
-[PhotoViewController onSliderSmallerButton:];
-[PhotoViewController onSliderBiggerButton:];
-[PhotoViewController onGoBackButton:];
-[PhotoViewController onEnterFullScreenButton:];
-[PhotoViewController toolbarButtons];
-[PhotoViewController helpURL];
-[PhotoViewController updateThumbnailsTimer];
-[PhotoViewController setUpdateThumbnailsTimer:];
-[PhotoViewController dateRangePickerViewController];
-[PhotoViewController setDateRangePickerViewController:];
-[PhotoViewController photoCollectionViewController];
-[PhotoViewController setPhotoCollectionViewController:];
-[PhotoViewController photoDetailViewController];
-[PhotoViewController setPhotoDetailViewController:];
-[PhotoViewController isAnimating];
-[PhotoViewController setIsAnimating:];
-[PhotoViewController currentSidebarSelection];
-[PhotoViewController setCurrentSidebarSelection:];
-[PhotoViewController isShowingDetailView];
-[PhotoViewController setIsShowingDetailView:];
-[PhotoViewController isShowingCollectionView];
-[PhotoViewController setIsShowingCollectionView:];
-[PhotoViewController sidebarItems];
-[PhotoViewController setSidebarItems:];
-[PhotoViewController multipleSidebarSelectionLabel];
-[PhotoViewController setMultipleSidebarSelectionLabel:];
-[PhotoViewController dateFilterFrom];
-[PhotoViewController setDateFilterFrom:];
-[PhotoViewController dateFilterTo];
-[PhotoViewController setDateFilterTo:];
-[PhotoViewController sidebarSelectedRowBeforeEnteringDetailView];
-[PhotoViewController setSidebarSelectedRowBeforeEnteringDetailView:];
-[PhotoViewController selectedIndexBeforeEnteringDetailView];
-[PhotoViewController setSelectedIndexBeforeEnteringDetailView:];
-[PhotoViewController mediaHandler];
-[PhotoViewController setMediaHandler:];
-[PhotoViewController photoExportWindowController];
-[PhotoViewController setPhotoExportWindowController:];
-[PhotoViewController imageCaptureManager];
-[PhotoViewController setImageCaptureManager:];
-[PhotoViewController disableMenuActions];
-[PhotoViewController setDisableMenuActions:];
-[PhotoViewController sidebarTextBeforeRename];
-[PhotoViewController setSidebarTextBeforeRename:];
-[PhotoViewController renameSyncedAlbumOperationStarted];
-[PhotoViewController setRenameSyncedAlbumOperationStarted:];
-[PhotoViewController isInitializing];
-[PhotoViewController setIsInitializing:];
-[PhotoViewController sidebarTitleToSelect];
-[PhotoViewController setSidebarTitleToSelect:];
-[PhotoViewController allowedUTIs];
-[PhotoViewController setAllowedUTIs:];
-[PhotoViewController tableViewSortDescriptors];
-[PhotoViewController setTableViewSortDescriptors:];
-[PhotoViewController sortDescriptorsObserver];
-[PhotoViewController setSortDescriptorsObserver:];
-[PhotoViewController photosByIDs];
-[PhotoViewController setPhotosByIDs:];
-[PhotoViewController dateRangePickerViewContainerView];
-[PhotoViewController setDateRangePickerViewContainerView:];
-[PhotoViewController tableView];
-[PhotoViewController setTableView:];
-[PhotoViewController collectionViewContainer];
-[PhotoViewController setCollectionViewContainer:];
-[PhotoViewController mainView];
-[PhotoViewController setMainView:];
-[PhotoViewController detailView];
-[PhotoViewController setDetailView:];
-[PhotoViewController viewTypeSegmentedControl];
-[PhotoViewController setViewTypeSegmentedControl:];
-[PhotoViewController collectionViewSlider];
-[PhotoViewController setCollectionViewSlider:];
-[PhotoViewController sidebarOutlineView];
-[PhotoViewController setSidebarOutlineView:];
-[PhotoViewController sidebarScrollView];
-[PhotoViewController setSidebarScrollView:];
-[PhotoViewController sidebarItemsController];
-[PhotoViewController setSidebarItemsController:];
-[PhotoViewController animationPhoto];
-[PhotoViewController setAnimationPhoto:];
-[PhotoViewController photoDropDestination];
-[PhotoViewController setPhotoDropDestination:];
-[PhotoViewController deleteAlbumButton];
-[PhotoViewController setDeleteAlbumButton:];

@end

@interface PhotosBaseViewController : StorageViewController <ICDeviceBrowserDelegate, ICCameraDeviceDelegate> {
    /* instance variables */
    @"NSMutableArray" _photosToDelete;
    @"LegacyOperation" _deleteOperation;
    @"NSMutableString" _lockedFilesDescription;
    @"ICDeviceBrowser" _photoDeviceBrowser;
    @"ICCameraDevice" _cameraDevice;
    B _deviceIsAniPod;
    B _icCameraDeviceReady;
}

@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;
@property (T@"NSMutableString",R,V_lockedFilesDescription) lockedFilesDescription;
@property (T@"ICDeviceBrowser",R,V_photoDeviceBrowser) photoDeviceBrowser;

/* instance methods */
-[PhotosBaseViewController deviceBrowser:didAddDevice:moreComing:];
-[PhotosBaseViewController deviceBrowser:didRemoveDevice:moreGoing:];
-[PhotosBaseViewController deviceDidBecomeReadyWithCompleteContentCatalog:];
-[PhotosBaseViewController cameraDevice:didAddItems:];
-[PhotosBaseViewController cameraDevice:didRemoveItems:];
-[PhotosBaseViewController cameraDevice:didReceiveThumbnail:forItem:error:];
-[PhotosBaseViewController cameraDevice:didReceiveMetadata:forItem:error:];
-[PhotosBaseViewController cameraDevice:didRenameItems:];
-[PhotosBaseViewController cameraDeviceDidChangeCapability:];
-[PhotosBaseViewController cameraDevice:didReceivePTPEvent:];
-[PhotosBaseViewController cameraDeviceDidRemoveAccessRestriction:];
-[PhotosBaseViewController cameraDeviceDidEnableAccessRestriction:];
-[PhotosBaseViewController device:didCloseSessionWithError:];
-[PhotosBaseViewController device:didOpenSessionWithError:];
-[PhotosBaseViewController didRemoveDevice:];
-[PhotosBaseViewController deletePhotos];
-[PhotosBaseViewController cameraDevice:didCompleteDeleteFilesWithError:];
-[PhotosBaseViewController cancelDeletePhotos];
-[PhotosBaseViewController handleDeletePhotoOperationNotification:];
-[PhotosBaseViewController handleDeletePhotoOperationEndNotification:];
-[PhotosBaseViewController initWithDevice:];
-[PhotosBaseViewController dealloc];
-[PhotosBaseViewController willBeDisplayedByMainWindowController];
-[PhotosBaseViewController refreshAfterDelete:];
-[PhotosBaseViewController deleteSelectedItemUsingInfoDictionary:];
-[PhotosBaseViewController deleteSelectedItems:];
-[PhotosBaseViewController datasetManager:updateDidStart:];
-[PhotosBaseViewController datasetManager:updateDidEnd:];
-[PhotosBaseViewController hideProgressIndicatorHudView];
-[PhotosBaseViewController operationDidEndNotification:];
-[PhotosBaseViewController preferedBrowserView];
-[PhotosBaseViewController setPreferedBrowserView:];
-[PhotosBaseViewController helpURL];
-[PhotosBaseViewController lockedFilesDescription];
-[PhotosBaseViewController photoDeviceBrowser];

@end

@interface PopoverDatePicker : NSDatePicker {
    /* instance variables */
    B _showingPopover;
    Q _popoverEdge;
    @"NSPopover" _popover;
    @"PopoverDatePickerController" _controller;
}

@property (T@"NSPopover",&,V_popover) popover;
@property (T@"PopoverDatePickerController",&,V_controller) controller;
@property (TB,V_showingPopover) showingPopover;
@property (TQ,V_popoverEdge) popoverEdge;

/* instance methods */
-[PopoverDatePicker popoverDateAction:];
-[PopoverDatePicker changed];
-[PopoverDatePicker awakeFromNib];
-[PopoverDatePicker mouseDown:];
-[PopoverDatePicker becomeFirstResponder];
-[PopoverDatePicker resignFirstResponder];
-[PopoverDatePicker popoverEdge];
-[PopoverDatePicker setPopoverEdge:];
-[PopoverDatePicker popover];
-[PopoverDatePicker setPopover:];
-[PopoverDatePicker controller];
-[PopoverDatePicker setController:];
-[PopoverDatePicker showingPopover];
-[PopoverDatePicker setShowingPopover:];

@end

@interface PopoverDatePickerCell : NSDatePickerCell

/* instance methods */
-[PopoverDatePickerCell _userEditExpired:];

@end

@interface PopoverDatePickerController : NSViewController {
    /* instance variables */
    @"NSDatePicker" _datePicker;
}

@property (T@"NSDatePicker",&,V_datePicker) datePicker;

/* instance methods */
-[PopoverDatePickerController initWithNibName:bundle:];
-[PopoverDatePickerController datePicker];
-[PopoverDatePickerController setDatePicker:];

@end

@interface Preferences : PreferencesBase {
    /* instance variables */
    B _firstLaunch;
    B _autoUpdate;
    B _hideHintMessages;
    B _hideWizards;
    B _mediaCopyFolderCreateArtistDirectories;
    B _mediaCopyFolderCreateAlbumDirectories;
    B _promoScreenDontShowAgain;
    B _onlyShowTransferableMedia;
    B _hideMediasAlreadyIniTunes;
    B _hideDRMProtectedMedia;
    B _mediaBrowserShowGenre;
    B _mediaBrowserShowArtist;
    B _mediaBrowserShowAlbum;
    B _mediaBrowserShowColumnBrowser;
    B _mediaShowPlayer;
    B _displayAlliOSApps;
    B _showHiddenFiles;
    B _contactExportAsSingleVCard;
    B _appLibraryTabIsDevice;
    B _spywareDetectionLicenseAccepted;
    B _clearCacheFolderOnQuit;
    B _forgetDevicesAndPairingRecordsOnQuit;
    B _showToolbarButtonsLabels;
    B _expandConfigurator;
    B _hideConfigurator;
    B _showGuidedTour;
    B _showPairingInfoNote;
    B _messageOnlyShowAttachments;
    B _messageHideAttachments;
    B _messageShowContactDetails;
    B _messageShowTimesForAllMessages;
    B _messageShowOriginalMessagesOfReplies;
    B _whatsAppOnlyShowAttachments;
    B _whatsAppHideAttachments;
    B _whatsAppShowContactDetails;
    B _whatsAppShowTimesForAllMessages;
    B _whatsAppShowOriginalMessagesOfReplies;
    B _whatsAppHideArchived;
    I _photoExportQuality;
    I _videoExportQuality;
    d _mediaBrowserHeight;
    Q _mediaCopyType;
    @"NSString" _mediaCopyFolderPath;
    Q _mediaCopyiTunesImportOptions;
    q _preferedBrowserView;
    q _preferedPhotoView;
    Q _promoScreenID;
    d _iconViewSliderValue;
    @"NSString" _backupArchivePath;
    d _mediaPlayerVolume;
    @"NSString" _registrationEmail;
    @"NSString" _registrationKey;
    q _iTunesLibraryMatchingMode;
    q _dataExportDelimiter;
    @"NSString" _interfaceLanguage;
    @"NSString" _consoleFontName;
    d _consoleFontSize;
    d _whatsNewVersion;
    q _photoExportFormat;
    q _videoExportFormat;
    q _configuratorSecondsBeforeAutoReapply;
    q _homeSelectedItem;
    q _homeViewTypeIndex;
    q _appearanceOverride;
    q _iconOverride;
    q _devicesSorting;
    q _backupsSorting;
    q _lottieAnimations;
}

@property (T@"NSColor",N,&) consoleBackgroundColor;
@property (T@"NSColor",N,&) consoleForegroundColor;
@property (TB,V_firstLaunch) firstLaunch;
@property (TB,V_autoUpdate) autoUpdate;
@property (TB,V_hideHintMessages) hideHintMessages;
@property (TB,V_hideWizards) hideWizards;
@property (Td,V_mediaBrowserHeight) mediaBrowserHeight;
@property (TQ,V_mediaCopyType) mediaCopyType;
@property (T@"NSString",&,V_mediaCopyFolderPath) mediaCopyFolderPath;
@property (TB,V_mediaCopyFolderCreateArtistDirectories) mediaCopyFolderCreateArtistDirectories;
@property (TB,V_mediaCopyFolderCreateAlbumDirectories) mediaCopyFolderCreateAlbumDirectories;
@property (TQ,V_mediaCopyiTunesImportOptions) mediaCopyiTunesImportOptions;
@property (Tq,V_preferedBrowserView) preferedBrowserView;
@property (Tq,V_preferedPhotoView) preferedPhotoView;
@property (TQ,V_promoScreenID) promoScreenID;
@property (TB,V_promoScreenDontShowAgain) promoScreenDontShowAgain;
@property (Td,V_iconViewSliderValue) iconViewSliderValue;
@property (T@"NSString",&,V_backupArchivePath) backupArchivePath;
@property (TB,V_onlyShowTransferableMedia) onlyShowTransferableMedia;
@property (TB,V_hideMediasAlreadyIniTunes) hideMediasAlreadyIniTunes;
@property (TB,V_hideDRMProtectedMedia) hideDRMProtectedMedia;
@property (TB,V_mediaBrowserShowGenre) mediaBrowserShowGenre;
@property (TB,V_mediaBrowserShowArtist) mediaBrowserShowArtist;
@property (TB,V_mediaBrowserShowAlbum) mediaBrowserShowAlbum;
@property (TB,V_mediaBrowserShowColumnBrowser) mediaBrowserShowColumnBrowser;
@property (TB,V_mediaShowPlayer) mediaShowPlayer;
@property (Td,V_mediaPlayerVolume) mediaPlayerVolume;
@property (T@"NSString",&,V_registrationEmail) registrationEmail;
@property (T@"NSString",&,V_registrationKey) registrationKey;
@property (TB,V_displayAlliOSApps) displayAlliOSApps;
@property (TB,V_showHiddenFiles) showHiddenFiles;
@property (Tq,V_iTunesLibraryMatchingMode) iTunesLibraryMatchingMode;
@property (Tq,V_dataExportDelimiter) dataExportDelimiter;
@property (TB,V_contactExportAsSingleVCard) contactExportAsSingleVCard;
@property (T@"NSString",&,V_interfaceLanguage) interfaceLanguage;
@property (T@"NSString",&,V_consoleFontName) consoleFontName;
@property (Td,V_consoleFontSize) consoleFontSize;
@property (Td,V_whatsNewVersion) whatsNewVersion;
@property (Tq,V_photoExportFormat) photoExportFormat;
@property (TI,V_photoExportQuality) photoExportQuality;
@property (Tq,V_videoExportFormat) videoExportFormat;
@property (TI,V_videoExportQuality) videoExportQuality;
@property (TB,V_appLibraryTabIsDevice) appLibraryTabIsDevice;
@property (Tq,V_configuratorSecondsBeforeAutoReapply) configuratorSecondsBeforeAutoReapply;
@property (TB,V_spywareDetectionLicenseAccepted) spywareDetectionLicenseAccepted;
@property (TB,V_clearCacheFolderOnQuit) clearCacheFolderOnQuit;
@property (TB,V_forgetDevicesAndPairingRecordsOnQuit) forgetDevicesAndPairingRecordsOnQuit;
@property (TB,V_showToolbarButtonsLabels) showToolbarButtonsLabels;
@property (TB,V_expandConfigurator) expandConfigurator;
@property (TB,V_hideConfigurator) hideConfigurator;
@property (Tq,V_homeSelectedItem) homeSelectedItem;
@property (Tq,V_homeViewTypeIndex) homeViewTypeIndex;
@property (Tq,V_appearanceOverride) appearanceOverride;
@property (Tq,V_iconOverride) iconOverride;
@property (Tq,V_devicesSorting) devicesSorting;
@property (Tq,V_backupsSorting) backupsSorting;
@property (TB,V_showGuidedTour) showGuidedTour;
@property (Tq,V_lottieAnimations) lottieAnimations;
@property (TB,V_showPairingInfoNote) showPairingInfoNote;
@property (TB,V_messageOnlyShowAttachments) messageOnlyShowAttachments;
@property (TB,V_messageHideAttachments) messageHideAttachments;
@property (TB,V_messageShowContactDetails) messageShowContactDetails;
@property (TB,V_messageShowTimesForAllMessages) messageShowTimesForAllMessages;
@property (TB,V_messageShowOriginalMessagesOfReplies) messageShowOriginalMessagesOfReplies;
@property (TB,V_whatsAppOnlyShowAttachments) whatsAppOnlyShowAttachments;
@property (TB,V_whatsAppHideAttachments) whatsAppHideAttachments;
@property (TB,V_whatsAppShowContactDetails) whatsAppShowContactDetails;
@property (TB,V_whatsAppShowTimesForAllMessages) whatsAppShowTimesForAllMessages;
@property (TB,V_whatsAppShowOriginalMessagesOfReplies) whatsAppShowOriginalMessagesOfReplies;
@property (TB,V_whatsAppHideArchived) whatsAppHideArchived;

/* instance methods */
-[Preferences consoleBackgroundColor];
-[Preferences setConsoleBackgroundColor:];
-[Preferences consoleForegroundColor];
-[Preferences setConsoleForegroundColor:];
-[Preferences firstLaunch];
-[Preferences setFirstLaunch:];
-[Preferences autoUpdate];
-[Preferences setAutoUpdate:];
-[Preferences hideHintMessages];
-[Preferences setHideHintMessages:];
-[Preferences hideWizards];
-[Preferences setHideWizards:];
-[Preferences mediaBrowserHeight];
-[Preferences setMediaBrowserHeight:];
-[Preferences mediaCopyType];
-[Preferences setMediaCopyType:];
-[Preferences mediaCopyFolderPath];
-[Preferences setMediaCopyFolderPath:];
-[Preferences mediaCopyFolderCreateArtistDirectories];
-[Preferences setMediaCopyFolderCreateArtistDirectories:];
-[Preferences mediaCopyFolderCreateAlbumDirectories];
-[Preferences setMediaCopyFolderCreateAlbumDirectories:];
-[Preferences mediaCopyiTunesImportOptions];
-[Preferences setMediaCopyiTunesImportOptions:];
-[Preferences preferedBrowserView];
-[Preferences setPreferedBrowserView:];
-[Preferences preferedPhotoView];
-[Preferences setPreferedPhotoView:];
-[Preferences promoScreenID];
-[Preferences setPromoScreenID:];
-[Preferences promoScreenDontShowAgain];
-[Preferences setPromoScreenDontShowAgain:];
-[Preferences iconViewSliderValue];
-[Preferences setIconViewSliderValue:];
-[Preferences backupArchivePath];
-[Preferences setBackupArchivePath:];
-[Preferences onlyShowTransferableMedia];
-[Preferences setOnlyShowTransferableMedia:];
-[Preferences hideMediasAlreadyIniTunes];
-[Preferences setHideMediasAlreadyIniTunes:];
-[Preferences hideDRMProtectedMedia];
-[Preferences setHideDRMProtectedMedia:];
-[Preferences mediaBrowserShowGenre];
-[Preferences setMediaBrowserShowGenre:];
-[Preferences mediaBrowserShowArtist];
-[Preferences setMediaBrowserShowArtist:];
-[Preferences mediaBrowserShowAlbum];
-[Preferences setMediaBrowserShowAlbum:];
-[Preferences mediaBrowserShowColumnBrowser];
-[Preferences setMediaBrowserShowColumnBrowser:];
-[Preferences mediaShowPlayer];
-[Preferences setMediaShowPlayer:];
-[Preferences mediaPlayerVolume];
-[Preferences setMediaPlayerVolume:];
-[Preferences registrationEmail];
-[Preferences setRegistrationEmail:];
-[Preferences registrationKey];
-[Preferences setRegistrationKey:];
-[Preferences displayAlliOSApps];
-[Preferences setDisplayAlliOSApps:];
-[Preferences showHiddenFiles];
-[Preferences setShowHiddenFiles:];
-[Preferences iTunesLibraryMatchingMode];
-[Preferences setITunesLibraryMatchingMode:];
-[Preferences dataExportDelimiter];
-[Preferences setDataExportDelimiter:];
-[Preferences contactExportAsSingleVCard];
-[Preferences setContactExportAsSingleVCard:];
-[Preferences interfaceLanguage];
-[Preferences setInterfaceLanguage:];
-[Preferences consoleFontName];
-[Preferences setConsoleFontName:];
-[Preferences consoleFontSize];
-[Preferences setConsoleFontSize:];
-[Preferences whatsNewVersion];
-[Preferences setWhatsNewVersion:];
-[Preferences photoExportFormat];
-[Preferences setPhotoExportFormat:];
-[Preferences photoExportQuality];
-[Preferences setPhotoExportQuality:];
-[Preferences videoExportFormat];
-[Preferences setVideoExportFormat:];
-[Preferences videoExportQuality];
-[Preferences setVideoExportQuality:];
-[Preferences appLibraryTabIsDevice];
-[Preferences setAppLibraryTabIsDevice:];
-[Preferences configuratorSecondsBeforeAutoReapply];
-[Preferences setConfiguratorSecondsBeforeAutoReapply:];
-[Preferences spywareDetectionLicenseAccepted];
-[Preferences setSpywareDetectionLicenseAccepted:];
-[Preferences clearCacheFolderOnQuit];
-[Preferences setClearCacheFolderOnQuit:];
-[Preferences forgetDevicesAndPairingRecordsOnQuit];
-[Preferences setForgetDevicesAndPairingRecordsOnQuit:];
-[Preferences showToolbarButtonsLabels];
-[Preferences setShowToolbarButtonsLabels:];
-[Preferences expandConfigurator];
-[Preferences setExpandConfigurator:];
-[Preferences hideConfigurator];
-[Preferences setHideConfigurator:];
-[Preferences homeSelectedItem];
-[Preferences setHomeSelectedItem:];
-[Preferences homeViewTypeIndex];
-[Preferences setHomeViewTypeIndex:];
-[Preferences appearanceOverride];
-[Preferences setAppearanceOverride:];
-[Preferences iconOverride];
-[Preferences setIconOverride:];
-[Preferences devicesSorting];
-[Preferences setDevicesSorting:];
-[Preferences backupsSorting];
-[Preferences setBackupsSorting:];
-[Preferences showGuidedTour];
-[Preferences setShowGuidedTour:];
-[Preferences lottieAnimations];
-[Preferences setLottieAnimations:];
-[Preferences showPairingInfoNote];
-[Preferences setShowPairingInfoNote:];
-[Preferences messageOnlyShowAttachments];
-[Preferences setMessageOnlyShowAttachments:];
-[Preferences messageHideAttachments];
-[Preferences setMessageHideAttachments:];
-[Preferences messageShowContactDetails];
-[Preferences setMessageShowContactDetails:];
-[Preferences messageShowTimesForAllMessages];
-[Preferences setMessageShowTimesForAllMessages:];
-[Preferences messageShowOriginalMessagesOfReplies];
-[Preferences setMessageShowOriginalMessagesOfReplies:];
-[Preferences whatsAppOnlyShowAttachments];
-[Preferences setWhatsAppOnlyShowAttachments:];
-[Preferences whatsAppHideAttachments];
-[Preferences setWhatsAppHideAttachments:];
-[Preferences whatsAppShowContactDetails];
-[Preferences setWhatsAppShowContactDetails:];
-[Preferences whatsAppShowTimesForAllMessages];
-[Preferences setWhatsAppShowTimesForAllMessages:];
-[Preferences whatsAppShowOriginalMessagesOfReplies];
-[Preferences setWhatsAppShowOriginalMessagesOfReplies:];
-[Preferences whatsAppHideArchived];
-[Preferences setWhatsAppHideArchived:];

@end

@interface PreferencesBase : NSObject {
    /* instance variables */
    B _inited;
    @"NSArray" _properties;
}

@property (TB,V_inited) inited;
@property (T@"NSArray",&,V_properties) properties;

/* class methods */
+[PreferencesBase sharedInstance];
+[PreferencesBase allocWithZone:];

/* instance methods */
-[PreferencesBase colorForKey:];
-[PreferencesBase setColor:forKey:];
-[PreferencesBase init];
-[PreferencesBase dealloc];
-[PreferencesBase observeValueForKeyPath:ofObject:change:context:];
-[PreferencesBase restoreDefaults];
-[PreferencesBase setDDNAConfigValue:forKey:];
-[PreferencesBase applicationWillTerminate:];
-[PreferencesBase inited];
-[PreferencesBase setInited:];
-[PreferencesBase properties];
-[PreferencesBase setProperties:];

@end

@interface PrintJobPreview : VKLegacyView {
    /* instance variables */
    @"LegacyPrintInfo" _printInfo;
    @"NSView<PrintJobPrintableView>" _contentView;
    {_NSRange="location"Q"length"Q} _pagesRange;
    q _pageNumber;
    {CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}} _displayedMargin;
    [2d] _dashPattern;
    @"NSTextField" _rangeTextField;
    d _initialMaxSize;
    d _pageDisplayRatio;
    B _awake;
}

@property (TB,V_awake) awake;
@property (T@"NSTextField",&,N,V_rangeTextField) rangeTextField;
@property (T@"NSView<PrintJobPrintableView>",R,V_contentView) contentView;

/* instance methods */
-[PrintJobPreview updateRangeTextField];
-[PrintJobPreview updateDisplayedMargins];
-[PrintJobPreview initWithFrame:];
-[PrintJobPreview initWithCoder:];
-[PrintJobPreview dealloc];
-[PrintJobPreview drawRect:];
-[PrintJobPreview awakeFromNib];
-[PrintJobPreview isOpaque];
-[PrintJobPreview isFlipped];
-[PrintJobPreview setPrintInfo:];
-[PrintJobPreview setContentView:];
-[PrintJobPreview prevPage:];
-[PrintJobPreview nextPage:];
-[PrintJobPreview updateDisplay];
-[PrintJobPreview resetToInitialState];
-[PrintJobPreview contentView];
-[PrintJobPreview rangeTextField];
-[PrintJobPreview setRangeTextField:];
-[PrintJobPreview awake];
-[PrintJobPreview setAwake:];

@end

@interface PrintJobTableView : NSTableView <NSTableViewDataSource, NSTableViewDelegate, PrintJobPrintableView> {
    /* instance variables */
    @"NSTableView" _innerTableView;
    @"<NSTableViewDataSource>" _innerDataSource;
    @"<NSTableViewDelegate>" _innerDelegate;
    @"NSMutableArray" _pagesRect;
}

@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[PrintJobTableView initWithTableView:];
-[PrintJobTableView dealloc];
-[PrintJobTableView knowsPageRange:];
-[PrintJobTableView rectForPage:];
-[PrintJobTableView adjustPagesRectUsingPrintableArea:];
-[PrintJobTableView updatePagesRectUsingPrintableArea:];

@end

@interface PrintJobWindowController : LegacyWindowController <LegacyTextFieldDelegate, NSWindowDelegate, NSTextFieldDelegate> {
    /* instance variables */
    i _initialPrintJobMode;
    @"NSScrollView" _previewScrollView;
    @"PrintJobTableView" _printJobTableView;
    @"WebView" _webView;
    @"NSPopUpButton" _printerNamePopUpButton;
    @"NSPopUpButton" _paperNamePopUpButton;
    @"NSTextField" _paperSizeTextField;
    @"LegacyTextField" _leftMarginTextField;
    @"LegacyTextField" _topMarginTextField;
    @"LegacyTextField" _rightMarginTextField;
    @"LegacyTextField" _bottomMarginTextField;
    @"NSButton" _paperOrientationPortraitButton;
    @"NSButton" _paperOrientationLandscapeButton;
    @"NSButton" _cancelButton;
    @"NSButton" _printButton;
    @"NSNumberFormatter" _decimalNumberFormatter;
    @"DDNALengthConverter" _lengthConverter;
    i _currentUserPreferredUnit;
    @"PrintJobPreview" _printJobPreview;
    @"LegacyPrintInfo" _printInfo;
    @"NSString" _fileName;
    B _awake;
}

@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;
@property (TB,V_awake) awake;
@property (T@"NSScrollView",&,N,V_previewScrollView) previewScrollView;
@property (T@"PrintJobPreview",&,N,V_printJobPreview) printJobPreview;
@property (T@"NSPopUpButton",&,N,V_paperNamePopUpButton) paperNamePopUpButton;
@property (T@"NSPopUpButton",&,N,V_printerNamePopUpButton) printerNamePopUpButton;
@property (T@"NSTextField",&,N,V_paperSizeTextField) paperSizeTextField;
@property (T@"LegacyTextField",&,N,V_leftMarginTextField) leftMarginTextField;
@property (T@"LegacyTextField",&,N,V_topMarginTextField) topMarginTextField;
@property (T@"LegacyTextField",&,N,V_rightMarginTextField) rightMarginTextField;
@property (T@"LegacyTextField",&,N,V_bottomMarginTextField) bottomMarginTextField;
@property (T@"NSButton",&,N,V_paperOrientationPortraitButton) paperOrientationPortraitButton;
@property (T@"NSButton",&,N,V_paperOrientationLandscapeButton) paperOrientationLandscapeButton;
@property (T@"NSButton",&,N,V_cancelButton) cancelButton;
@property (T@"NSButton",&,N,V_printButton) printButton;
@property (T@"NSString",&) windowTitle;
@property (T@"NSString",&,V_fileName) fileName;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[PrintJobWindowController proceedPrintJob];
-[PrintJobWindowController showFileSavePanelWithProposedFileName:usingCompletionHandler:];
-[PrintJobWindowController updateSizeTextField];
-[PrintJobWindowController updateMarginTextField:];
-[PrintJobWindowController updateMarginTextFields];
-[PrintJobWindowController setSelectedPaper:];
-[PrintJobWindowController textFieldWillBecomeFirstResponder:];
-[PrintJobWindowController control:textShouldBeginEditing:];
-[PrintJobWindowController textDidEndEditingNotification:];
-[PrintJobWindowController selectPrinter:];
-[PrintJobWindowController selectPaper:];
-[PrintJobWindowController changeOrientation:];
-[PrintJobWindowController cancelPrint:];
-[PrintJobWindowController proceedToPrint:];
-[PrintJobWindowController init];
-[PrintJobWindowController dealloc];
-[PrintJobWindowController awakeFromNib];
-[PrintJobWindowController setInitialPrintJobMode:];
-[PrintJobWindowController setPrintableView:withHTML:];
-[PrintJobWindowController setPrintableView:];
-[PrintJobWindowController updateDisplay];
-[PrintJobWindowController resetToInitialState];
-[PrintJobWindowController windowTitle];
-[PrintJobWindowController setWindowTitle:];
-[PrintJobWindowController windowWillClose:];
-[PrintJobWindowController windowDidResize:];
-[PrintJobWindowController previewScrollView];
-[PrintJobWindowController setPreviewScrollView:];
-[PrintJobWindowController printJobPreview];
-[PrintJobWindowController setPrintJobPreview:];
-[PrintJobWindowController paperNamePopUpButton];
-[PrintJobWindowController setPaperNamePopUpButton:];
-[PrintJobWindowController printerNamePopUpButton];
-[PrintJobWindowController setPrinterNamePopUpButton:];
-[PrintJobWindowController paperSizeTextField];
-[PrintJobWindowController setPaperSizeTextField:];
-[PrintJobWindowController leftMarginTextField];
-[PrintJobWindowController setLeftMarginTextField:];
-[PrintJobWindowController topMarginTextField];
-[PrintJobWindowController setTopMarginTextField:];
-[PrintJobWindowController rightMarginTextField];
-[PrintJobWindowController setRightMarginTextField:];
-[PrintJobWindowController bottomMarginTextField];
-[PrintJobWindowController setBottomMarginTextField:];
-[PrintJobWindowController paperOrientationPortraitButton];
-[PrintJobWindowController setPaperOrientationPortraitButton:];
-[PrintJobWindowController paperOrientationLandscapeButton];
-[PrintJobWindowController setPaperOrientationLandscapeButton:];
-[PrintJobWindowController cancelButton];
-[PrintJobWindowController setCancelButton:];
-[PrintJobWindowController printButton];
-[PrintJobWindowController setPrintButton:];
-[PrintJobWindowController fileName];
-[PrintJobWindowController setFileName:];
-[PrintJobWindowController awake];
-[PrintJobWindowController setAwake:];

@end

@interface Profile : NSObject <DatasetObject, IAccessibleElement> {
    /* instance variables */
    B _removable;
    B _isSigned;
    @"NSString" fullTextIndex;
    @"NSString" _name;
    @"NSString" _organization;
    q _kind;
    @"NSString" _identifier;
    @"NSImage" _icon;
    @"NSString" _path;
    @"NSDate" _modificationTime;
    @"NSString" _dateString;
    @"NSString" _userRemovableString;
    ^v _cppObject;
    @"NSString" _accessLabel;
}

@property (T@"NSString",&,V_organization) organization;
@property (Tq,V_kind) kind;
@property (T@"NSString",&,V_accessLabel) accessLabel;
@property (TB,V_removable) removable;
@property (T@"NSImage",&,V_icon) icon;
@property (TB,V_isSigned) isSigned;
@property (T@"NSString",&,V_name) name;
@property (T@"NSString",&,V_identifier) identifier;
@property (T@"NSString",&,V_path) path;
@property (T@"NSDate",&,V_modificationTime) modificationTime;
@property (T@"NSString",&,V_dateString) dateString;
@property (T@"NSString",V_userRemovableString) userRemovableString;
@property (T^v,V_cppObject) cppObject;
@property (T@"NSString",&,VfullTextIndex) fullTextIndex;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[Profile initWithCPPObject:];
-[Profile dealloc];
-[Profile accessibilityLabel];
-[Profile isEqual:];
-[Profile fullTextIndex];
-[Profile setFullTextIndex:];
-[Profile name];
-[Profile setName:];
-[Profile organization];
-[Profile setOrganization:];
-[Profile kind];
-[Profile setKind:];
-[Profile identifier];
-[Profile setIdentifier:];
-[Profile removable];
-[Profile setRemovable:];
-[Profile icon];
-[Profile setIcon:];
-[Profile path];
-[Profile setPath:];
-[Profile modificationTime];
-[Profile setModificationTime:];
-[Profile dateString];
-[Profile setDateString:];
-[Profile userRemovableString];
-[Profile setUserRemovableString:];
-[Profile isSigned];
-[Profile setIsSigned:];
-[Profile cppObject];
-[Profile setCppObject:];
-[Profile accessLabel];
-[Profile setAccessLabel:];

@end

@interface ProfileKindValueTransformer : NSValueTransformer

/* class methods */
+[ProfileKindValueTransformer transformedValueClass];
+[ProfileKindValueTransformer allowsReverseTransformation];

/* instance methods */
-[ProfileKindValueTransformer transformedValue:];

@end

@interface ProfileLibraryManager : NSObject

/* class methods */
+[ProfileLibraryManager getProfiles];
+[ProfileLibraryManager getProfilesWithPayloadType:];
+[ProfileLibraryManager getWiFiProfiles];
+[ProfileLibraryManager getProfileWithID:];
+[ProfileLibraryManager importProfileAtPath:];
+[ProfileLibraryManager removeProfilesWithIDs:];
+[ProfileLibraryManager exportProfilesWithIDs:toPath:];
+[ProfileLibraryManager editProfileWithID:];
+[ProfileLibraryManager newConfigurationProfile];
+[ProfileLibraryManager newConfigurationProfileWithDomain:];
+[ProfileLibraryManager profilesForCPPProfiles:];
+[ProfileLibraryManager installToDevices:profileUIDs:];

@end

@interface ProfileManager : ModernDatasetManager

@property (T^v,D) cppObject;

/* instance methods */
-[ProfileManager init];
-[ProfileManager copyToComputer:path:];
-[ProfileManager copyToDevice:];
-[ProfileManager deleteItems:];
-[ProfileManager singleAppModeEnabled];
-[ProfileManager disableSingleAppMode];
-[ProfileManager enableSingleAppMode:appName:disableTouch:disableDeviceRotation:disableVolumeButtons:disableRingerSwitch:disableSleepWakeButton:disableAutoLock:enableVoiceOver:enableZoom:enableInvertColors:enableAssistiveTouch:enableSpeakSelection:enableMonoAudio:enableVoiceControl:userEnabledVoiceOver:userEnabledZoom:userEnabledInvertColors:userEnabledAssistiveTouch:userEnabledVoiceControl:];

@end

@interface ProfilesViewController : SingleTableDatasetViewController {
    /* instance variables */
    @"NSWindowController" _libraryWindow;
}

@property (T@"NSWindowController",&,N,V_libraryWindow) libraryWindow;

/* instance methods */
-[ProfilesViewController installFromLibrary:];
-[ProfilesViewController initWithDevice:];
-[ProfilesViewController dealloc];
-[ProfilesViewController awakeFromNib];
-[ProfilesViewController toolbarButtons];
-[ProfilesViewController _getAllowedUTIs:];
-[ProfilesViewController helpURL];
-[ProfilesViewController predicateForSearchString:];
-[ProfilesViewController validateAction:];
-[ProfilesViewController showOpenPanel:allowedUTIs:];
-[ProfilesViewController handleProfilesRefreshNotification:];
-[ProfilesViewController libraryWindow];
-[ProfilesViewController setLibraryWindow:];

@end

@interface Progress : NSObject {
    /* instance variables */
    B _indeterminate;
    @"NSString" _title;
    @"NSString" _message;
    Q _totalUnitCount;
    Q _completedUnitCount;
    d _fractionCompleted;
}

@property (T@"NSString",&,V_title) title;
@property (T@"NSString",&,V_message) message;
@property (TB,V_indeterminate) indeterminate;
@property (TQ,V_totalUnitCount) totalUnitCount;
@property (TQ,V_completedUnitCount) completedUnitCount;
@property (Td,V_fractionCompleted) fractionCompleted;

/* instance methods */
-[Progress initWithCPPObject:];
-[Progress title];
-[Progress setTitle:];
-[Progress message];
-[Progress setMessage:];
-[Progress indeterminate];
-[Progress setIndeterminate:];
-[Progress totalUnitCount];
-[Progress setTotalUnitCount:];
-[Progress completedUnitCount];
-[Progress setCompletedUnitCount:];
-[Progress fractionCompleted];
-[Progress setFractionCompleted:];

@end

@interface QuickTransferWizardViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
    B _isLoading;
    B _awake;
    B _showResultsInfo;
    B _showNoAppsInfo;
    B _showDropInfo;
    @"WizardWindowController" wizard;
    q behavior;
    @"NSArray" _draggedPaths;
    @"VKFileDropView" _dropView;
    @"UniversalTransferHelper" _transferHelper;
    @"NSArrayController" _arrayController;
    @"NSArrayController" _iconsArrayController;
    @"NSView" _infoViewContainer;
    @"NSView" _animationViewContainer;
    @"NSString" _summaryString;
    @"VKInfoViewController" _infoViewController;
    @"_TtC7iMazing36QuickTransferAnimationViewController" _animationViewController;
}

@property (T@"VKFileDropView",N,V_dropView) dropView;
@property (T@"UniversalTransferHelper",&,V_transferHelper) transferHelper;
@property (TB,N,V_isLoading) isLoading;
@property (TB,N,V_awake) awake;
@property (TB,N,V_showResultsInfo) showResultsInfo;
@property (TB,N,V_showNoAppsInfo) showNoAppsInfo;
@property (TB,N,V_showDropInfo) showDropInfo;
@property (T@"NSArrayController",&,N,V_arrayController) arrayController;
@property (T@"NSArrayController",&,N,V_iconsArrayController) iconsArrayController;
@property (T@"NSView",&,N,V_infoViewContainer) infoViewContainer;
@property (T@"NSView",&,N,V_animationViewContainer) animationViewContainer;
@property (T@"NSString",&,N,V_summaryString) summaryString;
@property (T@"VKInfoViewController",&,N,V_infoViewController) infoViewController;
@property (T@"_TtC7iMazing36QuickTransferAnimationViewController",&,N,V_animationViewController) animationViewController;
@property (T@"NSArray",&,V_draggedPaths) draggedPaths;
@property (T@"WizardWindowController",Vwizard) wizard;
@property (Tq,Vbehavior) behavior;
@property (T@"NSView",&) view;
@property (T@"NSString",&) title;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[QuickTransferWizardViewController init];
-[QuickTransferWizardViewController awakeFromNib];
-[QuickTransferWizardViewController dealloc];
-[QuickTransferWizardViewController willBecomeActive];
-[QuickTransferWizardViewController didBecomeActive];
-[QuickTransferWizardViewController chooseFiles:];
-[QuickTransferWizardViewController loadApps:];
-[QuickTransferWizardViewController showResults];
-[QuickTransferWizardViewController showNoApps];
-[QuickTransferWizardViewController showDrop];
-[QuickTransferWizardViewController observeValueForKeyPath:ofObject:change:context:];
-[QuickTransferWizardViewController cancelClicked];
-[QuickTransferWizardViewController transferClicked];
-[QuickTransferWizardViewController findTheBestApps:];
-[QuickTransferWizardViewController learnMore:];
-[QuickTransferWizardViewController wizard];
-[QuickTransferWizardViewController setWizard:];
-[QuickTransferWizardViewController behavior];
-[QuickTransferWizardViewController setBehavior:];
-[QuickTransferWizardViewController draggedPaths];
-[QuickTransferWizardViewController setDraggedPaths:];
-[QuickTransferWizardViewController dropView];
-[QuickTransferWizardViewController setDropView:];
-[QuickTransferWizardViewController transferHelper];
-[QuickTransferWizardViewController setTransferHelper:];
-[QuickTransferWizardViewController isLoading];
-[QuickTransferWizardViewController setIsLoading:];
-[QuickTransferWizardViewController awake];
-[QuickTransferWizardViewController setAwake:];
-[QuickTransferWizardViewController showResultsInfo];
-[QuickTransferWizardViewController setShowResultsInfo:];
-[QuickTransferWizardViewController showNoAppsInfo];
-[QuickTransferWizardViewController setShowNoAppsInfo:];
-[QuickTransferWizardViewController showDropInfo];
-[QuickTransferWizardViewController setShowDropInfo:];
-[QuickTransferWizardViewController arrayController];
-[QuickTransferWizardViewController setArrayController:];
-[QuickTransferWizardViewController iconsArrayController];
-[QuickTransferWizardViewController setIconsArrayController:];
-[QuickTransferWizardViewController infoViewContainer];
-[QuickTransferWizardViewController setInfoViewContainer:];
-[QuickTransferWizardViewController animationViewContainer];
-[QuickTransferWizardViewController setAnimationViewContainer:];
-[QuickTransferWizardViewController summaryString];
-[QuickTransferWizardViewController setSummaryString:];
-[QuickTransferWizardViewController infoViewController];
-[QuickTransferWizardViewController setInfoViewController:];
-[QuickTransferWizardViewController animationViewController];
-[QuickTransferWizardViewController setAnimationViewController:];

@end

@interface QuickTransferWizardWindowController : WizardWindowController

/* instance methods */
-[QuickTransferWizardWindowController initWithDevice:paths:];

@end

@interface ReinstallWizardChoosSystemViewController : NSViewController <WizardWindowDelegate, WizardWindowScreenDataController> {
    /* instance variables */
    B _manualInstall;
    B _eraseDevice;
    @"WizardWindowController" wizard;
    q behavior;
    @"UserInteractionScreenData" screenData;
    @"NSString" _installImagePath;
    @"ReinstallWizardConfirmEraseViewController" _confirmController;
    @"_TtC7iMazing37ReinstallWizardProgressViewController" _progressController;
    @"NSString" _downloadInfoText;
}

@property (TB,V_manualInstall) manualInstall;
@property (TB,V_eraseDevice) eraseDevice;
@property (T@"NSString",&,V_installImagePath) installImagePath;
@property (T@"ReinstallWizardConfirmEraseViewController",&,V_confirmController) confirmController;
@property (T@"_TtC7iMazing37ReinstallWizardProgressViewController",&,V_progressController) progressController;
@property (T@"NSString",&,V_downloadInfoText) downloadInfoText;
@property (T@"WizardWindowController",Vwizard) wizard;
@property (Tq,Vbehavior) behavior;
@property (T@"NSView",&) view;
@property (T@"NSString",&) title;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;
@property (T@"UserInteractionScreenData",&,VscreenData) screenData;

/* instance methods */
-[ReinstallWizardChoosSystemViewController init];
-[ReinstallWizardChoosSystemViewController didBecomeActive];
-[ReinstallWizardChoosSystemViewController setInstallType:];
-[ReinstallWizardChoosSystemViewController chooseInstallImage:];
-[ReinstallWizardChoosSystemViewController reinstall:];
-[ReinstallWizardChoosSystemViewController exitRecoveryMode:];
-[ReinstallWizardChoosSystemViewController wizard];
-[ReinstallWizardChoosSystemViewController setWizard:];
-[ReinstallWizardChoosSystemViewController behavior];
-[ReinstallWizardChoosSystemViewController setBehavior:];
-[ReinstallWizardChoosSystemViewController screenData];
-[ReinstallWizardChoosSystemViewController setScreenData:];
-[ReinstallWizardChoosSystemViewController manualInstall];
-[ReinstallWizardChoosSystemViewController setManualInstall:];
-[ReinstallWizardChoosSystemViewController eraseDevice];
-[ReinstallWizardChoosSystemViewController setEraseDevice:];
-[ReinstallWizardChoosSystemViewController installImagePath];
-[ReinstallWizardChoosSystemViewController setInstallImagePath:];
-[ReinstallWizardChoosSystemViewController confirmController];
-[ReinstallWizardChoosSystemViewController setConfirmController:];
-[ReinstallWizardChoosSystemViewController progressController];
-[ReinstallWizardChoosSystemViewController setProgressController:];
-[ReinstallWizardChoosSystemViewController downloadInfoText];
-[ReinstallWizardChoosSystemViewController setDownloadInfoText:];

@end

@interface ReinstallWizardConfirmEraseViewController : NSViewController <WizardWindowDelegate, WizardWindowScreenDataController> {
    /* instance variables */
    @"WizardWindowController" wizard;
    q behavior;
    @"UserInteractionScreenData" screenData;
    @"NSString" _label;
}

@property (T@"NSString",&,V_label) label;
@property (T@"WizardWindowController",Vwizard) wizard;
@property (Tq,Vbehavior) behavior;
@property (T@"NSView",&) view;
@property (T@"NSString",&) title;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;
@property (T@"UserInteractionScreenData",&,VscreenData) screenData;

/* instance methods */
-[ReinstallWizardConfirmEraseViewController init];
-[ReinstallWizardConfirmEraseViewController shouldBeSkipped];
-[ReinstallWizardConfirmEraseViewController didBecomeActive];
-[ReinstallWizardConfirmEraseViewController wizard];
-[ReinstallWizardConfirmEraseViewController setWizard:];
-[ReinstallWizardConfirmEraseViewController behavior];
-[ReinstallWizardConfirmEraseViewController setBehavior:];
-[ReinstallWizardConfirmEraseViewController screenData];
-[ReinstallWizardConfirmEraseViewController setScreenData:];
-[ReinstallWizardConfirmEraseViewController label];
-[ReinstallWizardConfirmEraseViewController setLabel:];

@end

@interface ReinstallWizardWindowController : WizardWindowController

/* instance methods */
-[ReinstallWizardWindowController initWithDevice:];

@end

@interface RestoreBackupWizardChooseBackupViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
    B _isAwake;
    B _isLoading;
    B _hideSourceControl;
    B _noBackup;
    B _archivesHaveBeenLoaded;
    @"WizardWindowController" wizard;
    q behavior;
    @"NSArrayController" _arrayController;
    @"NSScrollView" _scrollView;
    d _scrollViewTopSpacing;
    @"NSSegmentedControl" _segmentedControl;
    @"NSMutableSet" _backupItems;
    @"NSMutableSet" _archiveItems;
    @"NSMutableSet" _displayedItems;
    @"BackupVersioningManager" _versioningManager;
    @"NSPopover" _infoPopover;
    @"DeviceDetailViewController" _backupDetailViewController;
    @"NSView" _backupDetailView;
    @"NSString" _versionWarningText;
    q _selectedSegment;
}

@property (T@"NSArrayController",&,V_arrayController) arrayController;
@property (T@"NSScrollView",&,V_scrollView) scrollView;
@property (Td,V_scrollViewTopSpacing) scrollViewTopSpacing;
@property (T@"NSSegmentedControl",&,V_segmentedControl) segmentedControl;
@property (T@"NSMutableSet",&,V_backupItems) backupItems;
@property (T@"NSMutableSet",&,V_archiveItems) archiveItems;
@property (T@"NSMutableSet",&,V_displayedItems) displayedItems;
@property (T@"BackupVersioningManager",&,V_versioningManager) versioningManager;
@property (T@"NSPopover",&,V_infoPopover) infoPopover;
@property (T@"DeviceDetailViewController",&,V_backupDetailViewController) backupDetailViewController;
@property (T@"NSView",&,V_backupDetailView) backupDetailView;
@property (T@"NSString",&,V_versionWarningText) versionWarningText;
@property (TB,V_isAwake) isAwake;
@property (TB,V_isLoading) isLoading;
@property (TB,V_hideSourceControl) hideSourceControl;
@property (TB,V_noBackup) noBackup;
@property (Tq,V_selectedSegment) selectedSegment;
@property (TB,V_archivesHaveBeenLoaded) archivesHaveBeenLoaded;
@property (T@"WizardWindowController",Vwizard) wizard;
@property (Tq,Vbehavior) behavior;
@property (T@"NSView",&) view;
@property (T@"NSString",&) title;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[RestoreBackupWizardChooseBackupViewController init];
-[RestoreBackupWizardChooseBackupViewController initWithNibName:bundle:];
-[RestoreBackupWizardChooseBackupViewController dealloc];
-[RestoreBackupWizardChooseBackupViewController awakeFromNib];
-[RestoreBackupWizardChooseBackupViewController didBecomeActive];
-[RestoreBackupWizardChooseBackupViewController rightButtonClicked:];
-[RestoreBackupWizardChooseBackupViewController segmentedControlClicked:];
-[RestoreBackupWizardChooseBackupViewController archivesDidLoadNotification:];
-[RestoreBackupWizardChooseBackupViewController loadBackups];
-[RestoreBackupWizardChooseBackupViewController observeValueForKeyPath:ofObject:change:context:];
-[RestoreBackupWizardChooseBackupViewController warningClickedForBackup:sender:];
-[RestoreBackupWizardChooseBackupViewController wizard];
-[RestoreBackupWizardChooseBackupViewController setWizard:];
-[RestoreBackupWizardChooseBackupViewController behavior];
-[RestoreBackupWizardChooseBackupViewController setBehavior:];
-[RestoreBackupWizardChooseBackupViewController arrayController];
-[RestoreBackupWizardChooseBackupViewController setArrayController:];
-[RestoreBackupWizardChooseBackupViewController scrollView];
-[RestoreBackupWizardChooseBackupViewController setScrollView:];
-[RestoreBackupWizardChooseBackupViewController scrollViewTopSpacing];
-[RestoreBackupWizardChooseBackupViewController setScrollViewTopSpacing:];
-[RestoreBackupWizardChooseBackupViewController segmentedControl];
-[RestoreBackupWizardChooseBackupViewController setSegmentedControl:];
-[RestoreBackupWizardChooseBackupViewController backupItems];
-[RestoreBackupWizardChooseBackupViewController setBackupItems:];
-[RestoreBackupWizardChooseBackupViewController archiveItems];
-[RestoreBackupWizardChooseBackupViewController setArchiveItems:];
-[RestoreBackupWizardChooseBackupViewController displayedItems];
-[RestoreBackupWizardChooseBackupViewController setDisplayedItems:];
-[RestoreBackupWizardChooseBackupViewController versioningManager];
-[RestoreBackupWizardChooseBackupViewController setVersioningManager:];
-[RestoreBackupWizardChooseBackupViewController infoPopover];
-[RestoreBackupWizardChooseBackupViewController setInfoPopover:];
-[RestoreBackupWizardChooseBackupViewController backupDetailViewController];
-[RestoreBackupWizardChooseBackupViewController setBackupDetailViewController:];
-[RestoreBackupWizardChooseBackupViewController backupDetailView];
-[RestoreBackupWizardChooseBackupViewController setBackupDetailView:];
-[RestoreBackupWizardChooseBackupViewController versionWarningText];
-[RestoreBackupWizardChooseBackupViewController setVersionWarningText:];
-[RestoreBackupWizardChooseBackupViewController isAwake];
-[RestoreBackupWizardChooseBackupViewController setIsAwake:];
-[RestoreBackupWizardChooseBackupViewController isLoading];
-[RestoreBackupWizardChooseBackupViewController setIsLoading:];
-[RestoreBackupWizardChooseBackupViewController hideSourceControl];
-[RestoreBackupWizardChooseBackupViewController setHideSourceControl:];
-[RestoreBackupWizardChooseBackupViewController noBackup];
-[RestoreBackupWizardChooseBackupViewController setNoBackup:];
-[RestoreBackupWizardChooseBackupViewController selectedSegment];
-[RestoreBackupWizardChooseBackupViewController setSelectedSegment:];
-[RestoreBackupWizardChooseBackupViewController archivesHaveBeenLoaded];
-[RestoreBackupWizardChooseBackupViewController setArchivesHaveBeenLoaded:];

@end

@interface RestoreBackupWizardWindowController : WizardWindowController

/* instance methods */
-[RestoreBackupWizardWindowController initWithDevice:];

@end

@interface RestoreWizardChooseAppsViewController : NSViewController <DatasetManagerDelegateProtocol, NSTableViewDelegate, WizardWindowDelegate> {
    /* instance variables */
    B _didLoad;
    B _isTransfer;
    B _didDisplayWarning;
    B _showSearchField;
    B _isLoading;
    B _selectAllIsChecked;
    @"WizardWindowController" wizard;
    q behavior;
    Q _selectedAppsCount;
    Q _totalAppsCount;
    @"iOSDevice" _sourceDevice;
    @"NSMutableSet" _appItems;
    @"NSArrayController" _arrayController;
    @"NSString" _infoLabel;
    @"NSArray" _mAppsToRemove;
}

@property (T@"NSMutableSet",&,V_appItems) appItems;
@property (T@"NSArrayController",&,V_arrayController) arrayController;
@property (T@"iOSDevice",&,V_sourceDevice) sourceDevice;
@property (T@"NSString",C,V_infoLabel) infoLabel;
@property (T@"NSArray",&,V_mAppsToRemove) mAppsToRemove;
@property (TB,V_didLoad) didLoad;
@property (TB,V_isTransfer) isTransfer;
@property (TB,V_didDisplayWarning) didDisplayWarning;
@property (TB,V_showSearchField) showSearchField;
@property (TB,V_isLoading) isLoading;
@property (TB,V_selectAllIsChecked) selectAllIsChecked;
@property (TQ,V_selectedAppsCount) selectedAppsCount;
@property (TQ,V_totalAppsCount) totalAppsCount;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;
@property (T@"WizardWindowController",Vwizard) wizard;
@property (Tq,Vbehavior) behavior;
@property (T@"NSView",&) view;
@property (T@"NSString",&) title;

/* instance methods */
-[RestoreWizardChooseAppsViewController init];
-[RestoreWizardChooseAppsViewController initWithSourceDevice:];
-[RestoreWizardChooseAppsViewController initWithNibName:bundle:];
-[RestoreWizardChooseAppsViewController awakeFromNib];
-[RestoreWizardChooseAppsViewController willBecomeActive];
-[RestoreWizardChooseAppsViewController didBecomeActive];
-[RestoreWizardChooseAppsViewController willResignActive];
-[RestoreWizardChooseAppsViewController checkboxClicked:];
-[RestoreWizardChooseAppsViewController selectAllClicked:];
-[RestoreWizardChooseAppsViewController done:];
-[RestoreWizardChooseAppsViewController cancel:];
-[RestoreWizardChooseAppsViewController tableViewSelectionDidChange:];
-[RestoreWizardChooseAppsViewController datasetManager:updateDidEnd:];
-[RestoreWizardChooseAppsViewController datasetManager:updateDidFailWithError:notification:];
-[RestoreWizardChooseAppsViewController datasetManager:updateDidStart:];
-[RestoreWizardChooseAppsViewController datasetManager:updateInProgress:];
-[RestoreWizardChooseAppsViewController updateSelectAllCheckbox];
-[RestoreWizardChooseAppsViewController applySelectAll:];
-[RestoreWizardChooseAppsViewController updateInfoLabel];
-[RestoreWizardChooseAppsViewController appsToRemove];
-[RestoreWizardChooseAppsViewController buildAppsToRemove];
-[RestoreWizardChooseAppsViewController displayWarningIfNeeded];
-[RestoreWizardChooseAppsViewController wizard];
-[RestoreWizardChooseAppsViewController setWizard:];
-[RestoreWizardChooseAppsViewController behavior];
-[RestoreWizardChooseAppsViewController setBehavior:];
-[RestoreWizardChooseAppsViewController selectedAppsCount];
-[RestoreWizardChooseAppsViewController setSelectedAppsCount:];
-[RestoreWizardChooseAppsViewController totalAppsCount];
-[RestoreWizardChooseAppsViewController setTotalAppsCount:];
-[RestoreWizardChooseAppsViewController sourceDevice];
-[RestoreWizardChooseAppsViewController setSourceDevice:];
-[RestoreWizardChooseAppsViewController appItems];
-[RestoreWizardChooseAppsViewController setAppItems:];
-[RestoreWizardChooseAppsViewController arrayController];
-[RestoreWizardChooseAppsViewController setArrayController:];
-[RestoreWizardChooseAppsViewController infoLabel];
-[RestoreWizardChooseAppsViewController setInfoLabel:];
-[RestoreWizardChooseAppsViewController mAppsToRemove];
-[RestoreWizardChooseAppsViewController setMAppsToRemove:];
-[RestoreWizardChooseAppsViewController didLoad];
-[RestoreWizardChooseAppsViewController setDidLoad:];
-[RestoreWizardChooseAppsViewController isTransfer];
-[RestoreWizardChooseAppsViewController setIsTransfer:];
-[RestoreWizardChooseAppsViewController didDisplayWarning];
-[RestoreWizardChooseAppsViewController setDidDisplayWarning:];
-[RestoreWizardChooseAppsViewController showSearchField];
-[RestoreWizardChooseAppsViewController setShowSearchField:];
-[RestoreWizardChooseAppsViewController isLoading];
-[RestoreWizardChooseAppsViewController setIsLoading:];
-[RestoreWizardChooseAppsViewController selectAllIsChecked];
-[RestoreWizardChooseAppsViewController setSelectAllIsChecked:];

@end

@interface RestoreWizardChooseDatasetViewController : NSViewController <NSTableViewDelegate, WizardWindowDelegate> {
    /* instance variables */
    B _didAwake;
    B _didDisplayWarning;
    B _selectAllIsChecked;
    B _isTransfer;
    @"WizardWindowController" wizard;
    q behavior;
    Q _selectedDatasetsCount;
    Q _totalDatasetsCount;
    @"Backup" _sourceBackup;
    Q _datasetsToRemove;
    @"NSMutableSet" _datasetItems;
    @"NSArrayController" _arrayController;
    @"NSTableColumn" _sizeColumn;
}

@property (T@"NSMutableSet",&,V_datasetItems) datasetItems;
@property (T@"NSArrayController",&,V_arrayController) arrayController;
@property (T@"Backup",&,V_sourceBackup) sourceBackup;
@property (T@"NSTableColumn",&,V_sizeColumn) sizeColumn;
@property (TB,V_didAwake) didAwake;
@property (TB,V_didDisplayWarning) didDisplayWarning;
@property (TB,V_selectAllIsChecked) selectAllIsChecked;
@property (TB,V_isTransfer) isTransfer;
@property (TQ,V_selectedDatasetsCount) selectedDatasetsCount;
@property (TQ,V_totalDatasetsCount) totalDatasetsCount;
@property (TQ,V_datasetsToRemove) datasetsToRemove;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;
@property (T@"WizardWindowController",Vwizard) wizard;
@property (Tq,Vbehavior) behavior;
@property (T@"NSView",&) view;
@property (T@"NSString",&) title;

/* instance methods */
-[RestoreWizardChooseDatasetViewController init];
-[RestoreWizardChooseDatasetViewController initWithSourceBackup:];
-[RestoreWizardChooseDatasetViewController initWithNibName:bundle:];
-[RestoreWizardChooseDatasetViewController awakeFromNib];
-[RestoreWizardChooseDatasetViewController loadDatasets];
-[RestoreWizardChooseDatasetViewController didBecomeActive];
-[RestoreWizardChooseDatasetViewController willResignActive];
-[RestoreWizardChooseDatasetViewController done:];
-[RestoreWizardChooseDatasetViewController cancel:];
-[RestoreWizardChooseDatasetViewController checkboxClicked:];
-[RestoreWizardChooseDatasetViewController selectAllClicked:];
-[RestoreWizardChooseDatasetViewController updateSelectAllCheckbox];
-[RestoreWizardChooseDatasetViewController applySelectAll:];
-[RestoreWizardChooseDatasetViewController tableViewSelectionDidChange:];
-[RestoreWizardChooseDatasetViewController buildDatasetsToRemove];
-[RestoreWizardChooseDatasetViewController displayWarningIfNeeded];
-[RestoreWizardChooseDatasetViewController wizard];
-[RestoreWizardChooseDatasetViewController setWizard:];
-[RestoreWizardChooseDatasetViewController behavior];
-[RestoreWizardChooseDatasetViewController setBehavior:];
-[RestoreWizardChooseDatasetViewController selectedDatasetsCount];
-[RestoreWizardChooseDatasetViewController setSelectedDatasetsCount:];
-[RestoreWizardChooseDatasetViewController totalDatasetsCount];
-[RestoreWizardChooseDatasetViewController setTotalDatasetsCount:];
-[RestoreWizardChooseDatasetViewController sourceBackup];
-[RestoreWizardChooseDatasetViewController setSourceBackup:];
-[RestoreWizardChooseDatasetViewController datasetsToRemove];
-[RestoreWizardChooseDatasetViewController setDatasetsToRemove:];
-[RestoreWizardChooseDatasetViewController datasetItems];
-[RestoreWizardChooseDatasetViewController setDatasetItems:];
-[RestoreWizardChooseDatasetViewController arrayController];
-[RestoreWizardChooseDatasetViewController setArrayController:];
-[RestoreWizardChooseDatasetViewController sizeColumn];
-[RestoreWizardChooseDatasetViewController setSizeColumn:];
-[RestoreWizardChooseDatasetViewController didAwake];
-[RestoreWizardChooseDatasetViewController setDidAwake:];
-[RestoreWizardChooseDatasetViewController didDisplayWarning];
-[RestoreWizardChooseDatasetViewController setDidDisplayWarning:];
-[RestoreWizardChooseDatasetViewController selectAllIsChecked];
-[RestoreWizardChooseDatasetViewController setSelectAllIsChecked:];
-[RestoreWizardChooseDatasetViewController isTransfer];
-[RestoreWizardChooseDatasetViewController setIsTransfer:];

@end

@interface RestoreWizardConfirmationViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
    @"WizardWindowController" wizard;
    q behavior;
    @"NSString" _infoLabel;
    @"NSImage" _illustration;
}

@property (T@"NSString",&,V_infoLabel) infoLabel;
@property (T@"NSImage",&,V_illustration) illustration;
@property (T@"WizardWindowController",Vwizard) wizard;
@property (Tq,Vbehavior) behavior;
@property (T@"NSView",&) view;
@property (T@"NSString",&) title;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[RestoreWizardConfirmationViewController init];
-[RestoreWizardConfirmationViewController shouldBeSkipped];
-[RestoreWizardConfirmationViewController didBecomeActive];
-[RestoreWizardConfirmationViewController wizard];
-[RestoreWizardConfirmationViewController setWizard:];
-[RestoreWizardConfirmationViewController behavior];
-[RestoreWizardConfirmationViewController setBehavior:];
-[RestoreWizardConfirmationViewController infoLabel];
-[RestoreWizardConfirmationViewController setInfoLabel:];
-[RestoreWizardConfirmationViewController illustration];
-[RestoreWizardConfirmationViewController setIllustration:];

@end

@interface RestoreWizardCustomizeViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
    B _isTransferOperation;
    B _installDownloadedApps;
    B _multipleTargets;
    B _updateNeeded;
    B _erase;
    B _allowMDMEnroll;
    B _shouldErase;
    B _isAgent;
    @"WizardWindowController" wizard;
    q behavior;
    @"RestoreWizardChooseDatasetViewController" _datasetsWizard;
    @"RestoreWizardChooseAppsViewController" _appsWizard;
    @"NSString" _infoLabel;
    @"NSString" _datasetsInfoLabel;
    @"NSString" _appsInfoLabel;
    @"Backup" _selectedBackup;
    @"Backup" _sourceBackup;
    @"NSArray" _targetDevices;
    @"NSString" _targetName;
    @"NSString" _updateInfoText;
    @"NSView" _iMazingNoteView;
}

@property (T@"RestoreWizardChooseDatasetViewController",&,V_datasetsWizard) datasetsWizard;
@property (T@"RestoreWizardChooseAppsViewController",&,V_appsWizard) appsWizard;
@property (T@"NSString",&,V_infoLabel) infoLabel;
@property (T@"NSString",&,V_datasetsInfoLabel) datasetsInfoLabel;
@property (T@"NSString",&,V_appsInfoLabel) appsInfoLabel;
@property (TB,V_isTransferOperation) isTransferOperation;
@property (TB,V_installDownloadedApps) installDownloadedApps;
@property (T@"Backup",&,V_selectedBackup) selectedBackup;
@property (T@"Backup",&,V_sourceBackup) sourceBackup;
@property (T@"NSArray",&,V_targetDevices) targetDevices;
@property (TB,V_multipleTargets) multipleTargets;
@property (TB,V_updateNeeded) updateNeeded;
@property (TB,V_erase) erase;
@property (TB,V_allowMDMEnroll) allowMDMEnroll;
@property (TB,V_shouldErase) shouldErase;
@property (T@"NSString",&,V_targetName) targetName;
@property (T@"NSString",&,V_updateInfoText) updateInfoText;
@property (TB,V_isAgent) isAgent;
@property (T@"NSView",&,V_iMazingNoteView) iMazingNoteView;
@property (T@"WizardWindowController",Vwizard) wizard;
@property (Tq,Vbehavior) behavior;
@property (T@"NSView",&) view;
@property (T@"NSString",&) title;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[RestoreWizardCustomizeViewController init];
-[RestoreWizardCustomizeViewController shouldBeSkipped];
-[RestoreWizardCustomizeViewController willBecomeActive];
-[RestoreWizardCustomizeViewController didBecomeActive];
-[RestoreWizardCustomizeViewController customizeDatasetsClicked:];
-[RestoreWizardCustomizeViewController customizeAppsClicked:];
-[RestoreWizardCustomizeViewController downloadAppsHelpClicked:];
-[RestoreWizardCustomizeViewController allowMDMEnrollHelpClicked:];
-[RestoreWizardCustomizeViewController nextClicked:];
-[RestoreWizardCustomizeViewController eraseClicked:];
-[RestoreWizardCustomizeViewController updateInfoLabels];
-[RestoreWizardCustomizeViewController wizard];
-[RestoreWizardCustomizeViewController setWizard:];
-[RestoreWizardCustomizeViewController behavior];
-[RestoreWizardCustomizeViewController setBehavior:];
-[RestoreWizardCustomizeViewController datasetsWizard];
-[RestoreWizardCustomizeViewController setDatasetsWizard:];
-[RestoreWizardCustomizeViewController appsWizard];
-[RestoreWizardCustomizeViewController setAppsWizard:];
-[RestoreWizardCustomizeViewController infoLabel];
-[RestoreWizardCustomizeViewController setInfoLabel:];
-[RestoreWizardCustomizeViewController datasetsInfoLabel];
-[RestoreWizardCustomizeViewController setDatasetsInfoLabel:];
-[RestoreWizardCustomizeViewController appsInfoLabel];
-[RestoreWizardCustomizeViewController setAppsInfoLabel:];
-[RestoreWizardCustomizeViewController isTransferOperation];
-[RestoreWizardCustomizeViewController setIsTransferOperation:];
-[RestoreWizardCustomizeViewController installDownloadedApps];
-[RestoreWizardCustomizeViewController setInstallDownloadedApps:];
-[RestoreWizardCustomizeViewController selectedBackup];
-[RestoreWizardCustomizeViewController setSelectedBackup:];
-[RestoreWizardCustomizeViewController sourceBackup];
-[RestoreWizardCustomizeViewController setSourceBackup:];
-[RestoreWizardCustomizeViewController targetDevices];
-[RestoreWizardCustomizeViewController setTargetDevices:];
-[RestoreWizardCustomizeViewController multipleTargets];
-[RestoreWizardCustomizeViewController setMultipleTargets:];
-[RestoreWizardCustomizeViewController updateNeeded];
-[RestoreWizardCustomizeViewController setUpdateNeeded:];
-[RestoreWizardCustomizeViewController erase];
-[RestoreWizardCustomizeViewController setErase:];
-[RestoreWizardCustomizeViewController allowMDMEnroll];
-[RestoreWizardCustomizeViewController setAllowMDMEnroll:];
-[RestoreWizardCustomizeViewController shouldErase];
-[RestoreWizardCustomizeViewController setShouldErase:];
-[RestoreWizardCustomizeViewController targetName];
-[RestoreWizardCustomizeViewController setTargetName:];
-[RestoreWizardCustomizeViewController updateInfoText];
-[RestoreWizardCustomizeViewController setUpdateInfoText:];
-[RestoreWizardCustomizeViewController isAgent];
-[RestoreWizardCustomizeViewController setIsAgent:];
-[RestoreWizardCustomizeViewController iMazingNoteView];
-[RestoreWizardCustomizeViewController setIMazingNoteView:];

@end

@interface RestoreWizardFindMyiPhoneViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
    B _isRestoreBackupWizard;
    @"WizardWindowController" wizard;
    q behavior;
    @"NSMutableSet" _deviceItems;
    @"NSArrayController" _arrayController;
    @"NSMutableArray" _observedDevices;
    @"NSString" _infoLabel;
    @"iOSDeviceItem" _uniqueDeviceItem;
    @"NSImage" _deviceIcon;
}

@property (T@"NSMutableSet",&,V_deviceItems) deviceItems;
@property (T@"NSArrayController",&,V_arrayController) arrayController;
@property (T@"NSMutableArray",&,V_observedDevices) observedDevices;
@property (T@"NSString",&,V_infoLabel) infoLabel;
@property (T@"iOSDeviceItem",&,V_uniqueDeviceItem) uniqueDeviceItem;
@property (T@"NSImage",&,V_deviceIcon) deviceIcon;
@property (TB,V_isRestoreBackupWizard) isRestoreBackupWizard;
@property (T@"WizardWindowController",Vwizard) wizard;
@property (Tq,Vbehavior) behavior;
@property (T@"NSView",&) view;
@property (T@"NSString",&) title;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[RestoreWizardFindMyiPhoneViewController init];
-[RestoreWizardFindMyiPhoneViewController initWithNibName:bundle:];
-[RestoreWizardFindMyiPhoneViewController shouldBeSkipped];
-[RestoreWizardFindMyiPhoneViewController didBecomeActive];
-[RestoreWizardFindMyiPhoneViewController willResignActive];
-[RestoreWizardFindMyiPhoneViewController deviceInfosNotification:];
-[RestoreWizardFindMyiPhoneViewController refreshDevices];
-[RestoreWizardFindMyiPhoneViewController wizard];
-[RestoreWizardFindMyiPhoneViewController setWizard:];
-[RestoreWizardFindMyiPhoneViewController behavior];
-[RestoreWizardFindMyiPhoneViewController setBehavior:];
-[RestoreWizardFindMyiPhoneViewController deviceItems];
-[RestoreWizardFindMyiPhoneViewController setDeviceItems:];
-[RestoreWizardFindMyiPhoneViewController arrayController];
-[RestoreWizardFindMyiPhoneViewController setArrayController:];
-[RestoreWizardFindMyiPhoneViewController observedDevices];
-[RestoreWizardFindMyiPhoneViewController setObservedDevices:];
-[RestoreWizardFindMyiPhoneViewController infoLabel];
-[RestoreWizardFindMyiPhoneViewController setInfoLabel:];
-[RestoreWizardFindMyiPhoneViewController uniqueDeviceItem];
-[RestoreWizardFindMyiPhoneViewController setUniqueDeviceItem:];
-[RestoreWizardFindMyiPhoneViewController deviceIcon];
-[RestoreWizardFindMyiPhoneViewController setDeviceIcon:];
-[RestoreWizardFindMyiPhoneViewController isRestoreBackupWizard];
-[RestoreWizardFindMyiPhoneViewController setIsRestoreBackupWizard:];

@end

@interface RestoreWizardTargetDeviceViewController : NSViewController <NSTableViewDelegate, NSTableViewDataSource, WizardWindowDelegate> {
    /* instance variables */
    B _awake;
    B _isTransfer;
    B _allowsMultipleSelection;
    @"WizardWindowController" wizard;
    q behavior;
    @"NSMutableSet" _deviceItems;
    @"NSArrayController" _arrayController;
    @"NSPopover" _infoPopover;
    @"NSString" _iOSVersionWarningText;
    @"Backup" _sourceBackup;
    @"NSView" _connectView;
    @"_TtC7iMazing30ConnectScreenUSBViewController" _connectViewController;
    @"NSViewController" _deviceInfoPopoverController;
    @"NSPopover" _deviceInfoPopover;
    @"NSTableView" _tableView;
}

@property (TB,V_awake) awake;
@property (TB,V_isTransfer) isTransfer;
@property (T@"NSMutableSet",&,V_deviceItems) deviceItems;
@property (T@"NSArrayController",&,V_arrayController) arrayController;
@property (T@"NSPopover",&,V_infoPopover) infoPopover;
@property (T@"NSString",&,V_iOSVersionWarningText) iOSVersionWarningText;
@property (T@"Backup",&,V_sourceBackup) sourceBackup;
@property (T@"NSView",&,V_connectView) connectView;
@property (T@"_TtC7iMazing30ConnectScreenUSBViewController",&,V_connectViewController) connectViewController;
@property (TB,V_allowsMultipleSelection) allowsMultipleSelection;
@property (T@"NSViewController",&,V_deviceInfoPopoverController) deviceInfoPopoverController;
@property (T@"NSPopover",&,V_deviceInfoPopover) deviceInfoPopover;
@property (T@"NSTableView",&,V_tableView) tableView;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;
@property (T@"WizardWindowController",Vwizard) wizard;
@property (Tq,Vbehavior) behavior;
@property (T@"NSView",&) view;
@property (T@"NSString",&) title;

/* instance methods */
-[RestoreWizardTargetDeviceViewController init];
-[RestoreWizardTargetDeviceViewController initWithNibName:bundle:];
-[RestoreWizardTargetDeviceViewController awakeFromNib];
-[RestoreWizardTargetDeviceViewController dealloc];
-[RestoreWizardTargetDeviceViewController didBecomeActive];
-[RestoreWizardTargetDeviceViewController willResignActive];
-[RestoreWizardTargetDeviceViewController tableView:shouldSelectRow:];
-[RestoreWizardTargetDeviceViewController showInfo:];
-[RestoreWizardTargetDeviceViewController observeValueForKeyPath:ofObject:change:context:];
-[RestoreWizardTargetDeviceViewController updateAvailableDevices:];
-[RestoreWizardTargetDeviceViewController updateNextButtonEnabled];
-[RestoreWizardTargetDeviceViewController checkboxClicked:];
-[RestoreWizardTargetDeviceViewController nextClicked:];
-[RestoreWizardTargetDeviceViewController warningClickedForDevice:sender:];
-[RestoreWizardTargetDeviceViewController itemForDevice:];
-[RestoreWizardTargetDeviceViewController deviceItemsContainDevice:];
-[RestoreWizardTargetDeviceViewController addNewDeviceItem:];
-[RestoreWizardTargetDeviceViewController removeDisplayedDeviceItem:];
-[RestoreWizardTargetDeviceViewController wizard];
-[RestoreWizardTargetDeviceViewController setWizard:];
-[RestoreWizardTargetDeviceViewController behavior];
-[RestoreWizardTargetDeviceViewController setBehavior:];
-[RestoreWizardTargetDeviceViewController awake];
-[RestoreWizardTargetDeviceViewController setAwake:];
-[RestoreWizardTargetDeviceViewController isTransfer];
-[RestoreWizardTargetDeviceViewController setIsTransfer:];
-[RestoreWizardTargetDeviceViewController deviceItems];
-[RestoreWizardTargetDeviceViewController setDeviceItems:];
-[RestoreWizardTargetDeviceViewController arrayController];
-[RestoreWizardTargetDeviceViewController setArrayController:];
-[RestoreWizardTargetDeviceViewController infoPopover];
-[RestoreWizardTargetDeviceViewController setInfoPopover:];
-[RestoreWizardTargetDeviceViewController iOSVersionWarningText];
-[RestoreWizardTargetDeviceViewController setIOSVersionWarningText:];
-[RestoreWizardTargetDeviceViewController sourceBackup];
-[RestoreWizardTargetDeviceViewController setSourceBackup:];
-[RestoreWizardTargetDeviceViewController connectView];
-[RestoreWizardTargetDeviceViewController setConnectView:];
-[RestoreWizardTargetDeviceViewController connectViewController];
-[RestoreWizardTargetDeviceViewController setConnectViewController:];
-[RestoreWizardTargetDeviceViewController allowsMultipleSelection];
-[RestoreWizardTargetDeviceViewController setAllowsMultipleSelection:];
-[RestoreWizardTargetDeviceViewController deviceInfoPopoverController];
-[RestoreWizardTargetDeviceViewController setDeviceInfoPopoverController:];
-[RestoreWizardTargetDeviceViewController deviceInfoPopover];
-[RestoreWizardTargetDeviceViewController setDeviceInfoPopover:];
-[RestoreWizardTargetDeviceViewController tableView];
-[RestoreWizardTargetDeviceViewController setTableView:];

@end

@interface RestoreWizardWindowController : WizardWindowController

/* instance methods */
-[RestoreWizardWindowController initWithDevice:];

@end

@interface RingtoneManager : ModernDatasetManager

@property (T^v,D) cppObject;

/* instance methods */
-[RingtoneManager init];
-[RingtoneManager copyToComputer:path:];
-[RingtoneManager openItems:];
-[RingtoneManager copyToDevice:];
-[RingtoneManager deleteItems:];

@end

@interface RingtoneTrack : NSObject {
    /* instance variables */
    B _isPurchase;
    @"NSString" _title;
    Q _length;
    @"NSString" _durationTextSmall;
    @"NSString" _artist;
    @"NSString" _album;
    @"NSString" _fullTextIndex;
    ^v _cppObject;
}

@property (T@"NSString",&,V_title) title;
@property (TQ,V_length) length;
@property (T@"NSString",&,V_durationTextSmall) durationTextSmall;
@property (T@"NSString",&,V_artist) artist;
@property (T@"NSString",&,V_album) album;
@property (TB,V_isPurchase) isPurchase;
@property (T@"NSString",&,V_fullTextIndex) fullTextIndex;
@property (T^v,V_cppObject) cppObject;

/* instance methods */
-[RingtoneTrack initWithCPPObject:];
-[RingtoneTrack dealloc];
-[RingtoneTrack title];
-[RingtoneTrack setTitle:];
-[RingtoneTrack length];
-[RingtoneTrack setLength:];
-[RingtoneTrack durationTextSmall];
-[RingtoneTrack setDurationTextSmall:];
-[RingtoneTrack artist];
-[RingtoneTrack setArtist:];
-[RingtoneTrack album];
-[RingtoneTrack setAlbum:];
-[RingtoneTrack isPurchase];
-[RingtoneTrack setIsPurchase:];
-[RingtoneTrack fullTextIndex];
-[RingtoneTrack setFullTextIndex:];
-[RingtoneTrack cppObject];
-[RingtoneTrack setCppObject:];

@end

@interface RingtoneViewController : SingleTableDatasetViewController

/* instance methods */
-[RingtoneViewController initWithDevice:];
-[RingtoneViewController dealloc];
-[RingtoneViewController awakeFromNib];
-[RingtoneViewController toolbarButtons];
-[RingtoneViewController _getAllowedUTIs:];
-[RingtoneViewController handleATHNotification:];
-[RingtoneViewController helpURL];
-[RingtoneViewController predicateForSearchString:];
-[RingtoneViewController validateAction:];
-[RingtoneViewController tableView:validateDrop:proposedRow:proposedDropOperation:];

@end

@interface RoundImageCell : NSImageCell {
    /* instance variables */
    B _rounded;
}

@property (TB,N,V_rounded) rounded;

/* instance methods */
-[RoundImageCell initImageCell:];
-[RoundImageCell initWithCoder:];
-[RoundImageCell initTextCell:];
-[RoundImageCell drawInteriorWithFrame:inView:];
-[RoundImageCell rounded];
-[RoundImageCell setRounded:];

@end

@interface SafariBookmark : NSObject {
    /* instance variables */
    B _iconLoaded;
    B _isLeaf;
    q _bookmarkType;
    q _parentID;
    @"NSString" _parentName;
    @"NSString" _title;
    @"NSString" _url;
    @"NSString" _sortUrl;
    @"NSMutableString" _fullTextSearchIndex;
    @"NSImage" _icon;
    q _orderIndex;
    @"NSArray" _subItems;
    ^v _cppObject;
}

@property (Tq,V_bookmarkType) bookmarkType;
@property (Tq,V_parentID) parentID;
@property (T@"NSString",&,V_parentName) parentName;
@property (T@"NSString",&,V_title) title;
@property (T@"NSString",&,V_url) url;
@property (T@"NSString",&,V_sortUrl) sortUrl;
@property (T@"NSMutableString",&,V_fullTextSearchIndex) fullTextSearchIndex;
@property (T@"NSImage",&,V_icon) icon;
@property (TB,V_iconLoaded) iconLoaded;
@property (Tq,V_orderIndex) orderIndex;
@property (T@"NSArray",&,V_subItems) subItems;
@property (TB,V_isLeaf) isLeaf;
@property (T^v,V_cppObject) cppObject;

/* instance methods */
-[SafariBookmark initWithCPPObject:];
-[SafariBookmark buildFullTextSearchIndex];
-[SafariBookmark asBookmarkString];
-[SafariBookmark dealloc];
-[SafariBookmark bookmarkType];
-[SafariBookmark setBookmarkType:];
-[SafariBookmark parentID];
-[SafariBookmark setParentID:];
-[SafariBookmark parentName];
-[SafariBookmark setParentName:];
-[SafariBookmark title];
-[SafariBookmark setTitle:];
-[SafariBookmark url];
-[SafariBookmark setUrl:];
-[SafariBookmark sortUrl];
-[SafariBookmark setSortUrl:];
-[SafariBookmark fullTextSearchIndex];
-[SafariBookmark setFullTextSearchIndex:];
-[SafariBookmark icon];
-[SafariBookmark setIcon:];
-[SafariBookmark iconLoaded];
-[SafariBookmark setIconLoaded:];
-[SafariBookmark orderIndex];
-[SafariBookmark setOrderIndex:];
-[SafariBookmark subItems];
-[SafariBookmark setSubItems:];
-[SafariBookmark isLeaf];
-[SafariBookmark setIsLeaf:];
-[SafariBookmark cppObject];
-[SafariBookmark setCppObject:];

@end

@interface SafariBookmarksManager : ModernDatasetManager

@property (T^v,D) cppObject;

/* instance methods */
-[SafariBookmarksManager init];
-[SafariBookmarksManager copyToComputer:path:];
-[SafariBookmarksManager exportToCSV:path:];
-[SafariBookmarksManager exportToXLS:path:];

@end

@interface SafariBookmarksViewController : ModernManagerDatasetViewController <NSTableViewDelegate, NSOutlineViewDelegate> {
    /* instance variables */
    @"NSString" _defaultExtension;
    @"NSArray" _allowedUTIs;
    : _managerOpenAction;
    : _managerCopyToComputerAction;
    : _managerExportToCSVAction;
    : _managerExportToXLSAction;
    @"NSArray" _searchItems;
    @"NSArrayController" _searchItemsController;
    @"NSTableView" _searchView;
    @? _extensionForItem;
    @? _nameForItem;
    @"NSTreeController" _treeController;
    @"NSOutlineView" _outlineView;
    @"NSScrollView" _bookmarkTreeView;
    @"NSScrollView" _bookmarkSearchView;
    Q _totalItemsCount;
}

@property (T@"NSString",&,V_defaultExtension) defaultExtension;
@property (T@"NSArray",&,V_allowedUTIs) allowedUTIs;
@property (T:,V_managerOpenAction) managerOpenAction;
@property (T:,V_managerCopyToComputerAction) managerCopyToComputerAction;
@property (T:,V_managerExportToCSVAction) managerExportToCSVAction;
@property (T:,V_managerExportToXLSAction) managerExportToXLSAction;
@property (T@"NSArray",&,V_searchItems) searchItems;
@property (T@"NSArrayController",&,V_searchItemsController) searchItemsController;
@property (T@"NSTableView",&,V_searchView) searchView;
@property (T@?,C,V_extensionForItem) extensionForItem;
@property (T@?,C,V_nameForItem) nameForItem;
@property (T@"NSTreeController",&,V_treeController) treeController;
@property (T@"NSOutlineView",&,V_outlineView) outlineView;
@property (T@"NSScrollView",&,N,V_bookmarkTreeView) bookmarkTreeView;
@property (T@"NSScrollView",&,N,V_bookmarkSearchView) bookmarkSearchView;
@property (TQ,V_totalItemsCount) totalItemsCount;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[SafariBookmarksViewController initWithDevice:];
-[SafariBookmarksViewController dealloc];
-[SafariBookmarksViewController prepareArrayForSearch:data:];
-[SafariBookmarksViewController defaultSuccessCallback];
-[SafariBookmarksViewController buildSearchFlatArray];
-[SafariBookmarksViewController loadFavicons];
-[SafariBookmarksViewController awakeFromNib];
-[SafariBookmarksViewController toolbarButtons];
-[SafariBookmarksViewController predicateForSearchString:];
-[SafariBookmarksViewController helpURL];
-[SafariBookmarksViewController observeValueForKeyPath:ofObject:change:context:];
-[SafariBookmarksViewController validateAction:];
-[SafariBookmarksViewController open:];
-[SafariBookmarksViewController bookmarkTableClickedOrSelected:clickedIndex:];
-[SafariBookmarksViewController bookmarksClickedOrSelectedOrArranged];
-[SafariBookmarksViewController exportToCSV:];
-[SafariBookmarksViewController exportToXLS:];
-[SafariBookmarksViewController copyToComputer:];
-[SafariBookmarksViewController copy:];
-[SafariBookmarksViewController tableView:writeRowsWithIndexes:toPasteboard:];
-[SafariBookmarksViewController tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:];
-[SafariBookmarksViewController outlineView:writeItems:toPasteboard:];
-[SafariBookmarksViewController outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:];
-[SafariBookmarksViewController defaultExtension];
-[SafariBookmarksViewController setDefaultExtension:];
-[SafariBookmarksViewController allowedUTIs];
-[SafariBookmarksViewController setAllowedUTIs:];
-[SafariBookmarksViewController managerOpenAction];
-[SafariBookmarksViewController setManagerOpenAction:];
-[SafariBookmarksViewController managerCopyToComputerAction];
-[SafariBookmarksViewController setManagerCopyToComputerAction:];
-[SafariBookmarksViewController managerExportToCSVAction];
-[SafariBookmarksViewController setManagerExportToCSVAction:];
-[SafariBookmarksViewController managerExportToXLSAction];
-[SafariBookmarksViewController setManagerExportToXLSAction:];
-[SafariBookmarksViewController searchItems];
-[SafariBookmarksViewController setSearchItems:];
-[SafariBookmarksViewController searchItemsController];
-[SafariBookmarksViewController setSearchItemsController:];
-[SafariBookmarksViewController searchView];
-[SafariBookmarksViewController setSearchView:];
-[SafariBookmarksViewController extensionForItem];
-[SafariBookmarksViewController setExtensionForItem:];
-[SafariBookmarksViewController nameForItem];
-[SafariBookmarksViewController setNameForItem:];
-[SafariBookmarksViewController treeController];
-[SafariBookmarksViewController setTreeController:];
-[SafariBookmarksViewController outlineView];
-[SafariBookmarksViewController setOutlineView:];
-[SafariBookmarksViewController bookmarkTreeView];
-[SafariBookmarksViewController setBookmarkTreeView:];
-[SafariBookmarksViewController bookmarkSearchView];
-[SafariBookmarksViewController setBookmarkSearchView:];
-[SafariBookmarksViewController totalItemsCount];
-[SafariBookmarksViewController setTotalItemsCount:];

@end

@interface SafariHelper : NSObject

/* class methods */
+[SafariHelper downloadFavicon:];
+[SafariHelper loadFaviconFromCache:cacheExists:];
+[SafariHelper loadReadingListFromCache:cache:];
+[SafariHelper downloadReadingListData:data:];

@end

@interface SafariHistory : NSObject {
    /* instance variables */
    B _iconLoaded;
    @"NSString" _title;
    @"NSString" _url;
    @"NSString" _sortUrl;
    @"NSImage" _icon;
    @"NSString" _redirectedFromUrl;
    q _visitCount;
    @"NSDate" _visitTime;
    @"NSMutableString" _fullTextSearchIndex;
    ^v _cppObject;
}

@property (T@"NSString",&,V_title) title;
@property (T@"NSString",&,V_url) url;
@property (T@"NSString",&,V_sortUrl) sortUrl;
@property (T@"NSImage",&,V_icon) icon;
@property (TB,V_iconLoaded) iconLoaded;
@property (T@"NSString",&,V_redirectedFromUrl) redirectedFromUrl;
@property (Tq,V_visitCount) visitCount;
@property (T@"NSDate",&,V_visitTime) visitTime;
@property (T@"NSMutableString",&,V_fullTextSearchIndex) fullTextSearchIndex;
@property (T^v,V_cppObject) cppObject;

/* instance methods */
-[SafariHistory initWithCPPObject:];
-[SafariHistory buildFullTextSearchIndex];
-[SafariHistory asString];
-[SafariHistory dealloc];
-[SafariHistory title];
-[SafariHistory setTitle:];
-[SafariHistory url];
-[SafariHistory setUrl:];
-[SafariHistory sortUrl];
-[SafariHistory setSortUrl:];
-[SafariHistory icon];
-[SafariHistory setIcon:];
-[SafariHistory iconLoaded];
-[SafariHistory setIconLoaded:];
-[SafariHistory redirectedFromUrl];
-[SafariHistory setRedirectedFromUrl:];
-[SafariHistory visitCount];
-[SafariHistory setVisitCount:];
-[SafariHistory visitTime];
-[SafariHistory setVisitTime:];
-[SafariHistory fullTextSearchIndex];
-[SafariHistory setFullTextSearchIndex:];
-[SafariHistory cppObject];
-[SafariHistory setCppObject:];

@end

@interface SafariHistoryManager : ModernDatasetManager

@property (T^v,D) cppObject;

/* instance methods */
-[SafariHistoryManager init];
-[SafariHistoryManager copyToComputer:path:];
-[SafariHistoryManager exportToCSV:path:];
-[SafariHistoryManager exportToXLS:path:];

@end

@interface SafariHistoryViewController : SingleTableDatasetViewController {
    /* instance variables */
    : _managerExportToCSVAction;
    : _managerExportToXLSAction;
    @"NSView" _myView;
    @"DateRangePickerViewController" _dateRangePickerViewController;
    @"NSDate" _dateFilterFrom;
    @"NSDate" _dateFilterTo;
}

@property (T:,V_managerExportToCSVAction) managerExportToCSVAction;
@property (T:,V_managerExportToXLSAction) managerExportToXLSAction;
@property (T@"NSView",&,V_myView) myView;
@property (T@"DateRangePickerViewController",&,V_dateRangePickerViewController) dateRangePickerViewController;
@property (T@"NSDate",&,V_dateFilterFrom) dateFilterFrom;
@property (T@"NSDate",&,V_dateFilterTo) dateFilterTo;

/* instance methods */
-[SafariHistoryViewController initWithDevice:];
-[SafariHistoryViewController defaultSuccessCallback];
-[SafariHistoryViewController initializeDateRangePicker];
-[SafariHistoryViewController loadFavicons];
-[SafariHistoryViewController awakeFromNib];
-[SafariHistoryViewController toolbarButtons];
-[SafariHistoryViewController observeValueForKeyPath:ofObject:change:context:];
-[SafariHistoryViewController filter];
-[SafariHistoryViewController helpURL];
-[SafariHistoryViewController validateAction:];
-[SafariHistoryViewController open:];
-[SafariHistoryViewController exportToCSV:];
-[SafariHistoryViewController exportToXLS:];
-[SafariHistoryViewController copy:];
-[SafariHistoryViewController tableView:writeRowsWithIndexes:toPasteboard:];
-[SafariHistoryViewController tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:];
-[SafariHistoryViewController managerExportToCSVAction];
-[SafariHistoryViewController setManagerExportToCSVAction:];
-[SafariHistoryViewController managerExportToXLSAction];
-[SafariHistoryViewController setManagerExportToXLSAction:];
-[SafariHistoryViewController myView];
-[SafariHistoryViewController setMyView:];
-[SafariHistoryViewController dateRangePickerViewController];
-[SafariHistoryViewController setDateRangePickerViewController:];
-[SafariHistoryViewController dateFilterFrom];
-[SafariHistoryViewController setDateFilterFrom:];
-[SafariHistoryViewController dateFilterTo];
-[SafariHistoryViewController setDateFilterTo:];

@end

@interface SafariReadingList : NSObject {
    /* instance variables */
    B _isFolder;
    B _isRead;
    B _isCompletedFromCache;
    q _bookmarkType;
    q _parentID;
    @"NSString" _title;
    @"NSString" _url;
    @"NSString" _siteName;
    @"NSString" _siteDescription;
    @"NSMutableString" _fullTextSearchIndex;
    @"NSString" _imagePath;
    q _lastModified;
    q _orderIndex;
    @"NSArray" _subItems;
    ^v _cppObject;
}

@property (Tq,V_bookmarkType) bookmarkType;
@property (Tq,V_parentID) parentID;
@property (TB,V_isFolder) isFolder;
@property (T@"NSString",&,V_title) title;
@property (T@"NSString",&,V_url) url;
@property (T@"NSString",&,V_siteName) siteName;
@property (T@"NSString",&,V_siteDescription) siteDescription;
@property (T@"NSMutableString",&,V_fullTextSearchIndex) fullTextSearchIndex;
@property (T@"NSString",&,V_imagePath) imagePath;
@property (TB,V_isRead) isRead;
@property (Tq,V_lastModified) lastModified;
@property (TB,V_isCompletedFromCache) isCompletedFromCache;
@property (Tq,V_orderIndex) orderIndex;
@property (T@"NSArray",&,V_subItems) subItems;
@property (T^v,V_cppObject) cppObject;

/* instance methods */
-[SafariReadingList initWithCPPObject:];
-[SafariReadingList updateWithCPPObject:];
-[SafariReadingList update:];
-[SafariReadingList buildFullTextSearchIndex];
-[SafariReadingList asReadingListString];
-[SafariReadingList dealloc];
-[SafariReadingList bookmarkType];
-[SafariReadingList setBookmarkType:];
-[SafariReadingList parentID];
-[SafariReadingList setParentID:];
-[SafariReadingList isFolder];
-[SafariReadingList setIsFolder:];
-[SafariReadingList title];
-[SafariReadingList setTitle:];
-[SafariReadingList url];
-[SafariReadingList setUrl:];
-[SafariReadingList siteName];
-[SafariReadingList setSiteName:];
-[SafariReadingList siteDescription];
-[SafariReadingList setSiteDescription:];
-[SafariReadingList fullTextSearchIndex];
-[SafariReadingList setFullTextSearchIndex:];
-[SafariReadingList imagePath];
-[SafariReadingList setImagePath:];
-[SafariReadingList isRead];
-[SafariReadingList setIsRead:];
-[SafariReadingList lastModified];
-[SafariReadingList setLastModified:];
-[SafariReadingList isCompletedFromCache];
-[SafariReadingList setIsCompletedFromCache:];
-[SafariReadingList orderIndex];
-[SafariReadingList setOrderIndex:];
-[SafariReadingList subItems];
-[SafariReadingList setSubItems:];
-[SafariReadingList cppObject];
-[SafariReadingList setCppObject:];

@end

@interface SafariReadingListManager : ModernDatasetManager

@property (T^v,D) cppObject;

/* instance methods */
-[SafariReadingListManager init];
-[SafariReadingListManager copyToComputer:path:];
-[SafariReadingListManager exportToCSV:path:];
-[SafariReadingListManager exportToXLS:path:];

@end

@interface SafariReadingListViewController : SingleTableDatasetViewController {
    /* instance variables */
    : _managerExportToCSVAction;
    : _managerExportToXLSAction;
}

@property (T:,V_managerExportToCSVAction) managerExportToCSVAction;
@property (T:,V_managerExportToXLSAction) managerExportToXLSAction;

/* instance methods */
-[SafariReadingListViewController initWithDevice:];
-[SafariReadingListViewController defaultSuccessCallback];
-[SafariReadingListViewController loadWebData];
-[SafariReadingListViewController awakeFromNib];
-[SafariReadingListViewController toolbarButtons];
-[SafariReadingListViewController predicateForSearchString:];
-[SafariReadingListViewController helpURL];
-[SafariReadingListViewController validateAction:];
-[SafariReadingListViewController open:];
-[SafariReadingListViewController exportToCSV:];
-[SafariReadingListViewController exportToXLS:];
-[SafariReadingListViewController copy:];
-[SafariReadingListViewController tableView:writeRowsWithIndexes:toPasteboard:];
-[SafariReadingListViewController tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:];
-[SafariReadingListViewController managerExportToCSVAction];
-[SafariReadingListViewController setManagerExportToCSVAction:];
-[SafariReadingListViewController managerExportToXLSAction];
-[SafariReadingListViewController setManagerExportToXLSAction:];

@end

@interface SchedulingOptionsFrequencyItemLegacy : NSObject {
    /* instance variables */
    Q _frequency;
}

@property (TQ,V_frequency) frequency;

/* class methods */
+[SchedulingOptionsFrequencyItemLegacy availableItems];

/* instance methods */
-[SchedulingOptionsFrequencyItemLegacy description];
-[SchedulingOptionsFrequencyItemLegacy frequency];
-[SchedulingOptionsFrequencyItemLegacy setFrequency:];

@end

@interface SchedulingOptionsHourItemLegacy : NSObject {
    /* instance variables */
    Q _hour;
}

@property (TQ,V_hour) hour;

/* class methods */
+[SchedulingOptionsHourItemLegacy itemsFor24Hours];

/* instance methods */
-[SchedulingOptionsHourItemLegacy description];
-[SchedulingOptionsHourItemLegacy hour];
-[SchedulingOptionsHourItemLegacy setHour:];

@end

@interface SessionBase : NSObject {
    /* instance variables */
    B _isGroup;
    B _isArchived;
    B _isLocked;
    B _isDeleted;
    @"NSString" _sessionID;
    @"NSString" _name;
    @"NSString" _uniqueName;
    @"NSDate" _firstMessageDate;
    @"NSDate" _lastMessageDate;
    @"NSString" _lastMessageText;
    Q _unreadCount;
    Q _attachmentCount;
    Q _countableItems;
    @"NSString" _fullTextSearchIndex;
    @"NSArray" _messages;
    ^v _cppObject;
}

@property (T@"NSString",&,V_sessionID) sessionID;
@property (T@"NSString",&,V_name) name;
@property (T@"NSString",&,V_uniqueName) uniqueName;
@property (T@"NSDate",V_firstMessageDate) firstMessageDate;
@property (T@"NSDate",V_lastMessageDate) lastMessageDate;
@property (T@"NSString",&,V_lastMessageText) lastMessageText;
@property (TB,V_isGroup) isGroup;
@property (TB,V_isArchived) isArchived;
@property (TB,V_isLocked) isLocked;
@property (TB,V_isDeleted) isDeleted;
@property (TQ,V_unreadCount) unreadCount;
@property (TQ,V_attachmentCount) attachmentCount;
@property (TQ,V_countableItems) countableItems;
@property (T@"NSString",&,V_fullTextSearchIndex) fullTextSearchIndex;
@property (T@"NSArray",&,V_messages) messages;
@property (T^v,V_cppObject) cppObject;

/* instance methods */
-[SessionBase initWithCPPObject:];
-[SessionBase dealloc];
-[SessionBase sessionID];
-[SessionBase setSessionID:];
-[SessionBase name];
-[SessionBase setName:];
-[SessionBase uniqueName];
-[SessionBase setUniqueName:];
-[SessionBase firstMessageDate];
-[SessionBase setFirstMessageDate:];
-[SessionBase lastMessageDate];
-[SessionBase setLastMessageDate:];
-[SessionBase lastMessageText];
-[SessionBase setLastMessageText:];
-[SessionBase isGroup];
-[SessionBase setIsGroup:];
-[SessionBase isArchived];
-[SessionBase setIsArchived:];
-[SessionBase isLocked];
-[SessionBase setIsLocked:];
-[SessionBase isDeleted];
-[SessionBase setIsDeleted:];
-[SessionBase unreadCount];
-[SessionBase setUnreadCount:];
-[SessionBase attachmentCount];
-[SessionBase setAttachmentCount:];
-[SessionBase countableItems];
-[SessionBase setCountableItems:];
-[SessionBase fullTextSearchIndex];
-[SessionBase setFullTextSearchIndex:];
-[SessionBase messages];
-[SessionBase setMessages:];
-[SessionBase cppObject];
-[SessionBase setCppObject:];

@end

@interface Shortcut : NSObject {
    /* instance variables */
    {Shortcut="_vptr$Object"^^?"impl"^{IMPL}} _shortcut;
}

@property (T@"NSURL",R) url;
@property (T@"NSString",R) scheme;
@property (T@"NSString",R) device;
@property (T@"NSString",R) path;
@property (T@"NSString",&) name;
@property (T@"NSString",&) iconPath;
@property (T{Shortcut=^^?^{IMPL}},R) cppObject;

/* instance methods */
-[Shortcut initWithCPPObject:];
-[Shortcut initWithURL:];
-[Shortcut cppObject];
-[Shortcut isEqualToShortcut:];
-[Shortcut isEqual:];
-[Shortcut hash];
-[Shortcut url];
-[Shortcut scheme];
-[Shortcut device];
-[Shortcut path];
-[Shortcut name];
-[Shortcut iconPath];
-[Shortcut setName:];
-[Shortcut setIconPath:];

@end

@interface ShortcutManager : NSObject {
    /* instance variables */
    B _inited;
    ^v _manager;
}

@property (TB,V_inited) inited;
@property (T^v,V_manager) manager;
@property (T@"NSArray",R) shortcuts;

/* class methods */
+[ShortcutManager sharedInstance];
+[ShortcutManager allocWithZone:];

/* instance methods */
-[ShortcutManager init];
-[ShortcutManager shortcuts];
-[ShortcutManager shortcutsForDevice:];
-[ShortcutManager addShortcut:];
-[ShortcutManager addShortcutWithURL:iconPath:];
-[ShortcutManager addShortcutWithURL:name:iconPath:];
-[ShortcutManager addShortcutWithURL:suggestedName:iconPath:];
-[ShortcutManager renameShortcut:];
-[ShortcutManager renameShortcut:name:];
-[ShortcutManager removeShortcut:];
-[ShortcutManager inited];
-[ShortcutManager setInited:];
-[ShortcutManager manager];
-[ShortcutManager setManager:];

@end

@interface ShortcutViewController : StorageViewController {
    /* instance variables */
    @"Shortcut" _shortcut;
}

@property (T@"Shortcut",&,V_shortcut) shortcut;

/* instance methods */
-[ShortcutViewController initWithShortcut:device:];
-[ShortcutViewController awakeFromNib];
-[ShortcutViewController shortcut];
-[ShortcutViewController setShortcut:];

@end

@interface ShortcutWizardAppItem : NSObject {
    /* instance variables */
    B _selected;
    @"NSString" _title;
    @"NSString" _subtitle;
    @"NSImage" _icon;
    @"iOSApp" _app;
}

@property (T@"NSString",&,V_title) title;
@property (T@"NSString",&,V_subtitle) subtitle;
@property (T@"NSImage",&,V_icon) icon;
@property (T@"iOSApp",&,V_app) app;
@property (TB,V_selected) selected;

/* instance methods */
-[ShortcutWizardAppItem title];
-[ShortcutWizardAppItem setTitle:];
-[ShortcutWizardAppItem subtitle];
-[ShortcutWizardAppItem setSubtitle:];
-[ShortcutWizardAppItem icon];
-[ShortcutWizardAppItem setIcon:];
-[ShortcutWizardAppItem app];
-[ShortcutWizardAppItem setApp:];
-[ShortcutWizardAppItem selected];
-[ShortcutWizardAppItem setSelected:];

@end

@interface ShortcutWizardAppSelectionView : NSView

/* instance methods */
-[ShortcutWizardAppSelectionView drawRect:];

@end

@interface ShortcutWizardChooseAppViewController : NSViewController <DatasetManagerDelegateProtocol, WizardWindowDelegate> {
    /* instance variables */
    B _awake;
    B _loading;
    B _loaded;
    @"WizardWindowController" wizard;
    q behavior;
    @"NSArray" _apps;
    @"NSArrayController" _appsController;
}

@property (TB,V_awake) awake;
@property (TB,V_loading) loading;
@property (TB,V_loaded) loaded;
@property (T@"NSArray",&,V_apps) apps;
@property (T@"NSArrayController",&,V_appsController) appsController;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;
@property (T@"WizardWindowController",Vwizard) wizard;
@property (Tq,Vbehavior) behavior;
@property (T@"NSView",&) view;
@property (T@"NSString",&) title;

/* instance methods */
-[ShortcutWizardChooseAppViewController init];
-[ShortcutWizardChooseAppViewController initWithNibName:bundle:];
-[ShortcutWizardChooseAppViewController dealloc];
-[ShortcutWizardChooseAppViewController awakeFromNib];
-[ShortcutWizardChooseAppViewController didBecomeActive];
-[ShortcutWizardChooseAppViewController willResignActive];
-[ShortcutWizardChooseAppViewController observeValueForKeyPath:ofObject:change:context:];
-[ShortcutWizardChooseAppViewController datasetManager:updateDidEnd:];
-[ShortcutWizardChooseAppViewController datasetManager:updateDidFailWithError:notification:];
-[ShortcutWizardChooseAppViewController datasetManager:updateDidStart:];
-[ShortcutWizardChooseAppViewController datasetManager:updateInProgress:];
-[ShortcutWizardChooseAppViewController addShortcut:];
-[ShortcutWizardChooseAppViewController wizard];
-[ShortcutWizardChooseAppViewController setWizard:];
-[ShortcutWizardChooseAppViewController behavior];
-[ShortcutWizardChooseAppViewController setBehavior:];
-[ShortcutWizardChooseAppViewController awake];
-[ShortcutWizardChooseAppViewController setAwake:];
-[ShortcutWizardChooseAppViewController loading];
-[ShortcutWizardChooseAppViewController setLoading:];
-[ShortcutWizardChooseAppViewController loaded];
-[ShortcutWizardChooseAppViewController setLoaded:];
-[ShortcutWizardChooseAppViewController apps];
-[ShortcutWizardChooseAppViewController setApps:];
-[ShortcutWizardChooseAppViewController appsController];
-[ShortcutWizardChooseAppViewController setAppsController:];

@end

@interface ShortcutWizardWindowController : WizardWindowController

/* instance methods */
-[ShortcutWizardWindowController initWithDevice:];

@end

@interface SingleTableDatasetViewController : ModernManagerDatasetViewController <NSTableViewDelegate, NSTableViewDataSource> {
    /* instance variables */
    B _checkLicense;
    @"NSString" _defaultExtension;
    @"NSArray" _allowedUTIs;
    : _managerOpenAction;
    : _managerCopyToComputerAction;
    : _managerCopyToDeviceAction;
    : _managerDeleteAction;
    @"NSString" _trialScreenName;
    @? _extensionForItem;
    @? _nameForItem;
    @"NSTableView" _tableView;
}

@property (T@"NSString",&,V_defaultExtension) defaultExtension;
@property (T@"NSArray",&,V_allowedUTIs) allowedUTIs;
@property (T:,V_managerOpenAction) managerOpenAction;
@property (T:,V_managerCopyToComputerAction) managerCopyToComputerAction;
@property (T:,V_managerCopyToDeviceAction) managerCopyToDeviceAction;
@property (T:,V_managerDeleteAction) managerDeleteAction;
@property (TB,V_checkLicense) checkLicense;
@property (T@"NSString",&,V_trialScreenName) trialScreenName;
@property (T@?,C,V_extensionForItem) extensionForItem;
@property (T@?,C,V_nameForItem) nameForItem;
@property (T@"NSTableView",&,V_tableView) tableView;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[SingleTableDatasetViewController initWithDataset:device:];
-[SingleTableDatasetViewController awakeFromNib];
-[SingleTableDatasetViewController openWith:];
-[SingleTableDatasetViewController doubleClick:];
-[SingleTableDatasetViewController open:];
-[SingleTableDatasetViewController quickLook:];
-[SingleTableDatasetViewController copy:];
-[SingleTableDatasetViewController deleteSelectedItems:];
-[SingleTableDatasetViewController copyToComputer:];
-[SingleTableDatasetViewController copyToDevice:];
-[SingleTableDatasetViewController validateAction:];
-[SingleTableDatasetViewController menuWillOpen:];
-[SingleTableDatasetViewController tableView:validateDrop:proposedRow:proposedDropOperation:];
-[SingleTableDatasetViewController tableView:acceptDrop:row:dropOperation:];
-[SingleTableDatasetViewController tableView:writeRowsWithIndexes:toPasteboard:];
-[SingleTableDatasetViewController tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:];
-[SingleTableDatasetViewController tableView:shouldTypeSelectForEvent:withCurrentSearchString:];
-[SingleTableDatasetViewController defaultExtension];
-[SingleTableDatasetViewController setDefaultExtension:];
-[SingleTableDatasetViewController allowedUTIs];
-[SingleTableDatasetViewController setAllowedUTIs:];
-[SingleTableDatasetViewController managerOpenAction];
-[SingleTableDatasetViewController setManagerOpenAction:];
-[SingleTableDatasetViewController managerCopyToComputerAction];
-[SingleTableDatasetViewController setManagerCopyToComputerAction:];
-[SingleTableDatasetViewController managerCopyToDeviceAction];
-[SingleTableDatasetViewController setManagerCopyToDeviceAction:];
-[SingleTableDatasetViewController managerDeleteAction];
-[SingleTableDatasetViewController setManagerDeleteAction:];
-[SingleTableDatasetViewController checkLicense];
-[SingleTableDatasetViewController setCheckLicense:];
-[SingleTableDatasetViewController trialScreenName];
-[SingleTableDatasetViewController setTrialScreenName:];
-[SingleTableDatasetViewController extensionForItem];
-[SingleTableDatasetViewController setExtensionForItem:];
-[SingleTableDatasetViewController nameForItem];
-[SingleTableDatasetViewController setNameForItem:];
-[SingleTableDatasetViewController tableView];
-[SingleTableDatasetViewController setTableView:];

@end

@interface StorageAppsViewController : StorageViewController {
    /* instance variables */
    @"NSMutableArray" _pendingAppsOperations;
    @"NSMutableArray" _pendingAppsOperationAppNodes;
}

/* instance methods */
-[StorageAppsViewController manageApps:];
-[StorageAppsViewController installApp:];
-[StorageAppsViewController uninstallApp:];
-[StorageAppsViewController extractApp:];
-[StorageAppsViewController validateToolbarItem:];
-[StorageAppsViewController applicationNodeForNode:];
-[StorageAppsViewController applicationNodeForNodes:];
-[StorageAppsViewController operationDidEndNotification:];
-[StorageAppsViewController initWithDevice:];
-[StorageAppsViewController dealloc];
-[StorageAppsViewController appsItemNode];
-[StorageAppsViewController helpURL];
-[StorageAppsViewController awakeFromNib];
-[StorageAppsViewController toolbarButtons];

@end

@interface StorageBrowserHistory : NSObject {
    /* instance variables */
    @"NSMutableArray" _historyArray;
    Q _currentHistoryIndex;
    @"StorageItemNode" _storageItemParentNodeToUpdate;
    @"NSArray" _storageItemNodesToUpdate;
}

@property (T@"NSMutableArray",&,V_historyArray) historyArray;
@property (TQ,V_currentHistoryIndex) currentHistoryIndex;

/* instance methods */
-[StorageBrowserHistory init];
-[StorageBrowserHistory dealloc];
-[StorageBrowserHistory addNodeToHistory:];
-[StorageBrowserHistory removeHistoryAfterIndex:];
-[StorageBrowserHistory removeAllHistory];
-[StorageBrowserHistory updateHistoryAfterNode:];
-[StorageBrowserHistory updateHistoryFromForwardWithNode:];
-[StorageBrowserHistory updateHistoryFromBackwardWithNode:];
-[StorageBrowserHistory removeNodeFromHistory:];
-[StorageBrowserHistory updateStorageItemNodeForStorageItemAfterUpdate];
-[StorageBrowserHistory updateStorageItemNodeForStorageItem:forParent:];
-[StorageBrowserHistory historyArray];
-[StorageBrowserHistory setHistoryArray:];
-[StorageBrowserHistory currentHistoryIndex];
-[StorageBrowserHistory setCurrentHistoryIndex:];

@end

@interface StorageItem : NSObject {
    /* instance variables */
    ^v _ddnaStorageItem;
    ^v _storageItemUpdater;
    @"NSString" _udid;
    q _childrenStyle;
    q _specialFolder;
    q _fsType;
    q _fsParition;
    @"StorageItem" _parent;
    @"Device" _device;
    @"NSString" _appBundleID;
    @"NSString" _path;
    @"NSString" _realPath;
    @"NSString" _name;
    @"NSString" _iconPath;
    q _kind;
    @"StorageItem" _linkTargetItem;
    Q _size;
    Q _blocks;
    Q _level;
    @"NSDate" _modificationTime;
    @"NSDate" _creationTime;
    B _readable;
    B _writable;
    B _editable;
    @"NSString" _url;
    @"NSMutableArray" _children;
    B _didSubscribeToToolkitNotifications;
    Q _updateStatus;
    Q _lastUpdateStatus;
    @"<StorageItemDelegateProtocol>" _storageItemDelegate;
}

@property (T^v,R,V_ddnaStorageItem) ddnaStorageItem;
@property (Tq,R,V_childrenStyle) childrenStyle;
@property (T@"NSString",R,V_udid) udid;
@property (Tq,R,V_specialFolder) specialFolder;
@property (Tq,R,V_fsType) fsType;
@property (Tq,R,V_fsParition) fsParition;
@property (T@"StorageItem",R,V_parent) parent;
@property (T@"Device",R,V_device) device;
@property (T@"NSString",R,V_appBundleID) appBundleID;
@property (T@"NSString",R,V_path) path;
@property (T@"NSString",R,V_realPath) realPath;
@property (T@"NSString",R,V_name) name;
@property (T@"NSString",R,V_iconPath) iconPath;
@property (Tq,R,V_kind) kind;
@property (T@"StorageItem",R) linkTargetItem;
@property (TQ,R,V_size) size;
@property (TQ,R,V_blocks) blocks;
@property (TQ,R,V_level) level;
@property (T@"NSDate",R,V_modificationTime) modificationTime;
@property (T@"NSDate",R,V_creationTime) creationTime;
@property (TB,R,V_readable) readable;
@property (TB,R,V_writable) writable;
@property (TB,R,V_editable) editable;
@property (T@"NSString",R) url;
@property (T@"StorageItem",R) root;
@property (T@"<StorageItemDelegateProtocol>",V_storageItemDelegate) storageItemDelegate;
@property (T@"StorageManager",R) storageManager;

/* class methods */
+[StorageItem storageItemWithDDNAStorageItem:];
+[StorageItem storageItemWithURL:];
+[StorageItem storageItemWithStringURL:];
+[StorageItem storageItemForFilesOnDevice:];
+[StorageItem storageItemForFileAppOnDevice:];
+[StorageItem storageItemForFileAppProOnDevice:];
+[StorageItem storageItemForAppsOnDevice:];

/* instance methods */
-[StorageItem registerForToolkitNotification];
-[StorageItem unregisterFromToolkitNotification];
-[StorageItem handleToolKitEndNotification:];
-[StorageItem initWithDDNAStorageItem:];
-[StorageItem dealloc];
-[StorageItem parent];
-[StorageItem linkTargetItem];
-[StorageItem children];
-[StorageItem exists];
-[StorageItem isDirectory];
-[StorageItem isRegularFile];
-[StorageItem isSymLink];
-[StorageItem url];
-[StorageItem storageManager];
-[StorageItem childWithUDID:];
-[StorageItem dataAvailable];
-[StorageItem isUpdating];
-[StorageItem needsUpdate];
-[StorageItem setNeedsUpdate:];
-[StorageItem root];
-[StorageItem performUpdateRequest];
-[StorageItem abortUpdateRequest];
-[StorageItem refreshData];
-[StorageItem updateRequestDidStart:];
-[StorageItem updateRequestInProgress:];
-[StorageItem updateRequestDidEnd:];
-[StorageItem childrenSize];
-[StorageItem ddnaStorageItem];
-[StorageItem udid];
-[StorageItem childrenStyle];
-[StorageItem specialFolder];
-[StorageItem fsType];
-[StorageItem fsParition];
-[StorageItem device];
-[StorageItem appBundleID];
-[StorageItem path];
-[StorageItem realPath];
-[StorageItem name];
-[StorageItem iconPath];
-[StorageItem kind];
-[StorageItem size];
-[StorageItem blocks];
-[StorageItem level];
-[StorageItem modificationTime];
-[StorageItem creationTime];
-[StorageItem readable];
-[StorageItem writable];
-[StorageItem editable];
-[StorageItem storageItemDelegate];
-[StorageItem setStorageItemDelegate:];

@end

@interface StorageItemNode : BrowserNode <StorageItemDelegateProtocol> {
    /* instance variables */
    @"StorageItem" _storageItem;
    @"NSMutableArray" _storageItemChildren;
    @"NSMutableArray" _visibleChildren;
    B _badgeProcessed;
    B _visibleChildrenNeedsUpdate;
}

@property (T@"StorageItemNode",R,D) root;
@property (T@"StorageItemNode",R,D) parent;
@property (T@"StorageItem",R,V_storageItem) storageItem;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* class methods */
+[StorageItemNode initialize];
+[StorageItemNode storageItemsFromStorageItemNodes:];
+[StorageItemNode operationInfoDictionaryWithTarget:itemsList:operationType:];
+[StorageItemNode operationInfoDictionaryWithTarget:forRenameTo:];
+[StorageItemNode operationInfoDictionaryForCreateFolderWithTarget:];
+[StorageItemNode storageItemNodeWithStorageItem:];

/* instance methods */
-[StorageItemNode initWithStorageItem:];
-[StorageItemNode dealloc];
-[StorageItemNode encodeWithCoder:];
-[StorageItemNode initWithCoder:];
-[StorageItemNode copyWithZone:];
-[StorageItemNode operationInfoDictionaryWithItemsList:operationType:];
-[StorageItemNode operationInfoDictionaryForRenameTo:];
-[StorageItemNode operationInfoDictionaryForCreateFolder];
-[StorageItemNode icon];
-[StorageItemNode badge];
-[StorageItemNode updateStatus];
-[StorageItemNode localizedName];
-[StorageItemNode setLocalizedName:];
-[StorageItemNode isLeaf];
-[StorageItemNode isDirectory];
-[StorageItemNode isLink];
-[StorageItemNode isHidden];
-[StorageItemNode realSize];
-[StorageItemNode allocatedSize];
-[StorageItemNode typeDescription];
-[StorageItemNode creationDate];
-[StorageItemNode modificationDate];
-[StorageItemNode lastAccessDate];
-[StorageItemNode setVisibleChildrenNeedsUpdate];
-[StorageItemNode children];
-[StorageItemNode removeChild:];
-[StorageItemNode removeChildren:];
-[StorageItemNode removeAllChildren];
-[StorageItemNode childNodeWithUDID:];
-[StorageItemNode containsDDNAStorageItem:];
-[StorageItemNode markNodeAndDescendentsForNeedsUpdate];
-[StorageItemNode refreshData];
-[StorageItemNode storageItem:updateDidStart:];
-[StorageItemNode storageItem:updateInProgress:];
-[StorageItemNode storageItem:updateDidEnd:];
-[StorageItemNode storageItem:updateDidFailWithError:notification:];
-[StorageItemNode storageItem];

@end

@interface StorageManager : DatasetManager {
    /* instance variables */
    ^v _ddnaStorageManager;
    @"StorageItem" _rootItem;
    B _hasExternalCache;
    B _externalCacheNeedsUpdate;
}

@property (T@"StorageItem",R) rootItem;
@property (TB,V_hasExternalCache) hasExternalCache;
@property (TB,V_externalCacheNeedsUpdate) externalCacheNeedsUpdate;

/* class methods */
+[StorageManager storageManagerWithDDNAStorageManager:];
+[StorageManager initialize];
+[StorageManager archiveSelected:];
+[StorageManager storageManagerForDevice:];
+[StorageManager storageManagerForRootItem:];
+[StorageManager storageManagerForPhotoLibraryOnDevice:];

/* instance methods */
-[StorageManager openStorageItem:];
-[StorageManager openStorageItems:];
-[StorageManager saveLocalModification:target:];
-[StorageManager createDirectoryWithDestinationStorageItem:];
-[StorageManager createDirectoryWithDestinationURL:];
-[StorageManager copyStorageItem:destinationStorageItem:];
-[StorageManager copyStorageItems:destinationStorageItem:];
-[StorageManager copyURL:destinationURL:];
-[StorageManager copyURLs:destinationURL:];
-[StorageManager moveStorageItem:destinationStorageItem:];
-[StorageManager moveStorageItems:destinationStorageItem:];
-[StorageManager moveURL:destinationURL:];
-[StorageManager moveURLs:destinationURL:];
-[StorageManager renameStorageItem:newName:];
-[StorageManager renameURL:newName:];
-[StorageManager removeStorageItem:];
-[StorageManager removeStorageItems:];
-[StorageManager removeURL:];
-[StorageManager removeURLs:];
-[StorageManager installApp:];
-[StorageManager uninstallApp:];
-[StorageManager extractApp:destinationItem:];
-[StorageManager initWithDDNAStorageManager:];
-[StorageManager openStorageItem:runType:];
-[StorageManager openStorageItems:runType:];
-[StorageManager saveLocalModification:target:runType:];
-[StorageManager createDirectoryWithDestinationStorageItem:runType:];
-[StorageManager createDirectoryWithDestinationURL:runType:];
-[StorageManager copyStorageItem:destinationStorageItem:runType:];
-[StorageManager copyStorageItems:destinationStorageItem:runType:];
-[StorageManager copyURL:destinationURL:runType:];
-[StorageManager copyURLs:destinationURL:runType:];
-[StorageManager moveStorageItem:destinationStorageItem:runType:];
-[StorageManager moveStorageItems:destinationStorageItem:runType:];
-[StorageManager moveURL:destinationURL:runType:];
-[StorageManager moveURLs:destinationURL:runType:];
-[StorageManager renameStorageItem:newName:runType:];
-[StorageManager renameURL:newName:runType:];
-[StorageManager removeStorageItem:runType:];
-[StorageManager removeStorageItems:runType:];
-[StorageManager removeURL:runType:];
-[StorageManager removeURLs:runType:];
-[StorageManager installApp:runType:];
-[StorageManager uninstallApp:runType:];
-[StorageManager extractApp:destinationItem:runType:];
-[StorageManager dealloc];
-[StorageManager performUpdateRequest];
-[StorageManager abortUpdateRequest];
-[StorageManager rootItem];
-[StorageManager updateRequestDidEnd:];
-[StorageManager hasExternalCache];
-[StorageManager setHasExternalCache:];
-[StorageManager externalCacheNeedsUpdate];
-[StorageManager setExternalCacheNeedsUpdate:];

@end

@interface StorageViewController : BrowserViewController {
    /* instance variables */
    @"StorageManager" _storageManager;
    @"StorageItemNode" _rootItemNode;
    @"NSView" _currentBrowserView;
    @"StorageViewDelegate" _browserDelegate;
    @"BrowserCollectionView" _browserIconView;
    @"BrowserIconViewDataSource" _browserIconViewDataSource;
    @"BrowserIconViewDelegate" _browserIconViewDelegate;
    @"BrowserOutlineView" _browserListView;
    @"BrowserListViewDataSource" _browserListViewDataSource;
    @"BrowserListViewDelegate" _browserListViewDelegate;
    @"NSScrollView" _browserListViewScrollView;
    @"NSScrollView" _browserIconViewScrollView;
    @"NSMenu" _browserPathMenu;
    @"NSMenu" _browserGoBackMenu;
    @"NSMenu" _browserGoForwardMenu;
    @"BrowserPathMenuDelegate" _pathMenuDelegate;
    @"StorageBrowserHistory" _storageBrowserHistory;
    @"StorageItemNode" _iconViewDoubleClickedItem;
    @"NSMutableArray" _pendingOperations;
    @"NSMutableDictionary" _pendingOperationsInfo;
    B _awake;
    B _needsToGoBackOnRootOnNextRefresh;
    @"NSView" _browserContainer;
    @"NSSegmentedControl" _backwardsAndForwardsSegmentedControl;
    @"NSSegmentedControl" _switchStorageSegmentedControl;
    @"NSPopUpButton" _pathsButton;
    @"NSButton" _optionsMenuButton;
    @"NSMenu" _browserOptionsMenu;
    @"NSMenu" _columnMenu;
}

@property (TB,V_awake) awake;
@property (TB,V_needsToGoBackOnRootOnNextRefresh) needsToGoBackOnRootOnNextRefresh;
@property (T@"BrowserOutlineView",&,N,V_browserListView) browserListView;
@property (T@"BrowserCollectionView",&,N,V_browserIconView) browserIconView;
@property (T@"BrowserIconViewDelegate",&,V_browserIconViewDelegate) browserIconViewDelegate;
@property (T@"NSView",&,V_browserContainer) browserContainer;
@property (T@"NSSegmentedControl",&,V_backwardsAndForwardsSegmentedControl) backwardsAndForwardsSegmentedControl;
@property (T@"NSSegmentedControl",&,V_switchStorageSegmentedControl) switchStorageSegmentedControl;
@property (T@"NSPopUpButton",&,V_pathsButton) pathsButton;
@property (T@"NSButton",&,V_optionsMenuButton) optionsMenuButton;
@property (T@"NSMenu",&,V_browserOptionsMenu) browserOptionsMenu;
@property (T@"NSScrollView",&,N,V_browserListViewScrollView) browserListViewScrollView;
@property (T@"NSScrollView",&,N,V_browserIconViewScrollView) browserIconViewScrollView;
@property (T@"BrowserListViewDataSource",&,V_browserListViewDataSource) browserListViewDataSource;
@property (T@"BrowserListViewDelegate",&,V_browserListViewDelegate) browserListViewDelegate;
@property (T@"BrowserIconViewDataSource",&,V_browserIconViewDataSource) browserIconViewDataSource;
@property (T@"StorageManager",&,V_storageManager) storageManager;
@property (Tq) preferedBrowserView;
@property (T@"NSMenu",&,V_columnMenu) columnMenu;

/* instance methods */
-[StorageViewController createDirectoryUsingInfoDictionary:];
-[StorageViewController copyStorageItemUsingDraggingHandler:];
-[StorageViewController copyStorageItemToDeviceUsingInfoDictionary:];
-[StorageViewController moveStorageItemsUsingDraggingHandler:];
-[StorageViewController renameStorageItemUsingInfoDictionary:];
-[StorageViewController deleteSelectedItemUsingInfoDictionary:];
-[StorageViewController draggingHandlerDraggingDidEnd:];
-[StorageViewController updateWindowStatusText:];
-[StorageViewController browserIconViewDidDoubleClick:];
-[StorageViewController browserListViewDidDoubleClick:];
-[StorageViewController browserColumnViewDidClick:];
-[StorageViewController showNode:];
-[StorageViewController updateBrowserPathMenu:];
-[StorageViewController goBack:];
-[StorageViewController goForward:];
-[StorageViewController showPathFromPathMenu:];
-[StorageViewController showPathFromBackMenu:];
-[StorageViewController showPathFromForwardMenu:];
-[StorageViewController addNodeToHistory:];
-[StorageViewController getSelectedNodes:fileNode:folderNode:];
-[StorageViewController getSelectedNodes:fileNode:folderNode:forContextMenu:];
-[StorageViewController getSelectedNodesForColumnView:fileNode:folderNode:];
-[StorageViewController getSelectedNodesForColumnView:fileNode:folderNode:forContextMenu:];
-[StorageViewController getSelectedNodesForListView:fileNode:folderNode:];
-[StorageViewController getSelectedNodesForListView:fileNode:folderNode:forContextMenu:];
-[StorageViewController getSelectedNodesForIconView:fileNode:folderNode:];
-[StorageViewController getSelectedNodesForIconView:fileNode:folderNode:forContextMenu:];
-[StorageViewController validateRefreshMenuItem:folderNode:];
-[StorageViewController validateOpenMenuItem:fileNode:];
-[StorageViewController validateOpenWithMenuItem:fileNode:action:delegate:];
-[StorageViewController validateQuickLookMenuItem:fileNode:];
-[StorageViewController validateCopyToComputerMenuItem:selectedNodes:];
-[StorageViewController validateCopyToDeviceMenuItem:folderNode:];
-[StorageViewController validateGetInfoMenuItem:fileNode:];
-[StorageViewController validateDeleteSelectedItemsMenuItem:selectedNodes:];
-[StorageViewController validateInstallAppMenuItem:folderNode:];
-[StorageViewController validateExtractAppMenuItem:folderNodes:];
-[StorageViewController validateUninstallAppMenuItem:folderNodes:];
-[StorageViewController validateRenameMenuItem:fileNode:];
-[StorageViewController validateNewFolderMenuItem:folderNode:];
-[StorageViewController validateNewShortcutMenuItem:folderNode:];
-[StorageViewController pasteboard:provideDataForType:];
-[StorageViewController pasteboardFinishedWithDataProvider:];
-[StorageViewController copy:];
-[StorageViewController paste:];
-[StorageViewController performDoubleAction:];
-[StorageViewController refreshData];
-[StorageViewController open:];
-[StorageViewController openWith:];
-[StorageViewController quickLook:];
-[StorageViewController copyToComputer:];
-[StorageViewController copyToDevice:];
-[StorageViewController rename:];
-[StorageViewController newFolder:];
-[StorageViewController newShortcut:];
-[StorageViewController getInfo:];
-[StorageViewController deleteSelectedItems:];
-[StorageViewController redo:];
-[StorageViewController undo:];
-[StorageViewController showBrowserOptions:];
-[StorageViewController switchStorageView:];
-[StorageViewController backwardsAndForwards:];
-[StorageViewController showPathFromPathMenu:];
-[StorageViewController showOptionsMenu:];
-[StorageViewController showAllApps:];
-[StorageViewController showHiddenFile:];
-[StorageViewController contextMenuBrowserRefresh:];
-[StorageViewController contextMenuBrowserOpen:];
-[StorageViewController contextMenuBrowserOpenWith:];
-[StorageViewController contextMenuBrowserQuickLook:];
-[StorageViewController contextMenuBrowserCopyToComputer:];
-[StorageViewController contextMenuBrowserCopyToDevice:];
-[StorageViewController contextMenuBrowserInstallApp:];
-[StorageViewController contextMenuBrowserExtractApp:];
-[StorageViewController contextMenuBrowserUninstallApp:];
-[StorageViewController contextMenuBrowserGetInfo:];
-[StorageViewController contextMenuBrowserDeleteSelectedItems:];
-[StorageViewController contextMenuBrowserRename:];
-[StorageViewController contextMenuBrowserNewFolder:];
-[StorageViewController contextMenuBrowserNewShortcut:];
-[StorageViewController validateMenuItem:];
-[StorageViewController validateToolbarItem:];
-[StorageViewController menuWillOpen:];
-[StorageViewController updateDisplayAfterOperation:];
-[StorageViewController updateDisplayListView:];
-[StorageViewController updateDisplayIconView:];
-[StorageViewController updateDisplayColumnView];
-[StorageViewController operationDidEndNotification:];
-[StorageViewController showHiddenFilesDidChange];
-[StorageViewController initWithDevice:];
-[StorageViewController initWithDataset:device:];
-[StorageViewController dealloc];
-[StorageViewController awakeFromNib];
-[StorageViewController viewDidAppear];
-[StorageViewController viewDidDisappear];
-[StorageViewController navigationBarControls];
-[StorageViewController toolbarButtons];
-[StorageViewController loadData];
-[StorageViewController observeValueForKeyPath:ofObject:change:context:];
-[StorageViewController archiveSelected:];
-[StorageViewController didChangeSelection:];
-[StorageViewController willBeDisplayedByMainWindowController];
-[StorageViewController datasetManager:updateDidStart:];
-[StorageViewController datasetManager:updateDidEnd:];
-[StorageViewController refreshContentData:];
-[StorageViewController datasetManager:updateDidFailWithError:notification:];
-[StorageViewController hasBeenDisplayedByMainWindowController];
-[StorageViewController updateDisplay];
-[StorageViewController preferedBrowserView];
-[StorageViewController setPreferedBrowserView:];
-[StorageViewController setStorageView:];
-[StorageViewController helpURL];
-[StorageViewController storageManager];
-[StorageViewController setStorageManager:];
-[StorageViewController browserListView];
-[StorageViewController setBrowserListView:];
-[StorageViewController browserIconView];
-[StorageViewController setBrowserIconView:];
-[StorageViewController browserListViewDataSource];
-[StorageViewController setBrowserListViewDataSource:];
-[StorageViewController browserListViewDelegate];
-[StorageViewController setBrowserListViewDelegate:];
-[StorageViewController browserListViewScrollView];
-[StorageViewController setBrowserListViewScrollView:];
-[StorageViewController browserIconViewScrollView];
-[StorageViewController setBrowserIconViewScrollView:];
-[StorageViewController browserIconViewDataSource];
-[StorageViewController setBrowserIconViewDataSource:];
-[StorageViewController browserIconViewDelegate];
-[StorageViewController setBrowserIconViewDelegate:];
-[StorageViewController browserContainer];
-[StorageViewController setBrowserContainer:];
-[StorageViewController backwardsAndForwardsSegmentedControl];
-[StorageViewController setBackwardsAndForwardsSegmentedControl:];
-[StorageViewController switchStorageSegmentedControl];
-[StorageViewController setSwitchStorageSegmentedControl:];
-[StorageViewController pathsButton];
-[StorageViewController setPathsButton:];
-[StorageViewController optionsMenuButton];
-[StorageViewController setOptionsMenuButton:];
-[StorageViewController browserOptionsMenu];
-[StorageViewController setBrowserOptionsMenu:];
-[StorageViewController columnMenu];
-[StorageViewController setColumnMenu:];
-[StorageViewController awake];
-[StorageViewController setAwake:];
-[StorageViewController needsToGoBackOnRootOnNextRefresh];
-[StorageViewController setNeedsToGoBackOnRootOnNextRefresh:];

@end

@interface StorageViewDelegate : BrowserViewDelegate

@property (T@"StorageItemNode",R,D) rootNode;

/* class methods */
+[StorageViewDelegate storageViewDelegateWithRootNode:];

/* instance methods */
-[StorageViewDelegate browser:numberOfChildrenOfItem:];
-[StorageViewDelegate browser:previewViewControllerForLeafItem:];
-[StorageViewDelegate draggingHandler:canDragRowsWithIndexes:inColumn:withEvent:];
-[StorageViewDelegate browser:validateDrop:proposedRow:column:dropOperation:];
-[StorageViewDelegate browser:acceptDrop:atRow:column:dropOperation:];
-[StorageViewDelegate browser:shouldTypeSelectForEvent:withCurrentSearchString:];
-[StorageViewDelegate browser:shouldEditItem:];
-[StorageViewDelegate browserNode:didEndEditing:];

@end

@interface SystemProcess : NSObject {
    /* instance variables */
    q _pid;
    q _uid;
    q _gid;
    @"NSString" _name;
    @"NSString" _owner;
    @"NSString" _group;
    Q _paddr;
    q _ppid;
    @"NSString" _command;
    @"NSDate" _lstart;
    d _cpu;
    q _pri;
    q _rss;
    q _vsz;
    d _mem;
    q _nice;
}

@property (Tq,V_pid) pid;
@property (Tq,V_uid) uid;
@property (Tq,V_gid) gid;
@property (T@"NSString",&,V_name) name;
@property (T@"NSString",&,V_owner) owner;
@property (T@"NSString",&,V_group) group;
@property (TQ,V_paddr) paddr;
@property (Tq,V_ppid) ppid;
@property (T@"NSString",&,V_command) command;
@property (T@"NSDate",&,V_lstart) lstart;
@property (Td,V_cpu) cpu;
@property (Tq,V_pri) pri;
@property (Tq,V_rss) rss;
@property (Tq,V_vsz) vsz;
@property (Td,V_mem) mem;
@property (Tq,V_nice) nice;

/* class methods */
+[SystemProcess allProcesses];

/* instance methods */
-[SystemProcess init];
-[SystemProcess initWithProc:];
-[SystemProcess pid];
-[SystemProcess setPid:];
-[SystemProcess uid];
-[SystemProcess setUid:];
-[SystemProcess gid];
-[SystemProcess setGid:];
-[SystemProcess name];
-[SystemProcess setName:];
-[SystemProcess owner];
-[SystemProcess setOwner:];
-[SystemProcess group];
-[SystemProcess setGroup:];
-[SystemProcess paddr];
-[SystemProcess setPaddr:];
-[SystemProcess ppid];
-[SystemProcess setPpid:];
-[SystemProcess command];
-[SystemProcess setCommand:];
-[SystemProcess lstart];
-[SystemProcess setLstart:];
-[SystemProcess cpu];
-[SystemProcess setCpu:];
-[SystemProcess pri];
-[SystemProcess setPri:];
-[SystemProcess rss];
-[SystemProcess setRss:];
-[SystemProcess vsz];
-[SystemProcess setVsz:];
-[SystemProcess mem];
-[SystemProcess setMem:];
-[SystemProcess nice];
-[SystemProcess setNice:];

@end

@interface TaskInfo : NSObject {
    /* instance variables */
    ^v _cppObject;
}

@property (T^v,V_cppObject) cppObject;
@property (TQ,R) frequencyInSeconds;
@property (TS,R) from24Hour;
@property (TS,R) to24Hour;
@property (TB,R) launchTaskWhenConnectingViaUSB;
@property (TS,R) minBattery;

/* instance methods */
-[TaskInfo initWithCPPObject:];
-[TaskInfo dealloc];
-[TaskInfo frequencyInSeconds];
-[TaskInfo from24Hour];
-[TaskInfo to24Hour];
-[TaskInfo launchTaskWhenConnectingViaUSB];
-[TaskInfo minBattery];
-[TaskInfo cppObject];
-[TaskInfo setCppObject:];

@end

@interface TextInfoValue : NSObject {
    /* instance variables */
    @"NSString" _label;
    @"NSString" _value;
}

@property (T@"NSString",&,V_label) label;
@property (T@"NSString",&,V_value) value;

/* instance methods */
-[TextInfoValue initWithLabel:value:];
-[TextInfoValue matches:];
-[TextInfoValue isEqualTo:];
-[TextInfoValue isEqual:];
-[TextInfoValue label];
-[TextInfoValue setLabel:];
-[TextInfoValue value];
-[TextInfoValue setValue:];

@end

@interface Tracking : NSObject

/* class methods */
+[Tracking setOnEventCallback:];

@end

@interface TransferWizardWindowController : WizardWindowController

/* instance methods */
-[TransferWizardWindowController initWithDevice:];

@end

@interface UINotification : NSNotification {
    /* instance variables */
    r^v _notificationRef;
    @"NSString" _name;
    @ _object;
    @"NSDictionary" _userInfo;
    @"NSString" _identifier;
    @"Device" _device;
    @"NSDictionary" _uiInfo;
}

@property (T@"NSString",&,N,V_identifier) identifier;
@property (T@"Device",&,N,V_device) device;
@property (T@"NSDictionary",&,N,V_uiInfo) uiInfo;
@property (TB,R,N) isWaitingForReply;

/* instance methods */
-[UINotification initWithCPPObject:name:object:userInfo:];
-[UINotification reply:];
-[UINotification name];
-[UINotification object];
-[UINotification userInfo];
-[UINotification isWaitingForReply];
-[UINotification identifier];
-[UINotification setIdentifier:];
-[UINotification device];
-[UINotification setDevice:];
-[UINotification uiInfo];
-[UINotification setUiInfo:];

@end

@interface USBPortNumberFormatter : NSValueTransformer

/* class methods */
+[USBPortNumberFormatter transformedValueClass];

/* instance methods */
-[USBPortNumberFormatter transformedValue:];
-[USBPortNumberFormatter reverseTransformedValue:];
-[USBPortNumberFormatter init];

@end

@interface UTI : NSObject <NSCopying> {
    /* instance variables */
    @"NSString" UTIValue;
    @"NSDictionary" representation;
}

@property (T@"NSString",&,N,VUTIValue) UTIValue;
@property (T@"NSDictionary",&,N,Vrepresentation) representation;
@property (TB,R,N) isDynamic;
@property (T@"NSString",R,N) preferredFilenameExtension;
@property (T@"NSString",R,N) preferredMIMEType;
@property (T@"NSString",R,N) preferredNSPboardType;
@property (T@"NSString",R,N) preferredOSType;
@property (T@"NSString",R,N) description;
@property (T@"NSDictionary",R,N) declaration;
@property (T@"NSURL",R,N) declaringBundleURL;
@property (T@"NSString",R,N) identifier;
@property (T@"NSDictionary",R,N) tagSpecifications;
@property (T@"NSArray",R,N) conformsTo;
@property (T@"NSURL",R,N) referenceURL;
@property (T@"NSString",R,N) version;

/* class methods */
+[UTI UTIWithString:];
+[UTI UTIWithCFString:];
+[UTI UTIWithFileExtension:];
+[UTI UTIWithFileExtension:allowDynamic:];
+[UTI UTIWithFileExtension:conformingTo:];
+[UTI UTIWithFileExtension:conformingTo:allowDynamic:];
+[UTI UTIWithMIMEType:];
+[UTI UTIWithMIMEType:allowDynamic:];
+[UTI UTIWithMIMEType:conformingTo:];
+[UTI UTIWithMIMEType:conformingTo:allowDynamic:];
+[UTI UTIWithNSPboardType:];
+[UTI UTIWithNSPboardType:allowDynamic:];
+[UTI UTIWithNSPboardType:conformingTo:];
+[UTI UTIWithNSPboardType:conformingTo:allowDynamic:];
+[UTI UTIWithOSType:];
+[UTI UTIWithOSType:allowDynamic:];
+[UTI UTIWithOSType:conformingTo:];
+[UTI UTIWithOSType:conformingTo:allowDynamic:];
+[UTI UTIWithTag:tagClass:conformingTo:allowDynamic:];
+[UTI abstractTypes];
+[UTI concreteTypes];
+[UTI textTypes];
+[UTI compositeContentTypes];
+[UTI imageContentTypes];
+[UTI audioVisualContentTypes];
+[UTI directoryTypes];
+[UTI applicationTypes];
+[UTI contactTypes];
+[UTI miscellaneousTypes];
+[UTI itemTypeUTI];
+[UTI contentTypeUTI];
+[UTI compositeContentTypeUTI];
+[UTI applicationTypeUTI];
+[UTI messageTypeUTI];
+[UTI contactTypeUTI];
+[UTI archiveTypeUTI];
+[UTI diskImageTypeUTI];
+[UTI dataTypeUTI];
+[UTI directoryTypeUTI];
+[UTI resolvableTypeUTI];
+[UTI symLinkTypeUTI];
+[UTI mountPointTypeUTI];
+[UTI aliasFileTypeUTI];
+[UTI aliasRecordTypeUTI];
+[UTI URLTypeUTI];
+[UTI fileURLTypeUTI];
+[UTI textTypeUTI];
+[UTI plainTextTypeUTI];
+[UTI UTF8PlainTextTypeUTI];
+[UTI UTF16ExternalPlainTextTypeUTI];
+[UTI UTF16PlainTextTypeUTI];
+[UTI RTFTypeUTI];
+[UTI HTMLTypeUTI];
+[UTI XMLTypeUTI];
+[UTI sourceCodeTypeUTI];
+[UTI CSourceTypeUTI];
+[UTI objectiveCSourceTypeUTI];
+[UTI CPlusPlusSourceTypeUTI];
+[UTI objectiveCPlusPlusSourceTypeUTI];
+[UTI CHeaderTypeUTI];
+[UTI CPlusPlusHeaderTypeUTI];
+[UTI javaSourceTypeUTI];
+[UTI PDFTypeUTI];
+[UTI RTFDTypeUTI];
+[UTI flatRTFDTypeUTI];
+[UTI TXNTextAndMultimediaDataTypeUTI];
+[UTI webArchiveTypeUTI];
+[UTI imageTypeUTI];
+[UTI JPEGTypeUTI];
+[UTI JPEG2000TypeUTI];
+[UTI TIFFTypeUTI];
+[UTI PICTTypeUTI];
+[UTI GIFTypeUTI];
+[UTI PNGTypeUTI];
+[UTI quickTimeImageTypeUTI];
+[UTI appleICNSTypeUTI];
+[UTI BMPTypeUTI];
+[UTI ICOTypeUTI];
+[UTI audiovisualContentTypeUTI];
+[UTI movieTypeUTI];
+[UTI videoTypeUTI];
+[UTI audioTypeUTI];
+[UTI quickTimeMovieTypeUTI];
+[UTI MPEGTypeUTI];
+[UTI MPEG4TypeUTI];
+[UTI MP3TypeUTI];
+[UTI MPEG4AudioTypeUTI];
+[UTI appleProtectedMPEG4AudioTypeUTI];
+[UTI folderTypeUTI];
+[UTI volumeTypeUTI];
+[UTI packageTypeUTI];
+[UTI bundleTypeUTI];
+[UTI frameworkTypeUTI];
+[UTI applicationBundleTypeUTI];
+[UTI applicationFileTypeUTI];
+[UTI vCardTypeUTI];
+[UTI inkTextTypeUTI];
+[UTI allUTIsWithFileExtension:];
+[UTI allUTIsWithFileExtension:allowDynamic:];
+[UTI allUTIsWithFileExtension:conformingTo:];
+[UTI allUTIsWithFileExtension:conformingTo:allowDynamic:];
+[UTI allUTIsWithMIMEType:];
+[UTI allUTIsWithMIMEType:allowDynamic:];
+[UTI allUTIsWithMIMEType:conformingTo:];
+[UTI allUTIsWithMIMEType:conformingTo:allowDynamic:];
+[UTI allUTIsWithNSPboardType:];
+[UTI allUTIsWithNSPboardType:allowDynamic:];
+[UTI allUTIsWithNSPboardType:conformingTo:];
+[UTI allUTIsWithNSPboardType:conformingTo:allowDynamic:];
+[UTI allUTIsWithOSType:];
+[UTI allUTIsWithOSType:allowDynamic:];
+[UTI allUTIsWithOSType:conformingTo:];
+[UTI allUTIsWithOSType:conformingTo:allowDynamic:];
+[UTI allUTIsWithTag:tagClass:conformingTo:allowDynamic:];
+[UTI stringForOSType:];
+[UTI OSTypeForString:];

/* instance methods */
-[UTI init];
-[UTI initWithString:];
-[UTI initWithCFString:];
-[UTI initWithFileExtension:];
-[UTI initWithFileExtension:allowDynamic:];
-[UTI initWithFileExtension:conformingTo:];
-[UTI initWithFileExtension:conformingTo:allowDynamic:];
-[UTI initWithMIMEType:];
-[UTI initWithMIMEType:allowDynamic:];
-[UTI initWithMIMEType:conformingTo:];
-[UTI initWithMIMEType:conformingTo:allowDynamic:];
-[UTI initWithNSPboardType:];
-[UTI initWithNSPboardType:allowDynamic:];
-[UTI initWithNSPboardType:conformingTo:];
-[UTI initWithNSPboardType:conformingTo:allowDynamic:];
-[UTI initWithOSType:];
-[UTI initWithOSType:allowDynamic:];
-[UTI initWithOSType:conformingTo:];
-[UTI initWithOSType:conformingTo:allowDynamic:];
-[UTI initWithTag:tagClass:conformingTo:allowDynamic:];
-[UTI copyWithZone:];
-[UTI preferredTagForTagClass:];
-[UTI hash];
-[UTI isEqual:];
-[UTI isEqualToUTI:];
-[UTI conformsToUTI:];
-[UTI objectForDeclarationDictionaryKey:];
-[UTI isDynamic];
-[UTI preferredFilenameExtension];
-[UTI preferredMIMEType];
-[UTI preferredNSPboardType];
-[UTI preferredOSType];
-[UTI description];
-[UTI declaration];
-[UTI declaringBundleURL];
-[UTI identifier];
-[UTI tagSpecifications];
-[UTI conformsTo];
-[UTI referenceURL];
-[UTI version];
-[UTI UTIValue];
-[UTI setUTIValue:];
-[UTI representation];
-[UTI setRepresentation:];

@end

@interface UniversalTransferHelper : NSObject {
    /* instance variables */
    ^v _transferHelper;
}

/* instance methods */
-[UniversalTransferHelper initWithDeviceUDID:];
-[UniversalTransferHelper dealloc];
-[UniversalTransferHelper loadAppsForFiles:];
-[UniversalTransferHelper loadedApps];
-[UniversalTransferHelper totalFilesForApp:];
-[UniversalTransferHelper uniqueFiles];
-[UniversalTransferHelper stopLoading];
-[UniversalTransferHelper transferToApp:];

@end

@interface UpdateWizardChoosSystemViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
    B _awake;
    B _manualInstall;
    B _updateAvailable;
    B _backupBefore;
    @"WizardWindowController" wizard;
    q behavior;
    @"NSString" _installImagePath;
    @"NSString" _updateTypeLabel;
    @"UpdateWizardConfirmationViewController" _confirmController;
    @"NSString" _downloadInfoText;
}

@property (TB,V_awake) awake;
@property (TB,V_manualInstall) manualInstall;
@property (TB,V_updateAvailable) updateAvailable;
@property (TB,V_backupBefore) backupBefore;
@property (T@"NSString",&,V_installImagePath) installImagePath;
@property (T@"NSString",&,V_updateTypeLabel) updateTypeLabel;
@property (T@"UpdateWizardConfirmationViewController",&,V_confirmController) confirmController;
@property (T@"NSString",&,V_downloadInfoText) downloadInfoText;
@property (T@"WizardWindowController",Vwizard) wizard;
@property (Tq,Vbehavior) behavior;
@property (T@"NSView",&) view;
@property (T@"NSString",&) title;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[UpdateWizardChoosSystemViewController init];
-[UpdateWizardChoosSystemViewController awakeFromNib];
-[UpdateWizardChoosSystemViewController didBecomeActive];
-[UpdateWizardChoosSystemViewController setInstallType:];
-[UpdateWizardChoosSystemViewController chooseInstallImage:];
-[UpdateWizardChoosSystemViewController showOpenPanel];
-[UpdateWizardChoosSystemViewController next:];
-[UpdateWizardChoosSystemViewController wizard];
-[UpdateWizardChoosSystemViewController setWizard:];
-[UpdateWizardChoosSystemViewController behavior];
-[UpdateWizardChoosSystemViewController setBehavior:];
-[UpdateWizardChoosSystemViewController awake];
-[UpdateWizardChoosSystemViewController setAwake:];
-[UpdateWizardChoosSystemViewController manualInstall];
-[UpdateWizardChoosSystemViewController setManualInstall:];
-[UpdateWizardChoosSystemViewController updateAvailable];
-[UpdateWizardChoosSystemViewController setUpdateAvailable:];
-[UpdateWizardChoosSystemViewController backupBefore];
-[UpdateWizardChoosSystemViewController setBackupBefore:];
-[UpdateWizardChoosSystemViewController installImagePath];
-[UpdateWizardChoosSystemViewController setInstallImagePath:];
-[UpdateWizardChoosSystemViewController updateTypeLabel];
-[UpdateWizardChoosSystemViewController setUpdateTypeLabel:];
-[UpdateWizardChoosSystemViewController confirmController];
-[UpdateWizardChoosSystemViewController setConfirmController:];
-[UpdateWizardChoosSystemViewController downloadInfoText];
-[UpdateWizardChoosSystemViewController setDownloadInfoText:];

@end

@interface UpdateWizardConfirmationViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
    B _waiting;
    @"WizardWindowController" wizard;
    q behavior;
    @"NSImage" _icon;
    @"NSString" _infoText;
    @"NSString" _imagePath;
}

@property (T@"NSImage",&,V_icon) icon;
@property (T@"NSString",&,V_infoText) infoText;
@property (T@"NSString",&,V_imagePath) imagePath;
@property (TB,V_waiting) waiting;
@property (T@"WizardWindowController",Vwizard) wizard;
@property (Tq,Vbehavior) behavior;
@property (T@"NSView",&) view;
@property (T@"NSString",&) title;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[UpdateWizardConfirmationViewController init];
-[UpdateWizardConfirmationViewController didBecomeActive];
-[UpdateWizardConfirmationViewController proceedWithUpdate:];
-[UpdateWizardConfirmationViewController wizard];
-[UpdateWizardConfirmationViewController setWizard:];
-[UpdateWizardConfirmationViewController behavior];
-[UpdateWizardConfirmationViewController setBehavior:];
-[UpdateWizardConfirmationViewController icon];
-[UpdateWizardConfirmationViewController setIcon:];
-[UpdateWizardConfirmationViewController infoText];
-[UpdateWizardConfirmationViewController setInfoText:];
-[UpdateWizardConfirmationViewController imagePath];
-[UpdateWizardConfirmationViewController setImagePath:];
-[UpdateWizardConfirmationViewController waiting];
-[UpdateWizardConfirmationViewController setWaiting:];

@end

@interface UpdateWizardWindowController : WizardWindowController

/* instance methods */
-[UpdateWizardWindowController initWithDevice:];

@end

@interface UserInteractionButtonData : NSObject {
    /* instance variables */
    ^v _ddnaButtonData;
}

@property (T^v,V_ddnaButtonData) ddnaButtonData;
@property (T^v,R) target;

/* instance methods */
-[UserInteractionButtonData init];
-[UserInteractionButtonData initWithDDNAButtonData:];
-[UserInteractionButtonData dealloc];
-[UserInteractionButtonData target];
-[UserInteractionButtonData invokeAction];
-[UserInteractionButtonData ddnaButtonData];
-[UserInteractionButtonData setDdnaButtonData:];

@end

@interface UserInteractionDialogBoxData : NSObject {
    /* instance variables */
    ^v _ddnaDialogBoxData;
}

@property (TQ,R) kind;
@property (TQ,R) style;
@property (T@"NSString",R) title;
@property (T@"NSString",R) messageText;
@property (T@"NSString",R) checkBoxText;
@property (TB) checkBoxValue;
@property (T@"NSString") promptTextValue;
@property (T@"NSString") promptTextSecondValue;
@property (T@"NSString") promptTextThirdValue;
@property (TQ) clickedButton;
@property (T@"NSDictionary",R) buttons;
@property (T@"NSString",R) image;
@property (TB,R) bezel;
@property (TB,R) canBeAutomaticallyDismissed;
@property (TB) preferNotifications;

/* class methods */
+[UserInteractionDialogBoxData dialogBoxDataWithDDNADialogBoxData:];
+[UserInteractionDialogBoxData showMessageBox:title:message:checkboxValue:checkboxValue:checkboxText:];
+[UserInteractionDialogBoxData showMessageBox:title:message:checkboxValue:checkboxValue:checkboxText:buttons:];
+[UserInteractionDialogBoxData showMessageBox:title:message:checkboxValue:checkboxValue:checkboxText:buttons:defaultButton:];
+[UserInteractionDialogBoxData showOverwriteDialogBox:];
+[UserInteractionDialogBoxData showMessageDialogBox:title:message:];
+[UserInteractionDialogBoxData convertButtons:];

/* instance methods */
-[UserInteractionDialogBoxData init];
-[UserInteractionDialogBoxData initWithDDNADialogBoxData:];
-[UserInteractionDialogBoxData wait:];
-[UserInteractionDialogBoxData dealloc];
-[UserInteractionDialogBoxData kind];
-[UserInteractionDialogBoxData style];
-[UserInteractionDialogBoxData title];
-[UserInteractionDialogBoxData messageText];
-[UserInteractionDialogBoxData checkBoxText];
-[UserInteractionDialogBoxData checkBoxValue];
-[UserInteractionDialogBoxData setCheckBoxValue:];
-[UserInteractionDialogBoxData promptTextValue];
-[UserInteractionDialogBoxData promptTextSecondValue];
-[UserInteractionDialogBoxData promptTextThirdValue];
-[UserInteractionDialogBoxData setPromptTextValue:];
-[UserInteractionDialogBoxData setPromptTextSecondValue:];
-[UserInteractionDialogBoxData setPromptTextThirdValue:];
-[UserInteractionDialogBoxData clickedButton];
-[UserInteractionDialogBoxData setClickedButton:];
-[UserInteractionDialogBoxData buttons];
-[UserInteractionDialogBoxData image];
-[UserInteractionDialogBoxData bezel];
-[UserInteractionDialogBoxData canBeAutomaticallyDismissed];
-[UserInteractionDialogBoxData preferNotifications];
-[UserInteractionDialogBoxData setPreferNotifications:];
-[UserInteractionDialogBoxData sendNotificationUserInteraction];
-[UserInteractionDialogBoxData setAsMessageBox:title:message:];
-[UserInteractionDialogBoxData setAsButtonsBox:title:message:buttons:];
-[UserInteractionDialogBoxData setAsButtonsBoxWithCheckbox:title:message:buttons:checkboxText:checkboxValue:];
-[UserInteractionDialogBoxData setAsPromptBox:title:message:promptText:buttons:];
-[UserInteractionDialogBoxData setAsPasswordBox:title:message:promptText:buttons:checkboxText:checkboxValue:displayCheckbox:];
-[UserInteractionDialogBoxData setAsNewPasswordBox:title:message:promptText:buttons:checkboxText:checkboxValue:displayCheckbox:];
-[UserInteractionDialogBoxData setAsChangePasswordBox:title:message:promptText:secondPromptText:buttons:checkboxText:checkboxValue:];
-[UserInteractionDialogBoxData setAsLoginBox:title:message:username:password:buttons:checkboxValue:];
-[UserInteractionDialogBoxData setAsAppleIDLoginBox:title:message:username:password:checkboxValue:];

@end

@interface UserInteractionHintData : NSObject {
    /* instance variables */
    B _persistent;
    @"NSString" _text;
}

@property (T@"NSString",&,V_text) text;
@property (TB,V_persistent) persistent;

/* class methods */
+[UserInteractionHintData postHintDataWithMessage:forDevice:scheme:persistent:];

/* instance methods */
-[UserInteractionHintData init];
-[UserInteractionHintData initWithDDNAHintData:];
-[UserInteractionHintData text];
-[UserInteractionHintData setText:];
-[UserInteractionHintData persistent];
-[UserInteractionHintData setPersistent:];

@end

@interface UserInteractionNotificationData : NSObject {
    /* instance variables */
    B _silent;
    @"NSString" _text;
    q _type;
    q _time;
}

@property (T@"NSString",&,V_text) text;
@property (TB,V_silent) silent;
@property (Tq,V_type) type;
@property (Tq,V_time) time;

/* instance methods */
-[UserInteractionNotificationData initWithCPPObject:];
-[UserInteractionNotificationData init];
-[UserInteractionNotificationData text];
-[UserInteractionNotificationData setText:];
-[UserInteractionNotificationData silent];
-[UserInteractionNotificationData setSilent:];
-[UserInteractionNotificationData type];
-[UserInteractionNotificationData setType:];
-[UserInteractionNotificationData time];
-[UserInteractionNotificationData setTime:];

@end

@interface UserInteractionScreenData : NSObject {
    /* instance variables */
    B _showImmediately;
    B _beep;
    @"Device" _device;
    @"NSString" _screenName;
    @"NSString" _scheme;
    @"NSString" _title;
    @"NSString" _message;
    @"NSString" _image;
    @"NSString" _status;
    Q _dismissAfter;
    q _value;
    @"NSString" _cancelActionLabel;
    ^v _screenData;
}

@property (T^v,V_screenData) screenData;
@property (T@"Device",&,V_device) device;
@property (T@"NSString",&,V_screenName) screenName;
@property (T@"NSString",&,V_scheme) scheme;
@property (T@"NSString",&,V_title) title;
@property (T@"NSString",&,V_message) message;
@property (T@"NSString",&,V_image) image;
@property (T@"NSString",&,V_status) status;
@property (Tq,V_value) value;
@property (TQ,V_dismissAfter) dismissAfter;
@property (TB,V_showImmediately) showImmediately;
@property (TB,V_beep) beep;
@property (T@"NSString",&,V_cancelActionLabel) cancelActionLabel;
@property (TB) hasBeenAutoDismissed;

/* class methods */
+[UserInteractionScreenData load];

/* instance methods */
-[UserInteractionScreenData createController];
-[UserInteractionScreenData init];
-[UserInteractionScreenData initWithDDNAScreenData:];
-[UserInteractionScreenData dealloc];
-[UserInteractionScreenData cancel];
-[UserInteractionScreenData continueFromUI];
-[UserInteractionScreenData hasBeenAutoDismissed];
-[UserInteractionScreenData setHasBeenAutoDismissed:];
-[UserInteractionScreenData description];
-[UserInteractionScreenData device];
-[UserInteractionScreenData setDevice:];
-[UserInteractionScreenData screenName];
-[UserInteractionScreenData setScreenName:];
-[UserInteractionScreenData scheme];
-[UserInteractionScreenData setScheme:];
-[UserInteractionScreenData title];
-[UserInteractionScreenData setTitle:];
-[UserInteractionScreenData message];
-[UserInteractionScreenData setMessage:];
-[UserInteractionScreenData image];
-[UserInteractionScreenData setImage:];
-[UserInteractionScreenData status];
-[UserInteractionScreenData setStatus:];
-[UserInteractionScreenData dismissAfter];
-[UserInteractionScreenData setDismissAfter:];
-[UserInteractionScreenData value];
-[UserInteractionScreenData setValue:];
-[UserInteractionScreenData showImmediately];
-[UserInteractionScreenData setShowImmediately:];
-[UserInteractionScreenData beep];
-[UserInteractionScreenData setBeep:];
-[UserInteractionScreenData cancelActionLabel];
-[UserInteractionScreenData setCancelActionLabel:];
-[UserInteractionScreenData screenData];
-[UserInteractionScreenData setScreenData:];

@end

@interface VCard : NSObject {
    /* instance variables */
    ^v _ddnaVCard;
}

/* class methods */
+[VCard parseVCardData:];
+[VCard parseVCardFile:];

/* instance methods */
-[VCard initWithDDNAVCard:];
-[VCard dealloc];
-[VCard propertyWithName:];
-[VCard propertiesWithName:];
-[VCard properties];
-[VCard addProperty:];

@end

@interface VCardProperty : NSObject {
    /* instance variables */
    ^v _ddnaVCardProperty;
}

@property (T@"NSString",C) name;
@property (T@"NSString",C) data;
@property (TB,R) preferred;
@property (T^v,R,V_ddnaVCardProperty) ddnaVCardProperty;

/* instance methods */
-[VCardProperty initWithDDNAVCardProperty:];
-[VCardProperty dealloc];
-[VCardProperty attributeWithName:];
-[VCardProperty attributesWithName:];
-[VCardProperty attributes];
-[VCardProperty name];
-[VCardProperty setName:];
-[VCardProperty data];
-[VCardProperty setData:];
-[VCardProperty preferred];
-[VCardProperty splittedData:];
-[VCardProperty ddnaVCardProperty];

@end

@interface VCardPropertyAttribute : NSObject {
    /* instance variables */
    ^v _ddnaVCardPropertyAttribute;
}

@property (T@"NSString",C) name;
@property (T@"NSString",C) value;

/* instance methods */
-[VCardPropertyAttribute initWithDDNAVCardPropertyAttribute:];
-[VCardPropertyAttribute dealloc];
-[VCardPropertyAttribute name];
-[VCardPropertyAttribute setName:];
-[VCardPropertyAttribute value];
-[VCardPropertyAttribute setValue:];

@end

@interface VKLegacyBadgeView : NSView {
    /* instance variables */
    B _borderOnly;
    @"NSColor" _color;
    @"NSString" _colorName;
}

@property (T@"NSColor",&,V_color) color;
@property (T@"NSString",&,V_colorName) colorName;
@property (TB,V_borderOnly) borderOnly;

/* instance methods */
-[VKLegacyBadgeView initWithCoder:];
-[VKLegacyBadgeView initWithFrame:];
-[VKLegacyBadgeView dealloc];
-[VKLegacyBadgeView encodeWithCoder:];
-[VKLegacyBadgeView observeValueForKeyPath:ofObject:change:context:];
-[VKLegacyBadgeView drawRect:];
-[VKLegacyBadgeView color];
-[VKLegacyBadgeView setColor:];
-[VKLegacyBadgeView colorName];
-[VKLegacyBadgeView setColorName:];
-[VKLegacyBadgeView borderOnly];
-[VKLegacyBadgeView setBorderOnly:];

@end

@interface VKLegacyButton : NSButton {
    /* instance variables */
    @"NSColor" _backgroundColor;
    @"NSString" _backgroundColorName;
    @"NSColor" _textColor;
    @"NSString" _textColorName;
}

@property (T@"NSColor",&,V_backgroundColor) backgroundColor;
@property (T@"NSString",&,V_backgroundColorName) backgroundColorName;
@property (T@"NSColor",&,V_textColor) textColor;
@property (T@"NSString",&,V_textColorName) textColorName;

/* instance methods */
-[VKLegacyButton initWithCoder:];
-[VKLegacyButton initWithFrame:];
-[VKLegacyButton dealloc];
-[VKLegacyButton encodeWithCoder:];
-[VKLegacyButton observeValueForKeyPath:ofObject:change:context:];
-[VKLegacyButton drawRect:];
-[VKLegacyButton allowsVibrancy];
-[VKLegacyButton backgroundColor];
-[VKLegacyButton setBackgroundColor:];
-[VKLegacyButton backgroundColorName];
-[VKLegacyButton setBackgroundColorName:];
-[VKLegacyButton textColor];
-[VKLegacyButton setTextColor:];
-[VKLegacyButton textColorName];
-[VKLegacyButton setTextColorName:];

@end

@interface VKLegacyRoundImageView : NSImageView {
    /* instance variables */
    q _radius;
}

@property (Tq,V_radius) radius;

/* instance methods */
-[VKLegacyRoundImageView drawRect:];
-[VKLegacyRoundImageView radius];
-[VKLegacyRoundImageView setRadius:];

@end

@interface VKLegacyRoundedView : NSView {
    /* instance variables */
    @"NSColor" _color;
    @"NSString" _colorName;
    q _radius;
}

@property (T@"NSColor",&,V_color) color;
@property (T@"NSString",&,V_colorName) colorName;
@property (Tq,V_radius) radius;

/* instance methods */
-[VKLegacyRoundedView initWithCoder:];
-[VKLegacyRoundedView initWithFrame:];
-[VKLegacyRoundedView dealloc];
-[VKLegacyRoundedView encodeWithCoder:];
-[VKLegacyRoundedView observeValueForKeyPath:ofObject:change:context:];
-[VKLegacyRoundedView drawRect:];
-[VKLegacyRoundedView color];
-[VKLegacyRoundedView setColor:];
-[VKLegacyRoundedView colorName];
-[VKLegacyRoundedView setColorName:];
-[VKLegacyRoundedView radius];
-[VKLegacyRoundedView setRadius:];

@end

@interface VKLegacyTemplateImageView : NSImageView {
    /* instance variables */
    @"NSColor" _color;
    @"NSString" _colorName;
}

@property (T@"NSColor",&,V_color) color;
@property (T@"NSString",&,V_colorName) colorName;

/* instance methods */
-[VKLegacyTemplateImageView initWithCoder:];
-[VKLegacyTemplateImageView initWithFrame:];
-[VKLegacyTemplateImageView dealloc];
-[VKLegacyTemplateImageView encodeWithCoder:];
-[VKLegacyTemplateImageView observeValueForKeyPath:ofObject:change:context:];
-[VKLegacyTemplateImageView templateImageWithColor:];
-[VKLegacyTemplateImageView drawRect:];
-[VKLegacyTemplateImageView color];
-[VKLegacyTemplateImageView setColor:];
-[VKLegacyTemplateImageView colorName];
-[VKLegacyTemplateImageView setColorName:];

@end

@interface VKLegacyView : NSView {
    /* instance variables */
    B _darkModeTransparentBackground;
    B _darkModeTransparentBorder;
    @"NSColor" _backgroundColor;
    @"NSColor" _borderColor;
    @"NSString" _backgroundColorName;
    @"NSString" _borderColorName;
    Q _borderStyle;
}

@property (T@"NSColor",&,V_backgroundColor) backgroundColor;
@property (T@"NSColor",&,V_borderColor) borderColor;
@property (T@"NSString",&,V_backgroundColorName) backgroundColorName;
@property (T@"NSString",&,V_borderColorName) borderColorName;
@property (TQ,V_borderStyle) borderStyle;
@property (TB,V_darkModeTransparentBackground) darkModeTransparentBackground;
@property (TB,V_darkModeTransparentBorder) darkModeTransparentBorder;

/* instance methods */
-[VKLegacyView initWithCoder:];
-[VKLegacyView initWithFrame:];
-[VKLegacyView dealloc];
-[VKLegacyView encodeWithCoder:];
-[VKLegacyView observeValueForKeyPath:ofObject:change:context:];
-[VKLegacyView drawRect:];
-[VKLegacyView backgroundColor];
-[VKLegacyView setBackgroundColor:];
-[VKLegacyView borderColor];
-[VKLegacyView setBorderColor:];
-[VKLegacyView backgroundColorName];
-[VKLegacyView setBackgroundColorName:];
-[VKLegacyView borderColorName];
-[VKLegacyView setBorderColorName:];
-[VKLegacyView borderStyle];
-[VKLegacyView setBorderStyle:];
-[VKLegacyView darkModeTransparentBackground];
-[VKLegacyView setDarkModeTransparentBackground:];
-[VKLegacyView darkModeTransparentBorder];
-[VKLegacyView setDarkModeTransparentBorder:];

@end

@interface ValidatingBoundMenu : NSMenu {
    /* instance variables */
    B _enabling;
}

@property (TB,N,V_enabling) enabling;

/* instance methods */
-[ValidatingBoundMenu _enableItem:];
-[ValidatingBoundMenu enabling];
-[ValidatingBoundMenu setEnabling:];

@end

@interface VersionedBackupInfo : NSObject {
    /* instance variables */
    {VersionedBackupInfo="_vptr$VersionedBackupInfo"^^?"_path"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}"_isValid"B"_isFinished"B"_isSQLiteFormat"B"_deviceUDID"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}"_deviceUID"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}"_deviceName"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}"_date"{Date="_vptr$Type"^^?"_cfObject"^{__CFDate}}"_isEncrypted"B"_iOSVersion"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}"_doNotDelete"B"_label"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}"_backupReason"i"_fullSize"Q"_newDataSize"Q"_deadDataSize"Q"_deleteStatus"i"_rowID"q"_lockScreenHash"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}"_homeScreenHash"{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}"_extraFilesPaths"{map<std::string, std::string, std::less<std::string>, std::allocator<std::pair<const std::string, std::string>>>="__tree_"{__tree<std::__value_type<std::string, std::string>, std::__map_value_compare<std::string, std::__value_type<std::string, std::string>, std::less<std::string>>, std::allocator<std::__value_type<std::string, std::string>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, std::string>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::string>, std::less<std::string>>>="__value_"Q}}}} _info;
    B _isValid;
    B _isFinished;
    B _isEncrypted;
    B _doNotDelete;
    @"NSString" _path;
    @"NSString" _deviceUDID;
    @"NSString" _deviceUID;
    @"NSString" _deviceName;
    @"NSString" _formattedDate;
    @"NSDate" _date;
    @"NSString" _iOSVersion;
    q _backupReason;
    Q _fullSize;
    Q _newDataSize;
    Q _deadDataSize;
    @"NSString" _label;
}

@property (T@"NSString",&,V_path) path;
@property (TB,V_isValid) isValid;
@property (TB,V_isFinished) isFinished;
@property (T@"NSString",&,V_deviceUDID) deviceUDID;
@property (T@"NSString",&,V_deviceUID) deviceUID;
@property (T@"NSString",&,V_deviceName) deviceName;
@property (T@"NSDate",&,V_date) date;
@property (TB,V_isEncrypted) isEncrypted;
@property (T@"NSString",&,V_iOSVersion) iOSVersion;
@property (T@"NSString",&,V_formattedDate) formattedDate;
@property (TQ,V_fullSize) fullSize;
@property (TQ,V_newDataSize) newDataSize;
@property (TQ,V_deadDataSize) deadDataSize;
@property (Tq,V_backupReason) backupReason;
@property (T@"NSString",R) homeScreenPath;
@property (T@"NSString",R) lockScreenPath;
@property (T@"NSString",R) defaultScreenshotPath;
@property (T@"NSString",R) homeScreenHash;
@property (T@"NSString",R) lockScreenHash;
@property (TB,V_doNotDelete) doNotDelete;
@property (T@"NSString",C,V_label) label;

/* instance methods */
-[VersionedBackupInfo initWithCPPVersionedBackupInfo:];
-[VersionedBackupInfo cppObject];
-[VersionedBackupInfo isEqual:];
-[VersionedBackupInfo lockScreenPath];
-[VersionedBackupInfo homeScreenPath];
-[VersionedBackupInfo defaultScreenshotPath];
-[VersionedBackupInfo lockScreenHash];
-[VersionedBackupInfo homeScreenHash];
-[VersionedBackupInfo path];
-[VersionedBackupInfo setPath:];
-[VersionedBackupInfo isValid];
-[VersionedBackupInfo setIsValid:];
-[VersionedBackupInfo isFinished];
-[VersionedBackupInfo setIsFinished:];
-[VersionedBackupInfo deviceUDID];
-[VersionedBackupInfo setDeviceUDID:];
-[VersionedBackupInfo deviceUID];
-[VersionedBackupInfo setDeviceUID:];
-[VersionedBackupInfo deviceName];
-[VersionedBackupInfo setDeviceName:];
-[VersionedBackupInfo formattedDate];
-[VersionedBackupInfo setFormattedDate:];
-[VersionedBackupInfo date];
-[VersionedBackupInfo setDate:];
-[VersionedBackupInfo isEncrypted];
-[VersionedBackupInfo setIsEncrypted:];
-[VersionedBackupInfo iOSVersion];
-[VersionedBackupInfo setIOSVersion:];
-[VersionedBackupInfo backupReason];
-[VersionedBackupInfo setBackupReason:];
-[VersionedBackupInfo fullSize];
-[VersionedBackupInfo setFullSize:];
-[VersionedBackupInfo newDataSize];
-[VersionedBackupInfo setNewDataSize:];
-[VersionedBackupInfo deadDataSize];
-[VersionedBackupInfo setDeadDataSize:];
-[VersionedBackupInfo doNotDelete];
-[VersionedBackupInfo setDoNotDelete:];
-[VersionedBackupInfo label];
-[VersionedBackupInfo setLabel:];

@end

@interface VoiceMail : NSObject <DatasetObject, IAccessibleElement> {
    /* instance variables */
    @"NSString" fullTextIndex;
    q _uid;
    q _fileID;
    Q _duration;
    @"NSDate" _date;
    @"NSString" _address;
    @"Caller" _caller;
    @"NSString" _callerName;
    @"Contact" _contact;
    @"NSString" _durationText;
    @"NSString" _durationTextSmall;
    @"NSString" _deviceFilePath;
    @"NSString" _transcriptText;
    ^v _ddnaVoiceMail;
}

@property (Tq,V_uid) uid;
@property (Tq,V_fileID) fileID;
@property (TQ,V_duration) duration;
@property (T@"NSDate",&,V_date) date;
@property (T@"NSString",&,V_address) address;
@property (T@"Caller",&,V_caller) caller;
@property (T@"NSString",&,V_callerName) callerName;
@property (T@"Contact",&,V_contact) contact;
@property (T@"NSString",&,V_durationText) durationText;
@property (T@"NSString",&,V_durationTextSmall) durationTextSmall;
@property (T@"NSString",&,V_deviceFilePath) deviceFilePath;
@property (T^v,V_ddnaVoiceMail) ddnaVoiceMail;
@property (T@"NSString",&,V_transcriptText) transcriptText;
@property (T@"NSString",&,VfullTextIndex) fullTextIndex;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* class methods */
+[VoiceMail voiceMailWithDDNAVoiceMail:];

/* instance methods */
-[VoiceMail init];
-[VoiceMail initWithDDNAVoiceMail:];
-[VoiceMail dealloc];
-[VoiceMail accessibilityLabel];
-[VoiceMail fullTextIndex];
-[VoiceMail setFullTextIndex:];
-[VoiceMail uid];
-[VoiceMail setUid:];
-[VoiceMail fileID];
-[VoiceMail setFileID:];
-[VoiceMail duration];
-[VoiceMail setDuration:];
-[VoiceMail date];
-[VoiceMail setDate:];
-[VoiceMail address];
-[VoiceMail setAddress:];
-[VoiceMail caller];
-[VoiceMail setCaller:];
-[VoiceMail callerName];
-[VoiceMail setCallerName:];
-[VoiceMail contact];
-[VoiceMail setContact:];
-[VoiceMail durationText];
-[VoiceMail setDurationText:];
-[VoiceMail durationTextSmall];
-[VoiceMail setDurationTextSmall:];
-[VoiceMail deviceFilePath];
-[VoiceMail setDeviceFilePath:];
-[VoiceMail transcriptText];
-[VoiceMail setTranscriptText:];
-[VoiceMail ddnaVoiceMail];
-[VoiceMail setDdnaVoiceMail:];

@end

@interface VoiceMailCallerViewDataSource : DeviceTableViewDataSource {
    /* instance variables */
    @"VoiceMailManager" voiceMailManager;
    @"VoiceMailManager" _voiceMailManager;
    @"Device" _device;
}

@property (T@"VoiceMailManager",V_voiceMailManager) voiceMailManager;
@property (T@"Device",&,V_device) device;

/* class methods */
+[VoiceMailCallerViewDataSource initialize];

/* instance methods */
-[VoiceMailCallerViewDataSource tableView:objectValueForTableColumn:row:];
-[VoiceMailCallerViewDataSource dragOutTableViewNumberOfDraggedItems:];
-[VoiceMailCallerViewDataSource dragOutTableView:proceedFilesPromiseUsingDragOutInfo:];
-[VoiceMailCallerViewDataSource dragOutTableView:provideStringForType:];
-[VoiceMailCallerViewDataSource voiceMailManager];
-[VoiceMailCallerViewDataSource setVoiceMailManager:];
-[VoiceMailCallerViewDataSource device];
-[VoiceMailCallerViewDataSource setDevice:];

@end

@interface VoiceMailCallerViewDelegate : DeviceTableViewDelegate

/* instance methods */
-[VoiceMailCallerViewDelegate tableViewSelectionDidChange:];

@end

@interface VoiceMailManager : DatasetMobileManager {
    /* instance variables */
    ^v _ddnaVoiceMailManager;
    @"NSArray" _voiceMails;
    @"NSArray" _callers;
}

@property (T@"NSArray",R) voiceMails;
@property (T@"NSArray",R) callers;

/* class methods */
+[VoiceMailManager voiceMailManagerWithDDNAVoiceMailManager:];

/* instance methods */
-[VoiceMailManager copyItems:toPath:runType:];
-[VoiceMailManager exportItemsAsText:runType:];
-[VoiceMailManager exportItemsAsCSV:toPath:runType:];
-[VoiceMailManager open:runType:];
-[VoiceMailManager openMultiple:runType:];
-[VoiceMailManager copyItemsASync:toPath:];
-[VoiceMailManager copyItemsSync:toPath:];
-[VoiceMailManager exportItemsAsTextSync:];
-[VoiceMailManager exportItemsAsCSVASync:toPath:];
-[VoiceMailManager openASync:];
-[VoiceMailManager openSync:];
-[VoiceMailManager openMultipleASync:];
-[VoiceMailManager openMultipleSync:];
-[VoiceMailManager initWithDDNAVoiceMailManager:];
-[VoiceMailManager dealloc];
-[VoiceMailManager voiceMails];
-[VoiceMailManager callers];
-[VoiceMailManager updateRequestDidEnd:];

@end

@interface VoiceMailViewController : iOSDeviceContentViewController {
    /* instance variables */
    @"VoiceMailManager" _voiceMailManager;
    @"LegacyDataFilter" _voiceMailsDataFilter;
    @"LegacyDataFilter" _callersDataFilter;
    @"LegacyDataFilterCriteriaMatchSelection" _voiceMailsSelectionMatch;
    @"LegacyDataFilterSortDescriptorText" _sortDescriptorCaller;
    @"LegacyDataFilterSortDescriptor" _sortDescriptorContactKind;
    @"LegacyDataFilterSortDescriptor" _sortDescriptorDate;
    @"LegacyDataFilterSortDescriptorText" _sortDescriptorDuration;
    @"LegacyDataFilterSortDescriptorText" _sortDescriptorNumber;
    @"DragOutTableView" _voiceMailTableView;
    @"VoiceMailViewDataSource" _voiceMailViewDataSource;
    @"VoiceMailViewDelegate" _voiceMailViewDelegate;
    @"DragOutTableView" _voiceMailCallersTableView;
    @"VoiceMailCallerViewDataSource" _voiceMailCallerViewDataSource;
    @"VoiceMailCallerViewDelegate" _voiceMailCallerViewDelegate;
    @"NSSplitView" _voiceMailSplitView;
    @"DeviceViewSplitViewDelegate" _voiceMailSplitViewDelegate;
    B _awake;
}

@property (TB,V_awake) awake;
@property (T@"NSTableView",&,N,V_voiceMailTableView) voiceMailTableView;
@property (T@"NSTableView",&,N,V_voiceMailCallersTableView) voiceMailCallersTableView;
@property (T@"NSSplitView",&,N,V_voiceMailSplitView) voiceMailSplitView;
@property (T@"VoiceMailManager",&,V_voiceMailManager) voiceMailManager;

/* instance methods */
-[VoiceMailViewController copyVoiceMailsUsingDragOutInfo:];
-[VoiceMailViewController searchTextDidChange:];
-[VoiceMailViewController setSelectedCallers:];
-[VoiceMailViewController updateWindowStatusText:];
-[VoiceMailViewController copy:];
-[VoiceMailViewController performDoubleAction:];
-[VoiceMailViewController refreshData];
-[VoiceMailViewController quickLook:];
-[VoiceMailViewController openWith:];
-[VoiceMailViewController exportAsCSV:];
-[VoiceMailViewController copyToComputer:];
-[VoiceMailViewController contextMenuVoiceMailQuickLook:];
-[VoiceMailViewController contextMenuVoiceMailExportToCSV:];
-[VoiceMailViewController contextMenuVoiceMailCopyToComputer:];
-[VoiceMailViewController contextMenuVoiceMailCallerQuickLook:];
-[VoiceMailViewController contextMenuVoiceMailOpenWith:];
-[VoiceMailViewController contextMenuVoiceMailCallerCopyToComputer:];
-[VoiceMailViewController validateMenuItem:];
-[VoiceMailViewController validateToolbarItem:];
-[VoiceMailViewController menuWillOpen:];
-[VoiceMailViewController validateOpenWithMenuItem:voiceMail:action:delegate:];
-[VoiceMailViewController initWithDevice:];
-[VoiceMailViewController dealloc];
-[VoiceMailViewController awakeFromNib];
-[VoiceMailViewController loadData];
-[VoiceMailViewController archiveSelected:];
-[VoiceMailViewController willBeDisplayedByMainWindowController];
-[VoiceMailViewController datasetManager:updateDidEnd:];
-[VoiceMailViewController updateDisplay];
-[VoiceMailViewController helpURL];
-[VoiceMailViewController toolbarButtons];
-[VoiceMailViewController voiceMailManager];
-[VoiceMailViewController setVoiceMailManager:];
-[VoiceMailViewController voiceMailCallersTableView];
-[VoiceMailViewController setVoiceMailCallersTableView:];
-[VoiceMailViewController voiceMailTableView];
-[VoiceMailViewController setVoiceMailTableView:];
-[VoiceMailViewController voiceMailSplitView];
-[VoiceMailViewController setVoiceMailSplitView:];
-[VoiceMailViewController awake];
-[VoiceMailViewController setAwake:];

@end

@interface VoiceMailViewDataSource : DeviceTableViewDataSource {
    /* instance variables */
    @"VoiceMailManager" voiceMailManager;
    @"VoiceMailManager" _voiceMailManager;
    @"Device" _device;
}

@property (T@"VoiceMailManager",V_voiceMailManager) voiceMailManager;
@property (T@"Device",&,V_device) device;

/* instance methods */
-[VoiceMailViewDataSource tableView:objectValueForTableColumn:row:];
-[VoiceMailViewDataSource dragOutTableView:proceedFilesPromiseUsingDragOutInfo:];
-[VoiceMailViewDataSource dragOutTableView:provideStringForType:];
-[VoiceMailViewDataSource voiceMailManager];
-[VoiceMailViewDataSource setVoiceMailManager:];
-[VoiceMailViewDataSource device];
-[VoiceMailViewDataSource setDevice:];

@end

@interface VoiceMailViewDelegate : DeviceTableViewDelegate

/* instance methods */
-[VoiceMailViewDelegate tableView:willDisplayCell:forTableColumn:row:];

@end

@interface VoiceMemo : NSObject <DatasetObject, IAccessibleElement> {
    /* instance variables */
    @"NSString" fullTextIndex;
    q _uid;
    Q _duration;
    @"NSDate" _date;
    @"NSString" _label;
    @"NSString" _durationText;
    @"NSString" _durationTextSmall;
    @"NSString" _deviceFilePath;
    @"NSImage" _icon;
    ^v _cppObject;
}

@property (Tq,V_uid) uid;
@property (TQ,V_duration) duration;
@property (T@"NSDate",&,V_date) date;
@property (T@"NSString",&,V_label) label;
@property (T@"NSString",&,V_durationText) durationText;
@property (T@"NSString",&,V_durationTextSmall) durationTextSmall;
@property (T@"NSString",&,V_deviceFilePath) deviceFilePath;
@property (T@"NSImage",&,V_icon) icon;
@property (T^v,V_cppObject) cppObject;
@property (T@"NSString",&,VfullTextIndex) fullTextIndex;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[VoiceMemo initWithCPPObject:];
-[VoiceMemo dealloc];
-[VoiceMemo accessibilityLabel];
-[VoiceMemo fullTextIndex];
-[VoiceMemo setFullTextIndex:];
-[VoiceMemo uid];
-[VoiceMemo setUid:];
-[VoiceMemo duration];
-[VoiceMemo setDuration:];
-[VoiceMemo date];
-[VoiceMemo setDate:];
-[VoiceMemo label];
-[VoiceMemo setLabel:];
-[VoiceMemo durationText];
-[VoiceMemo setDurationText:];
-[VoiceMemo durationTextSmall];
-[VoiceMemo setDurationTextSmall:];
-[VoiceMemo deviceFilePath];
-[VoiceMemo setDeviceFilePath:];
-[VoiceMemo icon];
-[VoiceMemo setIcon:];
-[VoiceMemo cppObject];
-[VoiceMemo setCppObject:];

@end

@interface VoiceMemoManager : ModernDatasetManager

@property (T^v,D) cppObject;

/* instance methods */
-[VoiceMemoManager init];
-[VoiceMemoManager openItem:];
-[VoiceMemoManager openItems:];
-[VoiceMemoManager copyToComputer:path:];

@end

@interface VoiceMemoViewController : SingleTableDatasetViewController

/* instance methods */
-[VoiceMemoViewController initWithDevice:];
-[VoiceMemoViewController dealloc];
-[VoiceMemoViewController awakeFromNib];
-[VoiceMemoViewController toolbarButtons];
-[VoiceMemoViewController predicateForSearchString:];
-[VoiceMemoViewController helpURL];

@end

@interface WeakReference : NSObject {
    /* instance variables */
    @ _object;
}

@property (T@,W,N,V_object) object;

/* instance methods */
-[WeakReference init];
-[WeakReference initWithObject:];
-[WeakReference object];
-[WeakReference setObject:];

@end

@interface WhatsAppBaseManager : MessagingDatasetManager

@end

@interface WhatsAppHelper : NSObject

/* class methods */
+[WhatsAppHelper getStatusImagePath:status:isFromMe:];
+[WhatsAppHelper getmediaTypeImagePath:];

@end

@interface WhatsAppManager : WhatsAppBaseManager

@property (T^v,D) cppObject;

/* instance methods */
-[WhatsAppManager init];

@end

@interface WhatsAppMessage : MessageBase {
    /* instance variables */
    B _hasMoreThanOneContact;
    B _hasMoreThanTwoContacts;
    @"NSString" _statusImagePath;
    @"NSString" _kindImagePath;
}

@property (T@"NSString",&,V_statusImagePath) statusImagePath;
@property (T@"NSString",&,V_kindImagePath) kindImagePath;
@property (TB,V_hasMoreThanOneContact) hasMoreThanOneContact;
@property (TB,V_hasMoreThanTwoContacts) hasMoreThanTwoContacts;

/* instance methods */
-[WhatsAppMessage initWithCPPObject:];
-[WhatsAppMessage statusImagePath];
-[WhatsAppMessage setStatusImagePath:];
-[WhatsAppMessage kindImagePath];
-[WhatsAppMessage setKindImagePath:];
-[WhatsAppMessage hasMoreThanOneContact];
-[WhatsAppMessage setHasMoreThanOneContact:];
-[WhatsAppMessage hasMoreThanTwoContacts];
-[WhatsAppMessage setHasMoreThanTwoContacts:];

@end

@interface WhatsAppSMBManager : WhatsAppBaseManager

@property (T^v,D) cppObject;

/* instance methods */
-[WhatsAppSMBManager init];

@end

@interface WhatsAppSMBViewController : WhatsAppViewController

/* instance methods */
-[WhatsAppSMBViewController initWhatsAppVersion];
-[WhatsAppSMBViewController observeValueForKeyPath:ofObject:change:context:];
-[WhatsAppSMBViewController getIsShowContactDetails];
-[WhatsAppSMBViewController getIsHideAttachments];
-[WhatsAppSMBViewController getIsShowTimesForAllMessages];
-[WhatsAppSMBViewController getIsOnlyShowAttachments];
-[WhatsAppSMBViewController getIsShowOriginalMessagesOfReplies];
-[WhatsAppSMBViewController initWithDevice:];
-[WhatsAppSMBViewController dealloc];

@end

@interface WhatsAppSession : SessionBase {
    /* instance variables */
    @"NSString" _lastMessageStatusImagePath;
    @"NSString" _lastMessageKindImagePath;
    @"NSImage" _sessionImage;
}

@property (T@"NSString",&,V_lastMessageStatusImagePath) lastMessageStatusImagePath;
@property (T@"NSString",&,V_lastMessageKindImagePath) lastMessageKindImagePath;
@property (T@"NSImage",&,V_sessionImage) sessionImage;

/* instance methods */
-[WhatsAppSession initWithCPPObject:];
-[WhatsAppSession lastMessageStatusImagePath];
-[WhatsAppSession setLastMessageStatusImagePath:];
-[WhatsAppSession lastMessageKindImagePath];
-[WhatsAppSession setLastMessageKindImagePath:];
-[WhatsAppSession sessionImage];
-[WhatsAppSession setSessionImage:];

@end

@interface WhatsAppViewController : MessagesViewController <NSTableViewDelegate> {
    /* instance variables */
    @"NSDictionary" _bubblesTextAttributes;
    @"NSArray" _filteredSessionItems;
    @"NSArray" _filteredMessageItems;
}

@property (T@"NSDictionary",&,V_bubblesTextAttributes) bubblesTextAttributes;
@property (T@"NSArray",&,V_filteredSessionItems) filteredSessionItems;
@property (T@"NSArray",&,V_filteredMessageItems) filteredMessageItems;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;

/* instance methods */
-[WhatsAppViewController initWhatsAppVersion];
-[WhatsAppViewController awakeFromNib];
-[WhatsAppViewController observeValueForKeyPath:ofObject:change:context:];
-[WhatsAppViewController getIsShowContactDetails];
-[WhatsAppViewController getIsHideAttachments];
-[WhatsAppViewController getIsShowTimesForAllMessages];
-[WhatsAppViewController getIsOnlyShowAttachments];
-[WhatsAppViewController getIsShowOriginalMessagesOfReplies];
-[WhatsAppViewController messageHeightOfRow:];
-[WhatsAppViewController shouldSelectRow:];
-[WhatsAppViewController messageViewForTableColumn:];
-[WhatsAppViewController filterSessions];
-[WhatsAppViewController filterMessages];
-[WhatsAppViewController messageDidClickTableColumn];
-[WhatsAppViewController exportToTextContextMenu:];
-[WhatsAppViewController exportToText:];
-[WhatsAppViewController exportToXLSContextMenu:];
-[WhatsAppViewController exportToXLS:];
-[WhatsAppViewController exportToCSVContextMenu:];
-[WhatsAppViewController exportToCSV:];
-[WhatsAppViewController copyToComputer:];
-[WhatsAppViewController copyToComputerContextMenu:];
-[WhatsAppViewController exportToPDFContextMenu:];
-[WhatsAppViewController exportToPDF:];
-[WhatsAppViewController exportToPrinterContextMenu:];
-[WhatsAppViewController exportToPrinter:];
-[WhatsAppViewController exportToRSMFContextMenu:];
-[WhatsAppViewController exportToRSMF:];
-[WhatsAppViewController onShowOptionsMenu:];
-[WhatsAppViewController sessionHeightOfRow];
-[WhatsAppViewController sessionViewForTableColumn:];
-[WhatsAppViewController initWithDevice:];
-[WhatsAppViewController dealloc];
-[WhatsAppViewController toolbarButtons];
-[WhatsAppViewController helpURL];
-[WhatsAppViewController bubblesTextAttributes];
-[WhatsAppViewController setBubblesTextAttributes:];
-[WhatsAppViewController filteredSessionItems];
-[WhatsAppViewController setFilteredSessionItems:];
-[WhatsAppViewController filteredMessageItems];
-[WhatsAppViewController setFilteredMessageItems:];

@end

@interface WizardWindowController : NSViewController {
    /* instance variables */
    B _leftButtonVisible;
    B _rightButtonVisible;
    B _leftButtonEnabled;
    B _rightButtonEnabled;
    B _shouldQuitOnClose;
    @"NSString" _leftButtonText;
    @"NSString" _rightButtonText;
    : _leftButtonCustomAction;
    : _rightButtonCustomAction;
    @"NSMutableDictionary" _userInfo;
    @ _context;
    @"Device" _device;
    @"NSString" _helpURL;
    @"_TtC7iMazing27WizardAdapterViewController" _adapter;
}

@property (T@"_TtC7iMazing27WizardAdapterViewController",&,V_adapter) adapter;
@property (T@"Device",&,V_device) device;
@property (T@"NSViewController<WizardWindowDelegate>",R) currentController;
@property (T@"NSString",C,V_leftButtonText) leftButtonText;
@property (T@"NSString",C,V_rightButtonText) rightButtonText;
@property (TB,V_leftButtonVisible) leftButtonVisible;
@property (TB,V_rightButtonVisible) rightButtonVisible;
@property (TB,V_leftButtonEnabled) leftButtonEnabled;
@property (TB,V_rightButtonEnabled) rightButtonEnabled;
@property (TB) leftButtonIsDefault;
@property (TB) rightButtonIsDefault;
@property (T:,V_leftButtonCustomAction) leftButtonCustomAction;
@property (T:,V_rightButtonCustomAction) rightButtonCustomAction;
@property (T@"NSMutableDictionary",&,V_userInfo) userInfo;
@property (T@,&,V_context) context;
@property (T@"iOSDevice",R) iOSDevice;
@property (T@"NSString",&,V_helpURL) helpURL;
@property (TB,V_shouldQuitOnClose) shouldQuitOnClose;
@property (T@"NSWindow",R) window;

/* instance methods */
-[WizardWindowController initWithTitle:device:];
-[WizardWindowController initWithTitle:device:requiresConnection:];
-[WizardWindowController initWithTitle:device:controllers:];
-[WizardWindowController initWithTitle:device:requiresConnection:controllers:];
-[WizardWindowController initWithCoder:];
-[WizardWindowController initWithNibName:bundle:];
-[WizardWindowController dealloc];
-[WizardWindowController nibName];
-[WizardWindowController window];
-[WizardWindowController viewDidLoad];
-[WizardWindowController iOSDevice];
-[WizardWindowController currentController];
-[WizardWindowController addController:];
-[WizardWindowController addController:forStep:];
-[WizardWindowController removeController:];
-[WizardWindowController insertNextController:];
-[WizardWindowController insertNextController:makeActive:];
-[WizardWindowController isFirstController:];
-[WizardWindowController isLastController:];
-[WizardWindowController previous];
-[WizardWindowController next];
-[WizardWindowController close];
-[WizardWindowController previousButtonTitle];
-[WizardWindowController nextButtonTitle];
-[WizardWindowController nextButtonTitleWithPossibleAction:];
-[WizardWindowController processScreenData:];
-[WizardWindowController showHelp:];
-[WizardWindowController addCompletionBlock:];
-[WizardWindowController leftButtonIsDefault];
-[WizardWindowController setLeftButtonIsDefault:];
-[WizardWindowController rightButtonIsDefault];
-[WizardWindowController setRightButtonIsDefault:];
-[WizardWindowController leftButtonText];
-[WizardWindowController setLeftButtonText:];
-[WizardWindowController rightButtonText];
-[WizardWindowController setRightButtonText:];
-[WizardWindowController leftButtonVisible];
-[WizardWindowController setLeftButtonVisible:];
-[WizardWindowController rightButtonVisible];
-[WizardWindowController setRightButtonVisible:];
-[WizardWindowController leftButtonEnabled];
-[WizardWindowController setLeftButtonEnabled:];
-[WizardWindowController rightButtonEnabled];
-[WizardWindowController setRightButtonEnabled:];
-[WizardWindowController leftButtonCustomAction];
-[WizardWindowController setLeftButtonCustomAction:];
-[WizardWindowController rightButtonCustomAction];
-[WizardWindowController setRightButtonCustomAction:];
-[WizardWindowController userInfo];
-[WizardWindowController setUserInfo:];
-[WizardWindowController context];
-[WizardWindowController setContext:];
-[WizardWindowController device];
-[WizardWindowController setDevice:];
-[WizardWindowController helpURL];
-[WizardWindowController setHelpURL:];
-[WizardWindowController shouldQuitOnClose];
-[WizardWindowController setShouldQuitOnClose:];
-[WizardWindowController adapter];
-[WizardWindowController setAdapter:];

@end

@interface WizardWindowGenericScreenViewController : NSViewController <WizardWindowDelegate, WizardWindowScreenDataController> {
    /* instance variables */
    B _active;
    @"WizardWindowController" wizard;
    @"UserInteractionScreenData" screenData;
    q behavior;
    @"WizardWindowGenericStepViewController" _stepController;
    @"NSTimer" _timer;
}

@property (T@"WizardWindowGenericStepViewController",&,V_stepController) stepController;
@property (T@"NSTimer",&,V_timer) timer;
@property (TB,V_active) active;
@property (T@"WizardWindowController",Vwizard) wizard;
@property (Tq,Vbehavior) behavior;
@property (T@"NSView",&) view;
@property (T@"NSString",&) title;
@property (TQ,R) hash;
@property (T#,R) superclass;
@property (T@"NSString",R,C) description;
@property (T@"NSString",?,R,C) debugDescription;
@property (T@"UserInteractionScreenData",&,VscreenData) screenData;

/* instance methods */
-[WizardWindowGenericScreenViewController init];
-[WizardWindowGenericScreenViewController dealloc];
-[WizardWindowGenericScreenViewController observeValueForKeyPath:ofObject:change:context:];
-[WizardWindowGenericScreenViewController didBecomeActive];
-[WizardWindowGenericScreenViewController willResignActive];
-[WizardWindowGenericScreenViewController didResignActive];
-[WizardWindowGenericScreenViewController update];
-[WizardWindowGenericScreenViewController cancel:];
-[WizardWindowGenericScreenViewController done:];
-[WizardWindowGenericScreenViewController description];
-[WizardWindowGenericScreenViewController wizard];
-[WizardWindowGenericScreenViewController setWizard:];
-[WizardWindowGenericScreenViewController screenData];
-[WizardWindowGenericScreenViewController setScreenData:];
-[WizardWindowGenericScreenViewController behavior];
-[WizardWindowGenericScreenViewController setBehavior:];
-[WizardWindowGenericScreenViewController stepController];
-[WizardWindowGenericScreenViewController setStepController:];
-[WizardWindowGenericScreenViewController timer];
-[WizardWindowGenericScreenViewController setTimer:];
-[WizardWindowGenericScreenViewController active];
-[WizardWindowGenericScreenViewController setActive:];

@end

@interface WizardWindowGenericStepViewController : NSViewController {
    /* instance variables */
    @"NSString" _message;
    @"NSString" _imageName;
    @"NSImage" _image;
}

@property (T@"NSString",&,V_message) message;
@property (T@"NSString",&,V_imageName) imageName;
@property (T@"NSImage",&,V_image) image;

/* instance methods */
-[WizardWindowGenericStepViewController init];
-[WizardWindowGenericStepViewController message];
-[WizardWindowGenericStepViewController setMessage:];
-[WizardWindowGenericStepViewController imageName];
-[WizardWindowGenericStepViewController setImageName:];
-[WizardWindowGenericStepViewController image];
-[WizardWindowGenericStepViewController setImage:];

@end

@interface WrappingTextField : NSTextField

/* instance methods */
-[WrappingTextField intrinsicContentSize];

@end

@interface _TtC7iMazing10BackupData : NSObject {
    /* instance variables */
     backupVolumeName;
     backupPath;
     isEncrypted;
     numSnapshots;
     totalSize;
     udid;
     serial;
     osName;
     isiMazingBackupLocation;
     isiTunesBackupLocation;
     isPartialBackup;
     isBlueprint;
}

@property (T@"NSString",N,C) backupVolumeName;
@property (T@"NSString",N,C) backupPath;
@property (TB,N,VisEncrypted) isEncrypted;
@property (T@"NSNumber",N,&,VnumSnapshots) numSnapshots;
@property (T@"NSNumber",N,&,VtotalSize) totalSize;
@property (T@"NSString",N,C) udid;
@property (T@"NSString",N,C) serial;
@property (T@"NSString",N,C) osName;
@property (TB,N,VisiMazingBackupLocation) isiMazingBackupLocation;
@property (TB,N,VisiTunesBackupLocation) isiTunesBackupLocation;
@property (TB,N,VisPartialBackup) isPartialBackup;
@property (TB,N,VisBlueprint) isBlueprint;

/* instance methods */
-[_TtC7iMazing10BackupData backupVolumeName];
-[_TtC7iMazing10BackupData setBackupVolumeName:];
-[_TtC7iMazing10BackupData backupPath];
-[_TtC7iMazing10BackupData setBackupPath:];
-[_TtC7iMazing10BackupData isEncrypted];
-[_TtC7iMazing10BackupData setIsEncrypted:];
-[_TtC7iMazing10BackupData numSnapshots];
-[_TtC7iMazing10BackupData setNumSnapshots:];
-[_TtC7iMazing10BackupData totalSize];
-[_TtC7iMazing10BackupData setTotalSize:];
-[_TtC7iMazing10BackupData udid];
-[_TtC7iMazing10BackupData setUdid:];
-[_TtC7iMazing10BackupData serial];
-[_TtC7iMazing10BackupData setSerial:];
-[_TtC7iMazing10BackupData osName];
-[_TtC7iMazing10BackupData setOsName:];
-[_TtC7iMazing10BackupData isiMazingBackupLocation];
-[_TtC7iMazing10BackupData setIsiMazingBackupLocation:];
-[_TtC7iMazing10BackupData isiTunesBackupLocation];
-[_TtC7iMazing10BackupData setIsiTunesBackupLocation:];
-[_TtC7iMazing10BackupData isPartialBackup];
-[_TtC7iMazing10BackupData setIsPartialBackup:];
-[_TtC7iMazing10BackupData isBlueprint];
-[_TtC7iMazing10BackupData setIsBlueprint:];
-[_TtC7iMazing10BackupData init];

@end

@interface _TtC7iMazing10DeviceItem : NSObject {
    /* instance variables */
     device;
     icon;
     title;
     isConnected;
     isPhysicalDevice;
     isiPhone;
     isiPad;
     isiPodTouch;
     isAppleWatch;
     isAppleTV;
     isiPodClassic;
     isRealityDevice;
     isHomePod;
     isWakingUp;
     hasBackup;
     hasArchives;
     diskUsage;
     batteryStatus;
     batteryPercent;
     batteryPercentInt;
     fullTextIndex;
     datasets;
     infos;
     actions;
     quickActions;
     actionsMenu;
     dateFirstBackup;
     dateLatestBackup;
     accessoryImage;
     accessoryImageTooltip;
     accessoryImageSortId;
     selectedArchive;
     backupItemData;
     sortId;
     lastConnectionTime;
     isRestorableDevice;
     wakeUpIconObserver;
     diskUsageStressTimer;
}

@property (T@"Device",N,&,Vdevice) device;
@property (T@"NSImage",N,&,Vicon) icon;
@property (T@"NSString",N,C) title;
@property (TB,N,VisConnected) isConnected;
@property (TB,N,VisPhysicalDevice) isPhysicalDevice;
@property (TB,N,VisiPhone) isiPhone;
@property (TB,N,VisiPad) isiPad;
@property (TB,N,VisiPodTouch) isiPodTouch;
@property (TB,N,VisAppleWatch) isAppleWatch;
@property (TB,N,VisAppleTV) isAppleTV;
@property (TB,N,VisiPodClassic) isiPodClassic;
@property (TB,N,VisRealityDevice) isRealityDevice;
@property (TB,N,VisHomePod) isHomePod;
@property (TB,N,VisWakingUp) isWakingUp;
@property (TB,N,VhasBackup) hasBackup;
@property (TB,N,VhasArchives) hasArchives;
@property (T@"_TtC7iMazing9DiskUsage",N,&,VdiskUsage) diskUsage;
@property (T@"_TtC7iMazing13BatteryStatus",N,&,VbatteryStatus) batteryStatus;
@property (T@"NSString",N,C) batteryPercent;
@property (Tq,N,VbatteryPercentInt) batteryPercentInt;
@property (T@"NSString",N,C) fullTextIndex;
@property (T@"NSArray",N,C) datasets;
@property (T@"NSArray",N,C) infos;
@property (T@"NSArray",N,C) actions;
@property (T@"NSArray",N,C) quickActions;
@property (T@"NSMenu",N,&,VactionsMenu) actionsMenu;
@property (T@"NSDate",N,C) dateFirstBackup;
@property (T@"NSDate",N,C) dateLatestBackup;
@property (T@"NSImage",N,&,VaccessoryImage) accessoryImage;
@property (T@"NSString",N,C) accessoryImageTooltip;
@property (Tq,N,VaccessoryImageSortId) accessoryImageSortId;
@property (T@"VersionedBackupInfo",N,&,VselectedArchive) selectedArchive;
@property (T@"_TtC7iMazing10BackupData",N,&,VbackupItemData) backupItemData;
@property (Tq,N,VsortId) sortId;
@property (Tq,N,VlastConnectionTime) lastConnectionTime;
@property (TB,N,VisRestorableDevice) isRestorableDevice;
@property (T@"NSString",N,R) description;

/* instance methods */
-[_TtC7iMazing10DeviceItem device];
-[_TtC7iMazing10DeviceItem setDevice:];
-[_TtC7iMazing10DeviceItem icon];
-[_TtC7iMazing10DeviceItem setIcon:];
-[_TtC7iMazing10DeviceItem title];
-[_TtC7iMazing10DeviceItem setTitle:];
-[_TtC7iMazing10DeviceItem isConnected];
-[_TtC7iMazing10DeviceItem setIsConnected:];
-[_TtC7iMazing10DeviceItem isPhysicalDevice];
-[_TtC7iMazing10DeviceItem setIsPhysicalDevice:];
-[_TtC7iMazing10DeviceItem isiPhone];
-[_TtC7iMazing10DeviceItem setIsiPhone:];
-[_TtC7iMazing10DeviceItem isiPad];
-[_TtC7iMazing10DeviceItem setIsiPad:];
-[_TtC7iMazing10DeviceItem isiPodTouch];
-[_TtC7iMazing10DeviceItem setIsiPodTouch:];
-[_TtC7iMazing10DeviceItem isAppleWatch];
-[_TtC7iMazing10DeviceItem setIsAppleWatch:];
-[_TtC7iMazing10DeviceItem isAppleTV];
-[_TtC7iMazing10DeviceItem setIsAppleTV:];
-[_TtC7iMazing10DeviceItem isiPodClassic];
-[_TtC7iMazing10DeviceItem setIsiPodClassic:];
-[_TtC7iMazing10DeviceItem isRealityDevice];
-[_TtC7iMazing10DeviceItem setIsRealityDevice:];
-[_TtC7iMazing10DeviceItem isHomePod];
-[_TtC7iMazing10DeviceItem setIsHomePod:];
-[_TtC7iMazing10DeviceItem isWakingUp];
-[_TtC7iMazing10DeviceItem setIsWakingUp:];
-[_TtC7iMazing10DeviceItem hasBackup];
-[_TtC7iMazing10DeviceItem setHasBackup:];
-[_TtC7iMazing10DeviceItem hasArchives];
-[_TtC7iMazing10DeviceItem setHasArchives:];
-[_TtC7iMazing10DeviceItem diskUsage];
-[_TtC7iMazing10DeviceItem setDiskUsage:];
-[_TtC7iMazing10DeviceItem batteryStatus];
-[_TtC7iMazing10DeviceItem setBatteryStatus:];
-[_TtC7iMazing10DeviceItem batteryPercent];
-[_TtC7iMazing10DeviceItem setBatteryPercent:];
-[_TtC7iMazing10DeviceItem batteryPercentInt];
-[_TtC7iMazing10DeviceItem setBatteryPercentInt:];
-[_TtC7iMazing10DeviceItem fullTextIndex];
-[_TtC7iMazing10DeviceItem setFullTextIndex:];
-[_TtC7iMazing10DeviceItem datasets];
-[_TtC7iMazing10DeviceItem setDatasets:];
-[_TtC7iMazing10DeviceItem infos];
-[_TtC7iMazing10DeviceItem setInfos:];
-[_TtC7iMazing10DeviceItem actions];
-[_TtC7iMazing10DeviceItem setActions:];
-[_TtC7iMazing10DeviceItem quickActions];
-[_TtC7iMazing10DeviceItem setQuickActions:];
-[_TtC7iMazing10DeviceItem actionsMenu];
-[_TtC7iMazing10DeviceItem setActionsMenu:];
-[_TtC7iMazing10DeviceItem dateFirstBackup];
-[_TtC7iMazing10DeviceItem setDateFirstBackup:];
-[_TtC7iMazing10DeviceItem dateLatestBackup];
-[_TtC7iMazing10DeviceItem setDateLatestBackup:];
-[_TtC7iMazing10DeviceItem accessoryImage];
-[_TtC7iMazing10DeviceItem setAccessoryImage:];
-[_TtC7iMazing10DeviceItem accessoryImageTooltip];
-[_TtC7iMazing10DeviceItem setAccessoryImageTooltip:];
-[_TtC7iMazing10DeviceItem accessoryImageSortId];
-[_TtC7iMazing10DeviceItem setAccessoryImageSortId:];
-[_TtC7iMazing10DeviceItem selectedArchive];
-[_TtC7iMazing10DeviceItem setSelectedArchive:];
-[_TtC7iMazing10DeviceItem backupItemData];
-[_TtC7iMazing10DeviceItem setBackupItemData:];
-[_TtC7iMazing10DeviceItem sortId];
-[_TtC7iMazing10DeviceItem setSortId:];
-[_TtC7iMazing10DeviceItem lastConnectionTime];
-[_TtC7iMazing10DeviceItem setLastConnectionTime:];
-[_TtC7iMazing10DeviceItem isRestorableDevice];
-[_TtC7iMazing10DeviceItem setIsRestorableDevice:];
-[_TtC7iMazing10DeviceItem diskUsageStressTest];
-[_TtC7iMazing10DeviceItem dealloc];
-[_TtC7iMazing10DeviceItem shortcutsChanged:];
-[_TtC7iMazing10DeviceItem didSelectArchive:];
-[_TtC7iMazing10DeviceItem isEqual:];
-[_TtC7iMazing10DeviceItem description];
-[_TtC7iMazing10DeviceItem matchesWithText:];
-[_TtC7iMazing10DeviceItem hasFeature:];
-[_TtC7iMazing10DeviceItem hasElement:];
-[_TtC7iMazing10DeviceItem init];

@end

@interface _TtC7iMazing10ISOCountry : NSObject {
    /* instance variables */
     name;
     isoCode;
}

@property (T@"NSString",N,C) name;
@property (T@"NSString",N,C) isoCode;
@property (T@"NSString",N,R) description;

/* class methods */
+[_TtC7iMazing10ISOCountry allCountries];
+[_TtC7iMazing10ISOCountry currentCountry];

/* instance methods */
-[_TtC7iMazing10ISOCountry name];
-[_TtC7iMazing10ISOCountry setName:];
-[_TtC7iMazing10ISOCountry isoCode];
-[_TtC7iMazing10ISOCountry setIsoCode:];
-[_TtC7iMazing10ISOCountry initWithIsoCode:];
-[_TtC7iMazing10ISOCountry description];
-[_TtC7iMazing10ISOCountry isEqual:];
-[_TtC7iMazing10ISOCountry init];

@end

@interface _TtC7iMazing10WakeUpIcon : NSObject {
    /* instance variables */
     current;
     timer;
     index;
}

@property (T@"NSImage",N,&,Vcurrent) current;

/* class methods */
+[_TtC7iMazing10WakeUpIcon shared];

/* instance methods */
-[_TtC7iMazing10WakeUpIcon current];
-[_TtC7iMazing10WakeUpIcon setCurrent:];
-[_TtC7iMazing10WakeUpIcon init];
-[_TtC7iMazing10WakeUpIcon update:];

@end

@interface _TtC7iMazing11BatteryItem : NSObject {
    /* instance variables */
     value;
     title;
}

@property (TQ,N,Vvalue) value;
@property (T@"NSString",N,R) description;

/* class methods */
+[_TtC7iMazing11BatteryItem standardItems];
+[_TtC7iMazing11BatteryItem backupOnlyIfBatteryIs];
+[_TtC7iMazing11BatteryItem backupAutomaticallyIfBatteryIs];

/* instance methods */
-[_TtC7iMazing11BatteryItem value];
-[_TtC7iMazing11BatteryItem setValue:];
-[_TtC7iMazing11BatteryItem initWithTitle:value:];
-[_TtC7iMazing11BatteryItem description];
-[_TtC7iMazing11BatteryItem init];

@end

@interface _TtC7iMazing11ISOLanguage : NSObject {
    /* instance variables */
     localisedName;
     isoCode;
}

@property (T@"NSString",N,R) localisedName;
@property (T@"NSString",N,R) isoCode;
@property (T@"NSString",N,R) description;

/* class methods */
+[_TtC7iMazing11ISOLanguage iOSSupportedLanguages];
+[_TtC7iMazing11ISOLanguage currentLanguage];

/* instance methods */
-[_TtC7iMazing11ISOLanguage localisedName];
-[_TtC7iMazing11ISOLanguage isoCode];
-[_TtC7iMazing11ISOLanguage initWithIsoCode:];
-[_TtC7iMazing11ISOLanguage description];
-[_TtC7iMazing11ISOLanguage isEqual:];
-[_TtC7iMazing11ISOLanguage init];

@end

@interface _TtC7iMazing11LaunchAgent : NSObject {
    /* instance variables */
     bundleID;
     executable;
     observations;
     plist;
     label;
     keepAlive;
     runAtLoad;
     throttleInterval;
     programArguments;
     processType;
}

@property (T@"NSString",N,C) plist;
@property (T@"NSString",N,C) label;
@property (Tq,N,VkeepAlive) keepAlive;
@property (TB,N,VrunAtLoad) runAtLoad;
@property (Tq,N,VthrottleInterval) throttleInterval;
@property (T@"NSString",N,C) programArguments;
@property (T@"NSString",N,C) processType;

/* class methods */
+[_TtC7iMazing11LaunchAgent shared];

/* instance methods */
-[_TtC7iMazing11LaunchAgent plist];
-[_TtC7iMazing11LaunchAgent setPlist:];
-[_TtC7iMazing11LaunchAgent label];
-[_TtC7iMazing11LaunchAgent setLabel:];
-[_TtC7iMazing11LaunchAgent keepAlive];
-[_TtC7iMazing11LaunchAgent setKeepAlive:];
-[_TtC7iMazing11LaunchAgent runAtLoad];
-[_TtC7iMazing11LaunchAgent setRunAtLoad:];
-[_TtC7iMazing11LaunchAgent throttleInterval];
-[_TtC7iMazing11LaunchAgent setThrottleInterval:];
-[_TtC7iMazing11LaunchAgent programArguments];
-[_TtC7iMazing11LaunchAgent setProgramArguments:];
-[_TtC7iMazing11LaunchAgent processType];
-[_TtC7iMazing11LaunchAgent setProcessType:];
-[_TtC7iMazing11LaunchAgent initWithBundle:];
-[_TtC7iMazing11LaunchAgent isRunning];
-[_TtC7iMazing11LaunchAgent start];
-[_TtC7iMazing11LaunchAgent load];
-[_TtC7iMazing11LaunchAgent unload];
-[_TtC7iMazing11LaunchAgent init];

@end

@interface _TtC7iMazing11MediaHelper : _TtCs12_SwiftObject

@end

@interface _TtC7iMazing12DockProgress : _TtCs12_SwiftObject {
    /* instance variables */
     indeterminate;
     progress;
     contentView;
     progressView;
}

/* instance methods */
-[_TtC7iMazing12DockProgress reset:];

@end

@interface _TtC7iMazing12LottieHelper : NSObject

/* class methods */
+[_TtC7iMazing12LottieHelper createLottieAnimationViewWithName:play:appearance:previousName:];
+[_TtC7iMazing12LottieHelper createLottieAnimationViewWithFilePath:loop:play:];
+[_TtC7iMazing12LottieHelper createLottieAnimationViewWithFilePath:loop:play:completion:];
+[_TtC7iMazing12LottieHelper play:loop:];
+[_TtC7iMazing12LottieHelper play:loop:completion:];
+[_TtC7iMazing12LottieHelper lottieInfoWithName:previousName:appearance:];

/* instance methods */
-[_TtC7iMazing12LottieHelper init];

@end

@interface _TtC7iMazing12MediaSymbols : _TtCs12_SwiftObject

@end

@interface _TtC7iMazing12PhotoMapView : NSView {
    /* instance variables */
     mapView;
}

@property (T@"_TtC7iMazing24ScrollingDisabledMapView",N,&,VmapView) mapView;

/* instance methods */
-[_TtC7iMazing12PhotoMapView mapView];
-[_TtC7iMazing12PhotoMapView setMapView:];
-[_TtC7iMazing12PhotoMapView initWithFrame:];
-[_TtC7iMazing12PhotoMapView initWithCoder:];

@end

@interface _TtC7iMazing12PromoService : _TtCs12_SwiftObject {
    /* instance variables */
     promoAvailable;
     checking;
     activated;
}

@end

@interface _TtC7iMazing12TrackingView : NSView {
    /* instance variables */
     onMouseEnter;
     onMouseExit;
     trackingArea;
}

/* instance methods */
-[_TtC7iMazing12TrackingView initWithFrame:];
-[_TtC7iMazing12TrackingView initWithCoder:];
-[_TtC7iMazing12TrackingView dealloc];
-[_TtC7iMazing12TrackingView updateTrackingAreas];
-[_TtC7iMazing12TrackingView mouseEntered:];
-[_TtC7iMazing12TrackingView mouseExited:];

@end

@interface _TtC7iMazing13BatteryStatus : NSObject {
    /* instance variables */
     available;
     charging;
     percent;
     info;
     health;
     maxChargePercent;
     icon;
}

@property (TB,N,Vavailable) available;
@property (TB,N,Vcharging) charging;
@property (Td,N,Vpercent) percent;
@property (T@"NSArray",N,C) info;
@property (Tq,N,Vhealth) health;
@property (Td,N,VmaxChargePercent) maxChargePercent;
@property (T@"NSImage",N,&,Vicon) icon;

/* instance methods */
-[_TtC7iMazing13BatteryStatus available];
-[_TtC7iMazing13BatteryStatus setAvailable:];
-[_TtC7iMazing13BatteryStatus charging];
-[_TtC7iMazing13BatteryStatus setCharging:];
-[_TtC7iMazing13BatteryStatus percent];
-[_TtC7iMazing13BatteryStatus setPercent:];
-[_TtC7iMazing13BatteryStatus info];
-[_TtC7iMazing13BatteryStatus setInfo:];
-[_TtC7iMazing13BatteryStatus health];
-[_TtC7iMazing13BatteryStatus setHealth:];
-[_TtC7iMazing13BatteryStatus maxChargePercent];
-[_TtC7iMazing13BatteryStatus setMaxChargePercent:];
-[_TtC7iMazing13BatteryStatus icon];
-[_TtC7iMazing13BatteryStatus setIcon:];
-[_TtC7iMazing13BatteryStatus init];

@end

@interface _TtC7iMazing13Configuration : NSObject

/* class methods */
+[_TtC7iMazing13Configuration setConfigurationForType:];

/* instance methods */
-[_TtC7iMazing13Configuration init];

@end

@interface _TtC7iMazing13DragImageView : NSImageView <NSDraggingSource> {
    /* instance variables */
     paths;
}

/* instance methods */
-[_TtC7iMazing13DragImageView mouseDown:];
-[_TtC7iMazing13DragImageView draggingSession:sourceOperationMaskForDraggingContext:];
-[_TtC7iMazing13DragImageView initWithFrame:];
-[_TtC7iMazing13DragImageView initWithCoder:];

@end

@interface _TtC7iMazing13DropSuperview : NSView {
    /* instance variables */
     _onDropHandler;
     _allowedTypes;
}

/* instance methods */
-[_TtC7iMazing13DropSuperview awakeFromNib];
-[_TtC7iMazing13DropSuperview draggingEntered:];
-[_TtC7iMazing13DropSuperview performDragOperation:];
-[_TtC7iMazing13DropSuperview initWithFrame:];
-[_TtC7iMazing13DropSuperview initWithCoder:];

@end

@interface _TtC7iMazing13OperationData : _TtCs12_SwiftObject {
    /* instance variables */
     mediaCopyOperation;
     importData;
     mediaCopyOptions;
     playlistIndex;
}

@end

@interface _TtC7iMazing13OperationIcon : NSObject {
    /* instance variables */
     didRequestDeviceImage;
     deviceIcon;
     lastImage;
     iconObserver;
}

/* class methods */
+[_TtC7iMazing13OperationIcon statusForOperation:];
+[_TtC7iMazing13OperationIcon statusColorForOperation:];

/* instance methods */
-[_TtC7iMazing13OperationIcon refreshWithItem:];
-[_TtC7iMazing13OperationIcon init];

@end

@interface _TtC7iMazing13PhotoClipView : NSClipView {
    /* instance variables */
     currentScrollPosition;
}

/* instance methods */
-[_TtC7iMazing13PhotoClipView constrainBoundsRect:];
-[_TtC7iMazing13PhotoClipView initWithFrame:];
-[_TtC7iMazing13PhotoClipView initWithCoder:];

@end

@interface _TtC7iMazing13PhotoFadeView : NSView {
    /* instance variables */
     fadeInDuration;
     fadeOutDuration;
}

@property (Td,N,VfadeInDuration) fadeInDuration;
@property (Td,N,VfadeOutDuration) fadeOutDuration;
@property (TB,N) hidden;

/* instance methods */
-[_TtC7iMazing13PhotoFadeView fadeInDuration];
-[_TtC7iMazing13PhotoFadeView setFadeInDuration:];
-[_TtC7iMazing13PhotoFadeView fadeOutDuration];
-[_TtC7iMazing13PhotoFadeView setFadeOutDuration:];
-[_TtC7iMazing13PhotoFadeView isHidden];
-[_TtC7iMazing13PhotoFadeView setHidden:];
-[_TtC7iMazing13PhotoFadeView initWithFrame:];
-[_TtC7iMazing13PhotoFadeView initWithCoder:];

@end

@interface _TtC7iMazing13QuickLookItem : NSObject <QLPreviewItem> {
    /* instance variables */
     path;
}

@property (T@"NSURL",N,R) previewItemURL;
@property (T@"NSString",N,R) previewItemTitle;

/* instance methods */
-[_TtC7iMazing13QuickLookItem initWithPath:];
-[_TtC7iMazing13QuickLookItem previewItemURL];
-[_TtC7iMazing13QuickLookItem previewItemTitle];
-[_TtC7iMazing13QuickLookItem init];

@end

@interface _TtC7iMazing14DeviceDataItem : NSCollectionViewItem {
    /* instance variables */
     shortcutMenu;
     isShortcut;
     dataset;
}

@property (T@"NSMenu",N,&,VshortcutMenu) shortcutMenu;
@property (TB,N,VisShortcut) isShortcut;
@property (T@"_TtC7iMazing7Dataset",N,&,Vdataset) dataset;

/* instance methods */
-[_TtC7iMazing14DeviceDataItem shortcutMenu];
-[_TtC7iMazing14DeviceDataItem setShortcutMenu:];
-[_TtC7iMazing14DeviceDataItem isShortcut];
-[_TtC7iMazing14DeviceDataItem setIsShortcut:];
-[_TtC7iMazing14DeviceDataItem dataset];
-[_TtC7iMazing14DeviceDataItem setDataset:];
-[_TtC7iMazing14DeviceDataItem renameShortcut:];
-[_TtC7iMazing14DeviceDataItem deleteShortcut:];
-[_TtC7iMazing14DeviceDataItem initWithNibName:bundle:];
-[_TtC7iMazing14DeviceDataItem initWithCoder:];

@end

@interface _TtC7iMazing14DeviceToolItem : NSCollectionViewItem {
    /* instance variables */
     icon;
     tooltip;
     subtitle;
     action;
}

@property (T@"NSImage",N,&,Vicon) icon;
@property (T@"NSString",N,C) tooltip;
@property (T@"NSString",N,C) subtitle;
@property (T@"DeviceAction",N,&,Vaction) action;

/* instance methods */
-[_TtC7iMazing14DeviceToolItem icon];
-[_TtC7iMazing14DeviceToolItem setIcon:];
-[_TtC7iMazing14DeviceToolItem tooltip];
-[_TtC7iMazing14DeviceToolItem setTooltip:];
-[_TtC7iMazing14DeviceToolItem subtitle];
-[_TtC7iMazing14DeviceToolItem setSubtitle:];
-[_TtC7iMazing14DeviceToolItem action];
-[_TtC7iMazing14DeviceToolItem setAction:];
-[_TtC7iMazing14DeviceToolItem initWithNibName:bundle:];
-[_TtC7iMazing14DeviceToolItem initWithCoder:];

@end

@interface _TtC7iMazing14HiddenScroller : NSScroller

/* class methods */
+[_TtC7iMazing14HiddenScroller isCompatibleWithOverlayScrollers];
+[_TtC7iMazing14HiddenScroller scrollerWidthForControlSize:scrollerStyle:];

/* instance methods */
-[_TtC7iMazing14HiddenScroller initWithFrame:];
-[_TtC7iMazing14HiddenScroller initWithCoder:];

@end

@interface _TtC7iMazing14HomeScrollView : NSScrollView

/* instance methods */
-[_TtC7iMazing14HomeScrollView scrollWheel:];
-[_TtC7iMazing14HomeScrollView initWithFrame:];
-[_TtC7iMazing14HomeScrollView initWithCoder:];

@end

@interface _TtC7iMazing14MessagesHelper : NSObject

/* class methods */
+[_TtC7iMazing14MessagesHelper buildIconsForFileType];

/* instance methods */
-[_TtC7iMazing14MessagesHelper init];

@end

@interface _TtC7iMazing14PhotoTableView : VKTableView {
    /* instance variables */
     owner;
     displayedItemsChanged;
}

/* instance methods */
-[_TtC7iMazing14PhotoTableView initWithCoder:];
-[_TtC7iMazing14PhotoTableView dealloc];
-[_TtC7iMazing14PhotoTableView onTableViewScrolling:];
-[_TtC7iMazing14PhotoTableView initWithFrame:];

@end

@interface _TtC7iMazing14RoundImageView : NSImageView {
    /* instance variables */
     radius;
}

@property (Tq,N,Vradius) radius;

/* instance methods */
-[_TtC7iMazing14RoundImageView radius];
-[_TtC7iMazing14RoundImageView setRadius:];
-[_TtC7iMazing14RoundImageView drawRect:];
-[_TtC7iMazing14RoundImageView initWithFrame:];
-[_TtC7iMazing14RoundImageView initWithCoder:];

@end

@interface _TtC7iMazing14ShowDeviceItem : NSObject {
    /* instance variables */
     device;
     show;
     cancel;
}

@property (T@"_TtC7iMazing10DeviceItem",N,&,Vdevice) device;
@property (T@?,N,C) show;
@property (T@?,N,C) cancel;

/* instance methods */
-[_TtC7iMazing14ShowDeviceItem device];
-[_TtC7iMazing14ShowDeviceItem setDevice:];
-[_TtC7iMazing14ShowDeviceItem show];
-[_TtC7iMazing14ShowDeviceItem setShow:];
-[_TtC7iMazing14ShowDeviceItem cancel];
-[_TtC7iMazing14ShowDeviceItem setCancel:];
-[_TtC7iMazing14ShowDeviceItem initWithDevice:show:cancel:];
-[_TtC7iMazing14ShowDeviceItem init];

@end

@interface _TtC7iMazing15AspectFillImage : NSImageView {
    /* instance variables */
     scaleAspectFill;
}

@property (TB,N,VscaleAspectFill) scaleAspectFill;

/* instance methods */
-[_TtC7iMazing15AspectFillImage scaleAspectFill];
-[_TtC7iMazing15AspectFillImage setScaleAspectFill:];
-[_TtC7iMazing15AspectFillImage awakeFromNib];
-[_TtC7iMazing15AspectFillImage drawRect:];
-[_TtC7iMazing15AspectFillImage initWithFrame:];
-[_TtC7iMazing15AspectFillImage initWithCoder:];

@end

@interface _TtC7iMazing15BackupsListItem : _TtC7iMazing8ListItem {
    /* instance variables */
     observer;
}

/* instance methods */
-[_TtC7iMazing15BackupsListItem init];

@end

@interface _TtC7iMazing15DatasetShortcut : _TtC7iMazing7Dataset {
    /* instance variables */
     shortcut;
}

@property (T@"Shortcut",N,&,Vshortcut) shortcut;

/* instance methods */
-[_TtC7iMazing15DatasetShortcut shortcut];
-[_TtC7iMazing15DatasetShortcut setShortcut:];
-[_TtC7iMazing15DatasetShortcut initWithName:icon:scheme:sorting:];

@end

@interface _TtC7iMazing15DevicesListItem : _TtC7iMazing8ListItem {
    /* instance variables */
     observer;
}

/* instance methods */
-[_TtC7iMazing15DevicesListItem init];

@end

@interface _TtC7iMazing15DoubleClickView : NSView {
    /* instance variables */
     onDoubleClick;
}

/* instance methods */
-[_TtC7iMazing15DoubleClickView mouseDown:];
-[_TtC7iMazing15DoubleClickView initWithFrame:];
-[_TtC7iMazing15DoubleClickView initWithCoder:];

@end

@interface _TtC7iMazing15OperationHelper : NSObject

/* class methods */
+[_TtC7iMazing15OperationHelper imageForOperation:];
+[_TtC7iMazing15OperationHelper imageForCoreOperation:];
+[_TtC7iMazing15OperationHelper imageForLegacyOperation:];
+[_TtC7iMazing15OperationHelper quickLookWithItem:];
+[_TtC7iMazing15OperationHelper openOrRevealWithItem:];
+[_TtC7iMazing15OperationHelper revealWithItem:];

/* instance methods */
-[_TtC7iMazing15OperationHelper init];

@end

@interface _TtC7iMazing15PhotoDetailView : NSView {
    /* instance variables */
     backgroundColor;
     onKeyDown;
     onKeyUp;
     didReceiveKeyDown;
}

@property (T@"NSColor",N,&,VbackgroundColor) backgroundColor;
@property (TB,N,R) acceptsFirstResponder;

/* instance methods */
-[_TtC7iMazing15PhotoDetailView backgroundColor];
-[_TtC7iMazing15PhotoDetailView setBackgroundColor:];
-[_TtC7iMazing15PhotoDetailView acceptsFirstResponder];
-[_TtC7iMazing15PhotoDetailView keyDown:];
-[_TtC7iMazing15PhotoDetailView keyUp:];
-[_TtC7iMazing15PhotoDetailView drawRect:];
-[_TtC7iMazing15PhotoDetailView initWithFrame:];
-[_TtC7iMazing15PhotoDetailView initWithCoder:];

@end

@interface _TtC7iMazing15PhotoScrollView : NSScrollView {
    /* instance variables */
     scrollPosition;
     mandatoryPosition;
}

/* instance methods */
-[_TtC7iMazing15PhotoScrollView initWithFrame:];
-[_TtC7iMazing15PhotoScrollView initWithCoder:];

@end

@interface _TtC7iMazing15PreferencesItem : NSObject <VKDisplayable> {
    /* instance variables */
     title;
     subtitle;
     icon;
     selectedIcon;
     accessoryIcon;
     accessoryText;
     controller;
     status;
     showStatusIcon;
}

@property (T@"NSString",N,C) title;
@property (T@"NSString",N,C) subtitle;
@property (T@"NSImage",N,&,Vicon) icon;
@property (T@"NSImage",N,&,VselectedIcon) selectedIcon;
@property (T@"NSImage",N,&,VaccessoryIcon) accessoryIcon;
@property (T@"NSString",N,C) accessoryText;
@property (T@"NSViewController",N,&,Vcontroller) controller;
@property (Tq,N,Vstatus) status;
@property (TB,N,VshowStatusIcon) showStatusIcon;

/* instance methods */
-[_TtC7iMazing15PreferencesItem title];
-[_TtC7iMazing15PreferencesItem setTitle:];
-[_TtC7iMazing15PreferencesItem subtitle];
-[_TtC7iMazing15PreferencesItem setSubtitle:];
-[_TtC7iMazing15PreferencesItem icon];
-[_TtC7iMazing15PreferencesItem setIcon:];
-[_TtC7iMazing15PreferencesItem selectedIcon];
-[_TtC7iMazing15PreferencesItem setSelectedIcon:];
-[_TtC7iMazing15PreferencesItem accessoryIcon];
-[_TtC7iMazing15PreferencesItem setAccessoryIcon:];
-[_TtC7iMazing15PreferencesItem accessoryText];
-[_TtC7iMazing15PreferencesItem setAccessoryText:];
-[_TtC7iMazing15PreferencesItem controller];
-[_TtC7iMazing15PreferencesItem setController:];
-[_TtC7iMazing15PreferencesItem status];
-[_TtC7iMazing15PreferencesItem setStatus:];
-[_TtC7iMazing15PreferencesItem showStatusIcon];
-[_TtC7iMazing15PreferencesItem setShowStatusIcon:];
-[_TtC7iMazing15PreferencesItem initWithTitle:icon:controller:];
-[_TtC7iMazing15PreferencesItem init];

@end

@interface _TtC7iMazing15QuickLookHelper : NSObject <QLPreviewPanelDataSource> {
    /* instance variables */
     operationInfos;
     pathInfos;
     previewItems;
     loading;
     quickLookOperation;
     operationStartObserver;
     operationProgressObserver;
     operationEndObserver;
}

/* class methods */
+[_TtC7iMazing15QuickLookHelper shared];

/* instance methods */
-[_TtC7iMazing15QuickLookHelper init];
-[_TtC7iMazing15QuickLookHelper dealloc];
-[_TtC7iMazing15QuickLookHelper showQuickLookPanelForPath:sender:];
-[_TtC7iMazing15QuickLookHelper showQuickLookPanelForPaths:sender:];
-[_TtC7iMazing15QuickLookHelper showLoadingQuickLookPanel:];
-[_TtC7iMazing15QuickLookHelper acceptsPreviewPanelControl:];
-[_TtC7iMazing15QuickLookHelper beginPreviewPanelControl:];
-[_TtC7iMazing15QuickLookHelper endPreviewPanelControl:];
-[_TtC7iMazing15QuickLookHelper showQuickLookPanelForOpenOperation:stopOnPanelClose:];
-[_TtC7iMazing15QuickLookHelper showQuickLookPanelForStorageItem:stopOnPanelClose:];
-[_TtC7iMazing15QuickLookHelper showQuickLookPanelForStorageItem:stopOnPanelClose:monitorFileChanges:];
-[_TtC7iMazing15QuickLookHelper showQuickLookPanelForStorageItems:stopOnPanelClose:];
-[_TtC7iMazing15QuickLookHelper showQuickLookPanelForStorageItems:stopOnPanelClose:monitorFileChanges:];
-[_TtC7iMazing15QuickLookHelper openStorageItem:];
-[_TtC7iMazing15QuickLookHelper openStorageItem:monitorFileChanges:];
-[_TtC7iMazing15QuickLookHelper openStorageItem:withApplication:];
-[_TtC7iMazing15QuickLookHelper openStorageItem:withApplication:monitorFileChanges:];
-[_TtC7iMazing15QuickLookHelper openFilesForOperation:];
-[_TtC7iMazing15QuickLookHelper openFilesForOperation:withApplication:];
-[_TtC7iMazing15QuickLookHelper numberOfPreviewItemsInPreviewPanel:];
-[_TtC7iMazing15QuickLookHelper previewPanel:previewItemAtIndex:];
-[_TtC7iMazing15QuickLookHelper handleFSMonitorNotification:];
-[_TtC7iMazing15QuickLookHelper operationStartedWithItem:];
-[_TtC7iMazing15QuickLookHelper operationProgressWithItem:];
-[_TtC7iMazing15QuickLookHelper operationEndedWithItem:];

@end

@interface _TtC7iMazing15UINotifications : NSObject {
    /* instance variables */
     observers;
}

/* class methods */
+[_TtC7iMazing15UINotifications startObserving];
+[_TtC7iMazing15UINotifications stopObserving];
+[_TtC7iMazing15UINotifications registerFor:owner:with:];
+[_TtC7iMazing15UINotifications unregisterFor:owner:];

/* instance methods */
-[_TtC7iMazing15UINotifications handleNotification:];
-[_TtC7iMazing15UINotifications init];
-[_TtC7iMazing15UINotifications handleUINotification:];

@end

@interface _TtC7iMazing15iOSAppItemCache : _TtCs12_SwiftObject

@end

@interface _TtC7iMazing16BlueprintSection : NSObject {
    /* instance variables */
     icon;
     title;
     info;
     badgeValue;
     badgeString;
     showCount;
     showWarning;
     sectionController;
     blueprint;
     vcGen;
}

@property (T@"NSImage",N,R,Vicon) icon;
@property (T@"NSString",N,R) title;
@property (T@"NSString",N,C) info;
@property (Tq,N,VbadgeValue) badgeValue;
@property (T@"NSString",N,C) badgeString;
@property (TB,N,VshowCount) showCount;
@property (TB,N,VshowWarning) showWarning;

/* instance methods */
-[_TtC7iMazing16BlueprintSection icon];
-[_TtC7iMazing16BlueprintSection title];
-[_TtC7iMazing16BlueprintSection info];
-[_TtC7iMazing16BlueprintSection setInfo:];
-[_TtC7iMazing16BlueprintSection badgeValue];
-[_TtC7iMazing16BlueprintSection setBadgeValue:];
-[_TtC7iMazing16BlueprintSection badgeString];
-[_TtC7iMazing16BlueprintSection setBadgeString:];
-[_TtC7iMazing16BlueprintSection showCount];
-[_TtC7iMazing16BlueprintSection setShowCount:];
-[_TtC7iMazing16BlueprintSection showWarning];
-[_TtC7iMazing16BlueprintSection setShowWarning:];
-[_TtC7iMazing16BlueprintSection init];

@end

@interface _TtC7iMazing16DeviceActionMenu : NSMenu <NSTextFieldDelegate, NSMenuDelegate> {
    /* instance variables */
     searchItem;
     searchField;
     item;
     datasetControllers;
     itemsGenerator;
     onMenuWillOpen;
     onMenuDidClose;
}

/* instance methods */
-[_TtC7iMazing16DeviceActionMenu initWithCoder:];
-[_TtC7iMazing16DeviceActionMenu controlTextDidChange:];
-[_TtC7iMazing16DeviceActionMenu menuWillOpen:];
-[_TtC7iMazing16DeviceActionMenu menuDidClose:];
-[_TtC7iMazing16DeviceActionMenu showDataset:];
-[_TtC7iMazing16DeviceActionMenu initWithTitle:];

@end

@interface _TtC7iMazing16DockProgressView : NSView {
    /* instance variables */
     progress;
     indeterminate;
}

@property (Td,N,Vprogress) progress;
@property (TB,N,Vindeterminate) indeterminate;

/* instance methods */
-[_TtC7iMazing16DockProgressView progress];
-[_TtC7iMazing16DockProgressView setProgress:];
-[_TtC7iMazing16DockProgressView indeterminate];
-[_TtC7iMazing16DockProgressView setIndeterminate:];
-[_TtC7iMazing16DockProgressView drawRect:];
-[_TtC7iMazing16DockProgressView initWithFrame:];
-[_TtC7iMazing16DockProgressView initWithCoder:];

@end

@interface _TtC7iMazing16FileDraggingView : VKFileDropView {
    /* instance variables */
     drawBorder;
     borderRadius;
}

@property (Tq,N,VborderRadius) borderRadius;

/* instance methods */
-[_TtC7iMazing16FileDraggingView borderRadius];
-[_TtC7iMazing16FileDraggingView setBorderRadius:];
-[_TtC7iMazing16FileDraggingView drawRect:];
-[_TtC7iMazing16FileDraggingView initWithFrame:];
-[_TtC7iMazing16FileDraggingView initWithCoder:];

@end

@interface _TtC7iMazing16HomeDiscoverItem : NSObject {
    /* instance variables */
     title;
     text;
     icon;
     action;
     customAction;
     enabled;
}

@property (T@"NSString",N,C) title;
@property (T@"NSString",N,C) text;
@property (T@"NSImage",N,&,Vicon) icon;
@property (T@?,N,C) action;
@property (T@?,N,C) customAction;
@property (TB,N,Venabled) enabled;

/* instance methods */
-[_TtC7iMazing16HomeDiscoverItem title];
-[_TtC7iMazing16HomeDiscoverItem setTitle:];
-[_TtC7iMazing16HomeDiscoverItem text];
-[_TtC7iMazing16HomeDiscoverItem setText:];
-[_TtC7iMazing16HomeDiscoverItem icon];
-[_TtC7iMazing16HomeDiscoverItem setIcon:];
-[_TtC7iMazing16HomeDiscoverItem action];
-[_TtC7iMazing16HomeDiscoverItem setAction:];
-[_TtC7iMazing16HomeDiscoverItem customAction];
-[_TtC7iMazing16HomeDiscoverItem setCustomAction:];
-[_TtC7iMazing16HomeDiscoverItem enabled];
-[_TtC7iMazing16HomeDiscoverItem setEnabled:];
-[_TtC7iMazing16HomeDiscoverItem initWithTitle:text:icon:action:];
-[_TtC7iMazing16HomeDiscoverItem initWithTitle:text:icon:enabled:action:];
-[_TtC7iMazing16HomeDiscoverItem initWithTitle:text:icon:customAction:];
-[_TtC7iMazing16HomeDiscoverItem initWithTitle:text:icon:enabled:customAction:];
-[_TtC7iMazing16HomeDiscoverItem init];

@end

@interface _TtC7iMazing16InteractionAlert : NSObject {
    /* instance variables */
     controller;
     alert;
     data;
     autoDismissTimer;
     autoDismissLock;
     wasAutoDismissed;
}

/* instance methods */
-[_TtC7iMazing16InteractionAlert initWithData:];
-[_TtC7iMazing16InteractionAlert show:];
-[_TtC7iMazing16InteractionAlert dismissDialog];
-[_TtC7iMazing16InteractionAlert checkAutoDismiss:];
-[_TtC7iMazing16InteractionAlert init];

@end

@interface _TtC7iMazing16MapViewContainer : NSView

/* instance methods */
-[_TtC7iMazing16MapViewContainer initWithFrame:];
-[_TtC7iMazing16MapViewContainer initWithCoder:];

@end

@interface _TtC7iMazing16MediaCopyOptions : _TtCs12_SwiftObject {
    /* instance variables */
     copyType;
     importOptions;
     createPlaylists;
     tracksToCopy;
     processedTracks;
     selectedPlaylist;
     iTunesMediaFolder;
     scriptPath;
     iTunesLibraryPath;
}

@end

@interface _TtC7iMazing16MediaSidebarItem : NSObject {
    /* instance variables */
     title;
     icon;
     isSection;
     allowEdit;
     isEditable;
     allowCreatePlaylistsOnExport;
     canCollapse;
     canPlay;
     children;
     controller;
}

@property (T@"NSString",N,C) title;
@property (T@"NSImage",N,&,Vicon) icon;
@property (TB,N,VisSection) isSection;
@property (TB,N,VallowEdit) allowEdit;
@property (TB,N,VisEditable) isEditable;
@property (TB,N,VallowCreatePlaylistsOnExport) allowCreatePlaylistsOnExport;
@property (TB,N,VcanCollapse) canCollapse;
@property (TB,N,VcanPlay) canPlay;
@property (T@"NSArray",N,C) children;
@property (T@"_TtC7iMazing27MediaBaseListViewController",N,&,Vcontroller) controller;

/* instance methods */
-[_TtC7iMazing16MediaSidebarItem title];
-[_TtC7iMazing16MediaSidebarItem setTitle:];
-[_TtC7iMazing16MediaSidebarItem icon];
-[_TtC7iMazing16MediaSidebarItem setIcon:];
-[_TtC7iMazing16MediaSidebarItem isSection];
-[_TtC7iMazing16MediaSidebarItem setIsSection:];
-[_TtC7iMazing16MediaSidebarItem allowEdit];
-[_TtC7iMazing16MediaSidebarItem setAllowEdit:];
-[_TtC7iMazing16MediaSidebarItem isEditable];
-[_TtC7iMazing16MediaSidebarItem setIsEditable:];
-[_TtC7iMazing16MediaSidebarItem allowCreatePlaylistsOnExport];
-[_TtC7iMazing16MediaSidebarItem setAllowCreatePlaylistsOnExport:];
-[_TtC7iMazing16MediaSidebarItem canCollapse];
-[_TtC7iMazing16MediaSidebarItem setCanCollapse:];
-[_TtC7iMazing16MediaSidebarItem canPlay];
-[_TtC7iMazing16MediaSidebarItem setCanPlay:];
-[_TtC7iMazing16MediaSidebarItem children];
-[_TtC7iMazing16MediaSidebarItem setChildren:];
-[_TtC7iMazing16MediaSidebarItem controller];
-[_TtC7iMazing16MediaSidebarItem setController:];
-[_TtC7iMazing16MediaSidebarItem init];

@end

@interface _TtC7iMazing16OutlineBadgeView : NSView

/* instance methods */
-[_TtC7iMazing16OutlineBadgeView drawRect:];
-[_TtC7iMazing16OutlineBadgeView initWithFrame:];
-[_TtC7iMazing16OutlineBadgeView initWithCoder:];

@end

@interface _TtC7iMazing16PDFPaperSettings : NSObject {
    /* instance variables */
     width;
     height;
     topMargin;
     bottomMargin;
     leftMargin;
     rightMargin;
     scale;
     addChatName;
     addPageNumbers;
     addMetadata;
     printerName;
     paperName;
}

@property (Tq,N,Vwidth) width;
@property (Tq,N,Vheight) height;
@property (Tq,N,VtopMargin) topMargin;
@property (Tq,N,VbottomMargin) bottomMargin;
@property (Tq,N,VleftMargin) leftMargin;
@property (Tq,N,VrightMargin) rightMargin;
@property (Tq,N,Vscale) scale;
@property (TB,N,VaddChatName) addChatName;
@property (TB,N,VaddPageNumbers) addPageNumbers;
@property (TB,N,VaddMetadata) addMetadata;
@property (T@"NSString",N,C) printerName;
@property (T@"NSString",N,C) paperName;

/* instance methods */
-[_TtC7iMazing16PDFPaperSettings width];
-[_TtC7iMazing16PDFPaperSettings setWidth:];
-[_TtC7iMazing16PDFPaperSettings height];
-[_TtC7iMazing16PDFPaperSettings setHeight:];
-[_TtC7iMazing16PDFPaperSettings topMargin];
-[_TtC7iMazing16PDFPaperSettings setTopMargin:];
-[_TtC7iMazing16PDFPaperSettings bottomMargin];
-[_TtC7iMazing16PDFPaperSettings setBottomMargin:];
-[_TtC7iMazing16PDFPaperSettings leftMargin];
-[_TtC7iMazing16PDFPaperSettings setLeftMargin:];
-[_TtC7iMazing16PDFPaperSettings rightMargin];
-[_TtC7iMazing16PDFPaperSettings setRightMargin:];
-[_TtC7iMazing16PDFPaperSettings scale];
-[_TtC7iMazing16PDFPaperSettings setScale:];
-[_TtC7iMazing16PDFPaperSettings addChatName];
-[_TtC7iMazing16PDFPaperSettings setAddChatName:];
-[_TtC7iMazing16PDFPaperSettings addPageNumbers];
-[_TtC7iMazing16PDFPaperSettings setAddPageNumbers:];
-[_TtC7iMazing16PDFPaperSettings addMetadata];
-[_TtC7iMazing16PDFPaperSettings setAddMetadata:];
-[_TtC7iMazing16PDFPaperSettings printerName];
-[_TtC7iMazing16PDFPaperSettings setPrinterName:];
-[_TtC7iMazing16PDFPaperSettings paperName];
-[_TtC7iMazing16PDFPaperSettings setPaperName:];
-[_TtC7iMazing16PDFPaperSettings init];

@end

@interface _TtC7iMazing16PhotoOpacityView : NSView {
    /* instance variables */
     alpha;
     topLeftRadius;
     isAwake;
}

@property (Td,N,Valpha) alpha;
@property (Td,N,VtopLeftRadius) topLeftRadius;

/* instance methods */
-[_TtC7iMazing16PhotoOpacityView alpha];
-[_TtC7iMazing16PhotoOpacityView setAlpha:];
-[_TtC7iMazing16PhotoOpacityView topLeftRadius];
-[_TtC7iMazing16PhotoOpacityView setTopLeftRadius:];
-[_TtC7iMazing16PhotoOpacityView awakeFromNib];
-[_TtC7iMazing16PhotoOpacityView drawRect:];
-[_TtC7iMazing16PhotoOpacityView initWithFrame:];
-[_TtC7iMazing16PhotoOpacityView initWithCoder:];

@end

@interface _TtC7iMazing17BackupHistoryItem : NSObject {
    /* instance variables */
     info;
     manager;
     icon;
     title;
     subtitle;
     isEncrypted;
     isCurrentBackup;
     isActiveVersion;
     size;
     label;
     doNotDelete;
}

@property (T@"VersionedBackupInfo",N,&,Vinfo) info;
@property (T@"NSImage",N,&,Vicon) icon;
@property (T@"NSString",N,C) title;
@property (T@"NSString",N,C) subtitle;
@property (TB,N,VisEncrypted) isEncrypted;
@property (TB,N,VisCurrentBackup) isCurrentBackup;
@property (TB,N,VisActiveVersion) isActiveVersion;
@property (TQ,N,Vsize) size;
@property (T@"NSString",N,C) label;
@property (TB,N,VdoNotDelete) doNotDelete;
@property (T@"iOSDevice",N,R) archiveDevice;

/* instance methods */
-[_TtC7iMazing17BackupHistoryItem info];
-[_TtC7iMazing17BackupHistoryItem setInfo:];
-[_TtC7iMazing17BackupHistoryItem icon];
-[_TtC7iMazing17BackupHistoryItem setIcon:];
-[_TtC7iMazing17BackupHistoryItem title];
-[_TtC7iMazing17BackupHistoryItem setTitle:];
-[_TtC7iMazing17BackupHistoryItem subtitle];
-[_TtC7iMazing17BackupHistoryItem setSubtitle:];
-[_TtC7iMazing17BackupHistoryItem isEncrypted];
-[_TtC7iMazing17BackupHistoryItem setIsEncrypted:];
-[_TtC7iMazing17BackupHistoryItem isCurrentBackup];
-[_TtC7iMazing17BackupHistoryItem setIsCurrentBackup:];
-[_TtC7iMazing17BackupHistoryItem isActiveVersion];
-[_TtC7iMazing17BackupHistoryItem setIsActiveVersion:];
-[_TtC7iMazing17BackupHistoryItem size];
-[_TtC7iMazing17BackupHistoryItem setSize:];
-[_TtC7iMazing17BackupHistoryItem label];
-[_TtC7iMazing17BackupHistoryItem setLabel:];
-[_TtC7iMazing17BackupHistoryItem doNotDelete];
-[_TtC7iMazing17BackupHistoryItem setDoNotDelete:];
-[_TtC7iMazing17BackupHistoryItem archiveDevice];
-[_TtC7iMazing17BackupHistoryItem initWithInfo:device:manager:];
-[_TtC7iMazing17BackupHistoryItem makeEditable:];
-[_TtC7iMazing17BackupHistoryItem revealInFinder:];
-[_TtC7iMazing17BackupHistoryItem exportAsFolder:];
-[_TtC7iMazing17BackupHistoryItem exportAsIMazingFile:];
-[_TtC7iMazing17BackupHistoryItem editLabel:];
-[_TtC7iMazing17BackupHistoryItem representsVersion:];
-[_TtC7iMazing17BackupHistoryItem isEqualTo:];
-[_TtC7iMazing17BackupHistoryItem isEqual:];
-[_TtC7iMazing17BackupHistoryItem init];

@end

@interface _TtC7iMazing17BatteryHealthView : NSView {
    /* instance variables */
     style;
}

@property (Tq,N,Vstyle) style;

/* instance methods */
-[_TtC7iMazing17BatteryHealthView style];
-[_TtC7iMazing17BatteryHealthView setStyle:];
-[_TtC7iMazing17BatteryHealthView drawRect:];
-[_TtC7iMazing17BatteryHealthView initWithFrame:];
-[_TtC7iMazing17BatteryHealthView initWithCoder:];

@end

@interface _TtC7iMazing17CertificateHelper : NSObject

/* class methods */
+[_TtC7iMazing17CertificateHelper showCertificatesPanel:asSheetOn:];
+[_TtC7iMazing17CertificateHelper showCertificatePanelForOrg:asSheetOn:];

/* instance methods */
-[_TtC7iMazing17CertificateHelper init];

@end

@interface _TtC7iMazing17ChoosePopupButton : VKPopUpButton <NSMenuDelegate> {
    /* instance variables */
     chooseHandler;
     chooseItemTitle;
     noSelectionLabel;
     removeLabel;
}

@property (TB,N) large;

/* instance methods */
-[_TtC7iMazing17ChoosePopupButton large];
-[_TtC7iMazing17ChoosePopupButton setLarge:];
-[_TtC7iMazing17ChoosePopupButton awakeFromNib];
-[_TtC7iMazing17ChoosePopupButton didSelectItem:];
-[_TtC7iMazing17ChoosePopupButton menuWillOpen:];
-[_TtC7iMazing17ChoosePopupButton initWithFrame:pullsDown:];
-[_TtC7iMazing17ChoosePopupButton initWithFrame:];
-[_TtC7iMazing17ChoosePopupButton initWithCoder:];

@end

@interface _TtC7iMazing17CoreOperationItem : NSObject <_TtP7iMazing13OperationItem_> {
    /* instance variables */
     operation;
     operationUuid;
     operationIcon;
     title;
     message;
     icon;
     progress;
     destinationPath;
     destinationFileType;
     destinationFilenames;
     animate;
     indeterminate;
     paused;
     running;
     stopped;
     hidden;
     hasFiles;
     notifyOnStart;
     totalItems;
     sortingDate;
     statusIcon;
     statusColor;
     wizardImageName;
}

@property (T@"NSString",N,C) title;
@property (T@"NSString",N,C) message;
@property (T@"NSImage",N,&,Vicon) icon;
@property (Td,N,Vprogress) progress;
@property (T@"NSString",N,C) destinationPath;
@property (T@"NSString",N,C) destinationFileType;
@property (T@"NSArray",N,C) destinationFilenames;
@property (TB,N,Vanimate) animate;
@property (TB,N,Vindeterminate) indeterminate;
@property (TB,N,Vpaused) paused;
@property (TB,N,Vrunning) running;
@property (TB,N,Vstopped) stopped;
@property (TB,N,Vhidden) hidden;
@property (TB,N,VhasFiles) hasFiles;
@property (TB,N,VnotifyOnStart) notifyOnStart;
@property (TQ,N,VtotalItems) totalItems;
@property (T@"NSDate",N,C) sortingDate;
@property (T@"NSImage",N,&,VstatusIcon) statusIcon;
@property (TQ,N,VstatusColor) statusColor;
@property (T@"NSString",N,C) wizardImageName;
@property (T@"NSObject",N,R) representedObject;
@property (T@"NSString",N,R) deviceUID;
@property (T@"NSString",N,R) deviceUDID;

/* instance methods */
-[_TtC7iMazing17CoreOperationItem title];
-[_TtC7iMazing17CoreOperationItem setTitle:];
-[_TtC7iMazing17CoreOperationItem message];
-[_TtC7iMazing17CoreOperationItem setMessage:];
-[_TtC7iMazing17CoreOperationItem icon];
-[_TtC7iMazing17CoreOperationItem setIcon:];
-[_TtC7iMazing17CoreOperationItem progress];
-[_TtC7iMazing17CoreOperationItem setProgress:];
-[_TtC7iMazing17CoreOperationItem destinationPath];
-[_TtC7iMazing17CoreOperationItem setDestinationPath:];
-[_TtC7iMazing17CoreOperationItem destinationFileType];
-[_TtC7iMazing17CoreOperationItem setDestinationFileType:];
-[_TtC7iMazing17CoreOperationItem destinationFilenames];
-[_TtC7iMazing17CoreOperationItem setDestinationFilenames:];
-[_TtC7iMazing17CoreOperationItem animate];
-[_TtC7iMazing17CoreOperationItem setAnimate:];
-[_TtC7iMazing17CoreOperationItem indeterminate];
-[_TtC7iMazing17CoreOperationItem setIndeterminate:];
-[_TtC7iMazing17CoreOperationItem paused];
-[_TtC7iMazing17CoreOperationItem setPaused:];
-[_TtC7iMazing17CoreOperationItem running];
-[_TtC7iMazing17CoreOperationItem setRunning:];
-[_TtC7iMazing17CoreOperationItem stopped];
-[_TtC7iMazing17CoreOperationItem setStopped:];
-[_TtC7iMazing17CoreOperationItem hidden];
-[_TtC7iMazing17CoreOperationItem setHidden:];
-[_TtC7iMazing17CoreOperationItem hasFiles];
-[_TtC7iMazing17CoreOperationItem setHasFiles:];
-[_TtC7iMazing17CoreOperationItem notifyOnStart];
-[_TtC7iMazing17CoreOperationItem setNotifyOnStart:];
-[_TtC7iMazing17CoreOperationItem totalItems];
-[_TtC7iMazing17CoreOperationItem setTotalItems:];
-[_TtC7iMazing17CoreOperationItem sortingDate];
-[_TtC7iMazing17CoreOperationItem setSortingDate:];
-[_TtC7iMazing17CoreOperationItem statusIcon];
-[_TtC7iMazing17CoreOperationItem setStatusIcon:];
-[_TtC7iMazing17CoreOperationItem statusColor];
-[_TtC7iMazing17CoreOperationItem setStatusColor:];
-[_TtC7iMazing17CoreOperationItem wizardImageName];
-[_TtC7iMazing17CoreOperationItem setWizardImageName:];
-[_TtC7iMazing17CoreOperationItem representedObject];
-[_TtC7iMazing17CoreOperationItem deviceUID];
-[_TtC7iMazing17CoreOperationItem deviceUDID];
-[_TtC7iMazing17CoreOperationItem initWithOperation:];
-[_TtC7iMazing17CoreOperationItem refresh];
-[_TtC7iMazing17CoreOperationItem stop];
-[_TtC7iMazing17CoreOperationItem pause];
-[_TtC7iMazing17CoreOperationItem resume];
-[_TtC7iMazing17CoreOperationItem releaseOperation];
-[_TtC7iMazing17CoreOperationItem isEqual:];
-[_TtC7iMazing17CoreOperationItem isEqualTo:];
-[_TtC7iMazing17CoreOperationItem init];

@end

@interface _TtC7iMazing17DeviceSettingItem : NSObject <VKDisplayable> {
    /* instance variables */
     title;
     subtitle;
     icon;
     selectedIcon;
     accessoryIcon;
     accessoryText;
     controller;
     status;
     showStatusIcon;
}

@property (T@"NSString",N,C) title;
@property (T@"NSString",N,C) subtitle;
@property (T@"NSImage",N,&,Vicon) icon;
@property (T@"NSImage",N,&,VselectedIcon) selectedIcon;
@property (T@"NSImage",N,&,VaccessoryIcon) accessoryIcon;
@property (T@"NSString",N,C) accessoryText;
@property (T@"NSViewController",N,&,Vcontroller) controller;
@property (Tq,N,Vstatus) status;
@property (TB,N,VshowStatusIcon) showStatusIcon;

/* instance methods */
-[_TtC7iMazing17DeviceSettingItem title];
-[_TtC7iMazing17DeviceSettingItem setTitle:];
-[_TtC7iMazing17DeviceSettingItem subtitle];
-[_TtC7iMazing17DeviceSettingItem setSubtitle:];
-[_TtC7iMazing17DeviceSettingItem icon];
-[_TtC7iMazing17DeviceSettingItem setIcon:];
-[_TtC7iMazing17DeviceSettingItem selectedIcon];
-[_TtC7iMazing17DeviceSettingItem setSelectedIcon:];
-[_TtC7iMazing17DeviceSettingItem accessoryIcon];
-[_TtC7iMazing17DeviceSettingItem setAccessoryIcon:];
-[_TtC7iMazing17DeviceSettingItem accessoryText];
-[_TtC7iMazing17DeviceSettingItem setAccessoryText:];
-[_TtC7iMazing17DeviceSettingItem controller];
-[_TtC7iMazing17DeviceSettingItem setController:];
-[_TtC7iMazing17DeviceSettingItem status];
-[_TtC7iMazing17DeviceSettingItem setStatus:];
-[_TtC7iMazing17DeviceSettingItem showStatusIcon];
-[_TtC7iMazing17DeviceSettingItem setShowStatusIcon:];
-[_TtC7iMazing17DeviceSettingItem initWithTitle:icon:controller:];
-[_TtC7iMazing17DeviceSettingItem init];

@end

@interface _TtC7iMazing17DiscreetSplitView : NSSplitView

/* instance methods */
-[_TtC7iMazing17DiscreetSplitView drawDividerInRect:];
-[_TtC7iMazing17DiscreetSplitView initWithFrame:];
-[_TtC7iMazing17DiscreetSplitView initWithCoder:];

@end

@interface _TtC7iMazing17DragImageViewItem : NSObject <NSPasteboardWriting> {
    /* instance variables */
     path;
}

@property (T@"NSString",N,C) path;

/* instance methods */
-[_TtC7iMazing17DragImageViewItem path];
-[_TtC7iMazing17DragImageViewItem setPath:];
-[_TtC7iMazing17DragImageViewItem writableTypesForPasteboard:];
-[_TtC7iMazing17DragImageViewItem pasteboardPropertyListForType:];
-[_TtC7iMazing17DragImageViewItem init];

@end

@interface _TtC7iMazing17GenericScreenItem : NSObject {
    /* instance variables */
     onExpand;
     onCancel;
     onDone;
     timer;
     lastImageName;
     data;
     title;
     message;
     image;
     imageName;
     device;
     deviceName;
     deviceDescription;
     deviceIcon;
     canExpand;
     hasBeenCancelled;
     isDone;
     isTemporary;
     cancelLabel;
     userInfo;
     onImageChange;
}

@property (T@"NSString",N,C) title;
@property (T@"NSString",N,C) message;
@property (T@"NSImage",N,&,Vimage) image;
@property (T@"NSString",N,C) imageName;
@property (T@"Device",N,&,Vdevice) device;
@property (T@"NSString",N,C) deviceName;
@property (T@"NSString",N,C) deviceDescription;
@property (T@"NSImage",N,&,VdeviceIcon) deviceIcon;
@property (TB,N,VcanExpand) canExpand;
@property (TB,N,VhasBeenCancelled) hasBeenCancelled;
@property (TB,N,VisDone) isDone;
@property (TB,N,VisTemporary) isTemporary;
@property (T@"NSString",N,C) cancelLabel;

/* instance methods */
-[_TtC7iMazing17GenericScreenItem title];
-[_TtC7iMazing17GenericScreenItem setTitle:];
-[_TtC7iMazing17GenericScreenItem message];
-[_TtC7iMazing17GenericScreenItem setMessage:];
-[_TtC7iMazing17GenericScreenItem image];
-[_TtC7iMazing17GenericScreenItem setImage:];
-[_TtC7iMazing17GenericScreenItem imageName];
-[_TtC7iMazing17GenericScreenItem setImageName:];
-[_TtC7iMazing17GenericScreenItem device];
-[_TtC7iMazing17GenericScreenItem setDevice:];
-[_TtC7iMazing17GenericScreenItem deviceName];
-[_TtC7iMazing17GenericScreenItem setDeviceName:];
-[_TtC7iMazing17GenericScreenItem deviceDescription];
-[_TtC7iMazing17GenericScreenItem setDeviceDescription:];
-[_TtC7iMazing17GenericScreenItem deviceIcon];
-[_TtC7iMazing17GenericScreenItem setDeviceIcon:];
-[_TtC7iMazing17GenericScreenItem canExpand];
-[_TtC7iMazing17GenericScreenItem setCanExpand:];
-[_TtC7iMazing17GenericScreenItem hasBeenCancelled];
-[_TtC7iMazing17GenericScreenItem setHasBeenCancelled:];
-[_TtC7iMazing17GenericScreenItem isDone];
-[_TtC7iMazing17GenericScreenItem setIsDone:];
-[_TtC7iMazing17GenericScreenItem isTemporary];
-[_TtC7iMazing17GenericScreenItem setIsTemporary:];
-[_TtC7iMazing17GenericScreenItem cancelLabel];
-[_TtC7iMazing17GenericScreenItem setCancelLabel:];
-[_TtC7iMazing17GenericScreenItem dealloc];
-[_TtC7iMazing17GenericScreenItem expand];
-[_TtC7iMazing17GenericScreenItem autoDismiss];
-[_TtC7iMazing17GenericScreenItem cancel];
-[_TtC7iMazing17GenericScreenItem done];
-[_TtC7iMazing17GenericScreenItem init];

@end

@interface _TtC7iMazing17HomeTableCellView : NSTableCellView

@property (T@"NSMenu",N,&) menu;

/* instance methods */
-[_TtC7iMazing17HomeTableCellView menu];
-[_TtC7iMazing17HomeTableCellView setMenu:];
-[_TtC7iMazing17HomeTableCellView initWithFrame:];
-[_TtC7iMazing17HomeTableCellView initWithCoder:];

@end

@interface _TtC7iMazing17MessageBubbleView : NSView {
    /* instance variables */
     leftTail;
     rightTail;
}

@property (TB,N,VleftTail) leftTail;
@property (TB,N,VrightTail) rightTail;

/* instance methods */
-[_TtC7iMazing17MessageBubbleView leftTail];
-[_TtC7iMazing17MessageBubbleView setLeftTail:];
-[_TtC7iMazing17MessageBubbleView rightTail];
-[_TtC7iMazing17MessageBubbleView setRightTail:];
-[_TtC7iMazing17MessageBubbleView drawRect:];
-[_TtC7iMazing17MessageBubbleView initWithFrame:];
-[_TtC7iMazing17MessageBubbleView initWithCoder:];

@end

@interface _TtC7iMazing17OperationObserver : NSObject {
    /* instance variables */
     onOperationStart;
     onOperationProgress;
     onOperationEnd;
     allItems;
     items;
     numberOfRunningOperations;
     coreOperationGlobalObserver;
     refreshTimer;
     needRefresh;
     extraItems;
}

@property (T@"NSArray",N,C) allItems;
@property (T@"NSArray",N,C) items;
@property (Tq,N,VnumberOfRunningOperations) numberOfRunningOperations;

/* class methods */
+[_TtC7iMazing17OperationObserver shared];

/* instance methods */
-[_TtC7iMazing17OperationObserver allItems];
-[_TtC7iMazing17OperationObserver setAllItems:];
-[_TtC7iMazing17OperationObserver items];
-[_TtC7iMazing17OperationObserver setItems:];
-[_TtC7iMazing17OperationObserver numberOfRunningOperations];
-[_TtC7iMazing17OperationObserver setNumberOfRunningOperations:];
-[_TtC7iMazing17OperationObserver init];
-[_TtC7iMazing17OperationObserver dealloc];
-[_TtC7iMazing17OperationObserver refresh:];
-[_TtC7iMazing17OperationObserver operationNotification:];
-[_TtC7iMazing17OperationObserver legacyOperationNotification:];
-[_TtC7iMazing17OperationObserver removeFinishedOperationsWithCompletion:];
-[_TtC7iMazing17OperationObserver addExtraItemFor:];
-[_TtC7iMazing17OperationObserver removeExtraItem:];

@end

@interface _TtC7iMazing17PhotoBorderedView : NSView {
    /* instance variables */
     borderWidth;
     borderRadius;
     backgroundColorName;
}

@property (Td,N,VborderWidth) borderWidth;
@property (Td,N,VborderRadius) borderRadius;
@property (T@"NSString",N,C) backgroundColorName;

/* instance methods */
-[_TtC7iMazing17PhotoBorderedView borderWidth];
-[_TtC7iMazing17PhotoBorderedView setBorderWidth:];
-[_TtC7iMazing17PhotoBorderedView borderRadius];
-[_TtC7iMazing17PhotoBorderedView setBorderRadius:];
-[_TtC7iMazing17PhotoBorderedView backgroundColorName];
-[_TtC7iMazing17PhotoBorderedView setBackgroundColorName:];
-[_TtC7iMazing17PhotoBorderedView updateLayer];
-[_TtC7iMazing17PhotoBorderedView initWithFrame:];
-[_TtC7iMazing17PhotoBorderedView initWithCoder:];

@end

@interface _TtC7iMazing17PhotoMediaHandler : NSObject {
    /* instance variables */
     manager;
     mediaOperation;
     onStartUUID;
     onCancelUUID;
     onProgressUUID;
     onFinishUUID;
}

/* instance methods */
-[_TtC7iMazing17PhotoMediaHandler initWithManager:];
-[_TtC7iMazing17PhotoMediaHandler init];

@end

@interface _TtC7iMazing17WhatsAppTextField : NSTextField {
    /* instance variables */
     textColorName;
}

@property (T@"NSString",N,C) textColorName;

/* instance methods */
-[_TtC7iMazing17WhatsAppTextField textColorName];
-[_TtC7iMazing17WhatsAppTextField setTextColorName:];
-[_TtC7iMazing17WhatsAppTextField drawRect:];
-[_TtC7iMazing17WhatsAppTextField initWithFrame:];
-[_TtC7iMazing17WhatsAppTextField initWithCoder:];

@end

@interface _TtC7iMazing18AppearanceObserver : NSObject {
    /* instance variables */
     observation;
}

/* instance methods */
-[_TtC7iMazing18AppearanceObserver init];

@end

@interface _TtC7iMazing18BackupLocationItem : NSObject {
    /* instance variables */
     path;
     name;
     volumePath;
     totalBytesText;
     availableBytesText;
     unavailableDescription;
     icon;
     totalBytes;
     availableBytes;
     isDefault;
     isAvailable;
     canRemove;
     defaultSortOrder;
     url;
     didShowSpaceWarning;
     iconPath;
}

@property (T@"NSString",N,C) path;
@property (T@"NSString",N,C) name;
@property (T@"NSString",N,C) volumePath;
@property (T@"NSString",N,C) totalBytesText;
@property (T@"NSString",N,C) availableBytesText;
@property (T@"NSString",N,C) unavailableDescription;
@property (T@"NSImage",N,&,Vicon) icon;
@property (TQ,N,VtotalBytes) totalBytes;
@property (TQ,N,VavailableBytes) availableBytes;
@property (TB,N,VisDefault) isDefault;
@property (TB,N,VisAvailable) isAvailable;
@property (TB,N,VcanRemove) canRemove;
@property (Tq,N,VdefaultSortOrder) defaultSortOrder;

/* instance methods */
-[_TtC7iMazing18BackupLocationItem path];
-[_TtC7iMazing18BackupLocationItem setPath:];
-[_TtC7iMazing18BackupLocationItem name];
-[_TtC7iMazing18BackupLocationItem setName:];
-[_TtC7iMazing18BackupLocationItem volumePath];
-[_TtC7iMazing18BackupLocationItem setVolumePath:];
-[_TtC7iMazing18BackupLocationItem totalBytesText];
-[_TtC7iMazing18BackupLocationItem setTotalBytesText:];
-[_TtC7iMazing18BackupLocationItem availableBytesText];
-[_TtC7iMazing18BackupLocationItem setAvailableBytesText:];
-[_TtC7iMazing18BackupLocationItem unavailableDescription];
-[_TtC7iMazing18BackupLocationItem setUnavailableDescription:];
-[_TtC7iMazing18BackupLocationItem icon];
-[_TtC7iMazing18BackupLocationItem setIcon:];
-[_TtC7iMazing18BackupLocationItem totalBytes];
-[_TtC7iMazing18BackupLocationItem setTotalBytes:];
-[_TtC7iMazing18BackupLocationItem availableBytes];
-[_TtC7iMazing18BackupLocationItem setAvailableBytes:];
-[_TtC7iMazing18BackupLocationItem isDefault];
-[_TtC7iMazing18BackupLocationItem setIsDefault:];
-[_TtC7iMazing18BackupLocationItem isAvailable];
-[_TtC7iMazing18BackupLocationItem setIsAvailable:];
-[_TtC7iMazing18BackupLocationItem canRemove];
-[_TtC7iMazing18BackupLocationItem setCanRemove:];
-[_TtC7iMazing18BackupLocationItem defaultSortOrder];
-[_TtC7iMazing18BackupLocationItem setDefaultSortOrder:];
-[_TtC7iMazing18BackupLocationItem init];

@end

@interface _TtC7iMazing18DatasetAddShortcut : _TtC7iMazing7Dataset

/* instance methods */
-[_TtC7iMazing18DatasetAddShortcut initWithName:icon:scheme:sorting:];

@end

@interface _TtC7iMazing18DeviceItemProvider : NSObject {
    /* instance variables */
     devices;
     iOSDevices;
     iOSStandardDevices;
     iOSStandardDevicesAndClassiciPods;
     physicalDevices;
     physicalIOSDevices;
     physicalIOSStandardDevices;
     physicalIOSStandardDevicesAndClassiciPods;
     nonPhysicalDevices;
     nonPhysicalIOSDevices;
     nonPhysicalIOSStandardDevices;
     nonPhysicalIOSStandardDevicesAndClassiciPods;
     onDeviceRemoved;
     simulateNoDevicesOrBackups;
     content;
}

@property (T@"NSArrayController",N,R,Vdevices) devices;
@property (T@"NSArrayController",N,R,ViOSDevices) iOSDevices;
@property (T@"NSArrayController",N,R,ViOSStandardDevices) iOSStandardDevices;
@property (T@"NSArrayController",N,R,ViOSStandardDevicesAndClassiciPods) iOSStandardDevicesAndClassiciPods;
@property (T@"NSArrayController",N,R,VphysicalDevices) physicalDevices;
@property (T@"NSArrayController",N,R,VphysicalIOSDevices) physicalIOSDevices;
@property (T@"NSArrayController",N,R,VphysicalIOSStandardDevices) physicalIOSStandardDevices;
@property (T@"NSArrayController",N,R,VphysicalIOSStandardDevicesAndClassiciPods) physicalIOSStandardDevicesAndClassiciPods;
@property (T@"NSArrayController",N,R,VnonPhysicalDevices) nonPhysicalDevices;
@property (T@"NSArrayController",N,R,VnonPhysicalIOSDevices) nonPhysicalIOSDevices;
@property (T@"NSArrayController",N,R,VnonPhysicalIOSStandardDevices) nonPhysicalIOSStandardDevices;
@property (T@"NSArrayController",N,R,VnonPhysicalIOSStandardDevicesAndClassiciPods) nonPhysicalIOSStandardDevicesAndClassiciPods;

/* class methods */
+[_TtC7iMazing18DeviceItemProvider shared];

/* instance methods */
-[_TtC7iMazing18DeviceItemProvider devices];
-[_TtC7iMazing18DeviceItemProvider iOSDevices];
-[_TtC7iMazing18DeviceItemProvider iOSStandardDevices];
-[_TtC7iMazing18DeviceItemProvider iOSStandardDevicesAndClassiciPods];
-[_TtC7iMazing18DeviceItemProvider physicalDevices];
-[_TtC7iMazing18DeviceItemProvider physicalIOSDevices];
-[_TtC7iMazing18DeviceItemProvider physicalIOSStandardDevices];
-[_TtC7iMazing18DeviceItemProvider physicalIOSStandardDevicesAndClassiciPods];
-[_TtC7iMazing18DeviceItemProvider nonPhysicalDevices];
-[_TtC7iMazing18DeviceItemProvider nonPhysicalIOSDevices];
-[_TtC7iMazing18DeviceItemProvider nonPhysicalIOSStandardDevices];
-[_TtC7iMazing18DeviceItemProvider nonPhysicalIOSStandardDevicesAndClassiciPods];
-[_TtC7iMazing18DeviceItemProvider init];
-[_TtC7iMazing18DeviceItemProvider dealloc];
-[_TtC7iMazing18DeviceItemProvider start];
-[_TtC7iMazing18DeviceItemProvider deviceNotification:];
-[_TtC7iMazing18DeviceItemProvider itemForDevice:];
-[_TtC7iMazing18DeviceItemProvider itemForDeviceUID:];
-[_TtC7iMazing18DeviceItemProvider itemForDeviceUDID:];
-[_TtC7iMazing18DeviceItemProvider updateControllerContent];

@end

@interface _TtC7iMazing18GenericScreenAlert : NSObject {
    /* instance variables */
     data;
     alert;
     commonModeTimer;
     modalPanelTimer;
     removed;
}

/* instance methods */
-[_TtC7iMazing18GenericScreenAlert autoDismiss:];
-[_TtC7iMazing18GenericScreenAlert init];

@end

@interface _TtC7iMazing18HintViewController : NSViewController {
    /* instance variables */
     data;
     hintView;
     hintViewPlaceholder;
     label;
     onClose;
     timer;
     appearanceObserver;
}

@property (T@"UserInteractionHintData",N,&,Vdata) data;
@property (T@"NSView",N,&,VhintView) hintView;
@property (T@"NSView",N,&,VhintViewPlaceholder) hintViewPlaceholder;
@property (T@"VKLabel",N,&,Vlabel) label;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing18HintViewController data];
-[_TtC7iMazing18HintViewController setData:];
-[_TtC7iMazing18HintViewController hintView];
-[_TtC7iMazing18HintViewController setHintView:];
-[_TtC7iMazing18HintViewController hintViewPlaceholder];
-[_TtC7iMazing18HintViewController setHintViewPlaceholder:];
-[_TtC7iMazing18HintViewController label];
-[_TtC7iMazing18HintViewController setLabel:];
-[_TtC7iMazing18HintViewController initWithCoder:];
-[_TtC7iMazing18HintViewController nibName];
-[_TtC7iMazing18HintViewController viewDidLoad];
-[_TtC7iMazing18HintViewController viewWillDisappear];
-[_TtC7iMazing18HintViewController close:];
-[_TtC7iMazing18HintViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing18HomeViewController : NSViewController <VKHighlightListViewControllerDelegate> {
    /* instance variables */
     sidebarView;
     contentView;
     sidebarViewController;
     contentViewController;
     sidebarOverlayObservation;
     contentViewObservation;
     placeholderView;
     sidebarOverlayController;
     registeredObserver;
     hideConfiguratorObserver;
     sidebarContainer;
     oldSidebarOverlayControllerReference;
     oldContentViewControllerReference;
}

@property (T@"NSView",N,&,VsidebarView) sidebarView;
@property (T@"NSView",N,&,VcontentView) contentView;
@property (T@"VKHighlightListViewController",N,&,VsidebarViewController) sidebarViewController;
@property (T@"NSViewController",N,&,VcontentViewController) contentViewController;
@property (T@"NSViewController",N,&,VsidebarOverlayController) sidebarOverlayController;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing18HomeViewController sidebarView];
-[_TtC7iMazing18HomeViewController setSidebarView:];
-[_TtC7iMazing18HomeViewController contentView];
-[_TtC7iMazing18HomeViewController setContentView:];
-[_TtC7iMazing18HomeViewController sidebarViewController];
-[_TtC7iMazing18HomeViewController setSidebarViewController:];
-[_TtC7iMazing18HomeViewController contentViewController];
-[_TtC7iMazing18HomeViewController setContentViewController:];
-[_TtC7iMazing18HomeViewController sidebarOverlayController];
-[_TtC7iMazing18HomeViewController setSidebarOverlayController:];
-[_TtC7iMazing18HomeViewController nibName];
-[_TtC7iMazing18HomeViewController viewDidLoad];
-[_TtC7iMazing18HomeViewController highlightListView:shouldSelectItem:];
-[_TtC7iMazing18HomeViewController showDiscover:];
-[_TtC7iMazing18HomeViewController showDevices:];
-[_TtC7iMazing18HomeViewController showBackups:];
-[_TtC7iMazing18HomeViewController showConfiguratorBlueprints:];
-[_TtC7iMazing18HomeViewController showConfiguratorDevices:];
-[_TtC7iMazing18HomeViewController showConfiguratorApps:];
-[_TtC7iMazing18HomeViewController showConfiguratorProfiles:];
-[_TtC7iMazing18HomeViewController showConfiguratorMDMServers:];
-[_TtC7iMazing18HomeViewController showConfiguratorOrganizations:];
-[_TtC7iMazing18HomeViewController initWithNibName:bundle:];
-[_TtC7iMazing18HomeViewController initWithCoder:];

@end

@interface _TtC7iMazing18MediaFadeTextField : NSTextField {
    /* instance variables */
     fadeInDuration;
     fadeOutDuration;
}

@property (Td,N,VfadeInDuration) fadeInDuration;
@property (Td,N,VfadeOutDuration) fadeOutDuration;

/* instance methods */
-[_TtC7iMazing18MediaFadeTextField fadeInDuration];
-[_TtC7iMazing18MediaFadeTextField setFadeInDuration:];
-[_TtC7iMazing18MediaFadeTextField fadeOutDuration];
-[_TtC7iMazing18MediaFadeTextField setFadeOutDuration:];
-[_TtC7iMazing18MediaFadeTextField initWithFrame:];
-[_TtC7iMazing18MediaFadeTextField initWithCoder:];

@end

@interface _TtC7iMazing18MediaSongGroupItem : NSObject {
    /* instance variables */
     title;
     representedObject;
     hasRepresentedObject;
     isCompilation;
}

@property (T@"NSString",N,C) title;
@property (T@"NSObject",N,&,VrepresentedObject) representedObject;
@property (TB,N,VhasRepresentedObject) hasRepresentedObject;
@property (TB,N,VisCompilation) isCompilation;

/* instance methods */
-[_TtC7iMazing18MediaSongGroupItem title];
-[_TtC7iMazing18MediaSongGroupItem setTitle:];
-[_TtC7iMazing18MediaSongGroupItem representedObject];
-[_TtC7iMazing18MediaSongGroupItem setRepresentedObject:];
-[_TtC7iMazing18MediaSongGroupItem hasRepresentedObject];
-[_TtC7iMazing18MediaSongGroupItem setHasRepresentedObject:];
-[_TtC7iMazing18MediaSongGroupItem isCompilation];
-[_TtC7iMazing18MediaSongGroupItem setIsCompilation:];
-[_TtC7iMazing18MediaSongGroupItem isEqual:];
-[_TtC7iMazing18MediaSongGroupItem isEqualTo:];
-[_TtC7iMazing18MediaSongGroupItem init];

@end

@interface _TtC7iMazing18OperationImageInfo : NSObject {
    /* instance variables */
     image;
     identifier;
}

@property (T@"NSImage",N,&,Vimage) image;
@property (T@"NSString",N,C) identifier;

/* instance methods */
-[_TtC7iMazing18OperationImageInfo image];
-[_TtC7iMazing18OperationImageInfo setImage:];
-[_TtC7iMazing18OperationImageInfo identifier];
-[_TtC7iMazing18OperationImageInfo setIdentifier:];
-[_TtC7iMazing18OperationImageInfo initWithImage:identifier:];
-[_TtC7iMazing18OperationImageInfo init];

@end

@interface _TtC7iMazing18PhotoFadeImageView : NSImageView {
    /* instance variables */
     fadeInDuration;
     fadeOutDuration;
}

@property (Td,N,VfadeInDuration) fadeInDuration;
@property (Td,N,VfadeOutDuration) fadeOutDuration;
@property (TB,N) hidden;

/* instance methods */
-[_TtC7iMazing18PhotoFadeImageView fadeInDuration];
-[_TtC7iMazing18PhotoFadeImageView setFadeInDuration:];
-[_TtC7iMazing18PhotoFadeImageView fadeOutDuration];
-[_TtC7iMazing18PhotoFadeImageView setFadeOutDuration:];
-[_TtC7iMazing18PhotoFadeImageView isHidden];
-[_TtC7iMazing18PhotoFadeImageView setHidden:];
-[_TtC7iMazing18PhotoFadeImageView initWithFrame:];
-[_TtC7iMazing18PhotoFadeImageView initWithCoder:];

@end

@interface _TtC7iMazing18PhotoTableCellView : NSTableCellView {
    /* instance variables */
     cachedThumbnailImageView;
}

/* instance methods */
-[_TtC7iMazing18PhotoTableCellView initWithFrame:];
-[_TtC7iMazing18PhotoTableCellView initWithCoder:];

@end

@interface _TtC7iMazing18ShortcutWidgetItem : NSCollectionViewItem {
    /* instance variables */
     shortcutMenu;
     dataset;
     isShortcut;
}

@property (T@"NSMenu",N,&,VshortcutMenu) shortcutMenu;
@property (T@"_TtC7iMazing7Dataset",N,&,Vdataset) dataset;
@property (TB,N,VisShortcut) isShortcut;

/* instance methods */
-[_TtC7iMazing18ShortcutWidgetItem shortcutMenu];
-[_TtC7iMazing18ShortcutWidgetItem setShortcutMenu:];
-[_TtC7iMazing18ShortcutWidgetItem dataset];
-[_TtC7iMazing18ShortcutWidgetItem setDataset:];
-[_TtC7iMazing18ShortcutWidgetItem isShortcut];
-[_TtC7iMazing18ShortcutWidgetItem setIsShortcut:];
-[_TtC7iMazing18ShortcutWidgetItem renameShortcut:];
-[_TtC7iMazing18ShortcutWidgetItem deleteShortcut:];
-[_TtC7iMazing18ShortcutWidgetItem initWithNibName:bundle:];
-[_TtC7iMazing18ShortcutWidgetItem initWithCoder:];

@end

@interface _TtC7iMazing19ApplicationCommands : NSObject {
    /* instance variables */
     validationTimer;
     extraToolbarControls;
}

/* class methods */
+[_TtC7iMazing19ApplicationCommands shared];

/* instance methods */
-[_TtC7iMazing19ApplicationCommands showAboutWindow:];
-[_TtC7iMazing19ApplicationCommands showAlternateAboutWindow:];
-[_TtC7iMazing19ApplicationCommands checkForUpdates:];
-[_TtC7iMazing19ApplicationCommands showPreferencesWindow:];
-[_TtC7iMazing19ApplicationCommands refreshContentData:];
-[_TtC7iMazing19ApplicationCommands open:];
-[_TtC7iMazing19ApplicationCommands quickLook:];
-[_TtC7iMazing19ApplicationCommands copyToComputer:];
-[_TtC7iMazing19ApplicationCommands copyToDevice:];
-[_TtC7iMazing19ApplicationCommands getInfo:];
-[_TtC7iMazing19ApplicationCommands deleteSelectedItems:];
-[_TtC7iMazing19ApplicationCommands rename:];
-[_TtC7iMazing19ApplicationCommands newFolder:];
-[_TtC7iMazing19ApplicationCommands performFindPanelAction:];
-[_TtC7iMazing19ApplicationCommands showAllApps:];
-[_TtC7iMazing19ApplicationCommands showHiddenFile:];
-[_TtC7iMazing19ApplicationCommands invertAppearance:];
-[_TtC7iMazing19ApplicationCommands openMini:];
-[_TtC7iMazing19ApplicationCommands openiMazingHEICConverter:];
-[_TtC7iMazing19ApplicationCommands openiMazingProfileEditor:];
-[_TtC7iMazing19ApplicationCommands showBuyScreen:];
-[_TtC7iMazing19ApplicationCommands showWelcomeScreen:];
-[_TtC7iMazing19ApplicationCommands enterLicenseCode:];
-[_TtC7iMazing19ApplicationCommands activateWithALicenseFile:];
-[_TtC7iMazing19ApplicationCommands viewLicense:];
-[_TtC7iMazing19ApplicationCommands viewMyPlan:];
-[_TtC7iMazing19ApplicationCommands managePlan:];
-[_TtC7iMazing19ApplicationCommands updatePayementMethod:];
-[_TtC7iMazing19ApplicationCommands cancelSubscription:];
-[_TtC7iMazing19ApplicationCommands viewMyAccount:];
-[_TtC7iMazing19ApplicationCommands openRetrieveLicensePage:];
-[_TtC7iMazing19ApplicationCommands deactivateLicense:];
-[_TtC7iMazing19ApplicationCommands showHelp:];
-[_TtC7iMazing19ApplicationCommands showSendFeedbackOrBugReport:];
-[_TtC7iMazing19ApplicationCommands socialVisitReddit:];
-[_TtC7iMazing19ApplicationCommands socialVisitYoutube:];
-[_TtC7iMazing19ApplicationCommands socialVisitMastodon:];
-[_TtC7iMazing19ApplicationCommands performDoubleAction:];
-[_TtC7iMazing19ApplicationCommands quickLookContextMenu:];
-[_TtC7iMazing19ApplicationCommands openContextMenu:];
-[_TtC7iMazing19ApplicationCommands copyToComputerContextMenu:];
-[_TtC7iMazing19ApplicationCommands deleteSelectedItemsContextMenu:];
-[_TtC7iMazing19ApplicationCommands submenuAction:];
-[_TtC7iMazing19ApplicationCommands exportAsCSV:];
-[_TtC7iMazing19ApplicationCommands exportAsPDF:];
-[_TtC7iMazing19ApplicationCommands exportAsXLS:];
-[_TtC7iMazing19ApplicationCommands exportAttachments:];
-[_TtC7iMazing19ApplicationCommands exportToCSV:];
-[_TtC7iMazing19ApplicationCommands exportToPDF:];
-[_TtC7iMazing19ApplicationCommands exportToPrinter:];
-[_TtC7iMazing19ApplicationCommands exportToText:];
-[_TtC7iMazing19ApplicationCommands exportToXLS:];
-[_TtC7iMazing19ApplicationCommands exportToRSMF:];
-[_TtC7iMazing19ApplicationCommands installFromLibrary:];
-[_TtC7iMazing19ApplicationCommands manageApps:];
-[_TtC7iMazing19ApplicationCommands mediaCopyToFolder:];
-[_TtC7iMazing19ApplicationCommands mediaCopyToiTunes:];
-[_TtC7iMazing19ApplicationCommands mediaImportFromFolder:];
-[_TtC7iMazing19ApplicationCommands newShortcut:];
-[_TtC7iMazing19ApplicationCommands showOptions:];
-[_TtC7iMazing19ApplicationCommands updateBrowserPathMenu:];
-[_TtC7iMazing19ApplicationCommands browserColumnViewDidClick:];
-[_TtC7iMazing19ApplicationCommands browserIconViewDidDoubleClick:];
-[_TtC7iMazing19ApplicationCommands contactGroupsOutlineViewSelectionDidChange:];
-[_TtC7iMazing19ApplicationCommands copyCallsUsingDragOutInfo:];
-[_TtC7iMazing19ApplicationCommands copyContactsUsingDragOutInfo:];
-[_TtC7iMazing19ApplicationCommands copyNotesUsingDragOutInfo:];
-[_TtC7iMazing19ApplicationCommands copyVoiceMailsUsingDragOutInfo:];
-[_TtC7iMazing19ApplicationCommands refreshContactDetailsViewWithSelection:];
-[_TtC7iMazing19ApplicationCommands renameStorageItemUsingInfoDictionary:];
-[_TtC7iMazing19ApplicationCommands selectItemForIconView:];
-[_TtC7iMazing19ApplicationCommands setSelectedCallers:];
-[_TtC7iMazing19ApplicationCommands updateWindowStatusText:];
-[_TtC7iMazing19ApplicationCommands init];
-[_TtC7iMazing19ApplicationCommands dealloc];
-[_TtC7iMazing19ApplicationCommands registerExtraToolbarControlsForValidation:];
-[_TtC7iMazing19ApplicationCommands unregisterExtraToolbarControlsForValidation:];
-[_TtC7iMazing19ApplicationCommands validateExtraToolbarControls:];

@end

@interface _TtC7iMazing19ApplicationDelegate : NSObject <NSApplicationDelegate> {
    /* instance variables */
     applicationRegistered;
     licenseIsSubscriptionBased;
     licenseIsSlotBased;
     subscriptionStatusDeleted;
     viewDevicesLinkedToLicense;
     canShowConfiguratorMenu;
     canShowProfileEditorMenu;
     startMiniAtLogin;
     mainWindowController;
     mojavePrivacyWindowController;
     awake;
     restartMini;
     preventMiniAutoLaunch;
     appStarted;
     didFinishLaunching;
     checkRunningOperations;
     installStatus;
     miniLaunchAgent;
     organizationsWindowController;
     profilesWindowController;
     miniStartObserver;
     autoUpdateObserver;
     appearanceOverrideObserver;
     iconOverrideObserver;
     appearanceObserver;
     lottieObserver;
     preferencesMenuItem;
     simulateNoDevicesOrBackups;
}

@property (TB,N,VapplicationRegistered) applicationRegistered;
@property (TB,N,VlicenseIsSubscriptionBased) licenseIsSubscriptionBased;
@property (TB,N,VlicenseIsSlotBased) licenseIsSlotBased;
@property (TB,N,VsubscriptionStatusDeleted) subscriptionStatusDeleted;
@property (TB,N,VviewDevicesLinkedToLicense) viewDevicesLinkedToLicense;
@property (TB,N,VcanShowConfiguratorMenu) canShowConfiguratorMenu;
@property (TB,N,VcanShowProfileEditorMenu) canShowProfileEditorMenu;
@property (TB,N,VstartMiniAtLogin) startMiniAtLogin;
@property (T@"_TtC7iMazing20MainWindowController",N,R,VmainWindowController) mainWindowController;
@property (T@"NSMenuItem",N,&,VpreferencesMenuItem) preferencesMenuItem;
@property (TB,N,VsimulateNoDevicesOrBackups) simulateNoDevicesOrBackups;

/* instance methods */
-[_TtC7iMazing19ApplicationDelegate applicationRegistered];
-[_TtC7iMazing19ApplicationDelegate setApplicationRegistered:];
-[_TtC7iMazing19ApplicationDelegate licenseIsSubscriptionBased];
-[_TtC7iMazing19ApplicationDelegate setLicenseIsSubscriptionBased:];
-[_TtC7iMazing19ApplicationDelegate licenseIsSlotBased];
-[_TtC7iMazing19ApplicationDelegate setLicenseIsSlotBased:];
-[_TtC7iMazing19ApplicationDelegate subscriptionStatusDeleted];
-[_TtC7iMazing19ApplicationDelegate setSubscriptionStatusDeleted:];
-[_TtC7iMazing19ApplicationDelegate viewDevicesLinkedToLicense];
-[_TtC7iMazing19ApplicationDelegate setViewDevicesLinkedToLicense:];
-[_TtC7iMazing19ApplicationDelegate canShowConfiguratorMenu];
-[_TtC7iMazing19ApplicationDelegate setCanShowConfiguratorMenu:];
-[_TtC7iMazing19ApplicationDelegate canShowProfileEditorMenu];
-[_TtC7iMazing19ApplicationDelegate setCanShowProfileEditorMenu:];
-[_TtC7iMazing19ApplicationDelegate startMiniAtLogin];
-[_TtC7iMazing19ApplicationDelegate setStartMiniAtLogin:];
-[_TtC7iMazing19ApplicationDelegate mainWindowController];
-[_TtC7iMazing19ApplicationDelegate preferencesMenuItem];
-[_TtC7iMazing19ApplicationDelegate setPreferencesMenuItem:];
-[_TtC7iMazing19ApplicationDelegate simulateNoDevicesOrBackups];
-[_TtC7iMazing19ApplicationDelegate setSimulateNoDevicesOrBackups:];
-[_TtC7iMazing19ApplicationDelegate awakeFromNib];
-[_TtC7iMazing19ApplicationDelegate applicationWillFinishLaunching:];
-[_TtC7iMazing19ApplicationDelegate applicationDidFinishLaunching:];
-[_TtC7iMazing19ApplicationDelegate applicationShouldTerminateAfterLastWindowClosed:];
-[_TtC7iMazing19ApplicationDelegate applicationShouldTerminate:];
-[_TtC7iMazing19ApplicationDelegate applicationWillTerminate:];
-[_TtC7iMazing19ApplicationDelegate applicationNotification:];
-[_TtC7iMazing19ApplicationDelegate performSafeShutDown];
-[_TtC7iMazing19ApplicationDelegate respondsToSelector:];
-[_TtC7iMazing19ApplicationDelegate forwardingTargetForSelector:];
-[_TtC7iMazing19ApplicationDelegate validateMenuItem:];
-[_TtC7iMazing19ApplicationDelegate validateToolbarItem:];
-[_TtC7iMazing19ApplicationDelegate application:openURLs:];
-[_TtC7iMazing19ApplicationDelegate setStartMiniAtLogin:runImmediately:];
-[_TtC7iMazing19ApplicationDelegate openWith:];
-[_TtC7iMazing19ApplicationDelegate showMojavePrivacyWindow:];
-[_TtC7iMazing19ApplicationDelegate showOrganizationsLibraryWindow:];
-[_TtC7iMazing19ApplicationDelegate showProfilesLibraryWindow:];
-[_TtC7iMazing19ApplicationDelegate managePlan:];
-[_TtC7iMazing19ApplicationDelegate simulateNoDevicesOrBackupsOn:];
-[_TtC7iMazing19ApplicationDelegate simulateNoDevicesOrBackupsOff:];
-[_TtC7iMazing19ApplicationDelegate init];

@end

@interface _TtC7iMazing19LegacyOperationItem : NSObject <_TtP7iMazing13OperationItem_> {
    /* instance variables */
     operation;
     operationUuid;
     operationIcon;
     title;
     message;
     icon;
     progress;
     destinationPath;
     destinationFileType;
     destinationFilenames;
     animate;
     indeterminate;
     paused;
     running;
     stopped;
     hidden;
     hasFiles;
     totalItems;
     sortingDate;
     statusIcon;
     statusColor;
     wizardImageName;
}

@property (T@"NSString",N,C) title;
@property (T@"NSString",N,C) message;
@property (T@"NSImage",N,&,Vicon) icon;
@property (Td,N,Vprogress) progress;
@property (T@"NSString",N,C) destinationPath;
@property (T@"NSString",N,C) destinationFileType;
@property (T@"NSArray",N,C) destinationFilenames;
@property (TB,N,Vanimate) animate;
@property (TB,N,Vindeterminate) indeterminate;
@property (TB,N,Vpaused) paused;
@property (TB,N,Vrunning) running;
@property (TB,N,Vstopped) stopped;
@property (TB,N,Vhidden) hidden;
@property (TB,N,VhasFiles) hasFiles;
@property (TQ,N,VtotalItems) totalItems;
@property (T@"NSDate",N,C) sortingDate;
@property (T@"NSImage",N,&,VstatusIcon) statusIcon;
@property (TQ,N,VstatusColor) statusColor;
@property (T@"NSString",N,C) wizardImageName;
@property (T@"NSObject",N,R) representedObject;
@property (T@"NSString",N,R) deviceUID;
@property (T@"NSString",N,R) deviceUDID;

/* instance methods */
-[_TtC7iMazing19LegacyOperationItem title];
-[_TtC7iMazing19LegacyOperationItem setTitle:];
-[_TtC7iMazing19LegacyOperationItem message];
-[_TtC7iMazing19LegacyOperationItem setMessage:];
-[_TtC7iMazing19LegacyOperationItem icon];
-[_TtC7iMazing19LegacyOperationItem setIcon:];
-[_TtC7iMazing19LegacyOperationItem progress];
-[_TtC7iMazing19LegacyOperationItem setProgress:];
-[_TtC7iMazing19LegacyOperationItem destinationPath];
-[_TtC7iMazing19LegacyOperationItem setDestinationPath:];
-[_TtC7iMazing19LegacyOperationItem destinationFileType];
-[_TtC7iMazing19LegacyOperationItem setDestinationFileType:];
-[_TtC7iMazing19LegacyOperationItem destinationFilenames];
-[_TtC7iMazing19LegacyOperationItem setDestinationFilenames:];
-[_TtC7iMazing19LegacyOperationItem animate];
-[_TtC7iMazing19LegacyOperationItem setAnimate:];
-[_TtC7iMazing19LegacyOperationItem indeterminate];
-[_TtC7iMazing19LegacyOperationItem setIndeterminate:];
-[_TtC7iMazing19LegacyOperationItem paused];
-[_TtC7iMazing19LegacyOperationItem setPaused:];
-[_TtC7iMazing19LegacyOperationItem running];
-[_TtC7iMazing19LegacyOperationItem setRunning:];
-[_TtC7iMazing19LegacyOperationItem stopped];
-[_TtC7iMazing19LegacyOperationItem setStopped:];
-[_TtC7iMazing19LegacyOperationItem hidden];
-[_TtC7iMazing19LegacyOperationItem setHidden:];
-[_TtC7iMazing19LegacyOperationItem hasFiles];
-[_TtC7iMazing19LegacyOperationItem setHasFiles:];
-[_TtC7iMazing19LegacyOperationItem totalItems];
-[_TtC7iMazing19LegacyOperationItem setTotalItems:];
-[_TtC7iMazing19LegacyOperationItem sortingDate];
-[_TtC7iMazing19LegacyOperationItem setSortingDate:];
-[_TtC7iMazing19LegacyOperationItem statusIcon];
-[_TtC7iMazing19LegacyOperationItem setStatusIcon:];
-[_TtC7iMazing19LegacyOperationItem statusColor];
-[_TtC7iMazing19LegacyOperationItem setStatusColor:];
-[_TtC7iMazing19LegacyOperationItem wizardImageName];
-[_TtC7iMazing19LegacyOperationItem setWizardImageName:];
-[_TtC7iMazing19LegacyOperationItem representedObject];
-[_TtC7iMazing19LegacyOperationItem deviceUID];
-[_TtC7iMazing19LegacyOperationItem deviceUDID];
-[_TtC7iMazing19LegacyOperationItem initWithOperation:];
-[_TtC7iMazing19LegacyOperationItem refresh];
-[_TtC7iMazing19LegacyOperationItem stop];
-[_TtC7iMazing19LegacyOperationItem pause];
-[_TtC7iMazing19LegacyOperationItem resume];
-[_TtC7iMazing19LegacyOperationItem releaseOperation];
-[_TtC7iMazing19LegacyOperationItem isEqual:];
-[_TtC7iMazing19LegacyOperationItem isEqualTo:];
-[_TtC7iMazing19LegacyOperationItem init];

@end

@interface _TtC7iMazing19MediaBackgroundView : NSView {
    /* instance variables */
     backgroundColorName;
     borderColorName;
     borderWidth;
     radius;
}

@property (T@"NSString",N,C) backgroundColorName;
@property (T@"NSString",N,C) borderColorName;
@property (Td,N,VborderWidth) borderWidth;
@property (Td,N,Vradius) radius;

/* instance methods */
-[_TtC7iMazing19MediaBackgroundView backgroundColorName];
-[_TtC7iMazing19MediaBackgroundView setBackgroundColorName:];
-[_TtC7iMazing19MediaBackgroundView borderColorName];
-[_TtC7iMazing19MediaBackgroundView setBorderColorName:];
-[_TtC7iMazing19MediaBackgroundView borderWidth];
-[_TtC7iMazing19MediaBackgroundView setBorderWidth:];
-[_TtC7iMazing19MediaBackgroundView radius];
-[_TtC7iMazing19MediaBackgroundView setRadius:];
-[_TtC7iMazing19MediaBackgroundView updateLayer];
-[_TtC7iMazing19MediaBackgroundView initWithFrame:];
-[_TtC7iMazing19MediaBackgroundView initWithCoder:];

@end

@interface _TtC7iMazing19MediaViewController : _TtC7iMazing31NewDatasetManagerViewController {
    /* instance variables */
     libraryController;
     contentContainer;
     sidebarSeletedItem;
     toolbarDeleteButton;
     exportWindowController;
     mediaCopyiTunesProgressHandler;
     iTunesControlWindowController;
     searchObserver;
     statusTextObserver;
}

@property (T@"_TtC7iMazing26MediaLibraryViewController",N,&,VlibraryController) libraryController;
@property (T@"NSView",N,&,VcontentContainer) contentContainer;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing19MediaViewController libraryController];
-[_TtC7iMazing19MediaViewController setLibraryController:];
-[_TtC7iMazing19MediaViewController contentContainer];
-[_TtC7iMazing19MediaViewController setContentContainer:];
-[_TtC7iMazing19MediaViewController initWithDataset:device:];
-[_TtC7iMazing19MediaViewController initWithDevice:];
-[_TtC7iMazing19MediaViewController dealloc];
-[_TtC7iMazing19MediaViewController nibName];
-[_TtC7iMazing19MediaViewController didBecomeActive];
-[_TtC7iMazing19MediaViewController viewDidLoad];
-[_TtC7iMazing19MediaViewController visibleTracksChanged:];
-[_TtC7iMazing19MediaViewController selectedMediaTracksChanged:];
-[_TtC7iMazing19MediaViewController playerStartedPlayingNewTrack:];
-[_TtC7iMazing19MediaViewController mediaTracksDropped:];
-[_TtC7iMazing19MediaViewController mediaRenamePlaylist:];
-[_TtC7iMazing19MediaViewController mediaUpdatePlaylist:];
-[_TtC7iMazing19MediaViewController datasetManager:updateDidStart:];
-[_TtC7iMazing19MediaViewController datasetManager:updateDidEnd:];
-[_TtC7iMazing19MediaViewController quickLook:];
-[_TtC7iMazing19MediaViewController keyUp:];
-[_TtC7iMazing19MediaViewController searchTextDidChange:];
-[_TtC7iMazing19MediaViewController validateMenuItem:];
-[_TtC7iMazing19MediaViewController validateToolbarItem:];
-[_TtC7iMazing19MediaViewController toggleMediaFilterTableViews:];
-[_TtC7iMazing19MediaViewController deleteSelectedItems:];
-[_TtC7iMazing19MediaViewController getInfo:];
-[_TtC7iMazing19MediaViewController mediaCopyToiTunes:];
-[_TtC7iMazing19MediaViewController copyToMac:];
-[_TtC7iMazing19MediaViewController mediaCopyToFolder:];
-[_TtC7iMazing19MediaViewController contextMenuMediaCopyToiTunes:];
-[_TtC7iMazing19MediaViewController contextMenuMediaCopyToFolder:];
-[_TtC7iMazing19MediaViewController contextMenuMediaQuickLook:];
-[_TtC7iMazing19MediaViewController contextMenuMediaShowAlbum:];
-[_TtC7iMazing19MediaViewController contextMenuMediaDeleteSelectedItems:];
-[_TtC7iMazing19MediaViewController mediaSidebarImportFromFolder:];
-[_TtC7iMazing19MediaViewController mediaSidebarExportToFolder:];
-[_TtC7iMazing19MediaViewController mediaSidebarExportToiTunes:];
-[_TtC7iMazing19MediaViewController copyToDevice:];
-[_TtC7iMazing19MediaViewController mediaImportFromFolder:];
-[_TtC7iMazing19MediaViewController toggleMediaColumnBrowser:];
-[_TtC7iMazing19MediaViewController showColumnsMenu:];
-[_TtC7iMazing19MediaViewController showColumnBrowser:];
-[_TtC7iMazing19MediaViewController toggleMediaShowPlayer:];
-[_TtC7iMazing19MediaViewController resetMediaDefaults:];

@end

@interface _TtC7iMazing19MusicViewController : _TtC7iMazing19MediaViewController

/* instance methods */
-[_TtC7iMazing19MusicViewController initWithDevice:];
-[_TtC7iMazing19MusicViewController initWithDataset:device:];
-[_TtC7iMazing19MusicViewController viewDidLoad];
-[_TtC7iMazing19MusicViewController toolbarButtons];

@end

@interface _TtC7iMazing19PhotoBackgroundView : NSView {
    /* instance variables */
     backgroundColor;
}

@property (T@"NSColor",N,&,VbackgroundColor) backgroundColor;

/* instance methods */
-[_TtC7iMazing19PhotoBackgroundView backgroundColor];
-[_TtC7iMazing19PhotoBackgroundView setBackgroundColor:];
-[_TtC7iMazing19PhotoBackgroundView drawRect:];
-[_TtC7iMazing19PhotoBackgroundView initWithFrame:];
-[_TtC7iMazing19PhotoBackgroundView initWithCoder:];

@end

@interface _TtC7iMazing19PhotoCollectionView : VKCollectionView {
    /* instance variables */
     collectionViewController;
     photoManager;
     lastClickedIndexPath;
     showBadges;
     sliderValue;
}

@property (TB,N,VshowBadges) showBadges;
@property (Tq,N,VsliderValue) sliderValue;
@property (T{CGRect={CGPoint=dd}{CGSize=dd}},N) preparedContentRect;

/* instance methods */
-[_TtC7iMazing19PhotoCollectionView showBadges];
-[_TtC7iMazing19PhotoCollectionView setShowBadges:];
-[_TtC7iMazing19PhotoCollectionView sliderValue];
-[_TtC7iMazing19PhotoCollectionView setSliderValue:];
-[_TtC7iMazing19PhotoCollectionView preparedContentRect];
-[_TtC7iMazing19PhotoCollectionView setPreparedContentRect:];
-[_TtC7iMazing19PhotoCollectionView initWithCoder:];
-[_TtC7iMazing19PhotoCollectionView viewWillStartLiveResize];
-[_TtC7iMazing19PhotoCollectionView viewDidEndLiveResize];
-[_TtC7iMazing19PhotoCollectionView layout];
-[_TtC7iMazing19PhotoCollectionView keyDown:];
-[_TtC7iMazing19PhotoCollectionView menuForEvent:];
-[_TtC7iMazing19PhotoCollectionView initWithFrame:];

@end

@interface _TtC7iMazing19PhotoFixedWidthView : NSView {
    /* instance variables */
     widthConstraint;
     isInitialized;
}

/* instance methods */
-[_TtC7iMazing19PhotoFixedWidthView layout];
-[_TtC7iMazing19PhotoFixedWidthView initWithFrame:];
-[_TtC7iMazing19PhotoFixedWidthView initWithCoder:];

@end

@interface _TtC7iMazing19PhotoImageSizedView : NSView {
    /* instance variables */
     borderWidth;
     imageView;
     widthConstraint;
     heightConstraint;
     isAwake;
}

@property (Td,N,VborderWidth) borderWidth;
@property (T@"NSImageView",N,&,VimageView) imageView;

/* instance methods */
-[_TtC7iMazing19PhotoImageSizedView borderWidth];
-[_TtC7iMazing19PhotoImageSizedView setBorderWidth:];
-[_TtC7iMazing19PhotoImageSizedView imageView];
-[_TtC7iMazing19PhotoImageSizedView setImageView:];
-[_TtC7iMazing19PhotoImageSizedView awakeFromNib];
-[_TtC7iMazing19PhotoImageSizedView dealloc];
-[_TtC7iMazing19PhotoImageSizedView observeValueForKeyPath:ofObject:change:context:];
-[_TtC7iMazing19PhotoImageSizedView drawRect:];
-[_TtC7iMazing19PhotoImageSizedView initWithFrame:];
-[_TtC7iMazing19PhotoImageSizedView initWithCoder:];

@end

@interface _TtC7iMazing19VideoViewController : _TtC7iMazing19MediaViewController

/* instance methods */
-[_TtC7iMazing19VideoViewController initWithDevice:];
-[_TtC7iMazing19VideoViewController initWithDataset:device:];
-[_TtC7iMazing19VideoViewController viewDidLoad];
-[_TtC7iMazing19VideoViewController toolbarButtons];

@end

@interface _TtC7iMazing19WhatsAppMessageView : NSView {
    /* instance variables */
     backgroundColorName;
     leftTail;
     rightTail;
}

@property (T@"NSString",N,C) backgroundColorName;
@property (TB,N,VleftTail) leftTail;
@property (TB,N,VrightTail) rightTail;

/* instance methods */
-[_TtC7iMazing19WhatsAppMessageView backgroundColorName];
-[_TtC7iMazing19WhatsAppMessageView setBackgroundColorName:];
-[_TtC7iMazing19WhatsAppMessageView leftTail];
-[_TtC7iMazing19WhatsAppMessageView setLeftTail:];
-[_TtC7iMazing19WhatsAppMessageView rightTail];
-[_TtC7iMazing19WhatsAppMessageView setRightTail:];
-[_TtC7iMazing19WhatsAppMessageView drawRect:];
-[_TtC7iMazing19WhatsAppMessageView initWithFrame:];
-[_TtC7iMazing19WhatsAppMessageView initWithCoder:];

@end

@interface _TtC7iMazing20BoundArrayController : NSArrayController {
    /* instance variables */
     source;
}

/* instance methods */
-[_TtC7iMazing20BoundArrayController initWithCoder:];
-[_TtC7iMazing20BoundArrayController dealloc];
-[_TtC7iMazing20BoundArrayController initWithContent:];

@end

@interface _TtC7iMazing20CalendarCheckboxCell : NSButtonCell

/* instance methods */
-[_TtC7iMazing20CalendarCheckboxCell titleRectForBounds:];
-[_TtC7iMazing20CalendarCheckboxCell initTextCell:];
-[_TtC7iMazing20CalendarCheckboxCell initImageCell:];
-[_TtC7iMazing20CalendarCheckboxCell initWithCoder:];

@end

@interface _TtC7iMazing20DatasetToolbarButton : NSButton <NSMenuDelegate> {
    /* instance variables */
     showLabelObserver;
     menuOpen;
     children;
     validates;
}

@property (T@"NSString",N,C) title;
@property (T{CGSize=dd},N,R) intrinsicContentSize;

/* class methods */
+[_TtC7iMazing20DatasetToolbarButton cellClass];
+[_TtC7iMazing20DatasetToolbarButton setCellClass:];

/* instance methods */
-[_TtC7iMazing20DatasetToolbarButton title];
-[_TtC7iMazing20DatasetToolbarButton setTitle:];
-[_TtC7iMazing20DatasetToolbarButton initWithLabel:icon:children:];
-[_TtC7iMazing20DatasetToolbarButton initWithLabel:icon:children:menuOpen:];
-[_TtC7iMazing20DatasetToolbarButton initWithLabel:target:action:];
-[_TtC7iMazing20DatasetToolbarButton initWithLabel:icon:target:action:];
-[_TtC7iMazing20DatasetToolbarButton showMenu:];
-[_TtC7iMazing20DatasetToolbarButton menuWillOpen:];
-[_TtC7iMazing20DatasetToolbarButton menuDidClose:];
-[_TtC7iMazing20DatasetToolbarButton initWithCoder:];
-[_TtC7iMazing20DatasetToolbarButton intrinsicContentSize];
-[_TtC7iMazing20DatasetToolbarButton initWithFrame:];

@end

@interface _TtC7iMazing20DeviceActionMenuItem : NSMenuItem {
    /* instance variables */
     deviceAction;
     deviceItem;
}

/* instance methods */
-[_TtC7iMazing20DeviceActionMenuItem initWithCoder:];
-[_TtC7iMazing20DeviceActionMenuItem execute:];
-[_TtC7iMazing20DeviceActionMenuItem initWithTitle:action:keyEquivalent:];

@end

@interface _TtC7iMazing20DeviceToolItemHeader : NSView {
    /* instance variables */
     label;
     title;
}

@property (T@"VKLabel",N,&,Vlabel) label;
@property (T@"NSString",N,C) title;

/* instance methods */
-[_TtC7iMazing20DeviceToolItemHeader label];
-[_TtC7iMazing20DeviceToolItemHeader setLabel:];
-[_TtC7iMazing20DeviceToolItemHeader title];
-[_TtC7iMazing20DeviceToolItemHeader setTitle:];
-[_TtC7iMazing20DeviceToolItemHeader initWithFrame:];
-[_TtC7iMazing20DeviceToolItemHeader initWithCoder:];

@end

@interface _TtC7iMazing20DeviceViewController : NSViewController <HelpURLProvider, _TtP7iMazing12DeviceViewer_> {
    /* instance variables */
     sidebarView;
     contentView;
     sidebarDraggingView;
     contentDraggingView;
     animationViewContainer;
     sidebarViewController;
     item;
     wizard;
     isDragging;
     contentViewController;
     canDropOnContent;
     contentViewObservation;
     sidebarIsDraggingObservation;
     contentIsDraggingObservation;
     animationViewController;
     initialPage;
     initialDataset;
     onLoad;
     oldContentViewControllerReference;
}

@property (T@"NSView",N,&,VsidebarView) sidebarView;
@property (T@"NSView",N,&,VcontentView) contentView;
@property (T@"_TtC7iMazing16FileDraggingView",N,&,VsidebarDraggingView) sidebarDraggingView;
@property (T@"_TtC7iMazing16FileDraggingView",N,&,VcontentDraggingView) contentDraggingView;
@property (T@"NSView",N,&,VanimationViewContainer) animationViewContainer;
@property (T@"_TtC7iMazing27DeviceSidebarViewController",N,&,VsidebarViewController) sidebarViewController;
@property (T@"_TtC7iMazing10DeviceItem",N,&,Vitem) item;
@property (T@"WizardWindowController",N,&,Vwizard) wizard;
@property (TB,N,VisDragging) isDragging;
@property (T@"NSViewController",N,&,VcontentViewController) contentViewController;
@property (TB,N,VcanDropOnContent) canDropOnContent;
@property (T@"NSString",N,R) nibName;
@property (T@"NSString",N,R) deviceID;
@property (T@"NSString",N,R) locationScheme;

/* instance methods */
-[_TtC7iMazing20DeviceViewController sidebarView];
-[_TtC7iMazing20DeviceViewController setSidebarView:];
-[_TtC7iMazing20DeviceViewController contentView];
-[_TtC7iMazing20DeviceViewController setContentView:];
-[_TtC7iMazing20DeviceViewController sidebarDraggingView];
-[_TtC7iMazing20DeviceViewController setSidebarDraggingView:];
-[_TtC7iMazing20DeviceViewController contentDraggingView];
-[_TtC7iMazing20DeviceViewController setContentDraggingView:];
-[_TtC7iMazing20DeviceViewController animationViewContainer];
-[_TtC7iMazing20DeviceViewController setAnimationViewContainer:];
-[_TtC7iMazing20DeviceViewController sidebarViewController];
-[_TtC7iMazing20DeviceViewController setSidebarViewController:];
-[_TtC7iMazing20DeviceViewController item];
-[_TtC7iMazing20DeviceViewController setItem:];
-[_TtC7iMazing20DeviceViewController wizard];
-[_TtC7iMazing20DeviceViewController setWizard:];
-[_TtC7iMazing20DeviceViewController isDragging];
-[_TtC7iMazing20DeviceViewController setIsDragging:];
-[_TtC7iMazing20DeviceViewController contentViewController];
-[_TtC7iMazing20DeviceViewController setContentViewController:];
-[_TtC7iMazing20DeviceViewController canDropOnContent];
-[_TtC7iMazing20DeviceViewController setCanDropOnContent:];
-[_TtC7iMazing20DeviceViewController initWithCoder:];
-[_TtC7iMazing20DeviceViewController nibName];
-[_TtC7iMazing20DeviceViewController viewDidLoad];
-[_TtC7iMazing20DeviceViewController showSummary:];
-[_TtC7iMazing20DeviceViewController showData:];
-[_TtC7iMazing20DeviceViewController showTools:];
-[_TtC7iMazing20DeviceViewController showSettings:];
-[_TtC7iMazing20DeviceViewController helpURL];
-[_TtC7iMazing20DeviceViewController deviceID];
-[_TtC7iMazing20DeviceViewController locationScheme];
-[_TtC7iMazing20DeviceViewController showScreen:];
-[_TtC7iMazing20DeviceViewController showHint:];
-[_TtC7iMazing20DeviceViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing20LottieViewController : NSViewController {
    /* instance variables */
     imageName;
     imageNameObserver;
     lastImageName;
}

@property (T@"NSString",N,C) imageName;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing20LottieViewController imageName];
-[_TtC7iMazing20LottieViewController setImageName:];
-[_TtC7iMazing20LottieViewController init];
-[_TtC7iMazing20LottieViewController initWithCoder:];
-[_TtC7iMazing20LottieViewController nibName];
-[_TtC7iMazing20LottieViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing20MainWindowController : NSWindowController <_TtP7iMazing30UserInteractionManagerDelegate_, NSWindowDelegate> {
    /* instance variables */
     contentView;
     operationViewContainer;
     operationViewPlaceholder;
     operationPopoverView;
     hintContainer;
     exiting;
     homeViewController;
     operationViewController;
     detailViewController;
     preferencesWindowController;
     showOperationsView;
     showForceQuitButton;
     deviceCurrentlyProcessing;
     backupLocationScreenDataWindowController;
     detailViewObservation;
     operationObserver;
     deviceRemovedObserver;
     preventOpeningOperationsPopover;
     deviceManagerNotificationsStarted;
     hintController;
     oldDetailViewControllerReference;
}

@property (T@"NSView",N,&,VcontentView) contentView;
@property (T@"NSView",N,&,VoperationViewContainer) operationViewContainer;
@property (T@"NSView",N,&,VoperationViewPlaceholder) operationViewPlaceholder;
@property (T@"_TtC7iMazing20OperationPopoverView",N,&,VoperationPopoverView) operationPopoverView;
@property (T@"NSView",N,&,VhintContainer) hintContainer;
@property (T@"NSString",N,R) windowNibName;
@property (TB,N,Vexiting) exiting;
@property (T@"_TtC7iMazing18HomeViewController",N,&,VhomeViewController) homeViewController;
@property (T@"_TtC7iMazing27OperationListViewController",N,&,VoperationViewController) operationViewController;
@property (T@"NSViewController",N,&,VdetailViewController) detailViewController;
@property (T@"_TtC7iMazing27PreferencesWindowController",N,&,VpreferencesWindowController) preferencesWindowController;
@property (TB,N,VshowOperationsView) showOperationsView;
@property (TB,N,VshowForceQuitButton) showForceQuitButton;
@property (T@"_TtC7iMazing10DeviceItem",N,&,VdeviceCurrentlyProcessing) deviceCurrentlyProcessing;
@property (T@"_TtC7iMazing18HintViewController",N,&,VhintController) hintController;

/* instance methods */
-[_TtC7iMazing20MainWindowController contentView];
-[_TtC7iMazing20MainWindowController setContentView:];
-[_TtC7iMazing20MainWindowController operationViewContainer];
-[_TtC7iMazing20MainWindowController setOperationViewContainer:];
-[_TtC7iMazing20MainWindowController operationViewPlaceholder];
-[_TtC7iMazing20MainWindowController setOperationViewPlaceholder:];
-[_TtC7iMazing20MainWindowController operationPopoverView];
-[_TtC7iMazing20MainWindowController setOperationPopoverView:];
-[_TtC7iMazing20MainWindowController hintContainer];
-[_TtC7iMazing20MainWindowController setHintContainer:];
-[_TtC7iMazing20MainWindowController windowNibName];
-[_TtC7iMazing20MainWindowController exiting];
-[_TtC7iMazing20MainWindowController setExiting:];
-[_TtC7iMazing20MainWindowController homeViewController];
-[_TtC7iMazing20MainWindowController setHomeViewController:];
-[_TtC7iMazing20MainWindowController operationViewController];
-[_TtC7iMazing20MainWindowController setOperationViewController:];
-[_TtC7iMazing20MainWindowController detailViewController];
-[_TtC7iMazing20MainWindowController setDetailViewController:];
-[_TtC7iMazing20MainWindowController preferencesWindowController];
-[_TtC7iMazing20MainWindowController setPreferencesWindowController:];
-[_TtC7iMazing20MainWindowController showOperationsView];
-[_TtC7iMazing20MainWindowController setShowOperationsView:];
-[_TtC7iMazing20MainWindowController showForceQuitButton];
-[_TtC7iMazing20MainWindowController setShowForceQuitButton:];
-[_TtC7iMazing20MainWindowController deviceCurrentlyProcessing];
-[_TtC7iMazing20MainWindowController setDeviceCurrentlyProcessing:];
-[_TtC7iMazing20MainWindowController hintController];
-[_TtC7iMazing20MainWindowController setHintController:];
-[_TtC7iMazing20MainWindowController windowDidLoad];
-[_TtC7iMazing20MainWindowController preventOpeningOperationsPopover:];
-[_TtC7iMazing20MainWindowController didSelectArchive:];
-[_TtC7iMazing20MainWindowController WillShowAlertBox:];
-[_TtC7iMazing20MainWindowController DidShowAlertBox:];
-[_TtC7iMazing20MainWindowController windowShouldClose:];
-[_TtC7iMazing20MainWindowController windowWillClose:];
-[_TtC7iMazing20MainWindowController forceQuit:];
-[_TtC7iMazing20MainWindowController invertAppearance:];
-[_TtC7iMazing20MainWindowController checkForUpdates:];
-[_TtC7iMazing20MainWindowController showAboutWindow:];
-[_TtC7iMazing20MainWindowController showAlternateAboutWindow:];
-[_TtC7iMazing20MainWindowController showPreferencesWindow];
-[_TtC7iMazing20MainWindowController showPreferencesWindowForTitle:];
-[_TtC7iMazing20MainWindowController showPreferencesWindow:];
-[_TtC7iMazing20MainWindowController showGuidedTour:];
-[_TtC7iMazing20MainWindowController showPairingInfoNote:];
-[_TtC7iMazing20MainWindowController openMini:];
-[_TtC7iMazing20MainWindowController openiMazingProfileEditor:];
-[_TtC7iMazing20MainWindowController openiMazingHEICConverter:];
-[_TtC7iMazing20MainWindowController showSendFeedbackOrBugReport:];
-[_TtC7iMazing20MainWindowController showHelp:];
-[_TtC7iMazing20MainWindowController socialVisitReddit:];
-[_TtC7iMazing20MainWindowController socialVisitYoutube:];
-[_TtC7iMazing20MainWindowController socialVisitMastodon:];
-[_TtC7iMazing20MainWindowController showBuyScreen:];
-[_TtC7iMazing20MainWindowController showWelcomeScreen:];
-[_TtC7iMazing20MainWindowController enterLicenseCode:];
-[_TtC7iMazing20MainWindowController activateWithALicenseFile:];
-[_TtC7iMazing20MainWindowController viewLicense:];
-[_TtC7iMazing20MainWindowController viewMyPlan:];
-[_TtC7iMazing20MainWindowController managePlan:];
-[_TtC7iMazing20MainWindowController updatePayementMethod:];
-[_TtC7iMazing20MainWindowController cancelSubscription:];
-[_TtC7iMazing20MainWindowController viewMyAccount:];
-[_TtC7iMazing20MainWindowController openRetrieveLicensePage:];
-[_TtC7iMazing20MainWindowController deactivateLicense:];
-[_TtC7iMazing20MainWindowController showOperations:];
-[_TtC7iMazing20MainWindowController hideOperations];
-[_TtC7iMazing20MainWindowController deviceID];
-[_TtC7iMazing20MainWindowController locationScheme];
-[_TtC7iMazing20MainWindowController showSelectDeviceInteraction:];
-[_TtC7iMazing20MainWindowController showScreenData:];
-[_TtC7iMazing20MainWindowController showHintData:];
-[_TtC7iMazing20MainWindowController shouldShowDialogBoxData:from:];
-[_TtC7iMazing20MainWindowController showWizard:device:];
-[_TtC7iMazing20MainWindowController flashOperations];
-[_TtC7iMazing20MainWindowController showOperation:];
-[_TtC7iMazing20MainWindowController showOperation:device:];
-[_TtC7iMazing20MainWindowController showConsoleWithDevice:];
-[_TtC7iMazing20MainWindowController showOptionsWithDevice:];
-[_TtC7iMazing20MainWindowController initWithWindow:];
-[_TtC7iMazing20MainWindowController initWithCoder:];

@end

@interface _TtC7iMazing20ManageArchivesWizard : WizardWindowController

/* instance methods */
-[_TtC7iMazing20ManageArchivesWizard initWithDevice:];
-[_TtC7iMazing20ManageArchivesWizard initWithCoder:];
-[_TtC7iMazing20ManageArchivesWizard initWithTitle:device:requiresConnection:];

@end

@interface _TtC7iMazing20MediaTracksTableView : VKTableView {
    /* instance variables */
     previousVisibleTracks;
     allowColumnSorting;
}

/* instance methods */
-[_TtC7iMazing20MediaTracksTableView initWithCoder:];
-[_TtC7iMazing20MediaTracksTableView dealloc];
-[_TtC7iMazing20MediaTracksTableView applicationWillResignActive:];
-[_TtC7iMazing20MediaTracksTableView layout];
-[_TtC7iMazing20MediaTracksTableView initWithFrame:];

@end

@interface _TtC7iMazing20MessagesMediaHandler : NSObject {
    /* instance variables */
     manager;
     controller;
     threadMaxCount;
     threadPool;
     pendingQueue;
     processingQueue;
     loadedMedias;
     lock;
}

/* class methods */
+[_TtC7iMazing20MessagesMediaHandler workThread:];

/* instance methods */
-[_TtC7iMazing20MessagesMediaHandler init:manager:controller:];
-[_TtC7iMazing20MessagesMediaHandler updateWithDisplayedMedia:];
-[_TtC7iMazing20MessagesMediaHandler init];

@end

@interface _TtC7iMazing20OperationPopoverView : NSView {
    /* instance variables */
     controller;
     eventMonitor;
}

/* instance methods */
-[_TtC7iMazing20OperationPopoverView initWithFrame:];
-[_TtC7iMazing20OperationPopoverView initWithCoder:];
-[_TtC7iMazing20OperationPopoverView showController];
-[_TtC7iMazing20OperationPopoverView drawRect:];

@end

@interface _TtC7iMazing20RoundImageCornerCell : NSImageCell {
    /* instance variables */
     radius;
}

@property (Td,N,Vradius) radius;

/* instance methods */
-[_TtC7iMazing20RoundImageCornerCell radius];
-[_TtC7iMazing20RoundImageCornerCell setRadius:];
-[_TtC7iMazing20RoundImageCornerCell drawInteriorWithFrame:inView:];
-[_TtC7iMazing20RoundImageCornerCell init];
-[_TtC7iMazing20RoundImageCornerCell initTextCell:];
-[_TtC7iMazing20RoundImageCornerCell initImageCell:];
-[_TtC7iMazing20RoundImageCornerCell initWithCoder:];

@end

@interface _TtC7iMazing20SelectableDeviceItem : NSObject <NSObject> {
    /* instance variables */
     isSelected;
     allowSelection;
     allowContextualMenu;
     selectionTooltip;
     deviceItem;
}

@property (TB,N,VisSelected) isSelected;
@property (TB,N,VallowSelection) allowSelection;
@property (TB,N,VallowContextualMenu) allowContextualMenu;
@property (T@"NSString",N,C) selectionTooltip;
@property (T@"_TtC7iMazing10DeviceItem",N,&,VdeviceItem) deviceItem;

/* instance methods */
-[_TtC7iMazing20SelectableDeviceItem isSelected];
-[_TtC7iMazing20SelectableDeviceItem setIsSelected:];
-[_TtC7iMazing20SelectableDeviceItem allowSelection];
-[_TtC7iMazing20SelectableDeviceItem setAllowSelection:];
-[_TtC7iMazing20SelectableDeviceItem allowContextualMenu];
-[_TtC7iMazing20SelectableDeviceItem setAllowContextualMenu:];
-[_TtC7iMazing20SelectableDeviceItem selectionTooltip];
-[_TtC7iMazing20SelectableDeviceItem setSelectionTooltip:];
-[_TtC7iMazing20SelectableDeviceItem deviceItem];
-[_TtC7iMazing20SelectableDeviceItem setDeviceItem:];
-[_TtC7iMazing20SelectableDeviceItem isEqual:];
-[_TtC7iMazing20SelectableDeviceItem init];

@end

@interface _TtC7iMazing20StackViewContentView : NSView {
    /* instance variables */
     doNotClipSubviews;
     cachedStackView;
}

@property (TB,N,VdoNotClipSubviews) doNotClipSubviews;
@property (TB,N) hidden;
@property (TB,N,R) wantsDefaultClipping;

/* instance methods */
-[_TtC7iMazing20StackViewContentView doNotClipSubviews];
-[_TtC7iMazing20StackViewContentView setDoNotClipSubviews:];
-[_TtC7iMazing20StackViewContentView awakeFromNib];
-[_TtC7iMazing20StackViewContentView isHidden];
-[_TtC7iMazing20StackViewContentView setHidden:];
-[_TtC7iMazing20StackViewContentView wantsDefaultClipping];
-[_TtC7iMazing20StackViewContentView makeBackingLayer];
-[_TtC7iMazing20StackViewContentView initWithFrame:];
-[_TtC7iMazing20StackViewContentView initWithCoder:];

@end

@interface _TtC7iMazing20TransparentTableView : NSTableView

/* instance methods */
-[_TtC7iMazing20TransparentTableView initWithCoder:];
-[_TtC7iMazing20TransparentTableView initWithFrame:];

@end

@interface _TtC7iMazing21BackupHistoryProvider : NSObject {
    /* instance variables */
     device;
     items;
     isLoading;
     backupVolumeNotFound;
     loadingLabel;
     activeVersion;
     manager;
}

@property (T@"NSArray",N,C) items;
@property (TB,N,VisLoading) isLoading;
@property (TB,N,VbackupVolumeNotFound) backupVolumeNotFound;
@property (T@"NSString",N,C) loadingLabel;
@property (T@"_TtC7iMazing17BackupHistoryItem",N,&,VactiveVersion) activeVersion;

/* instance methods */
-[_TtC7iMazing21BackupHistoryProvider items];
-[_TtC7iMazing21BackupHistoryProvider setItems:];
-[_TtC7iMazing21BackupHistoryProvider isLoading];
-[_TtC7iMazing21BackupHistoryProvider setIsLoading:];
-[_TtC7iMazing21BackupHistoryProvider backupVolumeNotFound];
-[_TtC7iMazing21BackupHistoryProvider setBackupVolumeNotFound:];
-[_TtC7iMazing21BackupHistoryProvider loadingLabel];
-[_TtC7iMazing21BackupHistoryProvider setLoadingLabel:];
-[_TtC7iMazing21BackupHistoryProvider activeVersion];
-[_TtC7iMazing21BackupHistoryProvider setActiveVersion:];
-[_TtC7iMazing21BackupHistoryProvider dealloc];
-[_TtC7iMazing21BackupHistoryProvider didSelectArchive:];
-[_TtC7iMazing21BackupHistoryProvider versioningManagerDidUpdate:];
-[_TtC7iMazing21BackupHistoryProvider applicationNotification:];
-[_TtC7iMazing21BackupHistoryProvider init];

@end

@interface _TtC7iMazing21DeviceArrayController : NSArrayController

/* instance methods */
-[_TtC7iMazing21DeviceArrayController initWithContent:];
-[_TtC7iMazing21DeviceArrayController initWithCoder:];
-[_TtC7iMazing21DeviceArrayController dealloc];

@end

@interface _TtC7iMazing21DeviceControllerCache : NSObject {
    /* instance variables */
     cache;
}

/* instance methods */
-[_TtC7iMazing21DeviceControllerCache init];

@end

@interface _TtC7iMazing21LoadingViewController : NSViewController {
    /* instance variables */
     explicitLoadingDelayBehaviour;
     onReloadClicked;
     reloadButtonLabel;
     didLoadOnce;
     isLoadingExplicit;
     isLoading;
     isShowingError;
     loadingText;
     loadingImageName;
     loadingImage;
     shouldBeShown;
     showReloadButton;
     isIndeterminate;
     progress;
     isAwake;
     viewToHide;
     onOperationDidEnd;
     operation;
     displayProgressDelayMS;
     minDurationMS;
     timeExplicitLoadStart;
     timeExplicitLoadStop;
     onFinishUID;
     onCancelUID;
     onProgressUID;
}

@property (T@"NSString",N,C) reloadButtonLabel;
@property (TB,N,VdidLoadOnce) didLoadOnce;
@property (TB,N,VisLoadingExplicit) isLoadingExplicit;
@property (TB,N,VisLoading) isLoading;
@property (TB,N,VisShowingError) isShowingError;
@property (T@"NSString",N,C) loadingText;
@property (T@"NSString",N,C) loadingImageName;
@property (T@"NSImage",N,&,VloadingImage) loadingImage;
@property (TB,N,VshouldBeShown) shouldBeShown;
@property (TB,N,VshowReloadButton) showReloadButton;
@property (TB,N,VisIndeterminate) isIndeterminate;
@property (Td,N,Vprogress) progress;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing21LoadingViewController reloadButtonLabel];
-[_TtC7iMazing21LoadingViewController setReloadButtonLabel:];
-[_TtC7iMazing21LoadingViewController didLoadOnce];
-[_TtC7iMazing21LoadingViewController setDidLoadOnce:];
-[_TtC7iMazing21LoadingViewController isLoadingExplicit];
-[_TtC7iMazing21LoadingViewController setIsLoadingExplicit:];
-[_TtC7iMazing21LoadingViewController isLoading];
-[_TtC7iMazing21LoadingViewController setIsLoading:];
-[_TtC7iMazing21LoadingViewController isShowingError];
-[_TtC7iMazing21LoadingViewController setIsShowingError:];
-[_TtC7iMazing21LoadingViewController loadingText];
-[_TtC7iMazing21LoadingViewController setLoadingText:];
-[_TtC7iMazing21LoadingViewController loadingImageName];
-[_TtC7iMazing21LoadingViewController setLoadingImageName:];
-[_TtC7iMazing21LoadingViewController loadingImage];
-[_TtC7iMazing21LoadingViewController setLoadingImage:];
-[_TtC7iMazing21LoadingViewController shouldBeShown];
-[_TtC7iMazing21LoadingViewController setShouldBeShown:];
-[_TtC7iMazing21LoadingViewController showReloadButton];
-[_TtC7iMazing21LoadingViewController setShowReloadButton:];
-[_TtC7iMazing21LoadingViewController isIndeterminate];
-[_TtC7iMazing21LoadingViewController setIsIndeterminate:];
-[_TtC7iMazing21LoadingViewController progress];
-[_TtC7iMazing21LoadingViewController setProgress:];
-[_TtC7iMazing21LoadingViewController nibName];
-[_TtC7iMazing21LoadingViewController initWithCoder:];
-[_TtC7iMazing21LoadingViewController dealloc];
-[_TtC7iMazing21LoadingViewController awakeFromNib];
-[_TtC7iMazing21LoadingViewController reloadButtonClicked:];
-[_TtC7iMazing21LoadingViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing21MediaColumnDefinition : NSObject {
    /* instance variables */
     title;
     width;
     isHidden;
     position;
}

@property (T@"NSString",N,C) title;
@property (Td,N,Vwidth) width;
@property (TB,N,VisHidden) isHidden;

/* instance methods */
-[_TtC7iMazing21MediaColumnDefinition title];
-[_TtC7iMazing21MediaColumnDefinition setTitle:];
-[_TtC7iMazing21MediaColumnDefinition width];
-[_TtC7iMazing21MediaColumnDefinition setWidth:];
-[_TtC7iMazing21MediaColumnDefinition isHidden];
-[_TtC7iMazing21MediaColumnDefinition setIsHidden:];
-[_TtC7iMazing21MediaColumnDefinition init];

@end

@interface _TtC7iMazing21MediaDisplayOperation : _TtCs12_SwiftObject {
    /* instance variables */
     viewController;
     operation;
     onProgressUUID;
     onCancelUUID;
     onFinishUUID;
}

@end

@interface _TtC7iMazing21MediaPlayerThinSlider : NSSlider {
    /* instance variables */
     showKnob;
}

/* class methods */
+[_TtC7iMazing21MediaPlayerThinSlider cellClass];
+[_TtC7iMazing21MediaPlayerThinSlider setCellClass:];

/* instance methods */
-[_TtC7iMazing21MediaPlayerThinSlider initWithFrame:];
-[_TtC7iMazing21MediaPlayerThinSlider initWithCoder:];

@end

@interface _TtC7iMazing21PhotoDisplayOperation : _TtCs12_SwiftObject {
    /* instance variables */
     photoViewController;
     operation;
     onStartUUID;
     onProgressUUID;
     onCancelUUID;
     onFinishUUID;
}

@end

@interface _TtC7iMazing21PhotoMapTableCellView : NSTableCellView {
    /* instance variables */
     onOpenInBrowser;
     isAwake;
     cachedContainerView;
     cachedMapView;
}

/* instance methods */
-[_TtC7iMazing21PhotoMapTableCellView awakeFromNib];
-[_TtC7iMazing21PhotoMapTableCellView mouseDown:];
-[_TtC7iMazing21PhotoMapTableCellView initWithFrame:];
-[_TtC7iMazing21PhotoMapTableCellView initWithCoder:];

@end

@interface _TtC7iMazing21PhotoNavigationButton : NSButton {
    /* instance variables */
     fireInterval;
     fadeDuration;
     visibleAlphaValue;
     trackingAreaWidth;
     backgroundColorName;
     isAwake;
     ignoreClick;
     fireCount;
     repeatClickTimer;
     clearCountTimer;
}

@property (Td,N,VfireInterval) fireInterval;
@property (Td,N,VfadeDuration) fadeDuration;
@property (Td,N,VvisibleAlphaValue) visibleAlphaValue;
@property (Td,N,VtrackingAreaWidth) trackingAreaWidth;
@property (T@"NSString",N,C) backgroundColorName;

/* instance methods */
-[_TtC7iMazing21PhotoNavigationButton fireInterval];
-[_TtC7iMazing21PhotoNavigationButton setFireInterval:];
-[_TtC7iMazing21PhotoNavigationButton fadeDuration];
-[_TtC7iMazing21PhotoNavigationButton setFadeDuration:];
-[_TtC7iMazing21PhotoNavigationButton visibleAlphaValue];
-[_TtC7iMazing21PhotoNavigationButton setVisibleAlphaValue:];
-[_TtC7iMazing21PhotoNavigationButton trackingAreaWidth];
-[_TtC7iMazing21PhotoNavigationButton setTrackingAreaWidth:];
-[_TtC7iMazing21PhotoNavigationButton backgroundColorName];
-[_TtC7iMazing21PhotoNavigationButton setBackgroundColorName:];
-[_TtC7iMazing21PhotoNavigationButton awakeFromNib];
-[_TtC7iMazing21PhotoNavigationButton mouseDown:];
-[_TtC7iMazing21PhotoNavigationButton mouseUp:];
-[_TtC7iMazing21PhotoNavigationButton onClearCountTimer];
-[_TtC7iMazing21PhotoNavigationButton onDelayUntilRepeat];
-[_TtC7iMazing21PhotoNavigationButton onRepeatClickTimer];
-[_TtC7iMazing21PhotoNavigationButton updateTrackingAreas];
-[_TtC7iMazing21PhotoNavigationButton mouseEntered:];
-[_TtC7iMazing21PhotoNavigationButton mouseExited:];
-[_TtC7iMazing21PhotoNavigationButton fadeOut];
-[_TtC7iMazing21PhotoNavigationButton initWithFrame:];
-[_TtC7iMazing21PhotoNavigationButton initWithCoder:];

@end

@interface _TtC7iMazing21PhotoTreeNodeCellView : NSTableCellView

/* instance methods */
-[_TtC7iMazing21PhotoTreeNodeCellView initWithCoder:];
-[_TtC7iMazing21PhotoTreeNodeCellView initWithFrame:];

@end

@interface _TtC7iMazing21PromoWindowController : NSWindowController <WKNavigationDelegate, WKUIDelegate> {
    /* instance variables */
     data;
     hideDontShowAgain;
     webViewContainer;
     webView;
     shown;
}

@property (T@"_TtC7iMazing9PromoData",N,&,Vdata) data;
@property (TB,N,VhideDontShowAgain) hideDontShowAgain;
@property (T@"WKWebView",N,&,VwebViewContainer) webViewContainer;
@property (T@"NSString",N,R) windowNibName;

/* instance methods */
-[_TtC7iMazing21PromoWindowController data];
-[_TtC7iMazing21PromoWindowController setData:];
-[_TtC7iMazing21PromoWindowController hideDontShowAgain];
-[_TtC7iMazing21PromoWindowController setHideDontShowAgain:];
-[_TtC7iMazing21PromoWindowController webViewContainer];
-[_TtC7iMazing21PromoWindowController setWebViewContainer:];
-[_TtC7iMazing21PromoWindowController initWithCoder:];
-[_TtC7iMazing21PromoWindowController windowNibName];
-[_TtC7iMazing21PromoWindowController windowDidLoad];
-[_TtC7iMazing21PromoWindowController webView:didFinishNavigation:];
-[_TtC7iMazing21PromoWindowController webView:decidePolicyForNavigationAction:decisionHandler:];
-[_TtC7iMazing21PromoWindowController close:];
-[_TtC7iMazing21PromoWindowController initWithWindow:];

@end

@interface _TtC7iMazing22DispatchableDeviceItem : NSObject {
    /* instance variables */
     operation;
     device;
     status;
     deviceReachability;
     _interactionStatus;
     _deviceNumber;
     _cachedIcons;
     _dismissTime;
     _dialogBoxData;
     _screenData;
     statusOrder;
     isChecked;
     showCheckbox;
     enableCheckbox;
     collapseCheckbox;
     deviceIcon;
     accessoryImage;
     statusColor;
     pausePlayViewImage;
     showPausePlayViewButton;
     stopRefreshImage;
     showStopRefreshButton;
     supervised;
     deviceName;
     statusMessage;
     progress;
     showProgress;
     indeterminate;
     osVersion;
     statusTooltip;
     connectionSortOrder;
     usbPortNumber;
     serial;
     model;
     udid;
     orgName;
     fullTextIndex;
     successfulDisconnectTime;
}

@property (Tq,N,VstatusOrder) statusOrder;
@property (TB,N,VisChecked) isChecked;
@property (TB,N,VshowCheckbox) showCheckbox;
@property (TB,N,VenableCheckbox) enableCheckbox;
@property (TB,N,VcollapseCheckbox) collapseCheckbox;
@property (T@"NSImage",N,&,VdeviceIcon) deviceIcon;
@property (T@"NSImage",N,&,VaccessoryImage) accessoryImage;
@property (T@"NSColor",N,&,VstatusColor) statusColor;
@property (T@"NSImage",N,&,VpausePlayViewImage) pausePlayViewImage;
@property (TB,N,VshowPausePlayViewButton) showPausePlayViewButton;
@property (T@"NSImage",N,&,VstopRefreshImage) stopRefreshImage;
@property (TB,N,VshowStopRefreshButton) showStopRefreshButton;
@property (TB,N,Vsupervised) supervised;
@property (T@"NSString",N,C) deviceName;
@property (T@"NSString",N,C) statusMessage;
@property (Td,N,Vprogress) progress;
@property (TB,N,VshowProgress) showProgress;
@property (TB,N,Vindeterminate) indeterminate;
@property (T@"NSString",N,C) osVersion;
@property (T@"NSString",N,C) statusTooltip;
@property (Tq,N,VconnectionSortOrder) connectionSortOrder;
@property (T@"NSNumber",N,&,VusbPortNumber) usbPortNumber;
@property (T@"NSString",N,C) serial;
@property (T@"NSString",N,C) model;
@property (T@"NSString",N,C) udid;
@property (T@"NSString",N,C) orgName;
@property (T@"NSString",N,C) fullTextIndex;

/* instance methods */
-[_TtC7iMazing22DispatchableDeviceItem statusOrder];
-[_TtC7iMazing22DispatchableDeviceItem setStatusOrder:];
-[_TtC7iMazing22DispatchableDeviceItem isChecked];
-[_TtC7iMazing22DispatchableDeviceItem setIsChecked:];
-[_TtC7iMazing22DispatchableDeviceItem showCheckbox];
-[_TtC7iMazing22DispatchableDeviceItem setShowCheckbox:];
-[_TtC7iMazing22DispatchableDeviceItem enableCheckbox];
-[_TtC7iMazing22DispatchableDeviceItem setEnableCheckbox:];
-[_TtC7iMazing22DispatchableDeviceItem collapseCheckbox];
-[_TtC7iMazing22DispatchableDeviceItem setCollapseCheckbox:];
-[_TtC7iMazing22DispatchableDeviceItem deviceIcon];
-[_TtC7iMazing22DispatchableDeviceItem setDeviceIcon:];
-[_TtC7iMazing22DispatchableDeviceItem accessoryImage];
-[_TtC7iMazing22DispatchableDeviceItem setAccessoryImage:];
-[_TtC7iMazing22DispatchableDeviceItem statusColor];
-[_TtC7iMazing22DispatchableDeviceItem setStatusColor:];
-[_TtC7iMazing22DispatchableDeviceItem pausePlayViewImage];
-[_TtC7iMazing22DispatchableDeviceItem setPausePlayViewImage:];
-[_TtC7iMazing22DispatchableDeviceItem showPausePlayViewButton];
-[_TtC7iMazing22DispatchableDeviceItem setShowPausePlayViewButton:];
-[_TtC7iMazing22DispatchableDeviceItem stopRefreshImage];
-[_TtC7iMazing22DispatchableDeviceItem setStopRefreshImage:];
-[_TtC7iMazing22DispatchableDeviceItem showStopRefreshButton];
-[_TtC7iMazing22DispatchableDeviceItem setShowStopRefreshButton:];
-[_TtC7iMazing22DispatchableDeviceItem supervised];
-[_TtC7iMazing22DispatchableDeviceItem setSupervised:];
-[_TtC7iMazing22DispatchableDeviceItem deviceName];
-[_TtC7iMazing22DispatchableDeviceItem setDeviceName:];
-[_TtC7iMazing22DispatchableDeviceItem statusMessage];
-[_TtC7iMazing22DispatchableDeviceItem setStatusMessage:];
-[_TtC7iMazing22DispatchableDeviceItem progress];
-[_TtC7iMazing22DispatchableDeviceItem setProgress:];
-[_TtC7iMazing22DispatchableDeviceItem showProgress];
-[_TtC7iMazing22DispatchableDeviceItem setShowProgress:];
-[_TtC7iMazing22DispatchableDeviceItem indeterminate];
-[_TtC7iMazing22DispatchableDeviceItem setIndeterminate:];
-[_TtC7iMazing22DispatchableDeviceItem osVersion];
-[_TtC7iMazing22DispatchableDeviceItem setOsVersion:];
-[_TtC7iMazing22DispatchableDeviceItem statusTooltip];
-[_TtC7iMazing22DispatchableDeviceItem setStatusTooltip:];
-[_TtC7iMazing22DispatchableDeviceItem connectionSortOrder];
-[_TtC7iMazing22DispatchableDeviceItem setConnectionSortOrder:];
-[_TtC7iMazing22DispatchableDeviceItem usbPortNumber];
-[_TtC7iMazing22DispatchableDeviceItem setUsbPortNumber:];
-[_TtC7iMazing22DispatchableDeviceItem serial];
-[_TtC7iMazing22DispatchableDeviceItem setSerial:];
-[_TtC7iMazing22DispatchableDeviceItem model];
-[_TtC7iMazing22DispatchableDeviceItem setModel:];
-[_TtC7iMazing22DispatchableDeviceItem udid];
-[_TtC7iMazing22DispatchableDeviceItem setUdid:];
-[_TtC7iMazing22DispatchableDeviceItem orgName];
-[_TtC7iMazing22DispatchableDeviceItem setOrgName:];
-[_TtC7iMazing22DispatchableDeviceItem fullTextIndex];
-[_TtC7iMazing22DispatchableDeviceItem setFullTextIndex:];
-[_TtC7iMazing22DispatchableDeviceItem dealloc];
-[_TtC7iMazing22DispatchableDeviceItem isEqual:];
-[_TtC7iMazing22DispatchableDeviceItem init];

@end

@interface _TtC7iMazing22MediaDisabledTextField : NSTextField {
    /* instance variables */
     cachedInitialColor;
}

@property (TB,N) enabled;

/* instance methods */
-[_TtC7iMazing22MediaDisabledTextField isEnabled];
-[_TtC7iMazing22MediaDisabledTextField setEnabled:];
-[_TtC7iMazing22MediaDisabledTextField initWithFrame:];
-[_TtC7iMazing22MediaDisabledTextField initWithCoder:];

@end

@interface _TtC7iMazing22MediaNoHighlightButton : NSButton {
    /* instance variables */
     tooltipLabel;
     isAwake;
}

@property (T@"NSString",N,C) tooltipLabel;

/* instance methods */
-[_TtC7iMazing22MediaNoHighlightButton tooltipLabel];
-[_TtC7iMazing22MediaNoHighlightButton setTooltipLabel:];
-[_TtC7iMazing22MediaNoHighlightButton awakeFromNib];
-[_TtC7iMazing22MediaNoHighlightButton drawRect:];
-[_TtC7iMazing22MediaNoHighlightButton initWithFrame:];
-[_TtC7iMazing22MediaNoHighlightButton initWithCoder:];

@end

@interface _TtC7iMazing22MediaTrackTableRowView : NSTableRowView {
    /* instance variables */
     mouseOverBackgroundColor;
     trackingArea;
     mouseOver;
}

@property (T@"NSString",N,C) mouseOverBackgroundColor;
@property (TB,N,VmouseOver) mouseOver;

/* instance methods */
-[_TtC7iMazing22MediaTrackTableRowView mouseOverBackgroundColor];
-[_TtC7iMazing22MediaTrackTableRowView setMouseOverBackgroundColor:];
-[_TtC7iMazing22MediaTrackTableRowView mouseOver];
-[_TtC7iMazing22MediaTrackTableRowView setMouseOver:];
-[_TtC7iMazing22MediaTrackTableRowView initWithFrame:];
-[_TtC7iMazing22MediaTrackTableRowView initWithCoder:];
-[_TtC7iMazing22MediaTrackTableRowView updateTrackingAreas];
-[_TtC7iMazing22MediaTrackTableRowView mouseEntered:];
-[_TtC7iMazing22MediaTrackTableRowView mouseExited:];
-[_TtC7iMazing22MediaTrackTableRowView drawBackgroundInRect:];

@end

@interface _TtC7iMazing22MediaTracksTableColumn : NSTableColumn {
    /* instance variables */
     imageNamed;
     size;
     tooltipLabel;
}

@property (T@"NSString",N,C) imageNamed;
@property (Td,N,Vsize) size;
@property (T@"NSString",N,C) tooltipLabel;
@property (T@"NSTableHeaderCell",N,&) headerCell;
@property (T@"NSSortDescriptor",N,&) sortDescriptorPrototype;

/* instance methods */
-[_TtC7iMazing22MediaTracksTableColumn imageNamed];
-[_TtC7iMazing22MediaTracksTableColumn setImageNamed:];
-[_TtC7iMazing22MediaTracksTableColumn size];
-[_TtC7iMazing22MediaTracksTableColumn setSize:];
-[_TtC7iMazing22MediaTracksTableColumn tooltipLabel];
-[_TtC7iMazing22MediaTracksTableColumn setTooltipLabel:];
-[_TtC7iMazing22MediaTracksTableColumn headerCell];
-[_TtC7iMazing22MediaTracksTableColumn setHeaderCell:];
-[_TtC7iMazing22MediaTracksTableColumn sortDescriptorPrototype];
-[_TtC7iMazing22MediaTracksTableColumn setSortDescriptorPrototype:];
-[_TtC7iMazing22MediaTracksTableColumn initWithIdentifier:];
-[_TtC7iMazing22MediaTracksTableColumn initWithCoder:];

@end

@interface _TtC7iMazing22OperationOverlayButton : NSButton

@property (TB,N,R) mouseDownCanMoveWindow;

/* instance methods */
-[_TtC7iMazing22OperationOverlayButton mouseDownCanMoveWindow];
-[_TtC7iMazing22OperationOverlayButton initWithFrame:];
-[_TtC7iMazing22OperationOverlayButton initWithCoder:];

@end

@interface _TtC7iMazing22PodcastsViewController : _TtC7iMazing19MediaViewController

/* instance methods */
-[_TtC7iMazing22PodcastsViewController initWithDevice:];
-[_TtC7iMazing22PodcastsViewController initWithDataset:device:];
-[_TtC7iMazing22PodcastsViewController viewDidLoad];
-[_TtC7iMazing22PodcastsViewController toolbarButtons];

@end

@interface _TtC7iMazing22RegistrationButtonView : NSView {
    /* instance variables */
     trackingArea;
     mouseOver;
     color;
}

/* instance methods */
-[_TtC7iMazing22RegistrationButtonView updateTrackingAreas];
-[_TtC7iMazing22RegistrationButtonView mouseEntered:];
-[_TtC7iMazing22RegistrationButtonView mouseExited:];
-[_TtC7iMazing22RegistrationButtonView drawRect:];
-[_TtC7iMazing22RegistrationButtonView initWithFrame:];
-[_TtC7iMazing22RegistrationButtonView initWithCoder:];

@end

@interface _TtC7iMazing22RegistrationTextButton : NSButton {
    /* instance variables */
     titleObserver;
     trackingArea;
     mouseOver;
}

/* instance methods */
-[_TtC7iMazing22RegistrationTextButton initWithFrame:];
-[_TtC7iMazing22RegistrationTextButton initWithCoder:];
-[_TtC7iMazing22RegistrationTextButton updateTrackingAreas];
-[_TtC7iMazing22RegistrationTextButton mouseEntered:];
-[_TtC7iMazing22RegistrationTextButton mouseExited:];

@end

@interface _TtC7iMazing22ShortcutWidgetMoreItem : NSCollectionViewItem

/* instance methods */
-[_TtC7iMazing22ShortcutWidgetMoreItem initWithNibName:bundle:];
-[_TtC7iMazing22ShortcutWidgetMoreItem initWithCoder:];

@end

@interface _TtC7iMazing22UserInteractionManager : NSObject <NSUserNotificationCenterDelegate> {
    /* instance variables */
     screenData;
     hintData;
     delegate;
}

@property (T@"<_TtP7iMazing30UserInteractionManagerDelegate_>",N,W,Vdelegate) delegate;

/* class methods */
+[_TtC7iMazing22UserInteractionManager shared];
+[_TtC7iMazing22UserInteractionManager notificationWillShowAlertBox];
+[_TtC7iMazing22UserInteractionManager notificationDidShowAlertBox];
+[_TtC7iMazing22UserInteractionManager notificationWillShowScreenData];

/* instance methods */
-[_TtC7iMazing22UserInteractionManager delegate];
-[_TtC7iMazing22UserInteractionManager setDelegate:];
-[_TtC7iMazing22UserInteractionManager init];
-[_TtC7iMazing22UserInteractionManager dealloc];
-[_TtC7iMazing22UserInteractionManager handleNotificationForDialogBoxData:];
-[_TtC7iMazing22UserInteractionManager handleNotificationForScreenData:];
-[_TtC7iMazing22UserInteractionManager handleNotificationForHintData:];
-[_TtC7iMazing22UserInteractionManager processPendingData];
-[_TtC7iMazing22UserInteractionManager userNotificationCenter:shouldPresentNotification:];

@end

@interface _TtC7iMazing23DeviceNavigationHistory : NSObject {
    /* instance variables */
     canGoBack;
     canGoForward;
     actions;
     index;
     mainWindowController;
     item;
     detailViewObserver;
     ignoreNextPush;
     oneShot;
}

@property (TB,N,VcanGoBack) canGoBack;
@property (TB,N,VcanGoForward) canGoForward;

/* instance methods */
-[_TtC7iMazing23DeviceNavigationHistory canGoBack];
-[_TtC7iMazing23DeviceNavigationHistory setCanGoBack:];
-[_TtC7iMazing23DeviceNavigationHistory canGoForward];
-[_TtC7iMazing23DeviceNavigationHistory setCanGoForward:];
-[_TtC7iMazing23DeviceNavigationHistory init];

@end

@interface _TtC7iMazing23DeviceToolbarController : _TtC7iMazing27MainWindowToolbarController {
    /* instance variables */
     navigationHistoryController;
     backupViewObserver;
     device;
     deviceNavigation;
     backupNavigation;
}

/* instance methods */
-[_TtC7iMazing23DeviceToolbarController initWithDevice:container:showBackups:];
-[_TtC7iMazing23DeviceToolbarController initWithDevice:container:left:right:showBackups:];
-[_TtC7iMazing23DeviceToolbarController initWithCoder:];
-[_TtC7iMazing23DeviceToolbarController initWithContainer:left:right:];

@end

@interface _TtC7iMazing23HomeBackupsIconViewItem : NSCollectionViewItem {
    /* instance variables */
     highlightView;
     checkbox;
     deviceImage;
     infoPopover;
     moreButton;
     onMouseDown;
     onMouseUp;
     onSelectionChanged;
     objectObserver;
     selectionObserver;
     infoPopoverController;
     isMouseOver;
}

@property (T@"VKHighlightView",N,&,VhighlightView) highlightView;
@property (T@"NSControl",N,&,Vcheckbox) checkbox;
@property (T@"_TtC7iMazing23HomeIconDeviceImageView",N,&,VdeviceImage) deviceImage;
@property (T@"NSPopover",N,&,VinfoPopover) infoPopover;
@property (T@"NSControl",N,&,VmoreButton) moreButton;

/* instance methods */
-[_TtC7iMazing23HomeBackupsIconViewItem highlightView];
-[_TtC7iMazing23HomeBackupsIconViewItem setHighlightView:];
-[_TtC7iMazing23HomeBackupsIconViewItem checkbox];
-[_TtC7iMazing23HomeBackupsIconViewItem setCheckbox:];
-[_TtC7iMazing23HomeBackupsIconViewItem deviceImage];
-[_TtC7iMazing23HomeBackupsIconViewItem setDeviceImage:];
-[_TtC7iMazing23HomeBackupsIconViewItem infoPopover];
-[_TtC7iMazing23HomeBackupsIconViewItem setInfoPopover:];
-[_TtC7iMazing23HomeBackupsIconViewItem moreButton];
-[_TtC7iMazing23HomeBackupsIconViewItem setMoreButton:];
-[_TtC7iMazing23HomeBackupsIconViewItem initWithNibName:bundle:];
-[_TtC7iMazing23HomeBackupsIconViewItem initWithCoder:];
-[_TtC7iMazing23HomeBackupsIconViewItem prepareForReuse];
-[_TtC7iMazing23HomeBackupsIconViewItem viewDidLoad];
-[_TtC7iMazing23HomeBackupsIconViewItem viewDidAppear];
-[_TtC7iMazing23HomeBackupsIconViewItem viewDidDisappear];
-[_TtC7iMazing23HomeBackupsIconViewItem mouseMoved:];
-[_TtC7iMazing23HomeBackupsIconViewItem mouseEntered:];
-[_TtC7iMazing23HomeBackupsIconViewItem mouseExited:];
-[_TtC7iMazing23HomeBackupsIconViewItem mouseDown:];
-[_TtC7iMazing23HomeBackupsIconViewItem mouseUp:];
-[_TtC7iMazing23HomeBackupsIconViewItem showMenu:];
-[_TtC7iMazing23HomeBackupsIconViewItem showInfo:];

@end

@interface _TtC7iMazing23HomeDevicesIconViewItem : NSCollectionViewItem {
    /* instance variables */
     fileDraggingView;
     highlightView;
     checkbox;
     deviceImage;
     infoPopover;
     moreButton;
     onMouseDown;
     onMouseUp;
     onSelectionChanged;
     objectObserver;
     selectionObserver;
     infoPopoverController;
     isMouseOver;
}

@property (T@"_TtC7iMazing16FileDraggingView",N,&,VfileDraggingView) fileDraggingView;
@property (T@"VKHighlightView",N,&,VhighlightView) highlightView;
@property (T@"NSControl",N,&,Vcheckbox) checkbox;
@property (T@"_TtC7iMazing23HomeIconDeviceImageView",N,&,VdeviceImage) deviceImage;
@property (T@"NSPopover",N,&,VinfoPopover) infoPopover;
@property (T@"NSControl",N,&,VmoreButton) moreButton;

/* instance methods */
-[_TtC7iMazing23HomeDevicesIconViewItem fileDraggingView];
-[_TtC7iMazing23HomeDevicesIconViewItem setFileDraggingView:];
-[_TtC7iMazing23HomeDevicesIconViewItem highlightView];
-[_TtC7iMazing23HomeDevicesIconViewItem setHighlightView:];
-[_TtC7iMazing23HomeDevicesIconViewItem checkbox];
-[_TtC7iMazing23HomeDevicesIconViewItem setCheckbox:];
-[_TtC7iMazing23HomeDevicesIconViewItem deviceImage];
-[_TtC7iMazing23HomeDevicesIconViewItem setDeviceImage:];
-[_TtC7iMazing23HomeDevicesIconViewItem infoPopover];
-[_TtC7iMazing23HomeDevicesIconViewItem setInfoPopover:];
-[_TtC7iMazing23HomeDevicesIconViewItem moreButton];
-[_TtC7iMazing23HomeDevicesIconViewItem setMoreButton:];
-[_TtC7iMazing23HomeDevicesIconViewItem initWithNibName:bundle:];
-[_TtC7iMazing23HomeDevicesIconViewItem initWithCoder:];
-[_TtC7iMazing23HomeDevicesIconViewItem prepareForReuse];
-[_TtC7iMazing23HomeDevicesIconViewItem viewDidLoad];
-[_TtC7iMazing23HomeDevicesIconViewItem viewDidAppear];
-[_TtC7iMazing23HomeDevicesIconViewItem viewDidDisappear];
-[_TtC7iMazing23HomeDevicesIconViewItem mouseEntered:];
-[_TtC7iMazing23HomeDevicesIconViewItem mouseExited:];
-[_TtC7iMazing23HomeDevicesIconViewItem mouseDown:];
-[_TtC7iMazing23HomeDevicesIconViewItem mouseUp:];
-[_TtC7iMazing23HomeDevicesIconViewItem showMenu:];
-[_TtC7iMazing23HomeDevicesIconViewItem showInfo:];

@end

@interface _TtC7iMazing23HomeDiscoverTourDotView : NSView {
    /* instance variables */
     widthConstraint;
     heightConstraint;
     appearanceObserver;
     isActive;
}

@property (TB,N,VisActive) isActive;

/* instance methods */
-[_TtC7iMazing23HomeDiscoverTourDotView isActive];
-[_TtC7iMazing23HomeDiscoverTourDotView setIsActive:];
-[_TtC7iMazing23HomeDiscoverTourDotView initWithFrame:];
-[_TtC7iMazing23HomeDiscoverTourDotView initWithCoder:];
-[_TtC7iMazing23HomeDiscoverTourDotView viewDidMoveToSuperview];
-[_TtC7iMazing23HomeDiscoverTourDotView drawRect:];

@end

@interface _TtC7iMazing23HomeIconDeviceImageView : NSImageView {
    /* instance variables */
     selectableDeviceItem;
}

/* instance methods */
-[_TtC7iMazing23HomeIconDeviceImageView menuForEvent:];
-[_TtC7iMazing23HomeIconDeviceImageView initWithFrame:];
-[_TtC7iMazing23HomeIconDeviceImageView initWithCoder:];

@end

@interface _TtC7iMazing23MediaListViewController : NSViewController <NSTableViewDelegate, NSTableViewDataSource, NSMenuDelegate> {
    /* instance variables */
     tracksTableView;
     purchasedOrAppleMusicColumn;
     alreadyIniTunesColumn;
     owner;
     alreadyIniTunesToolTip;
     cannotPlayProtectedMediaToolTip;
     exportLabel;
     showAlbumLabel;
     deleteOrRemoveLabel;
}

@property (T@"_TtC7iMazing20MediaTracksTableView",N,&,VtracksTableView) tracksTableView;
@property (T@"_TtC7iMazing22MediaTracksTableColumn",N,&,VpurchasedOrAppleMusicColumn) purchasedOrAppleMusicColumn;
@property (T@"_TtC7iMazing22MediaTracksTableColumn",N,&,ValreadyIniTunesColumn) alreadyIniTunesColumn;
@property (T@"_TtC7iMazing27MediaBaseListViewController",N,W,Vowner) owner;
@property (T@"NSString",N,C) alreadyIniTunesToolTip;
@property (T@"NSString",N,C) cannotPlayProtectedMediaToolTip;
@property (T@"NSString",N,C) exportLabel;
@property (T@"NSString",N,C) showAlbumLabel;
@property (T@"NSString",N,C) deleteOrRemoveLabel;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing23MediaListViewController tableView:validateDrop:proposedRow:proposedDropOperation:];
-[_TtC7iMazing23MediaListViewController tableView:acceptDrop:row:dropOperation:];
-[_TtC7iMazing23MediaListViewController tableView:shouldSelectRow:];
-[_TtC7iMazing23MediaListViewController tableView:rowViewForRow:];
-[_TtC7iMazing23MediaListViewController tableView:shouldReorderColumn:toColumn:];
-[_TtC7iMazing23MediaListViewController tableView:shouldSelectTableColumn:];
-[_TtC7iMazing23MediaListViewController tableView:writeRowsWithIndexes:toPasteboard:];
-[_TtC7iMazing23MediaListViewController tableView:namesOfPromisedFilesDroppedAtDestination:forDraggedRowsWithIndexes:];
-[_TtC7iMazing23MediaListViewController menuWillOpen:];
-[_TtC7iMazing23MediaListViewController tracksTableView];
-[_TtC7iMazing23MediaListViewController setTracksTableView:];
-[_TtC7iMazing23MediaListViewController purchasedOrAppleMusicColumn];
-[_TtC7iMazing23MediaListViewController setPurchasedOrAppleMusicColumn:];
-[_TtC7iMazing23MediaListViewController alreadyIniTunesColumn];
-[_TtC7iMazing23MediaListViewController setAlreadyIniTunesColumn:];
-[_TtC7iMazing23MediaListViewController owner];
-[_TtC7iMazing23MediaListViewController setOwner:];
-[_TtC7iMazing23MediaListViewController alreadyIniTunesToolTip];
-[_TtC7iMazing23MediaListViewController setAlreadyIniTunesToolTip:];
-[_TtC7iMazing23MediaListViewController cannotPlayProtectedMediaToolTip];
-[_TtC7iMazing23MediaListViewController setCannotPlayProtectedMediaToolTip:];
-[_TtC7iMazing23MediaListViewController exportLabel];
-[_TtC7iMazing23MediaListViewController setExportLabel:];
-[_TtC7iMazing23MediaListViewController showAlbumLabel];
-[_TtC7iMazing23MediaListViewController setShowAlbumLabel:];
-[_TtC7iMazing23MediaListViewController deleteOrRemoveLabel];
-[_TtC7iMazing23MediaListViewController setDeleteOrRemoveLabel:];
-[_TtC7iMazing23MediaListViewController initWithCoder:];
-[_TtC7iMazing23MediaListViewController nibName];
-[_TtC7iMazing23MediaListViewController viewDidLoad];
-[_TtC7iMazing23MediaListViewController showAlbumForTrack:];
-[_TtC7iMazing23MediaListViewController play:];
-[_TtC7iMazing23MediaListViewController cannotTransfertTrack:];
-[_TtC7iMazing23MediaListViewController cannotPlayTrack:];
-[_TtC7iMazing23MediaListViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing23MediaTrackTableCellView : NSTableCellView {
    /* instance variables */
     mouseOver;
     observer;
}

@property (TB,N,VmouseOver) mouseOver;

/* instance methods */
-[_TtC7iMazing23MediaTrackTableCellView mouseOver];
-[_TtC7iMazing23MediaTrackTableCellView setMouseOver:];
-[_TtC7iMazing23MediaTrackTableCellView viewDidMoveToSuperview];
-[_TtC7iMazing23MediaTrackTableCellView play:];
-[_TtC7iMazing23MediaTrackTableCellView pause:];
-[_TtC7iMazing23MediaTrackTableCellView initWithFrame:];
-[_TtC7iMazing23MediaTrackTableCellView initWithCoder:];

@end

@interface _TtC7iMazing23PhotoCollectionViewItem : NSCollectionViewItem {
    /* instance variables */
     isShowingBurstSidebar;
     showBorder;
}

@property (TB,N,VisShowingBurstSidebar) isShowingBurstSidebar;
@property (TB,N,VshowBorder) showBorder;
@property (TB,N) selected;

/* instance methods */
-[_TtC7iMazing23PhotoCollectionViewItem isShowingBurstSidebar];
-[_TtC7iMazing23PhotoCollectionViewItem setIsShowingBurstSidebar:];
-[_TtC7iMazing23PhotoCollectionViewItem showBorder];
-[_TtC7iMazing23PhotoCollectionViewItem setShowBorder:];
-[_TtC7iMazing23PhotoCollectionViewItem isSelected];
-[_TtC7iMazing23PhotoCollectionViewItem setSelected:];
-[_TtC7iMazing23PhotoCollectionViewItem mouseDown:];
-[_TtC7iMazing23PhotoCollectionViewItem initWithNibName:bundle:];
-[_TtC7iMazing23PhotoCollectionViewItem initWithCoder:];

@end

@interface _TtC7iMazing23TransparentTableRowView : NSTableRowView

/* instance methods */
-[_TtC7iMazing23TransparentTableRowView drawBackgroundInRect:];
-[_TtC7iMazing23TransparentTableRowView initWithFrame:];
-[_TtC7iMazing23TransparentTableRowView initWithCoder:];

@end

@interface _TtC7iMazing24AudioBooksViewController : _TtC7iMazing19MediaViewController

/* instance methods */
-[_TtC7iMazing24AudioBooksViewController initWithDevice:];
-[_TtC7iMazing24AudioBooksViewController initWithDataset:device:];
-[_TtC7iMazing24AudioBooksViewController viewDidLoad];
-[_TtC7iMazing24AudioBooksViewController toolbarButtons];

@end

@interface _TtC7iMazing24DataAccessViewController : NSViewController {
    /* instance variables */
     dataset;
     device;
     icon;
     selectedTag;
     nextButtonTitle;
     subtitleText;
     encryptionScreenShouldEncryptText;
     encryptionChoiceViewTitle;
     isChangingEncryptionStatus;
     delegate;
     fullBackupSelected;
     encryptionEnabled;
     choiceView1;
     choiceView2;
     radio1;
     radio2;
     dataAccessView;
     encryptionView;
     encryptionChoiceView;
     encryptionSwitch;
}

@property (T@"iOSDataset",N,&,Vdataset) dataset;
@property (T@"iOSDevice",N,&,Vdevice) device;
@property (T@"NSImage",N,&,Vicon) icon;
@property (Tq,N,VselectedTag) selectedTag;
@property (T@"NSString",N,C) nextButtonTitle;
@property (T@"NSString",N,C) subtitleText;
@property (T@"NSString",N,C) encryptionScreenShouldEncryptText;
@property (T@"NSString",N,C) encryptionChoiceViewTitle;
@property (TB,N,VisChangingEncryptionStatus) isChangingEncryptionStatus;
@property (T@"VKChoiceView",N,&,VchoiceView1) choiceView1;
@property (T@"VKChoiceView",N,&,VchoiceView2) choiceView2;
@property (T@"NSButton",N,&,Vradio1) radio1;
@property (T@"NSButton",N,&,Vradio2) radio2;
@property (T@"NSView",N,&,VdataAccessView) dataAccessView;
@property (T@"NSView",N,&,VencryptionView) encryptionView;
@property (T@"VKChoiceView",N,&,VencryptionChoiceView) encryptionChoiceView;
@property (T@"VKSwitch",N,&,VencryptionSwitch) encryptionSwitch;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing24DataAccessViewController dataset];
-[_TtC7iMazing24DataAccessViewController setDataset:];
-[_TtC7iMazing24DataAccessViewController device];
-[_TtC7iMazing24DataAccessViewController setDevice:];
-[_TtC7iMazing24DataAccessViewController icon];
-[_TtC7iMazing24DataAccessViewController setIcon:];
-[_TtC7iMazing24DataAccessViewController selectedTag];
-[_TtC7iMazing24DataAccessViewController setSelectedTag:];
-[_TtC7iMazing24DataAccessViewController nextButtonTitle];
-[_TtC7iMazing24DataAccessViewController setNextButtonTitle:];
-[_TtC7iMazing24DataAccessViewController subtitleText];
-[_TtC7iMazing24DataAccessViewController setSubtitleText:];
-[_TtC7iMazing24DataAccessViewController encryptionScreenShouldEncryptText];
-[_TtC7iMazing24DataAccessViewController setEncryptionScreenShouldEncryptText:];
-[_TtC7iMazing24DataAccessViewController encryptionChoiceViewTitle];
-[_TtC7iMazing24DataAccessViewController setEncryptionChoiceViewTitle:];
-[_TtC7iMazing24DataAccessViewController isChangingEncryptionStatus];
-[_TtC7iMazing24DataAccessViewController setIsChangingEncryptionStatus:];
-[_TtC7iMazing24DataAccessViewController choiceView1];
-[_TtC7iMazing24DataAccessViewController setChoiceView1:];
-[_TtC7iMazing24DataAccessViewController choiceView2];
-[_TtC7iMazing24DataAccessViewController setChoiceView2:];
-[_TtC7iMazing24DataAccessViewController radio1];
-[_TtC7iMazing24DataAccessViewController setRadio1:];
-[_TtC7iMazing24DataAccessViewController radio2];
-[_TtC7iMazing24DataAccessViewController setRadio2:];
-[_TtC7iMazing24DataAccessViewController dataAccessView];
-[_TtC7iMazing24DataAccessViewController setDataAccessView:];
-[_TtC7iMazing24DataAccessViewController encryptionView];
-[_TtC7iMazing24DataAccessViewController setEncryptionView:];
-[_TtC7iMazing24DataAccessViewController encryptionChoiceView];
-[_TtC7iMazing24DataAccessViewController setEncryptionChoiceView:];
-[_TtC7iMazing24DataAccessViewController encryptionSwitch];
-[_TtC7iMazing24DataAccessViewController setEncryptionSwitch:];
-[_TtC7iMazing24DataAccessViewController initWithDataset:device:delegate:];
-[_TtC7iMazing24DataAccessViewController initWithCoder:];
-[_TtC7iMazing24DataAccessViewController dealloc];
-[_TtC7iMazing24DataAccessViewController nibName];
-[_TtC7iMazing24DataAccessViewController viewDidLoad];
-[_TtC7iMazing24DataAccessViewController backupTypeChoiceNextButtonClick:];
-[_TtC7iMazing24DataAccessViewController encryptionNextButtonClick:];
-[_TtC7iMazing24DataAccessViewController backButtonClick:];
-[_TtC7iMazing24DataAccessViewController changeSelection:];
-[_TtC7iMazing24DataAccessViewController dataAccessOnlyHelpClick:];
-[_TtC7iMazing24DataAccessViewController fullBackupHelpClick:];
-[_TtC7iMazing24DataAccessViewController encryptionHelpClick:];
-[_TtC7iMazing24DataAccessViewController encryptionSwitchClick:];
-[_TtC7iMazing24DataAccessViewController reset];
-[_TtC7iMazing24DataAccessViewController deviceStatusChangedWithNotification:];
-[_TtC7iMazing24DataAccessViewController showDeviceOptions:];
-[_TtC7iMazing24DataAccessViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing24DatasetToolbarButtonCell : NSButtonCell {
    /* instance variables */
     mouseOver;
     windowObservation;
     trackingArea;
}

@property (T@"NSView",N,&) controlView;

/* instance methods */
-[_TtC7iMazing24DatasetToolbarButtonCell controlView];
-[_TtC7iMazing24DatasetToolbarButtonCell setControlView:];
-[_TtC7iMazing24DatasetToolbarButtonCell initWithCoder:];
-[_TtC7iMazing24DatasetToolbarButtonCell initTextCell:];
-[_TtC7iMazing24DatasetToolbarButtonCell initImageCell:];
-[_TtC7iMazing24DatasetToolbarButtonCell drawTitle:withFrame:inView:];
-[_TtC7iMazing24DatasetToolbarButtonCell drawWithFrame:inView:];
-[_TtC7iMazing24DatasetToolbarButtonCell drawInteriorWithFrame:inView:];
-[_TtC7iMazing24DatasetToolbarButtonCell mouseEntered:];
-[_TtC7iMazing24DatasetToolbarButtonCell mouseExited:];

@end

@interface _TtC7iMazing24DeviceDataViewController : NSViewController <_TtP7iMazing14IndexedElement_, NSCollectionViewDelegate, NSCollectionViewDataSource, HelpURLProvider, _TtP7iMazing12DeviceViewer_> {
    /* instance variables */
     item;
     indexPath;
     contentController;
     datasets;
     arrayController;
     toolbarContainer;
     contentContainer;
     stackView;
     collectionView;
     screenContainer;
     hintContainer;
     toolbarViews;
     toolbar;
     diskSpaceObserver;
     archiveObserver;
     datasetObserver;
     initialDataset;
     diskSpaceViewController;
     screenController;
     hintController;
     datasetNavigation;
}

@property (T@"_TtC7iMazing10DeviceItem",N,&,Vitem) item;
@property (T@"NSIndexPath",N,C) indexPath;
@property (T@"NSViewController",N,&,VcontentController) contentController;
@property (T@"NSArray",N,C) datasets;
@property (T@"NSArrayController",N,&,VarrayController) arrayController;
@property (T@"NSView",N,&,VtoolbarContainer) toolbarContainer;
@property (T@"NSView",N,&,VcontentContainer) contentContainer;
@property (T@"NSStackView",N,&,VstackView) stackView;
@property (T@"NSCollectionView",N,&,VcollectionView) collectionView;
@property (T@"NSView",N,&,VscreenContainer) screenContainer;
@property (T@"NSView",N,&,VhintContainer) hintContainer;
@property (T@"NSView",N,&,VtoolbarViews) toolbarViews;
@property (T@"NSViewController",N,&,VscreenController) screenController;
@property (T@"_TtC7iMazing18HintViewController",N,&,VhintController) hintController;
@property (T@"NSString",N,R) nibName;
@property (T@"NSString",N,R) deviceID;
@property (T@"NSString",N,R) locationScheme;

/* instance methods */
-[_TtC7iMazing24DeviceDataViewController item];
-[_TtC7iMazing24DeviceDataViewController setItem:];
-[_TtC7iMazing24DeviceDataViewController indexPath];
-[_TtC7iMazing24DeviceDataViewController setIndexPath:];
-[_TtC7iMazing24DeviceDataViewController contentController];
-[_TtC7iMazing24DeviceDataViewController setContentController:];
-[_TtC7iMazing24DeviceDataViewController datasets];
-[_TtC7iMazing24DeviceDataViewController setDatasets:];
-[_TtC7iMazing24DeviceDataViewController arrayController];
-[_TtC7iMazing24DeviceDataViewController setArrayController:];
-[_TtC7iMazing24DeviceDataViewController toolbarContainer];
-[_TtC7iMazing24DeviceDataViewController setToolbarContainer:];
-[_TtC7iMazing24DeviceDataViewController contentContainer];
-[_TtC7iMazing24DeviceDataViewController setContentContainer:];
-[_TtC7iMazing24DeviceDataViewController stackView];
-[_TtC7iMazing24DeviceDataViewController setStackView:];
-[_TtC7iMazing24DeviceDataViewController collectionView];
-[_TtC7iMazing24DeviceDataViewController setCollectionView:];
-[_TtC7iMazing24DeviceDataViewController screenContainer];
-[_TtC7iMazing24DeviceDataViewController setScreenContainer:];
-[_TtC7iMazing24DeviceDataViewController hintContainer];
-[_TtC7iMazing24DeviceDataViewController setHintContainer:];
-[_TtC7iMazing24DeviceDataViewController toolbarViews];
-[_TtC7iMazing24DeviceDataViewController setToolbarViews:];
-[_TtC7iMazing24DeviceDataViewController screenController];
-[_TtC7iMazing24DeviceDataViewController setScreenController:];
-[_TtC7iMazing24DeviceDataViewController hintController];
-[_TtC7iMazing24DeviceDataViewController setHintController:];
-[_TtC7iMazing24DeviceDataViewController initWithCoder:];
-[_TtC7iMazing24DeviceDataViewController dealloc];
-[_TtC7iMazing24DeviceDataViewController nibName];
-[_TtC7iMazing24DeviceDataViewController viewDidLoad];
-[_TtC7iMazing24DeviceDataViewController viewDidAppear];
-[_TtC7iMazing24DeviceDataViewController viewDidDisappear];
-[_TtC7iMazing24DeviceDataViewController observeValueForKeyPath:ofObject:change:context:];
-[_TtC7iMazing24DeviceDataViewController selectDataset:];
-[_TtC7iMazing24DeviceDataViewController OnDataRefresh];
-[_TtC7iMazing24DeviceDataViewController numberOfSectionsInCollectionView:];
-[_TtC7iMazing24DeviceDataViewController collectionView:numberOfItemsInSection:];
-[_TtC7iMazing24DeviceDataViewController collectionView:itemForRepresentedObjectAtIndexPath:];
-[_TtC7iMazing24DeviceDataViewController collectionView:didSelectItemsAtIndexPaths:];
-[_TtC7iMazing24DeviceDataViewController helpURL];
-[_TtC7iMazing24DeviceDataViewController deviceID];
-[_TtC7iMazing24DeviceDataViewController locationScheme];
-[_TtC7iMazing24DeviceDataViewController showScreen:];
-[_TtC7iMazing24DeviceDataViewController showHint:];
-[_TtC7iMazing24DeviceDataViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing24MDMServersViewController : NSViewController <NSTableViewDelegate, NSMenuDelegate, _TtP7iMazing24PlusMinusControlDelegate_, HelpURLProvider> {
    /* instance variables */
     modalActionName;
     validateModalActionHandler;
     modalStatusChangeHandler;
     serversTableView;
     loadingVC;
     selectionHandler;
     serversArrayController;
     certificatesArrayController;
     serversView;
     newServerView;
     profileSourceDropdown;
     nameField;
     serversPlusMinusControl;
     isLoading;
     hasSelection;
     dropDownProfileLabel;
     isFromURL;
     newServer;
     portString;
     _port;
     serverUidToSelect;
     _awake;
     observations;
     chooseProfilesSheet;
     selectedProfile;
}

@property (T@"NSTableView",N,&,VserversTableView) serversTableView;
@property (T@"NSString",N,R) nibName;
@property (T@"NSArrayController",N,&,VserversArrayController) serversArrayController;
@property (T@"NSArrayController",N,&,VcertificatesArrayController) certificatesArrayController;
@property (T@"NSView",N,&,VserversView) serversView;
@property (T@"NSView",N,&,VnewServerView) newServerView;
@property (T@"NSPopUpButton",N,&,VprofileSourceDropdown) profileSourceDropdown;
@property (T@"NSTextField",N,&,VnameField) nameField;
@property (T@"_TtC7iMazing25PlusMinusSegmentedControl",N,&,VserversPlusMinusControl) serversPlusMinusControl;
@property (TB,N,VisLoading) isLoading;
@property (TB,N,VhasSelection) hasSelection;
@property (T@"NSString",N,C) dropDownProfileLabel;
@property (TB,N,VisFromURL) isFromURL;
@property (T@"MDMServer",N,&,VnewServer) newServer;
@property (T@"NSString",N,C) portString;

/* instance methods */
-[_TtC7iMazing24MDMServersViewController serversTableView];
-[_TtC7iMazing24MDMServersViewController setServersTableView:];
-[_TtC7iMazing24MDMServersViewController helpURL];
-[_TtC7iMazing24MDMServersViewController nibName];
-[_TtC7iMazing24MDMServersViewController serversArrayController];
-[_TtC7iMazing24MDMServersViewController setServersArrayController:];
-[_TtC7iMazing24MDMServersViewController certificatesArrayController];
-[_TtC7iMazing24MDMServersViewController setCertificatesArrayController:];
-[_TtC7iMazing24MDMServersViewController serversView];
-[_TtC7iMazing24MDMServersViewController setServersView:];
-[_TtC7iMazing24MDMServersViewController newServerView];
-[_TtC7iMazing24MDMServersViewController setNewServerView:];
-[_TtC7iMazing24MDMServersViewController profileSourceDropdown];
-[_TtC7iMazing24MDMServersViewController setProfileSourceDropdown:];
-[_TtC7iMazing24MDMServersViewController nameField];
-[_TtC7iMazing24MDMServersViewController setNameField:];
-[_TtC7iMazing24MDMServersViewController serversPlusMinusControl];
-[_TtC7iMazing24MDMServersViewController setServersPlusMinusControl:];
-[_TtC7iMazing24MDMServersViewController isLoading];
-[_TtC7iMazing24MDMServersViewController setIsLoading:];
-[_TtC7iMazing24MDMServersViewController hasSelection];
-[_TtC7iMazing24MDMServersViewController setHasSelection:];
-[_TtC7iMazing24MDMServersViewController dropDownProfileLabel];
-[_TtC7iMazing24MDMServersViewController setDropDownProfileLabel:];
-[_TtC7iMazing24MDMServersViewController isFromURL];
-[_TtC7iMazing24MDMServersViewController setIsFromURL:];
-[_TtC7iMazing24MDMServersViewController newServer];
-[_TtC7iMazing24MDMServersViewController setNewServer:];
-[_TtC7iMazing24MDMServersViewController portString];
-[_TtC7iMazing24MDMServersViewController setPortString:];
-[_TtC7iMazing24MDMServersViewController didChangePortField:];
-[_TtC7iMazing24MDMServersViewController initWithCoder:];
-[_TtC7iMazing24MDMServersViewController dealloc];
-[_TtC7iMazing24MDMServersViewController awakeFromNib];
-[_TtC7iMazing24MDMServersViewController plusClicked:];
-[_TtC7iMazing24MDMServersViewController minusClicked:];
-[_TtC7iMazing24MDMServersViewController addServerClicked:];
-[_TtC7iMazing24MDMServersViewController removeServerClicked:];
-[_TtC7iMazing24MDMServersViewController editClicked:];
-[_TtC7iMazing24MDMServersViewController addCertificateClicked:];
-[_TtC7iMazing24MDMServersViewController removeCertificateClicked:];
-[_TtC7iMazing24MDMServersViewController profileSourceFromURLSelected:];
-[_TtC7iMazing24MDMServersViewController profileSourceFromLibrarySelected:];
-[_TtC7iMazing24MDMServersViewController tableViewSelectionDidChange:];
-[_TtC7iMazing24MDMServersViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing24MediaAlbumViewController : _TtC7iMazing27MediaPlaylistViewController

/* instance methods */
-[_TtC7iMazing24MediaAlbumViewController initWithCoder:];

@end

@interface _TtC7iMazing24MusicAlbumViewController : _TtC7iMazing24MediaAlbumViewController

/* instance methods */
-[_TtC7iMazing24MusicAlbumViewController initWithCoder:];

@end

@interface _TtC7iMazing24PhotoAssetsTableCellView : NSTableCellView {
    /* instance variables */
     owner;
     cachedContainerViewView;
     heightConstraint;
     currentWidth;
     isAwake;
     photoAssetsCollectionViewController;
}

/* instance methods */
-[_TtC7iMazing24PhotoAssetsTableCellView initWithCoder:];
-[_TtC7iMazing24PhotoAssetsTableCellView dealloc];
-[_TtC7iMazing24PhotoAssetsTableCellView awakeFromNib];
-[_TtC7iMazing24PhotoAssetsTableCellView hitTest:];
-[_TtC7iMazing24PhotoAssetsTableCellView onFrameDidChange:];
-[_TtC7iMazing24PhotoAssetsTableCellView initWithFrame:];

@end

@interface _TtC7iMazing24PhotoDropDestinationView : NSView {
    /* instance variables */
     photoViewController;
     shouldAcceptDrag;
     isReceivingDrag;
     onMouseDragged;
     onMouseUp;
     mouseDraggedReceived;
}

@property (T@"PhotoViewController",N,W,VphotoViewController) photoViewController;

/* instance methods */
-[_TtC7iMazing24PhotoDropDestinationView photoViewController];
-[_TtC7iMazing24PhotoDropDestinationView setPhotoViewController:];
-[_TtC7iMazing24PhotoDropDestinationView initWithCoder:];
-[_TtC7iMazing24PhotoDropDestinationView drawRect:];
-[_TtC7iMazing24PhotoDropDestinationView mouseDragged:];
-[_TtC7iMazing24PhotoDropDestinationView mouseUp:];
-[_TtC7iMazing24PhotoDropDestinationView draggingEntered:];
-[_TtC7iMazing24PhotoDropDestinationView draggingExited:];
-[_TtC7iMazing24PhotoDropDestinationView performDragOperation:];
-[_TtC7iMazing24PhotoDropDestinationView initWithFrame:];

@end

@interface _TtC7iMazing24PhotoFixedWidthStackView : NSStackView {
    /* instance variables */
     widthConstraint;
}

/* instance methods */
-[_TtC7iMazing24PhotoFixedWidthStackView layout];
-[_TtC7iMazing24PhotoFixedWidthStackView initWithFrame:];
-[_TtC7iMazing24PhotoFixedWidthStackView initWithCoder:];

@end

@interface _TtC7iMazing24PhotoImageCaptureManager : NSObject <ICCameraDeviceDelegate, ICDeviceBrowserDelegate> {
    /* instance variables */
     device;
     iOSDevice;
     window;
     manager;
     deviceBrowser;
     connectedDevice;
     viewsDeviceUdidNoDashes;
     catalogLoaded;
     loadedCameraFiles;
     loadedBurstsIDs;
     loadedFileNames;
}

/* instance methods */
-[_TtC7iMazing24PhotoImageCaptureManager cameraDevice:didRemoveItems:];
-[_TtC7iMazing24PhotoImageCaptureManager deviceDidBecomeReadyWithCompleteContentCatalog:];
-[_TtC7iMazing24PhotoImageCaptureManager cameraDevice:didAddItems:];
-[_TtC7iMazing24PhotoImageCaptureManager cameraDevice:didReceiveThumbnail:forItem:error:];
-[_TtC7iMazing24PhotoImageCaptureManager cameraDevice:didReceiveMetadata:forItem:error:];
-[_TtC7iMazing24PhotoImageCaptureManager cameraDevice:didRenameItems:];
-[_TtC7iMazing24PhotoImageCaptureManager cameraDeviceDidChangeCapability:];
-[_TtC7iMazing24PhotoImageCaptureManager cameraDevice:didReceivePTPEvent:];
-[_TtC7iMazing24PhotoImageCaptureManager cameraDeviceDidRemoveAccessRestriction:];
-[_TtC7iMazing24PhotoImageCaptureManager cameraDeviceDidEnableAccessRestriction:];
-[_TtC7iMazing24PhotoImageCaptureManager device:didCloseSessionWithError:];
-[_TtC7iMazing24PhotoImageCaptureManager didRemoveDevice:];
-[_TtC7iMazing24PhotoImageCaptureManager device:didOpenSessionWithError:];
-[_TtC7iMazing24PhotoImageCaptureManager deviceBrowser:didAddDevice:moreComing:];
-[_TtC7iMazing24PhotoImageCaptureManager deviceBrowser:didRemoveDevice:moreGoing:];
-[_TtC7iMazing24PhotoImageCaptureManager init];
-[_TtC7iMazing24PhotoImageCaptureManager dealloc];

@end

@interface _TtC7iMazing24RegistrationDiscoverItem : NSObject {
    /* instance variables */
     kind;
     identifier;
     title;
     icon;
     limitText;
     limitTextLong;
     badgeLabel;
     remaining;
     discoverVisibility;
     limit;
}

@property (Tq,N,Vkind) kind;
@property (T@"NSString",N,C) identifier;
@property (T@"NSString",N,C) title;
@property (T@"NSImage",N,&,Vicon) icon;
@property (T@"NSString",N,C) limitText;
@property (T@"NSString",N,C) limitTextLong;
@property (T@"NSString",N,C) badgeLabel;
@property (Tq,N,Vremaining) remaining;
@property (Tq,N,VdiscoverVisibility) discoverVisibility;

/* instance methods */
-[_TtC7iMazing24RegistrationDiscoverItem kind];
-[_TtC7iMazing24RegistrationDiscoverItem setKind:];
-[_TtC7iMazing24RegistrationDiscoverItem identifier];
-[_TtC7iMazing24RegistrationDiscoverItem setIdentifier:];
-[_TtC7iMazing24RegistrationDiscoverItem title];
-[_TtC7iMazing24RegistrationDiscoverItem setTitle:];
-[_TtC7iMazing24RegistrationDiscoverItem icon];
-[_TtC7iMazing24RegistrationDiscoverItem setIcon:];
-[_TtC7iMazing24RegistrationDiscoverItem limitText];
-[_TtC7iMazing24RegistrationDiscoverItem setLimitText:];
-[_TtC7iMazing24RegistrationDiscoverItem limitTextLong];
-[_TtC7iMazing24RegistrationDiscoverItem setLimitTextLong:];
-[_TtC7iMazing24RegistrationDiscoverItem badgeLabel];
-[_TtC7iMazing24RegistrationDiscoverItem setBadgeLabel:];
-[_TtC7iMazing24RegistrationDiscoverItem remaining];
-[_TtC7iMazing24RegistrationDiscoverItem setRemaining:];
-[_TtC7iMazing24RegistrationDiscoverItem discoverVisibility];
-[_TtC7iMazing24RegistrationDiscoverItem setDiscoverVisibility:];
-[_TtC7iMazing24RegistrationDiscoverItem init];

@end

@interface _TtC7iMazing24ScrollingDisabledMapView : MKMapView

/* instance methods */
-[_TtC7iMazing24ScrollingDisabledMapView scrollWheel:];
-[_TtC7iMazing24ScrollingDisabledMapView initWithFrame:];
-[_TtC7iMazing24ScrollingDisabledMapView initWithCoder:];

@end

@interface _TtC7iMazing24VideoAlbumViewController : _TtC7iMazing24MediaAlbumViewController

/* instance methods */
-[_TtC7iMazing24VideoAlbumViewController initWithCoder:];

@end

@interface _TtC7iMazing24iOSDeviceArrayController : NSArrayController

/* instance methods */
-[_TtC7iMazing24iOSDeviceArrayController initWithContent:];
-[_TtC7iMazing24iOSDeviceArrayController initWithCoder:];
-[_TtC7iMazing24iOSDeviceArrayController dealloc];

@end

@interface _TtC7iMazing25DataRefreshViewController : NSViewController {
    /* instance variables */
     dataset;
     device;
     icon;
     subtitle;
     quickLoadTitle;
     quickLoadSubtitle;
     refreshTitle;
     refreshSubtitle;
     loadFromBackupView;
     refreshAndLoadView;
     delegate;
}

@property (T@"iOSDataset",N,&,Vdataset) dataset;
@property (T@"iOSDevice",N,&,Vdevice) device;
@property (T@"NSImage",N,&,Vicon) icon;
@property (T@"NSString",N,C) subtitle;
@property (T@"NSString",N,C) quickLoadTitle;
@property (T@"NSString",N,C) quickLoadSubtitle;
@property (T@"NSString",N,C) refreshTitle;
@property (T@"NSString",N,C) refreshSubtitle;
@property (T@"VKChoiceView",N,&,VloadFromBackupView) loadFromBackupView;
@property (T@"VKChoiceView",N,&,VrefreshAndLoadView) refreshAndLoadView;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing25DataRefreshViewController dataset];
-[_TtC7iMazing25DataRefreshViewController setDataset:];
-[_TtC7iMazing25DataRefreshViewController device];
-[_TtC7iMazing25DataRefreshViewController setDevice:];
-[_TtC7iMazing25DataRefreshViewController icon];
-[_TtC7iMazing25DataRefreshViewController setIcon:];
-[_TtC7iMazing25DataRefreshViewController subtitle];
-[_TtC7iMazing25DataRefreshViewController setSubtitle:];
-[_TtC7iMazing25DataRefreshViewController quickLoadTitle];
-[_TtC7iMazing25DataRefreshViewController setQuickLoadTitle:];
-[_TtC7iMazing25DataRefreshViewController quickLoadSubtitle];
-[_TtC7iMazing25DataRefreshViewController setQuickLoadSubtitle:];
-[_TtC7iMazing25DataRefreshViewController refreshTitle];
-[_TtC7iMazing25DataRefreshViewController setRefreshTitle:];
-[_TtC7iMazing25DataRefreshViewController refreshSubtitle];
-[_TtC7iMazing25DataRefreshViewController setRefreshSubtitle:];
-[_TtC7iMazing25DataRefreshViewController loadFromBackupView];
-[_TtC7iMazing25DataRefreshViewController setLoadFromBackupView:];
-[_TtC7iMazing25DataRefreshViewController refreshAndLoadView];
-[_TtC7iMazing25DataRefreshViewController setRefreshAndLoadView:];
-[_TtC7iMazing25DataRefreshViewController initWithDataset:device:delegate:];
-[_TtC7iMazing25DataRefreshViewController initWithCoder:];
-[_TtC7iMazing25DataRefreshViewController nibName];
-[_TtC7iMazing25DataRefreshViewController viewDidLoad];
-[_TtC7iMazing25DataRefreshViewController loadFromBackup:];
-[_TtC7iMazing25DataRefreshViewController refreshAndLoad:];
-[_TtC7iMazing25DataRefreshViewController reset];
-[_TtC7iMazing25DataRefreshViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing25DatasetLoadViewController : NSViewController {
    /* instance variables */
     message;
     stopButtonTitle;
     icon;
     progress;
     progressMax;
     indeterminate;
     canStop;
     animating;
     error;
     wizardImage;
     onStop;
     onRefresh;
     wizardImageContainer;
     hiddenViews;
     lottieController;
}

@property (T@"NSString",N,C) message;
@property (T@"NSString",N,C) stopButtonTitle;
@property (T@"NSImage",N,&,Vicon) icon;
@property (Td,N,Vprogress) progress;
@property (Td,N,VprogressMax) progressMax;
@property (TB,N,Vindeterminate) indeterminate;
@property (TB,N,VcanStop) canStop;
@property (TB,N,Vanimating) animating;
@property (TB,N,Verror) error;
@property (T@"NSString",N,C) wizardImage;
@property (T@?,N,C) onStop;
@property (T@?,N,C) onRefresh;
@property (T@"NSView",N,&,VwizardImageContainer) wizardImageContainer;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing25DatasetLoadViewController message];
-[_TtC7iMazing25DatasetLoadViewController setMessage:];
-[_TtC7iMazing25DatasetLoadViewController stopButtonTitle];
-[_TtC7iMazing25DatasetLoadViewController setStopButtonTitle:];
-[_TtC7iMazing25DatasetLoadViewController icon];
-[_TtC7iMazing25DatasetLoadViewController setIcon:];
-[_TtC7iMazing25DatasetLoadViewController progress];
-[_TtC7iMazing25DatasetLoadViewController setProgress:];
-[_TtC7iMazing25DatasetLoadViewController progressMax];
-[_TtC7iMazing25DatasetLoadViewController setProgressMax:];
-[_TtC7iMazing25DatasetLoadViewController indeterminate];
-[_TtC7iMazing25DatasetLoadViewController setIndeterminate:];
-[_TtC7iMazing25DatasetLoadViewController canStop];
-[_TtC7iMazing25DatasetLoadViewController setCanStop:];
-[_TtC7iMazing25DatasetLoadViewController animating];
-[_TtC7iMazing25DatasetLoadViewController setAnimating:];
-[_TtC7iMazing25DatasetLoadViewController error];
-[_TtC7iMazing25DatasetLoadViewController setError:];
-[_TtC7iMazing25DatasetLoadViewController wizardImage];
-[_TtC7iMazing25DatasetLoadViewController setWizardImage:];
-[_TtC7iMazing25DatasetLoadViewController onStop];
-[_TtC7iMazing25DatasetLoadViewController setOnStop:];
-[_TtC7iMazing25DatasetLoadViewController onRefresh];
-[_TtC7iMazing25DatasetLoadViewController setOnRefresh:];
-[_TtC7iMazing25DatasetLoadViewController wizardImageContainer];
-[_TtC7iMazing25DatasetLoadViewController setWizardImageContainer:];
-[_TtC7iMazing25DatasetLoadViewController init];
-[_TtC7iMazing25DatasetLoadViewController initWithCoder:];
-[_TtC7iMazing25DatasetLoadViewController dealloc];
-[_TtC7iMazing25DatasetLoadViewController nibName];
-[_TtC7iMazing25DatasetLoadViewController viewDidLoad];
-[_TtC7iMazing25DatasetLoadViewController observeValueForKeyPath:ofObject:change:context:];
-[_TtC7iMazing25DatasetLoadViewController stop:];
-[_TtC7iMazing25DatasetLoadViewController refresh:];
-[_TtC7iMazing25DatasetLoadViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing25DeviceToolsViewController : NSViewController <_TtP7iMazing14IndexedElement_, NSCollectionViewDelegate, NSCollectionViewDataSource, NSCollectionViewDelegateFlowLayout, _TtP7iMazing12DeviceViewer_> {
    /* instance variables */
     item;
     indexPath;
     toolbarContainer;
     collectionView;
     actionsView;
     wizard;
     groups;
     sectionTitles;
     toolbar;
     actionsObserver;
     archiveObserver;
}

@property (T@"_TtC7iMazing10DeviceItem",N,&,Vitem) item;
@property (T@"NSIndexPath",N,C) indexPath;
@property (T@"NSView",N,&,VtoolbarContainer) toolbarContainer;
@property (T@"NSCollectionView",N,&,VcollectionView) collectionView;
@property (T@"NSView",N,&,VactionsView) actionsView;
@property (T@"WizardWindowController",N,&,Vwizard) wizard;
@property (T@"NSArray",N,C) groups;
@property (T@"NSArray",N,C) sectionTitles;
@property (T@"NSString",N,R) nibName;
@property (T@"NSString",N,R) deviceID;
@property (T@"NSString",N,R) locationScheme;

/* instance methods */
-[_TtC7iMazing25DeviceToolsViewController item];
-[_TtC7iMazing25DeviceToolsViewController setItem:];
-[_TtC7iMazing25DeviceToolsViewController indexPath];
-[_TtC7iMazing25DeviceToolsViewController setIndexPath:];
-[_TtC7iMazing25DeviceToolsViewController toolbarContainer];
-[_TtC7iMazing25DeviceToolsViewController setToolbarContainer:];
-[_TtC7iMazing25DeviceToolsViewController collectionView];
-[_TtC7iMazing25DeviceToolsViewController setCollectionView:];
-[_TtC7iMazing25DeviceToolsViewController actionsView];
-[_TtC7iMazing25DeviceToolsViewController setActionsView:];
-[_TtC7iMazing25DeviceToolsViewController wizard];
-[_TtC7iMazing25DeviceToolsViewController setWizard:];
-[_TtC7iMazing25DeviceToolsViewController groups];
-[_TtC7iMazing25DeviceToolsViewController setGroups:];
-[_TtC7iMazing25DeviceToolsViewController sectionTitles];
-[_TtC7iMazing25DeviceToolsViewController setSectionTitles:];
-[_TtC7iMazing25DeviceToolsViewController initWithCoder:];
-[_TtC7iMazing25DeviceToolsViewController nibName];
-[_TtC7iMazing25DeviceToolsViewController viewDidLoad];
-[_TtC7iMazing25DeviceToolsViewController viewDidAppear];
-[_TtC7iMazing25DeviceToolsViewController selectAction:];
-[_TtC7iMazing25DeviceToolsViewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:];
-[_TtC7iMazing25DeviceToolsViewController numberOfSectionsInCollectionView:];
-[_TtC7iMazing25DeviceToolsViewController collectionView:layout:referenceSizeForHeaderInSection:];
-[_TtC7iMazing25DeviceToolsViewController collectionView:layout:sizeForItemAtIndexPath:];
-[_TtC7iMazing25DeviceToolsViewController collectionView:numberOfItemsInSection:];
-[_TtC7iMazing25DeviceToolsViewController collectionView:itemForRepresentedObjectAtIndexPath:];
-[_TtC7iMazing25DeviceToolsViewController collectionView:didSelectItemsAtIndexPaths:];
-[_TtC7iMazing25DeviceToolsViewController deviceID];
-[_TtC7iMazing25DeviceToolsViewController locationScheme];
-[_TtC7iMazing25DeviceToolsViewController showScreen:];
-[_TtC7iMazing25DeviceToolsViewController showHint:];
-[_TtC7iMazing25DeviceToolsViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing25HomeBackupsViewController : _TtC7iMazing29HomeDevicesBaseViewController {
    /* instance variables */
     infoViewContainer;
     addItemsMenu;
     contentDraggingView;
     animationViewContainer;
     noBackupScreenContainer;
     switchViewControl;
     infoViewController;
     animationViewController;
     contentIsDraggingObservation;
     isLoading;
     noBackupScreenViewController;
}

@property (T@"NSView",N,&,VinfoViewContainer) infoViewContainer;
@property (T@"NSMenu",N,&,VaddItemsMenu) addItemsMenu;
@property (T@"_TtC7iMazing16FileDraggingView",N,&,VcontentDraggingView) contentDraggingView;
@property (T@"NSView",N,&,VanimationViewContainer) animationViewContainer;
@property (T@"NSView",N,&,VnoBackupScreenContainer) noBackupScreenContainer;
@property (T@"NSSegmentedControl",N,&,VswitchViewControl) switchViewControl;
@property (TB,N,VisLoading) isLoading;
@property (Tq,N) iconViewsorting;

/* instance methods */
-[_TtC7iMazing25HomeBackupsViewController infoViewContainer];
-[_TtC7iMazing25HomeBackupsViewController setInfoViewContainer:];
-[_TtC7iMazing25HomeBackupsViewController addItemsMenu];
-[_TtC7iMazing25HomeBackupsViewController setAddItemsMenu:];
-[_TtC7iMazing25HomeBackupsViewController contentDraggingView];
-[_TtC7iMazing25HomeBackupsViewController setContentDraggingView:];
-[_TtC7iMazing25HomeBackupsViewController animationViewContainer];
-[_TtC7iMazing25HomeBackupsViewController setAnimationViewContainer:];
-[_TtC7iMazing25HomeBackupsViewController noBackupScreenContainer];
-[_TtC7iMazing25HomeBackupsViewController setNoBackupScreenContainer:];
-[_TtC7iMazing25HomeBackupsViewController switchViewControl];
-[_TtC7iMazing25HomeBackupsViewController setSwitchViewControl:];
-[_TtC7iMazing25HomeBackupsViewController isLoading];
-[_TtC7iMazing25HomeBackupsViewController setIsLoading:];
-[_TtC7iMazing25HomeBackupsViewController iconViewsorting];
-[_TtC7iMazing25HomeBackupsViewController setIconViewsorting:];
-[_TtC7iMazing25HomeBackupsViewController initWithCoder:];
-[_TtC7iMazing25HomeBackupsViewController viewDidLoad];
-[_TtC7iMazing25HomeBackupsViewController viewDidAppear];
-[_TtC7iMazing25HomeBackupsViewController viewDidDisappear];
-[_TtC7iMazing25HomeBackupsViewController showAddItemsMenu:];
-[_TtC7iMazing25HomeBackupsViewController addItemFromIMazingFile:];
-[_TtC7iMazing25HomeBackupsViewController addItemFromBackupFolder:];
-[_TtC7iMazing25HomeBackupsViewController showPreferencesWindow:];

@end

@interface _TtC7iMazing25HomeDevicesViewController : _TtC7iMazing29HomeDevicesBaseViewController {
    /* instance variables */
     connectScreenContainer;
     infoViewContainer;
     switchViewControl;
     isLoading;
     infoViewController;
     connectScreen;
}

@property (T@"NSView",N,&,VconnectScreenContainer) connectScreenContainer;
@property (T@"NSView",N,&,VinfoViewContainer) infoViewContainer;
@property (T@"NSSegmentedControl",N,&,VswitchViewControl) switchViewControl;
@property (TB,N,VisLoading) isLoading;
@property (Tq,N) iconViewsorting;

/* instance methods */
-[_TtC7iMazing25HomeDevicesViewController connectScreenContainer];
-[_TtC7iMazing25HomeDevicesViewController setConnectScreenContainer:];
-[_TtC7iMazing25HomeDevicesViewController infoViewContainer];
-[_TtC7iMazing25HomeDevicesViewController setInfoViewContainer:];
-[_TtC7iMazing25HomeDevicesViewController switchViewControl];
-[_TtC7iMazing25HomeDevicesViewController setSwitchViewControl:];
-[_TtC7iMazing25HomeDevicesViewController isLoading];
-[_TtC7iMazing25HomeDevicesViewController setIsLoading:];
-[_TtC7iMazing25HomeDevicesViewController iconViewsorting];
-[_TtC7iMazing25HomeDevicesViewController setIconViewsorting:];
-[_TtC7iMazing25HomeDevicesViewController initWithCoder:];
-[_TtC7iMazing25HomeDevicesViewController viewDidLoad];
-[_TtC7iMazing25HomeDevicesViewController viewDidAppear];
-[_TtC7iMazing25HomeDevicesViewController viewDidDisappear];

@end

@interface _TtC7iMazing25MediaPlayerThinSliderCell : NSSliderCell {
    /* instance variables */
     knobWidth;
     knobIndent;
     barRadius;
     backgroundColor;
     trackKnobColor;
     trackProgressColor;
}

/* instance methods */
-[_TtC7iMazing25MediaPlayerThinSliderCell drawBarInside:flipped:];
-[_TtC7iMazing25MediaPlayerThinSliderCell knobRectFlipped:];
-[_TtC7iMazing25MediaPlayerThinSliderCell drawKnob:];
-[_TtC7iMazing25MediaPlayerThinSliderCell init];
-[_TtC7iMazing25MediaPlayerThinSliderCell initTextCell:];
-[_TtC7iMazing25MediaPlayerThinSliderCell initImageCell:];
-[_TtC7iMazing25MediaPlayerThinSliderCell initWithCoder:];

@end

@interface _TtC7iMazing25MediaPlayerViewController : NSViewController <AVAudioPlayerDelegate> {
    /* instance variables */
     manager;
     updating;
     isPlaying;
     isLoading;
     canPlay;
     operationFailed;
     currentTime;
     totalTime;
     progress;
     tracks;
     current;
     suggestedTracks;
     suggestedTrack;
     updateTimer;
     cachePathObserver;
     mediaPlayerVolumeObserver;
     player;
     progressMouseDown;
     remoteCommandsEnabled;
     mediaPlayerSlider;
     mediaPlayerProgressIndicator;
     currentTimeLabel;
     totalTimeLabel;
}

@property (T@"MediaManager",N,&,Vmanager) manager;
@property (TB,N,Vupdating) updating;
@property (TB,N,VisPlaying) isPlaying;
@property (TB,N,VisLoading) isLoading;
@property (TB,N,VcanPlay) canPlay;
@property (TB,N,VoperationFailed) operationFailed;
@property (Tq,N,VcurrentTime) currentTime;
@property (TQ,N,VtotalTime) totalTime;
@property (Td,N,Vprogress) progress;
@property (T@"NSArray",N,C) tracks;
@property (T@"MediaTrack",N,&,Vcurrent) current;
@property (T@"NSArray",N,C) suggestedTracks;
@property (T@"MediaTrack",N,&,VsuggestedTrack) suggestedTrack;
@property (T@"NSTimer",N,&,VupdateTimer) updateTimer;
@property (T@"_TtC7iMazing21MediaPlayerThinSlider",N,&,VmediaPlayerSlider) mediaPlayerSlider;
@property (T@"NSProgressIndicator",N,&,VmediaPlayerProgressIndicator) mediaPlayerProgressIndicator;
@property (T@"_TtC7iMazing18MediaFadeTextField",N,&,VcurrentTimeLabel) currentTimeLabel;
@property (T@"_TtC7iMazing18MediaFadeTextField",N,&,VtotalTimeLabel) totalTimeLabel;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing25MediaPlayerViewController manager];
-[_TtC7iMazing25MediaPlayerViewController setManager:];
-[_TtC7iMazing25MediaPlayerViewController updating];
-[_TtC7iMazing25MediaPlayerViewController setUpdating:];
-[_TtC7iMazing25MediaPlayerViewController isPlaying];
-[_TtC7iMazing25MediaPlayerViewController setIsPlaying:];
-[_TtC7iMazing25MediaPlayerViewController isLoading];
-[_TtC7iMazing25MediaPlayerViewController setIsLoading:];
-[_TtC7iMazing25MediaPlayerViewController canPlay];
-[_TtC7iMazing25MediaPlayerViewController setCanPlay:];
-[_TtC7iMazing25MediaPlayerViewController operationFailed];
-[_TtC7iMazing25MediaPlayerViewController setOperationFailed:];
-[_TtC7iMazing25MediaPlayerViewController currentTime];
-[_TtC7iMazing25MediaPlayerViewController setCurrentTime:];
-[_TtC7iMazing25MediaPlayerViewController totalTime];
-[_TtC7iMazing25MediaPlayerViewController setTotalTime:];
-[_TtC7iMazing25MediaPlayerViewController progress];
-[_TtC7iMazing25MediaPlayerViewController setProgress:];
-[_TtC7iMazing25MediaPlayerViewController tracks];
-[_TtC7iMazing25MediaPlayerViewController setTracks:];
-[_TtC7iMazing25MediaPlayerViewController current];
-[_TtC7iMazing25MediaPlayerViewController setCurrent:];
-[_TtC7iMazing25MediaPlayerViewController suggestedTracks];
-[_TtC7iMazing25MediaPlayerViewController setSuggestedTracks:];
-[_TtC7iMazing25MediaPlayerViewController suggestedTrack];
-[_TtC7iMazing25MediaPlayerViewController setSuggestedTrack:];
-[_TtC7iMazing25MediaPlayerViewController updateTimer];
-[_TtC7iMazing25MediaPlayerViewController setUpdateTimer:];
-[_TtC7iMazing25MediaPlayerViewController mediaPlayerSlider];
-[_TtC7iMazing25MediaPlayerViewController setMediaPlayerSlider:];
-[_TtC7iMazing25MediaPlayerViewController mediaPlayerProgressIndicator];
-[_TtC7iMazing25MediaPlayerViewController setMediaPlayerProgressIndicator:];
-[_TtC7iMazing25MediaPlayerViewController currentTimeLabel];
-[_TtC7iMazing25MediaPlayerViewController setCurrentTimeLabel:];
-[_TtC7iMazing25MediaPlayerViewController totalTimeLabel];
-[_TtC7iMazing25MediaPlayerViewController setTotalTimeLabel:];
-[_TtC7iMazing25MediaPlayerViewController progressChanged:];
-[_TtC7iMazing25MediaPlayerViewController nibName];
-[_TtC7iMazing25MediaPlayerViewController initWithCoder:];
-[_TtC7iMazing25MediaPlayerViewController viewDidLoad];
-[_TtC7iMazing25MediaPlayerViewController viewDidLayout];
-[_TtC7iMazing25MediaPlayerViewController updateProgress];
-[_TtC7iMazing25MediaPlayerViewController remoteCommandCenterTogglePlayPauseCommandHandler:];
-[_TtC7iMazing25MediaPlayerViewController remoteCommandCenterPlayCommandHandler:];
-[_TtC7iMazing25MediaPlayerViewController remoteCommandCenterPauseCommandHandler:];
-[_TtC7iMazing25MediaPlayerViewController remoteCommandCenterChangePlaybackPositionCommandHandler:];
-[_TtC7iMazing25MediaPlayerViewController remoteCommandCenterPreviousTrackCommandHandler:];
-[_TtC7iMazing25MediaPlayerViewController remoteCommandCenterNextTrackCommandHandler:];
-[_TtC7iMazing25MediaPlayerViewController resume:];
-[_TtC7iMazing25MediaPlayerViewController pause:];
-[_TtC7iMazing25MediaPlayerViewController previous:];
-[_TtC7iMazing25MediaPlayerViewController next:];
-[_TtC7iMazing25MediaPlayerViewController audioPlayerDidFinishPlaying:successfully:];
-[_TtC7iMazing25MediaPlayerViewController audioPlayerDecodeErrorDidOccur:error:];
-[_TtC7iMazing25MediaPlayerViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing25MediaTableColumnsSettings : NSObject {
    /* instance variables */
     definitions;
     settingName;
     defaults;
     firstTimeSet;
     tryToFitSize;
}

@property (T@"NSDictionary",N,&,Vdefinitions) definitions;

/* instance methods */
-[_TtC7iMazing25MediaTableColumnsSettings definitions];
-[_TtC7iMazing25MediaTableColumnsSettings setDefinitions:];
-[_TtC7iMazing25MediaTableColumnsSettings init];

@end

@interface _TtC7iMazing25PhotoAssetsCollectionView : _TtC7iMazing25TransparentCollectionView {
    /* instance variables */
     displayThumbnailInformations;
     isInitializing;
}

@property (TB,N,VdisplayThumbnailInformations) displayThumbnailInformations;

/* instance methods */
-[_TtC7iMazing25PhotoAssetsCollectionView displayThumbnailInformations];
-[_TtC7iMazing25PhotoAssetsCollectionView setDisplayThumbnailInformations:];
-[_TtC7iMazing25PhotoAssetsCollectionView keyDown:];
-[_TtC7iMazing25PhotoAssetsCollectionView initWithCoder:];

@end

@interface _TtC7iMazing25PhotoDetailViewController : NSViewController <NSSplitViewDelegate, NSOutlineViewDelegate> {
    /* instance variables */
     carouselDefaultHeight;
     photoPreviousButton;
     photoNextButton;
     infoOultineView;
     assetsItemsController;
     detailView;
     infoView;
     splitView;
     carouselSplitView;
     fullscreenCarouselSplitView;
     topTrackingView;
     bottomTrackingView;
     exitFullScreenButton;
     detailCollectionViewContainer;
     detailStaticViewContainer;
     photoDetailViewCollectionViewController;
     photoDetailViewThumbnailsCollectionViewController;
     infoViewData;
     assetsItems;
     showingBurstAssets;
     owner;
     isAwake;
     isInitializingOutlineView;
     expandInfoViewItems;
     itemsControllerContentObserver;
     splitViewDividerPosition;
     splitViewBottomConstraintConstant;
     fullScreenBottomTrackingArea;
     timer;
     shouldCollapseCarousel;
     currentSelectedIndex;
     previewSelectedIndex;
     currentItem;
     staticContentViewController;
     inFullScreen;
}

@property (T@"_TtC7iMazing21PhotoNavigationButton",N,&,VphotoPreviousButton) photoPreviousButton;
@property (T@"_TtC7iMazing21PhotoNavigationButton",N,&,VphotoNextButton) photoNextButton;
@property (T@"NSOutlineView",N,&,VinfoOultineView) infoOultineView;
@property (T@"NSArrayController",N,&,VassetsItemsController) assetsItemsController;
@property (T@"NSView",N,&,VdetailView) detailView;
@property (T@"_TtC7iMazing19PhotoBackgroundView",N,&,VinfoView) infoView;
@property (T@"NSSplitView",N,&,VsplitView) splitView;
@property (T@"NSSplitView",N,&,VcarouselSplitView) carouselSplitView;
@property (T@"NSSplitView",N,&,VfullscreenCarouselSplitView) fullscreenCarouselSplitView;
@property (T@"_TtC7iMazing12TrackingView",N,&,VtopTrackingView) topTrackingView;
@property (T@"_TtC7iMazing12TrackingView",N,&,VbottomTrackingView) bottomTrackingView;
@property (T@"NSButton",N,&,VexitFullScreenButton) exitFullScreenButton;
@property (T@"NSView",N,&,VdetailCollectionViewContainer) detailCollectionViewContainer;
@property (T@"NSView",N,&,VdetailStaticViewContainer) detailStaticViewContainer;
@property (T@"NSArray",N,C) infoViewData;
@property (T@"NSArray",N,C) assetsItems;
@property (TB,N,VshowingBurstAssets) showingBurstAssets;
@property (T@"Photo",N,&,VcurrentItem) currentItem;
@property (T@"_TtC7iMazing36PhotoDetailViewItemContentController",N,&,VstaticContentViewController) staticContentViewController;
@property (TB,N,VinFullScreen) inFullScreen;

/* instance methods */
-[_TtC7iMazing25PhotoDetailViewController splitView:constrainMaxCoordinate:ofSubviewAt:];
-[_TtC7iMazing25PhotoDetailViewController splitView:constrainMinCoordinate:ofSubviewAt:];
-[_TtC7iMazing25PhotoDetailViewController splitView:canCollapseSubview:];
-[_TtC7iMazing25PhotoDetailViewController splitView:shouldAdjustSizeOfSubview:];
-[_TtC7iMazing25PhotoDetailViewController outlineView:rowViewForItem:];
-[_TtC7iMazing25PhotoDetailViewController outlineView:shouldShowOutlineCellForItem:];
-[_TtC7iMazing25PhotoDetailViewController outlineView:isGroupItem:];
-[_TtC7iMazing25PhotoDetailViewController outlineView:shouldSelectItem:];
-[_TtC7iMazing25PhotoDetailViewController outlineView:viewForTableColumn:item:];
-[_TtC7iMazing25PhotoDetailViewController outlineView:heightOfRowByItem:];
-[_TtC7iMazing25PhotoDetailViewController outlineView:shouldExpandItem:];
-[_TtC7iMazing25PhotoDetailViewController outlineViewItemDidExpand:];
-[_TtC7iMazing25PhotoDetailViewController outlineViewItemDidCollapse:];
-[_TtC7iMazing25PhotoDetailViewController photoPreviousButton];
-[_TtC7iMazing25PhotoDetailViewController setPhotoPreviousButton:];
-[_TtC7iMazing25PhotoDetailViewController photoNextButton];
-[_TtC7iMazing25PhotoDetailViewController setPhotoNextButton:];
-[_TtC7iMazing25PhotoDetailViewController infoOultineView];
-[_TtC7iMazing25PhotoDetailViewController setInfoOultineView:];
-[_TtC7iMazing25PhotoDetailViewController assetsItemsController];
-[_TtC7iMazing25PhotoDetailViewController setAssetsItemsController:];
-[_TtC7iMazing25PhotoDetailViewController detailView];
-[_TtC7iMazing25PhotoDetailViewController setDetailView:];
-[_TtC7iMazing25PhotoDetailViewController infoView];
-[_TtC7iMazing25PhotoDetailViewController setInfoView:];
-[_TtC7iMazing25PhotoDetailViewController splitView];
-[_TtC7iMazing25PhotoDetailViewController setSplitView:];
-[_TtC7iMazing25PhotoDetailViewController carouselSplitView];
-[_TtC7iMazing25PhotoDetailViewController setCarouselSplitView:];
-[_TtC7iMazing25PhotoDetailViewController fullscreenCarouselSplitView];
-[_TtC7iMazing25PhotoDetailViewController setFullscreenCarouselSplitView:];
-[_TtC7iMazing25PhotoDetailViewController topTrackingView];
-[_TtC7iMazing25PhotoDetailViewController setTopTrackingView:];
-[_TtC7iMazing25PhotoDetailViewController bottomTrackingView];
-[_TtC7iMazing25PhotoDetailViewController setBottomTrackingView:];
-[_TtC7iMazing25PhotoDetailViewController exitFullScreenButton];
-[_TtC7iMazing25PhotoDetailViewController setExitFullScreenButton:];
-[_TtC7iMazing25PhotoDetailViewController detailCollectionViewContainer];
-[_TtC7iMazing25PhotoDetailViewController setDetailCollectionViewContainer:];
-[_TtC7iMazing25PhotoDetailViewController detailStaticViewContainer];
-[_TtC7iMazing25PhotoDetailViewController setDetailStaticViewContainer:];
-[_TtC7iMazing25PhotoDetailViewController infoViewData];
-[_TtC7iMazing25PhotoDetailViewController setInfoViewData:];
-[_TtC7iMazing25PhotoDetailViewController assetsItems];
-[_TtC7iMazing25PhotoDetailViewController setAssetsItems:];
-[_TtC7iMazing25PhotoDetailViewController showingBurstAssets];
-[_TtC7iMazing25PhotoDetailViewController setShowingBurstAssets:];
-[_TtC7iMazing25PhotoDetailViewController currentItem];
-[_TtC7iMazing25PhotoDetailViewController setCurrentItem:];
-[_TtC7iMazing25PhotoDetailViewController staticContentViewController];
-[_TtC7iMazing25PhotoDetailViewController setStaticContentViewController:];
-[_TtC7iMazing25PhotoDetailViewController inFullScreen];
-[_TtC7iMazing25PhotoDetailViewController setInFullScreen:];
-[_TtC7iMazing25PhotoDetailViewController init];
-[_TtC7iMazing25PhotoDetailViewController initWithCoder:];
-[_TtC7iMazing25PhotoDetailViewController dealloc];
-[_TtC7iMazing25PhotoDetailViewController awakeFromNib];
-[_TtC7iMazing25PhotoDetailViewController toggleFullScreen:];
-[_TtC7iMazing25PhotoDetailViewController exitFullScreen:];
-[_TtC7iMazing25PhotoDetailViewController onExitFullScreenButton:];
-[_TtC7iMazing25PhotoDetailViewController userInteractionNotification:];
-[_TtC7iMazing25PhotoDetailViewController onDidResizeSubviewsNotification:];
-[_TtC7iMazing25PhotoDetailViewController onExtractLargeMedia:];
-[_TtC7iMazing25PhotoDetailViewController onPhotoSelectedAssetChanged:];
-[_TtC7iMazing25PhotoDetailViewController onItemsControllerContentChange];
-[_TtC7iMazing25PhotoDetailViewController onInfoDataBuilt:];
-[_TtC7iMazing25PhotoDetailViewController onPhotoNavigationButtonPreviewChanged:];
-[_TtC7iMazing25PhotoDetailViewController onPhotoNavigationButtonUp:];
-[_TtC7iMazing25PhotoDetailViewController onThumbnailsCollectionViewPreviewChanged:];
-[_TtC7iMazing25PhotoDetailViewController onThumbnailsCollectionViewSelectionChanged:];
-[_TtC7iMazing25PhotoDetailViewController onThumbnailsCollectionViewItemClicked:];
-[_TtC7iMazing25PhotoDetailViewController onCollectionViewSelectionChanged:];
-[_TtC7iMazing25PhotoDetailViewController onTimer:];
-[_TtC7iMazing25PhotoDetailViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing25PlusMinusSegmentedControl : VKSegmentedControl {
    /* instance variables */
     delegate;
     actionsMenu;
}

@property (T@"<_TtP7iMazing24PlusMinusControlDelegate_>",N,W,Vdelegate) delegate;
@property (T@"NSMenu",N,&,VactionsMenu) actionsMenu;

/* instance methods */
-[_TtC7iMazing25PlusMinusSegmentedControl delegate];
-[_TtC7iMazing25PlusMinusSegmentedControl setDelegate:];
-[_TtC7iMazing25PlusMinusSegmentedControl actionsMenu];
-[_TtC7iMazing25PlusMinusSegmentedControl setActionsMenu:];
-[_TtC7iMazing25PlusMinusSegmentedControl awakeFromNib];
-[_TtC7iMazing25PlusMinusSegmentedControl buttonClicked:];
-[_TtC7iMazing25PlusMinusSegmentedControl initWithFrame:];
-[_TtC7iMazing25PlusMinusSegmentedControl initWithCoder:];

@end

@interface _TtC7iMazing25QuickTransferDropZoneView : NSView

/* instance methods */
-[_TtC7iMazing25QuickTransferDropZoneView drawRect:];
-[_TtC7iMazing25QuickTransferDropZoneView initWithFrame:];
-[_TtC7iMazing25QuickTransferDropZoneView initWithCoder:];

@end

@interface _TtC7iMazing25SchedulingOptionsHourItem : NSObject {
    /* instance variables */
     hour;
}

@property (Tq,N,Vhour) hour;
@property (T@"NSString",N,R) description;

/* instance methods */
-[_TtC7iMazing25SchedulingOptionsHourItem hour];
-[_TtC7iMazing25SchedulingOptionsHourItem setHour:];
-[_TtC7iMazing25SchedulingOptionsHourItem description];
-[_TtC7iMazing25SchedulingOptionsHourItem init];

@end

@interface _TtC7iMazing25StackViewContentImageView : NSImageView {
    /* instance variables */
     tooltipLabel;
     doNotClipSubviews;
     cachedStackView;
}

@property (T@"NSString",N,C) tooltipLabel;
@property (TB,N,VdoNotClipSubviews) doNotClipSubviews;
@property (TB,N) hidden;
@property (TB,N,R) wantsDefaultClipping;

/* instance methods */
-[_TtC7iMazing25StackViewContentImageView tooltipLabel];
-[_TtC7iMazing25StackViewContentImageView setTooltipLabel:];
-[_TtC7iMazing25StackViewContentImageView doNotClipSubviews];
-[_TtC7iMazing25StackViewContentImageView setDoNotClipSubviews:];
-[_TtC7iMazing25StackViewContentImageView awakeFromNib];
-[_TtC7iMazing25StackViewContentImageView isHidden];
-[_TtC7iMazing25StackViewContentImageView setHidden:];
-[_TtC7iMazing25StackViewContentImageView wantsDefaultClipping];
-[_TtC7iMazing25StackViewContentImageView makeBackingLayer];
-[_TtC7iMazing25StackViewContentImageView initWithFrame:];
-[_TtC7iMazing25StackViewContentImageView initWithCoder:];

@end

@interface _TtC7iMazing25TransparentCollectionView : NSCollectionView

/* instance methods */
-[_TtC7iMazing25TransparentCollectionView initWithCoder:];
-[_TtC7iMazing25TransparentCollectionView initWithFrame:];

@end

@interface _TtC7iMazing25WizardTitleViewController : NSViewController {
    /* instance variables */
     title1;
     title2;
     showTitle1;
     showTitle2;
     showSeparator;
}

@property (T@"NSString",N,C) title1;
@property (T@"NSString",N,C) title2;
@property (TB,N,VshowTitle1) showTitle1;
@property (TB,N,VshowTitle2) showTitle2;
@property (TB,N,VshowSeparator) showSeparator;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing25WizardTitleViewController title1];
-[_TtC7iMazing25WizardTitleViewController setTitle1:];
-[_TtC7iMazing25WizardTitleViewController title2];
-[_TtC7iMazing25WizardTitleViewController setTitle2:];
-[_TtC7iMazing25WizardTitleViewController showTitle1];
-[_TtC7iMazing25WizardTitleViewController setShowTitle1:];
-[_TtC7iMazing25WizardTitleViewController showTitle2];
-[_TtC7iMazing25WizardTitleViewController setShowTitle2:];
-[_TtC7iMazing25WizardTitleViewController showSeparator];
-[_TtC7iMazing25WizardTitleViewController setShowSeparator:];
-[_TtC7iMazing25WizardTitleViewController nibName];
-[_TtC7iMazing25WizardTitleViewController initWithNibName:bundle:];
-[_TtC7iMazing25WizardTitleViewController initWithCoder:];

@end

@interface _TtC7iMazing26HomeDiscoverViewController : NSViewController <_TtP7iMazing14IndexedElement_> {
    /* instance variables */
     indexPath;
     toolbarContainer;
     stackView;
     sections;
     toolbar;
     appsController;
     tourController;
}

@property (T@"NSIndexPath",N,C) indexPath;
@property (T@"NSView",N,&,VtoolbarContainer) toolbarContainer;
@property (T@"NSStackView",N,&,VstackView) stackView;
@property (T@"NSArray",N,C) sections;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing26HomeDiscoverViewController indexPath];
-[_TtC7iMazing26HomeDiscoverViewController setIndexPath:];
-[_TtC7iMazing26HomeDiscoverViewController toolbarContainer];
-[_TtC7iMazing26HomeDiscoverViewController setToolbarContainer:];
-[_TtC7iMazing26HomeDiscoverViewController stackView];
-[_TtC7iMazing26HomeDiscoverViewController setStackView:];
-[_TtC7iMazing26HomeDiscoverViewController sections];
-[_TtC7iMazing26HomeDiscoverViewController setSections:];
-[_TtC7iMazing26HomeDiscoverViewController nibName];
-[_TtC7iMazing26HomeDiscoverViewController viewDidLoad];
-[_TtC7iMazing26HomeDiscoverViewController initWithNibName:bundle:];
-[_TtC7iMazing26HomeDiscoverViewController initWithCoder:];

@end

@interface _TtC7iMazing26HomeIconBaseViewController : NSViewController <NSCollectionViewDelegate> {
    /* instance variables */
     controller;
     collectionView;
     lastSelectedItem;
     selectionObserver;
     itemBeingSelected;
     options;
     onSelect;
}

@property (T@"NSArrayController",N,&,Vcontroller) controller;
@property (T@"NSCollectionView",N,&,VcollectionView) collectionView;

/* instance methods */
-[_TtC7iMazing26HomeIconBaseViewController controller];
-[_TtC7iMazing26HomeIconBaseViewController setController:];
-[_TtC7iMazing26HomeIconBaseViewController collectionView];
-[_TtC7iMazing26HomeIconBaseViewController setCollectionView:];
-[_TtC7iMazing26HomeIconBaseViewController initWithCoder:];
-[_TtC7iMazing26HomeIconBaseViewController viewDidLoad];
-[_TtC7iMazing26HomeIconBaseViewController collectionView:didSelectItemsAtIndexPaths:];
-[_TtC7iMazing26HomeIconBaseViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing26HomeListBaseViewController : NSViewController <NSTableViewDelegate> {
    /* instance variables */
     controller;
     deviceInfoButtonLabel;
     tableView;
     tableHeaderContainerView;
     infoPopover;
     infoPopoverController;
     tableHeaderView;
     changingSelection;
     lastSelectedRowIndex;
     sortDescriptors;
     TableViewHeaderCheckboxCell;
     options;
     onSelect;
}

@property (T@"NSArrayController",N,&,Vcontroller) controller;
@property (T@"NSString",N,C) deviceInfoButtonLabel;
@property (T@"NSTableView",N,&,VtableView) tableView;
@property (T@"NSView",N,&,VtableHeaderContainerView) tableHeaderContainerView;
@property (T@"NSPopover",N,&,VinfoPopover) infoPopover;

/* instance methods */
-[_TtC7iMazing26HomeListBaseViewController controller];
-[_TtC7iMazing26HomeListBaseViewController setController:];
-[_TtC7iMazing26HomeListBaseViewController deviceInfoButtonLabel];
-[_TtC7iMazing26HomeListBaseViewController setDeviceInfoButtonLabel:];
-[_TtC7iMazing26HomeListBaseViewController tableView];
-[_TtC7iMazing26HomeListBaseViewController setTableView:];
-[_TtC7iMazing26HomeListBaseViewController tableHeaderContainerView];
-[_TtC7iMazing26HomeListBaseViewController setTableHeaderContainerView:];
-[_TtC7iMazing26HomeListBaseViewController infoPopover];
-[_TtC7iMazing26HomeListBaseViewController setInfoPopover:];
-[_TtC7iMazing26HomeListBaseViewController initWithCoder:];
-[_TtC7iMazing26HomeListBaseViewController dealloc];
-[_TtC7iMazing26HomeListBaseViewController viewDidLoad];
-[_TtC7iMazing26HomeListBaseViewController viewWillAppear];
-[_TtC7iMazing26HomeListBaseViewController viewDidDisappear];
-[_TtC7iMazing26HomeListBaseViewController DeviceInfo:];
-[_TtC7iMazing26HomeListBaseViewController toggleAllItems:];
-[_TtC7iMazing26HomeListBaseViewController observeValueForKeyPath:ofObject:change:context:];
-[_TtC7iMazing26HomeListBaseViewController tableView:rowViewForRow:];
-[_TtC7iMazing26HomeListBaseViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing26MainWindowToolbarFlashView : NSView {
    /* instance variables */
     flashing;
}

/* instance methods */
-[_TtC7iMazing26MainWindowToolbarFlashView drawRect:];
-[_TtC7iMazing26MainWindowToolbarFlashView initWithFrame:];
-[_TtC7iMazing26MainWindowToolbarFlashView initWithCoder:];

@end

@interface _TtC7iMazing26MediaLibraryViewController : NSViewController <NSMenuDelegate, NSOutlineViewDelegate, NSOutlineViewDataSource> {
    /* instance variables */
     manager;
     controller;
     player;
     isiOS;
     canPlay;
     hasFilters;
     multipleSidebarSelectionLabel;
     exportLabel;
     hideMediasAlreadyIniTunesLabel;
     enablePlaylistsMenu;
     statusText;
     searchText;
     showSidebar;
     hasQuickLookFeature;
     libraryTracks;
     treeController;
     outlineView;
     sidebarScrollView;
     contentContainer;
     playerContainer;
     sidebarView;
     addPlaylistButton;
     deletePlaylistButton;
     optionsMenu;
     sidebarAppleMusicItem;
     selectionObserver;
     showOnlyTransferableMediaObserver;
     hideMediasAlreadyIniTunesObserver;
     hideDRMProtectedMediaObserver;
     sidebarItemToSelect;
     onAddPlaylist;
     onDeletePlaylist;
     onSidebarSelectionDidChange;
}

@property (T@"MediaManager",N,&,Vmanager) manager;
@property (T@"_TtC7iMazing27MediaBaseListViewController",N,&,Vcontroller) controller;
@property (T@"_TtC7iMazing25MediaPlayerViewController",N,&,Vplayer) player;
@property (TB,N,VisiOS) isiOS;
@property (TB,N,VcanPlay) canPlay;
@property (TB,N,VhasFilters) hasFilters;
@property (T@"NSString",N,C) multipleSidebarSelectionLabel;
@property (T@"NSString",N,C) exportLabel;
@property (T@"NSString",N,C) hideMediasAlreadyIniTunesLabel;
@property (TB,N,VenablePlaylistsMenu) enablePlaylistsMenu;
@property (T@"NSString",N,C) statusText;
@property (T@"NSString",N,C) searchText;
@property (T@"NSTreeController",N,&,VtreeController) treeController;
@property (T@"NSOutlineView",N,&,VoutlineView) outlineView;
@property (T@"NSScrollView",N,&,VsidebarScrollView) sidebarScrollView;
@property (T@"NSView",N,&,VcontentContainer) contentContainer;
@property (T@"NSView",N,&,VplayerContainer) playerContainer;
@property (T@"NSView",N,&,VsidebarView) sidebarView;
@property (T@"NSButton",N,&,VaddPlaylistButton) addPlaylistButton;
@property (T@"NSButton",N,&,VdeletePlaylistButton) deletePlaylistButton;
@property (T@"NSMenu",N,&,VoptionsMenu) optionsMenu;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing26MediaLibraryViewController menuWillOpen:];
-[_TtC7iMazing26MediaLibraryViewController outlineView:isGroupItem:];
-[_TtC7iMazing26MediaLibraryViewController outlineView:viewForTableColumn:item:];
-[_TtC7iMazing26MediaLibraryViewController outlineView:shouldCollapseItem:];
-[_TtC7iMazing26MediaLibraryViewController outlineView:shouldShowOutlineCellForItem:];
-[_TtC7iMazing26MediaLibraryViewController outlineView:shouldSelectItem:];
-[_TtC7iMazing26MediaLibraryViewController outlineViewSelectionDidChange:];
-[_TtC7iMazing26MediaLibraryViewController outlineView:writeItems:toPasteboard:];
-[_TtC7iMazing26MediaLibraryViewController outlineView:namesOfPromisedFilesDroppedAtDestination:forDraggedItems:];
-[_TtC7iMazing26MediaLibraryViewController outlineView:validateDrop:proposedItem:proposedChildIndex:];
-[_TtC7iMazing26MediaLibraryViewController outlineView:acceptDrop:item:childIndex:];
-[_TtC7iMazing26MediaLibraryViewController manager];
-[_TtC7iMazing26MediaLibraryViewController setManager:];
-[_TtC7iMazing26MediaLibraryViewController controller];
-[_TtC7iMazing26MediaLibraryViewController setController:];
-[_TtC7iMazing26MediaLibraryViewController player];
-[_TtC7iMazing26MediaLibraryViewController setPlayer:];
-[_TtC7iMazing26MediaLibraryViewController isiOS];
-[_TtC7iMazing26MediaLibraryViewController setIsiOS:];
-[_TtC7iMazing26MediaLibraryViewController canPlay];
-[_TtC7iMazing26MediaLibraryViewController setCanPlay:];
-[_TtC7iMazing26MediaLibraryViewController hasFilters];
-[_TtC7iMazing26MediaLibraryViewController setHasFilters:];
-[_TtC7iMazing26MediaLibraryViewController multipleSidebarSelectionLabel];
-[_TtC7iMazing26MediaLibraryViewController setMultipleSidebarSelectionLabel:];
-[_TtC7iMazing26MediaLibraryViewController exportLabel];
-[_TtC7iMazing26MediaLibraryViewController setExportLabel:];
-[_TtC7iMazing26MediaLibraryViewController hideMediasAlreadyIniTunesLabel];
-[_TtC7iMazing26MediaLibraryViewController setHideMediasAlreadyIniTunesLabel:];
-[_TtC7iMazing26MediaLibraryViewController enablePlaylistsMenu];
-[_TtC7iMazing26MediaLibraryViewController setEnablePlaylistsMenu:];
-[_TtC7iMazing26MediaLibraryViewController statusText];
-[_TtC7iMazing26MediaLibraryViewController setStatusText:];
-[_TtC7iMazing26MediaLibraryViewController searchText];
-[_TtC7iMazing26MediaLibraryViewController setSearchText:];
-[_TtC7iMazing26MediaLibraryViewController treeController];
-[_TtC7iMazing26MediaLibraryViewController setTreeController:];
-[_TtC7iMazing26MediaLibraryViewController outlineView];
-[_TtC7iMazing26MediaLibraryViewController setOutlineView:];
-[_TtC7iMazing26MediaLibraryViewController sidebarScrollView];
-[_TtC7iMazing26MediaLibraryViewController setSidebarScrollView:];
-[_TtC7iMazing26MediaLibraryViewController contentContainer];
-[_TtC7iMazing26MediaLibraryViewController setContentContainer:];
-[_TtC7iMazing26MediaLibraryViewController playerContainer];
-[_TtC7iMazing26MediaLibraryViewController setPlayerContainer:];
-[_TtC7iMazing26MediaLibraryViewController sidebarView];
-[_TtC7iMazing26MediaLibraryViewController setSidebarView:];
-[_TtC7iMazing26MediaLibraryViewController addPlaylistButton];
-[_TtC7iMazing26MediaLibraryViewController setAddPlaylistButton:];
-[_TtC7iMazing26MediaLibraryViewController deletePlaylistButton];
-[_TtC7iMazing26MediaLibraryViewController setDeletePlaylistButton:];
-[_TtC7iMazing26MediaLibraryViewController optionsMenu];
-[_TtC7iMazing26MediaLibraryViewController setOptionsMenu:];
-[_TtC7iMazing26MediaLibraryViewController initWithCoder:];
-[_TtC7iMazing26MediaLibraryViewController dealloc];
-[_TtC7iMazing26MediaLibraryViewController nibName];
-[_TtC7iMazing26MediaLibraryViewController viewDidLoad];
-[_TtC7iMazing26MediaLibraryViewController onShowOptionsMenu:];
-[_TtC7iMazing26MediaLibraryViewController play:];
-[_TtC7iMazing26MediaLibraryViewController addPlaylist:];
-[_TtC7iMazing26MediaLibraryViewController deletePlaylist:];
-[_TtC7iMazing26MediaLibraryViewController renamePlaylist:];
-[_TtC7iMazing26MediaLibraryViewController OutlineViewClick:];
-[_TtC7iMazing26MediaLibraryViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing26MultipleKeysSortDescriptor : NSSortDescriptor {
    /* instance variables */
     keys;
     isAscending;
}

@property (T@"NSString",N,R) key;
@property (TB,N,R) ascending;
@property (T:,N,R) selector;
@property (T@,N,R) reversedSortDescriptor;

/* instance methods */
-[_TtC7iMazing26MultipleKeysSortDescriptor key];
-[_TtC7iMazing26MultipleKeysSortDescriptor ascending];
-[_TtC7iMazing26MultipleKeysSortDescriptor selector];
-[_TtC7iMazing26MultipleKeysSortDescriptor initWithCoder:];
-[_TtC7iMazing26MultipleKeysSortDescriptor copyWithZone:];
-[_TtC7iMazing26MultipleKeysSortDescriptor reversedSortDescriptor];
-[_TtC7iMazing26MultipleKeysSortDescriptor compareObject:toObject:];
-[_TtC7iMazing26MultipleKeysSortDescriptor initWithKey:ascending:];
-[_TtC7iMazing26MultipleKeysSortDescriptor initWithKey:ascending:selector:];
-[_TtC7iMazing26MultipleKeysSortDescriptor initWithKey:ascending:comparator:];
-[_TtC7iMazing26MultipleKeysSortDescriptor init];

@end

@interface _TtC7iMazing26MusicLibraryViewController : _TtC7iMazing26MediaLibraryViewController

/* instance methods */
-[_TtC7iMazing26MusicLibraryViewController initWithCoder:];

@end

@interface _TtC7iMazing26PhotoAssetsDescriptionView : _TtC7iMazing16PhotoOpacityView {
    /* instance variables */
     cachedAssetDescriptionTextField;
     cachedAssetDescriptionIconOnlyView;
}

/* instance methods */
-[_TtC7iMazing26PhotoAssetsDescriptionView drawRect:];
-[_TtC7iMazing26PhotoAssetsDescriptionView initWithFrame:];
-[_TtC7iMazing26PhotoAssetsDescriptionView initWithCoder:];

@end

@interface _TtC7iMazing26RegistrationTextButtonCell : NSButtonCell

/* instance methods */
-[_TtC7iMazing26RegistrationTextButtonCell highlightColorWithFrame:inView:];
-[_TtC7iMazing26RegistrationTextButtonCell initTextCell:];
-[_TtC7iMazing26RegistrationTextButtonCell initImageCell:];
-[_TtC7iMazing26RegistrationTextButtonCell initWithCoder:];

@end

@interface _TtC7iMazing26RegistrationViewController : NSViewController {
    /* instance variables */
     controllers;
}

@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing26RegistrationViewController nibName];
-[_TtC7iMazing26RegistrationViewController viewDidLoad];
-[_TtC7iMazing26RegistrationViewController back:];
-[_TtC7iMazing26RegistrationViewController initWithNibName:bundle:];
-[_TtC7iMazing26RegistrationViewController initWithCoder:];

@end

@interface _TtC7iMazing26SimultaneousOperationsItem : NSObject {
    /* instance variables */
     value;
     title;
}

@property (Tq,N,Vvalue) value;
@property (T@"NSString",N,R) description;

/* class methods */
+[_TtC7iMazing26SimultaneousOperationsItem standardItems];

/* instance methods */
-[_TtC7iMazing26SimultaneousOperationsItem value];
-[_TtC7iMazing26SimultaneousOperationsItem setValue:];
-[_TtC7iMazing26SimultaneousOperationsItem initWithTitle:value:];
-[_TtC7iMazing26SimultaneousOperationsItem description];
-[_TtC7iMazing26SimultaneousOperationsItem init];

@end

@interface _TtC7iMazing26VideoLibraryViewController : _TtC7iMazing26MediaLibraryViewController

/* instance methods */
-[_TtC7iMazing26VideoLibraryViewController initWithCoder:];

@end

@interface _TtC7iMazing27BatteryWidgetViewController : NSViewController {
    /* instance variables */
     item;
     hasDetails;
     charging;
     label;
     healthText;
     batteryView;
     healthLabel;
     observer;
}

@property (T@"_TtC7iMazing10DeviceItem",N,&,Vitem) item;
@property (TB,N,VhasDetails) hasDetails;
@property (TB,N,Vcharging) charging;
@property (T@"NSString",N,C) label;
@property (T@"NSString",N,C) healthText;
@property (T@"VKBatteryView",N,&,VbatteryView) batteryView;
@property (T@"VKLabel",N,&,VhealthLabel) healthLabel;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing27BatteryWidgetViewController item];
-[_TtC7iMazing27BatteryWidgetViewController setItem:];
-[_TtC7iMazing27BatteryWidgetViewController hasDetails];
-[_TtC7iMazing27BatteryWidgetViewController setHasDetails:];
-[_TtC7iMazing27BatteryWidgetViewController charging];
-[_TtC7iMazing27BatteryWidgetViewController setCharging:];
-[_TtC7iMazing27BatteryWidgetViewController label];
-[_TtC7iMazing27BatteryWidgetViewController setLabel:];
-[_TtC7iMazing27BatteryWidgetViewController healthText];
-[_TtC7iMazing27BatteryWidgetViewController setHealthText:];
-[_TtC7iMazing27BatteryWidgetViewController batteryView];
-[_TtC7iMazing27BatteryWidgetViewController setBatteryView:];
-[_TtC7iMazing27BatteryWidgetViewController healthLabel];
-[_TtC7iMazing27BatteryWidgetViewController setHealthLabel:];
-[_TtC7iMazing27BatteryWidgetViewController initWithCoder:];
-[_TtC7iMazing27BatteryWidgetViewController nibName];
-[_TtC7iMazing27BatteryWidgetViewController viewDidLoad];
-[_TtC7iMazing27BatteryWidgetViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing27BusinessTrialViewController : NSViewController {
    /* instance variables */
     wizard;
     previewButton;
}

@property (T@"_TtC7iMazing33BusinessTrialWizardViewController",N,W,Vwizard) wizard;
@property (T@"NSButton",N,&,VpreviewButton) previewButton;

/* instance methods */
-[_TtC7iMazing27BusinessTrialViewController wizard];
-[_TtC7iMazing27BusinessTrialViewController setWizard:];
-[_TtC7iMazing27BusinessTrialViewController previewButton];
-[_TtC7iMazing27BusinessTrialViewController setPreviewButton:];
-[_TtC7iMazing27BusinessTrialViewController buyNow:];
-[_TtC7iMazing27BusinessTrialViewController preview:];
-[_TtC7iMazing27BusinessTrialViewController enterLicenseKey:];
-[_TtC7iMazing27BusinessTrialViewController initWithNibName:bundle:];
-[_TtC7iMazing27BusinessTrialViewController initWithCoder:];

@end

@interface _TtC7iMazing27ConnectScreenViewController : NSViewController {
    /* instance variables */
     loading;
     subtitle;
     onRefresh;
     onConnect;
     imageName;
     transparent;
     device;
     imageContainer;
}

@property (TB,N,Vloading) loading;
@property (T@"NSString",N,C) subtitle;
@property (T@?,N,C) onRefresh;
@property (T@?,N,C) onConnect;
@property (T@"NSString",N,C) imageName;
@property (TB,N,Vtransparent) transparent;
@property (T@"Device",N,&,Vdevice) device;
@property (T@"NSView",N,&,VimageContainer) imageContainer;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing27ConnectScreenViewController loading];
-[_TtC7iMazing27ConnectScreenViewController setLoading:];
-[_TtC7iMazing27ConnectScreenViewController subtitle];
-[_TtC7iMazing27ConnectScreenViewController setSubtitle:];
-[_TtC7iMazing27ConnectScreenViewController onRefresh];
-[_TtC7iMazing27ConnectScreenViewController setOnRefresh:];
-[_TtC7iMazing27ConnectScreenViewController onConnect];
-[_TtC7iMazing27ConnectScreenViewController setOnConnect:];
-[_TtC7iMazing27ConnectScreenViewController imageName];
-[_TtC7iMazing27ConnectScreenViewController setImageName:];
-[_TtC7iMazing27ConnectScreenViewController transparent];
-[_TtC7iMazing27ConnectScreenViewController setTransparent:];
-[_TtC7iMazing27ConnectScreenViewController device];
-[_TtC7iMazing27ConnectScreenViewController setDevice:];
-[_TtC7iMazing27ConnectScreenViewController imageContainer];
-[_TtC7iMazing27ConnectScreenViewController setImageContainer:];
-[_TtC7iMazing27ConnectScreenViewController init];
-[_TtC7iMazing27ConnectScreenViewController initWithDevice:];
-[_TtC7iMazing27ConnectScreenViewController initWithCoder:];
-[_TtC7iMazing27ConnectScreenViewController dealloc];
-[_TtC7iMazing27ConnectScreenViewController nibName];
-[_TtC7iMazing27ConnectScreenViewController viewDidLoad];
-[_TtC7iMazing27ConnectScreenViewController refresh:];
-[_TtC7iMazing27ConnectScreenViewController deviceStatusChanged:];
-[_TtC7iMazing27ConnectScreenViewController viewDidAppear];
-[_TtC7iMazing27ConnectScreenViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing27DeviceOptionsViewController : NSViewController <NSTextFieldDelegate> {
    /* instance variables */
     contentView;
     languageAC;
     countriesAC;
     supervisedSettingsView;
     lockScreenDropView;
     homeScreenDropView;
     lockScreenImageView;
     homeScreenImageView;
     deviceNameTextField;
     placeholderImage;
     allowedImageTypes;
     isLoading;
     enableSaveAndDiscard;
     cachedVoiceOver;
     cachedZoom;
     cachedInvert;
     cachedSpeak;
     cachedMono;
     cachedCaptions;
     _device;
     _awake;
     _loadingVC;
     name;
     language;
     country;
     voiceOver;
     zoom;
     invert;
     speak;
     mono;
     captions;
     lockScreenPath;
     homeScreenPath;
     isSupervised;
     canClearPasscode;
     hideSupervisedSettings;
     noSupervisionIdentityLabel;
     deviceInSingleAppMode;
     singleAppItem;
     enableSingleAppMode;
     disableTouch;
     disableDeviceRotation;
     disableVolumeButtons;
     disableRingerSwitch;
     disableSleepWakeButton;
     disableAutoLock;
     isDisablingSingleAppMode;
     chooseAppWC;
     showSupervisionSettings;
}

@property (T@"NSView",N,&,VcontentView) contentView;
@property (T@"NSArrayController",N,&,VlanguageAC) languageAC;
@property (T@"NSArrayController",N,&,VcountriesAC) countriesAC;
@property (T@"NSView",N,&,VsupervisedSettingsView) supervisedSettingsView;
@property (T@"_TtC7iMazing13DropSuperview",N,&,VlockScreenDropView) lockScreenDropView;
@property (T@"_TtC7iMazing13DropSuperview",N,&,VhomeScreenDropView) homeScreenDropView;
@property (T@"_TtC7iMazing15AspectFillImage",N,&,VlockScreenImageView) lockScreenImageView;
@property (T@"_TtC7iMazing15AspectFillImage",N,&,VhomeScreenImageView) homeScreenImageView;
@property (T@"NSTextField",N,&,VdeviceNameTextField) deviceNameTextField;
@property (TB,N,VisLoading) isLoading;
@property (TB,N,VenableSaveAndDiscard) enableSaveAndDiscard;
@property (T@"NSString",N,C) name;
@property (T@"_TtC7iMazing11ISOLanguage",N,&,Vlanguage) language;
@property (T@"_TtC7iMazing10ISOCountry",N,&,Vcountry) country;
@property (TB,N,VvoiceOver) voiceOver;
@property (TB,N,Vzoom) zoom;
@property (TB,N,Vinvert) invert;
@property (TB,N,Vspeak) speak;
@property (TB,N,Vmono) mono;
@property (TB,N,Vcaptions) captions;
@property (T@"NSString",N,C) lockScreenPath;
@property (T@"NSString",N,C) homeScreenPath;
@property (TB,N,VisSupervised) isSupervised;
@property (TB,N,VcanClearPasscode) canClearPasscode;
@property (TB,N,VhideSupervisedSettings) hideSupervisedSettings;
@property (T@"NSString",N,C) noSupervisionIdentityLabel;
@property (TB,N,VdeviceInSingleAppMode) deviceInSingleAppMode;
@property (T@"iOSAppDisplayItem",N,&,VsingleAppItem) singleAppItem;
@property (TB,N,VenableSingleAppMode) enableSingleAppMode;
@property (TB,N,VdisableTouch) disableTouch;
@property (TB,N,VdisableDeviceRotation) disableDeviceRotation;
@property (TB,N,VdisableVolumeButtons) disableVolumeButtons;
@property (TB,N,VdisableRingerSwitch) disableRingerSwitch;
@property (TB,N,VdisableSleepWakeButton) disableSleepWakeButton;
@property (TB,N,VdisableAutoLock) disableAutoLock;
@property (TB,N,VisDisablingSingleAppMode) isDisablingSingleAppMode;

/* instance methods */
-[_TtC7iMazing27DeviceOptionsViewController contentView];
-[_TtC7iMazing27DeviceOptionsViewController setContentView:];
-[_TtC7iMazing27DeviceOptionsViewController languageAC];
-[_TtC7iMazing27DeviceOptionsViewController setLanguageAC:];
-[_TtC7iMazing27DeviceOptionsViewController countriesAC];
-[_TtC7iMazing27DeviceOptionsViewController setCountriesAC:];
-[_TtC7iMazing27DeviceOptionsViewController supervisedSettingsView];
-[_TtC7iMazing27DeviceOptionsViewController setSupervisedSettingsView:];
-[_TtC7iMazing27DeviceOptionsViewController lockScreenDropView];
-[_TtC7iMazing27DeviceOptionsViewController setLockScreenDropView:];
-[_TtC7iMazing27DeviceOptionsViewController homeScreenDropView];
-[_TtC7iMazing27DeviceOptionsViewController setHomeScreenDropView:];
-[_TtC7iMazing27DeviceOptionsViewController lockScreenImageView];
-[_TtC7iMazing27DeviceOptionsViewController setLockScreenImageView:];
-[_TtC7iMazing27DeviceOptionsViewController homeScreenImageView];
-[_TtC7iMazing27DeviceOptionsViewController setHomeScreenImageView:];
-[_TtC7iMazing27DeviceOptionsViewController deviceNameTextField];
-[_TtC7iMazing27DeviceOptionsViewController setDeviceNameTextField:];
-[_TtC7iMazing27DeviceOptionsViewController isLoading];
-[_TtC7iMazing27DeviceOptionsViewController setIsLoading:];
-[_TtC7iMazing27DeviceOptionsViewController enableSaveAndDiscard];
-[_TtC7iMazing27DeviceOptionsViewController setEnableSaveAndDiscard:];
-[_TtC7iMazing27DeviceOptionsViewController name];
-[_TtC7iMazing27DeviceOptionsViewController setName:];
-[_TtC7iMazing27DeviceOptionsViewController language];
-[_TtC7iMazing27DeviceOptionsViewController setLanguage:];
-[_TtC7iMazing27DeviceOptionsViewController country];
-[_TtC7iMazing27DeviceOptionsViewController setCountry:];
-[_TtC7iMazing27DeviceOptionsViewController voiceOver];
-[_TtC7iMazing27DeviceOptionsViewController setVoiceOver:];
-[_TtC7iMazing27DeviceOptionsViewController zoom];
-[_TtC7iMazing27DeviceOptionsViewController setZoom:];
-[_TtC7iMazing27DeviceOptionsViewController invert];
-[_TtC7iMazing27DeviceOptionsViewController setInvert:];
-[_TtC7iMazing27DeviceOptionsViewController speak];
-[_TtC7iMazing27DeviceOptionsViewController setSpeak:];
-[_TtC7iMazing27DeviceOptionsViewController mono];
-[_TtC7iMazing27DeviceOptionsViewController setMono:];
-[_TtC7iMazing27DeviceOptionsViewController captions];
-[_TtC7iMazing27DeviceOptionsViewController setCaptions:];
-[_TtC7iMazing27DeviceOptionsViewController lockScreenPath];
-[_TtC7iMazing27DeviceOptionsViewController setLockScreenPath:];
-[_TtC7iMazing27DeviceOptionsViewController homeScreenPath];
-[_TtC7iMazing27DeviceOptionsViewController setHomeScreenPath:];
-[_TtC7iMazing27DeviceOptionsViewController isSupervised];
-[_TtC7iMazing27DeviceOptionsViewController setIsSupervised:];
-[_TtC7iMazing27DeviceOptionsViewController canClearPasscode];
-[_TtC7iMazing27DeviceOptionsViewController setCanClearPasscode:];
-[_TtC7iMazing27DeviceOptionsViewController hideSupervisedSettings];
-[_TtC7iMazing27DeviceOptionsViewController setHideSupervisedSettings:];
-[_TtC7iMazing27DeviceOptionsViewController noSupervisionIdentityLabel];
-[_TtC7iMazing27DeviceOptionsViewController setNoSupervisionIdentityLabel:];
-[_TtC7iMazing27DeviceOptionsViewController deviceInSingleAppMode];
-[_TtC7iMazing27DeviceOptionsViewController setDeviceInSingleAppMode:];
-[_TtC7iMazing27DeviceOptionsViewController singleAppItem];
-[_TtC7iMazing27DeviceOptionsViewController setSingleAppItem:];
-[_TtC7iMazing27DeviceOptionsViewController enableSingleAppMode];
-[_TtC7iMazing27DeviceOptionsViewController setEnableSingleAppMode:];
-[_TtC7iMazing27DeviceOptionsViewController disableTouch];
-[_TtC7iMazing27DeviceOptionsViewController setDisableTouch:];
-[_TtC7iMazing27DeviceOptionsViewController disableDeviceRotation];
-[_TtC7iMazing27DeviceOptionsViewController setDisableDeviceRotation:];
-[_TtC7iMazing27DeviceOptionsViewController disableVolumeButtons];
-[_TtC7iMazing27DeviceOptionsViewController setDisableVolumeButtons:];
-[_TtC7iMazing27DeviceOptionsViewController disableRingerSwitch];
-[_TtC7iMazing27DeviceOptionsViewController setDisableRingerSwitch:];
-[_TtC7iMazing27DeviceOptionsViewController disableSleepWakeButton];
-[_TtC7iMazing27DeviceOptionsViewController setDisableSleepWakeButton:];
-[_TtC7iMazing27DeviceOptionsViewController disableAutoLock];
-[_TtC7iMazing27DeviceOptionsViewController setDisableAutoLock:];
-[_TtC7iMazing27DeviceOptionsViewController isDisablingSingleAppMode];
-[_TtC7iMazing27DeviceOptionsViewController setIsDisablingSingleAppMode:];
-[_TtC7iMazing27DeviceOptionsViewController initWithCoder:];
-[_TtC7iMazing27DeviceOptionsViewController awakeFromNib];
-[_TtC7iMazing27DeviceOptionsViewController chooseLockScreen:];
-[_TtC7iMazing27DeviceOptionsViewController chooseHomeScreen:];
-[_TtC7iMazing27DeviceOptionsViewController removeLockScreen:];
-[_TtC7iMazing27DeviceOptionsViewController removeHomeScreen:];
-[_TtC7iMazing27DeviceOptionsViewController savePasscodeUnlockToken:];
-[_TtC7iMazing27DeviceOptionsViewController clearPasscode:];
-[_TtC7iMazing27DeviceOptionsViewController clearRestrictionsPassword:];
-[_TtC7iMazing27DeviceOptionsViewController enableSingleAppClicked:];
-[_TtC7iMazing27DeviceOptionsViewController disableSingleAppModeClicked:];
-[_TtC7iMazing27DeviceOptionsViewController controlTextDidChange:];
-[_TtC7iMazing27DeviceOptionsViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing27DeviceSidebarViewController : NSViewController <VKHighlightListViewControllerDelegate> {
    /* instance variables */
     item;
     deviceViewController;
     listViewContainer;
     deviceImage;
     infoPopover;
     contentView;
     titleLabel;
     renameMenu;
     listViewController;
     menuObserver;
     archiveObserver;
     infoPopoverController;
     showMoreButton;
}

@property (T@"_TtC7iMazing10DeviceItem",N,&,Vitem) item;
@property (T@"_TtC7iMazing20DeviceViewController",N,W,VdeviceViewController) deviceViewController;
@property (T@"NSView",N,&,VlistViewContainer) listViewContainer;
@property (T@"NSImageView",N,&,VdeviceImage) deviceImage;
@property (T@"NSPopover",N,&,VinfoPopover) infoPopover;
@property (T@"NSView",N,&,VcontentView) contentView;
@property (T@"NSView",N,&,VtitleLabel) titleLabel;
@property (T@"NSMenu",N,&,VrenameMenu) renameMenu;
@property (TB,N,VshowMoreButton) showMoreButton;

/* instance methods */
-[_TtC7iMazing27DeviceSidebarViewController item];
-[_TtC7iMazing27DeviceSidebarViewController setItem:];
-[_TtC7iMazing27DeviceSidebarViewController deviceViewController];
-[_TtC7iMazing27DeviceSidebarViewController setDeviceViewController:];
-[_TtC7iMazing27DeviceSidebarViewController listViewContainer];
-[_TtC7iMazing27DeviceSidebarViewController setListViewContainer:];
-[_TtC7iMazing27DeviceSidebarViewController deviceImage];
-[_TtC7iMazing27DeviceSidebarViewController setDeviceImage:];
-[_TtC7iMazing27DeviceSidebarViewController infoPopover];
-[_TtC7iMazing27DeviceSidebarViewController setInfoPopover:];
-[_TtC7iMazing27DeviceSidebarViewController contentView];
-[_TtC7iMazing27DeviceSidebarViewController setContentView:];
-[_TtC7iMazing27DeviceSidebarViewController titleLabel];
-[_TtC7iMazing27DeviceSidebarViewController setTitleLabel:];
-[_TtC7iMazing27DeviceSidebarViewController renameMenu];
-[_TtC7iMazing27DeviceSidebarViewController setRenameMenu:];
-[_TtC7iMazing27DeviceSidebarViewController showMoreButton];
-[_TtC7iMazing27DeviceSidebarViewController setShowMoreButton:];
-[_TtC7iMazing27DeviceSidebarViewController initWithCoder:];
-[_TtC7iMazing27DeviceSidebarViewController viewDidLoad];
-[_TtC7iMazing27DeviceSidebarViewController selectItemWithIndex:performAction:];
-[_TtC7iMazing27DeviceSidebarViewController back:];
-[_TtC7iMazing27DeviceSidebarViewController showInfo:];
-[_TtC7iMazing27DeviceSidebarViewController highlightListView:shouldSelectItem:];
-[_TtC7iMazing27DeviceSidebarViewController showMenu:];
-[_TtC7iMazing27DeviceSidebarViewController rename:];
-[_TtC7iMazing27DeviceSidebarViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing27DeviceSummaryViewController : NSViewController <_TtP7iMazing14IndexedElement_, HelpURLProvider> {
    /* instance variables */
     item;
     indexPath;
     toolbarContainer;
     shortcutsContainer;
     stackView;
     leftStackView;
     rightStackView;
     toolbarViews;
     refreshButton;
     toolbar;
     shortcutsController;
     infoViewController;
     infoViewControllerExpanded;
     diskSpaceViewController;
     diskSpaceViewControllerExpanded;
     batteryViewController;
     batteryViewControllerExpanded;
     actionsViewController;
     batteryObserver;
     diskSpaceObserver;
     showDataset;
     showTools;
}

@property (T@"_TtC7iMazing10DeviceItem",N,&,Vitem) item;
@property (T@"NSIndexPath",N,C) indexPath;
@property (T@"NSView",N,&,VtoolbarContainer) toolbarContainer;
@property (T@"NSView",N,&,VshortcutsContainer) shortcutsContainer;
@property (T@"NSStackView",N,&,VstackView) stackView;
@property (T@"NSStackView",N,&,VleftStackView) leftStackView;
@property (T@"NSStackView",N,&,VrightStackView) rightStackView;
@property (T@"NSView",N,&,VtoolbarViews) toolbarViews;
@property (T@"VKRotatingButton",N,&,VrefreshButton) refreshButton;

/* instance methods */
-[_TtC7iMazing27DeviceSummaryViewController item];
-[_TtC7iMazing27DeviceSummaryViewController setItem:];
-[_TtC7iMazing27DeviceSummaryViewController indexPath];
-[_TtC7iMazing27DeviceSummaryViewController setIndexPath:];
-[_TtC7iMazing27DeviceSummaryViewController toolbarContainer];
-[_TtC7iMazing27DeviceSummaryViewController setToolbarContainer:];
-[_TtC7iMazing27DeviceSummaryViewController shortcutsContainer];
-[_TtC7iMazing27DeviceSummaryViewController setShortcutsContainer:];
-[_TtC7iMazing27DeviceSummaryViewController stackView];
-[_TtC7iMazing27DeviceSummaryViewController setStackView:];
-[_TtC7iMazing27DeviceSummaryViewController leftStackView];
-[_TtC7iMazing27DeviceSummaryViewController setLeftStackView:];
-[_TtC7iMazing27DeviceSummaryViewController rightStackView];
-[_TtC7iMazing27DeviceSummaryViewController setRightStackView:];
-[_TtC7iMazing27DeviceSummaryViewController toolbarViews];
-[_TtC7iMazing27DeviceSummaryViewController setToolbarViews:];
-[_TtC7iMazing27DeviceSummaryViewController refreshButton];
-[_TtC7iMazing27DeviceSummaryViewController setRefreshButton:];
-[_TtC7iMazing27DeviceSummaryViewController initWithCoder:];
-[_TtC7iMazing27DeviceSummaryViewController viewDidLoad];
-[_TtC7iMazing27DeviceSummaryViewController viewDidAppear];
-[_TtC7iMazing27DeviceSummaryViewController refreshContentData:];
-[_TtC7iMazing27DeviceSummaryViewController refresh:];
-[_TtC7iMazing27DeviceSummaryViewController helpURL];
-[_TtC7iMazing27DeviceSummaryViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing27GenericScreenViewController : NSViewController {
    /* instance variables */
     item;
     isPaired;
     compactView;
     compactImageViewContainer;
     discoverView;
     discoverImageViewContainer;
     imageViewContainer;
     deviceMenu;
     toolbarContainer;
     displayMode;
     lottieController;
     compactLottieController;
     discoverLottieController;
     toolbar;
}

@property (T@"_TtC7iMazing17GenericScreenItem",N,&,Vitem) item;
@property (TB,N,VisPaired) isPaired;
@property (T@"NSView",N,&,VcompactView) compactView;
@property (T@"NSView",N,&,VcompactImageViewContainer) compactImageViewContainer;
@property (T@"NSView",N,&,VdiscoverView) discoverView;
@property (T@"NSView",N,&,VdiscoverImageViewContainer) discoverImageViewContainer;
@property (T@"NSView",N,&,VimageViewContainer) imageViewContainer;
@property (T@"NSMenu",N,&,VdeviceMenu) deviceMenu;
@property (T@"NSView",N,&,VtoolbarContainer) toolbarContainer;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing27GenericScreenViewController item];
-[_TtC7iMazing27GenericScreenViewController setItem:];
-[_TtC7iMazing27GenericScreenViewController isPaired];
-[_TtC7iMazing27GenericScreenViewController setIsPaired:];
-[_TtC7iMazing27GenericScreenViewController compactView];
-[_TtC7iMazing27GenericScreenViewController setCompactView:];
-[_TtC7iMazing27GenericScreenViewController compactImageViewContainer];
-[_TtC7iMazing27GenericScreenViewController setCompactImageViewContainer:];
-[_TtC7iMazing27GenericScreenViewController discoverView];
-[_TtC7iMazing27GenericScreenViewController setDiscoverView:];
-[_TtC7iMazing27GenericScreenViewController discoverImageViewContainer];
-[_TtC7iMazing27GenericScreenViewController setDiscoverImageViewContainer:];
-[_TtC7iMazing27GenericScreenViewController imageViewContainer];
-[_TtC7iMazing27GenericScreenViewController setImageViewContainer:];
-[_TtC7iMazing27GenericScreenViewController deviceMenu];
-[_TtC7iMazing27GenericScreenViewController setDeviceMenu:];
-[_TtC7iMazing27GenericScreenViewController toolbarContainer];
-[_TtC7iMazing27GenericScreenViewController setToolbarContainer:];
-[_TtC7iMazing27GenericScreenViewController initWithCoder:];
-[_TtC7iMazing27GenericScreenViewController nibName];
-[_TtC7iMazing27GenericScreenViewController viewDidLoad];
-[_TtC7iMazing27GenericScreenViewController openDeviceMenu:];
-[_TtC7iMazing27GenericScreenViewController enterInRecoveryMode:];
-[_TtC7iMazing27GenericScreenViewController cancel:];
-[_TtC7iMazing27GenericScreenViewController done:];
-[_TtC7iMazing27GenericScreenViewController showDevice:];
-[_TtC7iMazing27GenericScreenViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing27LibraryWizardViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
     wizard;
     behavior;
     contentView;
     currentController;
     _profilesController;
     _organizationsController;
     _serversController;
     _blueprintsController;
     _devicesController;
     _didApply;
     observations;
     labelsAndIcons;
     selectedSegment;
}

@property (T@"WizardWindowController",N,W,Vwizard) wizard;
@property (Tq,N,Vbehavior) behavior;
@property (T@"NSString",N,R) nibName;
@property (T@"NSView",N,&,VcontentView) contentView;
@property (T@"_TtC7iMazing28ProfileLibraryViewController",N,&,V_profilesController) _profilesController;
@property (T@"_TtC7iMazing27OrganizationsViewController",N,&,V_organizationsController) _organizationsController;
@property (T@"_TtC7iMazing24MDMServersViewController",N,&,V_serversController) _serversController;
@property (T@"_TtC7iMazing33ConfigureBlueprintsViewController",N,&,V_blueprintsController) _blueprintsController;
@property (T@"_TtC7iMazing33OperationDispatcherViewController",N,&,V_devicesController) _devicesController;

/* instance methods */
-[_TtC7iMazing27LibraryWizardViewController wizard];
-[_TtC7iMazing27LibraryWizardViewController setWizard:];
-[_TtC7iMazing27LibraryWizardViewController behavior];
-[_TtC7iMazing27LibraryWizardViewController setBehavior:];
-[_TtC7iMazing27LibraryWizardViewController nibName];
-[_TtC7iMazing27LibraryWizardViewController contentView];
-[_TtC7iMazing27LibraryWizardViewController setContentView:];
-[_TtC7iMazing27LibraryWizardViewController _profilesController];
-[_TtC7iMazing27LibraryWizardViewController set_profilesController:];
-[_TtC7iMazing27LibraryWizardViewController _organizationsController];
-[_TtC7iMazing27LibraryWizardViewController set_organizationsController:];
-[_TtC7iMazing27LibraryWizardViewController _serversController];
-[_TtC7iMazing27LibraryWizardViewController set_serversController:];
-[_TtC7iMazing27LibraryWizardViewController _blueprintsController];
-[_TtC7iMazing27LibraryWizardViewController set_blueprintsController:];
-[_TtC7iMazing27LibraryWizardViewController _devicesController];
-[_TtC7iMazing27LibraryWizardViewController set_devicesController:];
-[_TtC7iMazing27LibraryWizardViewController initWithCoder:];
-[_TtC7iMazing27LibraryWizardViewController dealloc];
-[_TtC7iMazing27LibraryWizardViewController didBecomeActive];
-[_TtC7iMazing27LibraryWizardViewController willResignActive];
-[_TtC7iMazing27LibraryWizardViewController segmentedControlDidChangeWithControl:];
-[_TtC7iMazing27LibraryWizardViewController modalCancelClicked];
-[_TtC7iMazing27LibraryWizardViewController modalActionClicked];
-[_TtC7iMazing27LibraryWizardViewController installBlueprint];
-[_TtC7iMazing27LibraryWizardViewController installProfiles];
-[_TtC7iMazing27LibraryWizardViewController enrollWithServer];
-[_TtC7iMazing27LibraryWizardViewController showHelp:];
-[_TtC7iMazing27LibraryWizardViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing27MainWindowToolbarController : NSViewController <NSTextFieldDelegate> {
    /* instance variables */
     leftButtons;
     rightButtons;
     searchText;
     searchField;
     leftButtonsContainer;
     rightButtonsContainer;
     height;
     leftMargin;
     operationsViewContainer;
     operationsFlashView;
     container;
     operationsController;
     operationStartObserver;
     onSearch;
     helpAction;
     showOperations;
     showLicense;
     showSearch;
     searchPlaceholder;
     leftOffset;
}

@property (T@"NSArray",N,C) leftButtons;
@property (T@"NSArray",N,C) rightButtons;
@property (T@"NSString",N,C) searchText;
@property (T@"NSTextField",N,&,VsearchField) searchField;
@property (T@"NSStackView",N,&,VleftButtonsContainer) leftButtonsContainer;
@property (T@"NSStackView",N,&,VrightButtonsContainer) rightButtonsContainer;
@property (T@"NSLayoutConstraint",N,&,Vheight) height;
@property (T@"NSLayoutConstraint",N,&,VleftMargin) leftMargin;
@property (T@"NSView",N,&,VoperationsViewContainer) operationsViewContainer;
@property (T@"_TtC7iMazing26MainWindowToolbarFlashView",N,&,VoperationsFlashView) operationsFlashView;
@property (T@?,N,C) onSearch;
@property (T@?,N,C) helpAction;
@property (TB,N,VshowOperations) showOperations;
@property (TB,N,VshowLicense) showLicense;
@property (TB,N,VshowSearch) showSearch;
@property (T@"NSString",N,C) searchPlaceholder;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing27MainWindowToolbarController leftButtons];
-[_TtC7iMazing27MainWindowToolbarController setLeftButtons:];
-[_TtC7iMazing27MainWindowToolbarController rightButtons];
-[_TtC7iMazing27MainWindowToolbarController setRightButtons:];
-[_TtC7iMazing27MainWindowToolbarController searchText];
-[_TtC7iMazing27MainWindowToolbarController setSearchText:];
-[_TtC7iMazing27MainWindowToolbarController searchField];
-[_TtC7iMazing27MainWindowToolbarController setSearchField:];
-[_TtC7iMazing27MainWindowToolbarController leftButtonsContainer];
-[_TtC7iMazing27MainWindowToolbarController setLeftButtonsContainer:];
-[_TtC7iMazing27MainWindowToolbarController rightButtonsContainer];
-[_TtC7iMazing27MainWindowToolbarController setRightButtonsContainer:];
-[_TtC7iMazing27MainWindowToolbarController height];
-[_TtC7iMazing27MainWindowToolbarController setHeight:];
-[_TtC7iMazing27MainWindowToolbarController leftMargin];
-[_TtC7iMazing27MainWindowToolbarController setLeftMargin:];
-[_TtC7iMazing27MainWindowToolbarController operationsViewContainer];
-[_TtC7iMazing27MainWindowToolbarController setOperationsViewContainer:];
-[_TtC7iMazing27MainWindowToolbarController operationsFlashView];
-[_TtC7iMazing27MainWindowToolbarController setOperationsFlashView:];
-[_TtC7iMazing27MainWindowToolbarController onSearch];
-[_TtC7iMazing27MainWindowToolbarController setOnSearch:];
-[_TtC7iMazing27MainWindowToolbarController helpAction];
-[_TtC7iMazing27MainWindowToolbarController setHelpAction:];
-[_TtC7iMazing27MainWindowToolbarController showOperations];
-[_TtC7iMazing27MainWindowToolbarController setShowOperations:];
-[_TtC7iMazing27MainWindowToolbarController showLicense];
-[_TtC7iMazing27MainWindowToolbarController setShowLicense:];
-[_TtC7iMazing27MainWindowToolbarController showSearch];
-[_TtC7iMazing27MainWindowToolbarController setShowSearch:];
-[_TtC7iMazing27MainWindowToolbarController searchPlaceholder];
-[_TtC7iMazing27MainWindowToolbarController setSearchPlaceholder:];
-[_TtC7iMazing27MainWindowToolbarController initWithContainer:leftContainer:rightContainer:];
-[_TtC7iMazing27MainWindowToolbarController initWithContainer:left:right:];
-[_TtC7iMazing27MainWindowToolbarController initWithCoder:];
-[_TtC7iMazing27MainWindowToolbarController dealloc];
-[_TtC7iMazing27MainWindowToolbarController nibName];
-[_TtC7iMazing27MainWindowToolbarController flashNotification:];
-[_TtC7iMazing27MainWindowToolbarController viewDidLoad];
-[_TtC7iMazing27MainWindowToolbarController showHelp:];
-[_TtC7iMazing27MainWindowToolbarController showAccount:];
-[_TtC7iMazing27MainWindowToolbarController performFindPanelAction:];
-[_TtC7iMazing27MainWindowToolbarController controlTextDidChange:];
-[_TtC7iMazing27MainWindowToolbarController initWithNibName:bundle:];

@end

@interface _TtC7iMazing27MediaBaseListViewController : NSViewController {
    /* instance variables */
     manager;
     allTracks;
     back;
     isPlayingView;
     player;
     tracksController;
     mediaListViewContainer;
     hasFilters;
     isFiltered;
     allowColumnSorting;
     allowRowReordering;
     showImportToiTunes;
     isUpdatingTracks;
     sourceController;
     mediaListViewController;
     hasQuickLookFeature;
     allowedUTI;
     presentController;
     tracksSelectionObserver;
     columnsSettingsObserver;
     playerObserver;
     columnsSettings;
     tracks;
     sortDescriptors;
     labels;
}

@property (T@"MediaManager",N,&,Vmanager) manager;
@property (T@"NSArray",N,C) allTracks;
@property (T@?,N,C) back;
@property (TB,N,VisPlayingView) isPlayingView;
@property (T@"_TtC7iMazing25MediaPlayerViewController",N,&,Vplayer) player;
@property (T@"NSArrayController",N,&,VtracksController) tracksController;
@property (T@"NSView",N,&,VmediaListViewContainer) mediaListViewContainer;
@property (T@"_TtC7iMazing25MediaTableColumnsSettings",N,&,VcolumnsSettings) columnsSettings;
@property (T@"NSArray",N,C) tracks;

/* instance methods */
-[_TtC7iMazing27MediaBaseListViewController manager];
-[_TtC7iMazing27MediaBaseListViewController setManager:];
-[_TtC7iMazing27MediaBaseListViewController allTracks];
-[_TtC7iMazing27MediaBaseListViewController setAllTracks:];
-[_TtC7iMazing27MediaBaseListViewController back];
-[_TtC7iMazing27MediaBaseListViewController setBack:];
-[_TtC7iMazing27MediaBaseListViewController isPlayingView];
-[_TtC7iMazing27MediaBaseListViewController setIsPlayingView:];
-[_TtC7iMazing27MediaBaseListViewController player];
-[_TtC7iMazing27MediaBaseListViewController setPlayer:];
-[_TtC7iMazing27MediaBaseListViewController tracksController];
-[_TtC7iMazing27MediaBaseListViewController setTracksController:];
-[_TtC7iMazing27MediaBaseListViewController mediaListViewContainer];
-[_TtC7iMazing27MediaBaseListViewController setMediaListViewContainer:];
-[_TtC7iMazing27MediaBaseListViewController columnsSettings];
-[_TtC7iMazing27MediaBaseListViewController setColumnsSettings:];
-[_TtC7iMazing27MediaBaseListViewController tracks];
-[_TtC7iMazing27MediaBaseListViewController setTracks:];
-[_TtC7iMazing27MediaBaseListViewController initWithCoder:];
-[_TtC7iMazing27MediaBaseListViewController dealloc];
-[_TtC7iMazing27MediaBaseListViewController viewWillAppear];
-[_TtC7iMazing27MediaBaseListViewController viewWillDisappear];
-[_TtC7iMazing27MediaBaseListViewController playerStartedPlayingNewTrack:];
-[_TtC7iMazing27MediaBaseListViewController viewDidLoad];
-[_TtC7iMazing27MediaBaseListViewController open:];
-[_TtC7iMazing27MediaBaseListViewController play:];
-[_TtC7iMazing27MediaBaseListViewController submenuAction:];
-[_TtC7iMazing27MediaBaseListViewController contextMenuMediaPlay:];
-[_TtC7iMazing27MediaBaseListViewController openWith:];
-[_TtC7iMazing27MediaBaseListViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing27MediaExportWindowController : NSWindowController {
    /* instance variables */
     view;
     mediaExportWindowStackView;
     mySelectionCheckbox;
     libraryCheckbox;
     musicCheckbox;
     musicVideoCheckbox;
     moviesCheckbox;
     homeVideosCheckbox;
     TVShowsCheckbox;
     podcastsCheckbox;
     audioBooksCheckbox;
     playlistsCheckbox;
     ratingsCheckbox;
     playsCheckbox;
     skipsCheckbox;
     lastPlayedCheckbox;
     artistCheckbox;
     albumCheckbox;
     nextButton;
     helpButton;
     isLibrarySelected;
     enableMySelection;
     selectedItemsLabel;
     alreadyInMusicLabel;
     totalItemsLabel;
     ArtistLabel;
     AlbumLabel;
     isExportTypeITunes;
     isCopyTypeMusic;
     isCopyTypeTV;
     isCopyTypePodcasts;
     isCopyTypeAudioBooks;
     destinationInfoText;
     iTunesMediaFolder;
     mediaTypeItems;
     itemsAlreadyInITunesText;
     playlistsCheckboxSavedState;
     isAwake;
     enablePlaylists;
     options;
}

@property (T@"NSView",N,&,Vview) view;
@property (T@"NSStackView",N,&,VmediaExportWindowStackView) mediaExportWindowStackView;
@property (T@"NSButton",N,&,VmySelectionCheckbox) mySelectionCheckbox;
@property (T@"NSButton",N,&,VlibraryCheckbox) libraryCheckbox;
@property (T@"NSButton",N,&,VmusicCheckbox) musicCheckbox;
@property (T@"NSButton",N,&,VmusicVideoCheckbox) musicVideoCheckbox;
@property (T@"NSButton",N,&,VmoviesCheckbox) moviesCheckbox;
@property (T@"NSButton",N,&,VhomeVideosCheckbox) homeVideosCheckbox;
@property (T@"NSButton",N,&,VTVShowsCheckbox) TVShowsCheckbox;
@property (T@"NSButton",N,&,VpodcastsCheckbox) podcastsCheckbox;
@property (T@"NSButton",N,&,VaudioBooksCheckbox) audioBooksCheckbox;
@property (T@"NSButton",N,&,VplaylistsCheckbox) playlistsCheckbox;
@property (T@"NSButton",N,&,VratingsCheckbox) ratingsCheckbox;
@property (T@"NSButton",N,&,VplaysCheckbox) playsCheckbox;
@property (T@"NSButton",N,&,VskipsCheckbox) skipsCheckbox;
@property (T@"NSButton",N,&,VlastPlayedCheckbox) lastPlayedCheckbox;
@property (T@"NSButton",N,&,VartistCheckbox) artistCheckbox;
@property (T@"NSButton",N,&,ValbumCheckbox) albumCheckbox;
@property (T@"NSButton",N,&,VnextButton) nextButton;
@property (T@"NSButton",N,&,VhelpButton) helpButton;
@property (TB,N,VisLibrarySelected) isLibrarySelected;
@property (TB,N,VenableMySelection) enableMySelection;
@property (T@"NSString",N,C) selectedItemsLabel;
@property (T@"NSString",N,C) alreadyInMusicLabel;
@property (T@"NSString",N,C) totalItemsLabel;
@property (T@"NSString",N,C) ArtistLabel;
@property (T@"NSString",N,C) AlbumLabel;
@property (TB,N,VisExportTypeITunes) isExportTypeITunes;
@property (TB,N,VisCopyTypeMusic) isCopyTypeMusic;
@property (TB,N,VisCopyTypeTV) isCopyTypeTV;
@property (TB,N,VisCopyTypePodcasts) isCopyTypePodcasts;
@property (TB,N,VisCopyTypeAudioBooks) isCopyTypeAudioBooks;
@property (T@"NSString",N,C) destinationInfoText;
@property (T@"NSString",N,C) iTunesMediaFolder;
@property (T@"NSString",N,R) windowNibName;

/* instance methods */
-[_TtC7iMazing27MediaExportWindowController view];
-[_TtC7iMazing27MediaExportWindowController setView:];
-[_TtC7iMazing27MediaExportWindowController mediaExportWindowStackView];
-[_TtC7iMazing27MediaExportWindowController setMediaExportWindowStackView:];
-[_TtC7iMazing27MediaExportWindowController mySelectionCheckbox];
-[_TtC7iMazing27MediaExportWindowController setMySelectionCheckbox:];
-[_TtC7iMazing27MediaExportWindowController libraryCheckbox];
-[_TtC7iMazing27MediaExportWindowController setLibraryCheckbox:];
-[_TtC7iMazing27MediaExportWindowController musicCheckbox];
-[_TtC7iMazing27MediaExportWindowController setMusicCheckbox:];
-[_TtC7iMazing27MediaExportWindowController musicVideoCheckbox];
-[_TtC7iMazing27MediaExportWindowController setMusicVideoCheckbox:];
-[_TtC7iMazing27MediaExportWindowController moviesCheckbox];
-[_TtC7iMazing27MediaExportWindowController setMoviesCheckbox:];
-[_TtC7iMazing27MediaExportWindowController homeVideosCheckbox];
-[_TtC7iMazing27MediaExportWindowController setHomeVideosCheckbox:];
-[_TtC7iMazing27MediaExportWindowController TVShowsCheckbox];
-[_TtC7iMazing27MediaExportWindowController setTVShowsCheckbox:];
-[_TtC7iMazing27MediaExportWindowController podcastsCheckbox];
-[_TtC7iMazing27MediaExportWindowController setPodcastsCheckbox:];
-[_TtC7iMazing27MediaExportWindowController audioBooksCheckbox];
-[_TtC7iMazing27MediaExportWindowController setAudioBooksCheckbox:];
-[_TtC7iMazing27MediaExportWindowController playlistsCheckbox];
-[_TtC7iMazing27MediaExportWindowController setPlaylistsCheckbox:];
-[_TtC7iMazing27MediaExportWindowController ratingsCheckbox];
-[_TtC7iMazing27MediaExportWindowController setRatingsCheckbox:];
-[_TtC7iMazing27MediaExportWindowController playsCheckbox];
-[_TtC7iMazing27MediaExportWindowController setPlaysCheckbox:];
-[_TtC7iMazing27MediaExportWindowController skipsCheckbox];
-[_TtC7iMazing27MediaExportWindowController setSkipsCheckbox:];
-[_TtC7iMazing27MediaExportWindowController lastPlayedCheckbox];
-[_TtC7iMazing27MediaExportWindowController setLastPlayedCheckbox:];
-[_TtC7iMazing27MediaExportWindowController artistCheckbox];
-[_TtC7iMazing27MediaExportWindowController setArtistCheckbox:];
-[_TtC7iMazing27MediaExportWindowController albumCheckbox];
-[_TtC7iMazing27MediaExportWindowController setAlbumCheckbox:];
-[_TtC7iMazing27MediaExportWindowController nextButton];
-[_TtC7iMazing27MediaExportWindowController setNextButton:];
-[_TtC7iMazing27MediaExportWindowController helpButton];
-[_TtC7iMazing27MediaExportWindowController setHelpButton:];
-[_TtC7iMazing27MediaExportWindowController isLibrarySelected];
-[_TtC7iMazing27MediaExportWindowController setIsLibrarySelected:];
-[_TtC7iMazing27MediaExportWindowController enableMySelection];
-[_TtC7iMazing27MediaExportWindowController setEnableMySelection:];
-[_TtC7iMazing27MediaExportWindowController selectedItemsLabel];
-[_TtC7iMazing27MediaExportWindowController setSelectedItemsLabel:];
-[_TtC7iMazing27MediaExportWindowController alreadyInMusicLabel];
-[_TtC7iMazing27MediaExportWindowController setAlreadyInMusicLabel:];
-[_TtC7iMazing27MediaExportWindowController totalItemsLabel];
-[_TtC7iMazing27MediaExportWindowController setTotalItemsLabel:];
-[_TtC7iMazing27MediaExportWindowController ArtistLabel];
-[_TtC7iMazing27MediaExportWindowController setArtistLabel:];
-[_TtC7iMazing27MediaExportWindowController AlbumLabel];
-[_TtC7iMazing27MediaExportWindowController setAlbumLabel:];
-[_TtC7iMazing27MediaExportWindowController isExportTypeITunes];
-[_TtC7iMazing27MediaExportWindowController setIsExportTypeITunes:];
-[_TtC7iMazing27MediaExportWindowController isCopyTypeMusic];
-[_TtC7iMazing27MediaExportWindowController setIsCopyTypeMusic:];
-[_TtC7iMazing27MediaExportWindowController isCopyTypeTV];
-[_TtC7iMazing27MediaExportWindowController setIsCopyTypeTV:];
-[_TtC7iMazing27MediaExportWindowController isCopyTypePodcasts];
-[_TtC7iMazing27MediaExportWindowController setIsCopyTypePodcasts:];
-[_TtC7iMazing27MediaExportWindowController isCopyTypeAudioBooks];
-[_TtC7iMazing27MediaExportWindowController setIsCopyTypeAudioBooks:];
-[_TtC7iMazing27MediaExportWindowController destinationInfoText];
-[_TtC7iMazing27MediaExportWindowController setDestinationInfoText:];
-[_TtC7iMazing27MediaExportWindowController iTunesMediaFolder];
-[_TtC7iMazing27MediaExportWindowController setITunesMediaFolder:];
-[_TtC7iMazing27MediaExportWindowController windowNibName];
-[_TtC7iMazing27MediaExportWindowController awakeFromNib];
-[_TtC7iMazing27MediaExportWindowController onWhatToCopyButtonClicked:];
-[_TtC7iMazing27MediaExportWindowController onNextButtonClicked:];
-[_TtC7iMazing27MediaExportWindowController onCancelButtonClicked:];
-[_TtC7iMazing27MediaExportWindowController onHelpButtonClicked:];
-[_TtC7iMazing27MediaExportWindowController initWithWindow:];
-[_TtC7iMazing27MediaExportWindowController initWithCoder:];

@end

@interface _TtC7iMazing27MediaPlaylistViewController : _TtC7iMazing27MediaBaseListViewController {
    /* instance variables */
     playlist;
     subtitle;
     image;
     showPlaylistButtons;
     playlistIsEdited;
     purchasedOrAppleMusicColumn;
     artworkObserver;
     albumsColumnsSettings;
     untouchedTracks;
}

@property (T@"MediaPlaylist",N,&,Vplaylist) playlist;
@property (T@"NSString",N,C) subtitle;
@property (T@"NSImage",N,&,Vimage) image;
@property (TB,N,VshowPlaylistButtons) showPlaylistButtons;
@property (TB,N,VplaylistIsEdited) playlistIsEdited;
@property (T@"_TtC7iMazing22MediaTracksTableColumn",N,&,VpurchasedOrAppleMusicColumn) purchasedOrAppleMusicColumn;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing27MediaPlaylistViewController playlist];
-[_TtC7iMazing27MediaPlaylistViewController setPlaylist:];
-[_TtC7iMazing27MediaPlaylistViewController subtitle];
-[_TtC7iMazing27MediaPlaylistViewController setSubtitle:];
-[_TtC7iMazing27MediaPlaylistViewController image];
-[_TtC7iMazing27MediaPlaylistViewController setImage:];
-[_TtC7iMazing27MediaPlaylistViewController showPlaylistButtons];
-[_TtC7iMazing27MediaPlaylistViewController setShowPlaylistButtons:];
-[_TtC7iMazing27MediaPlaylistViewController playlistIsEdited];
-[_TtC7iMazing27MediaPlaylistViewController setPlaylistIsEdited:];
-[_TtC7iMazing27MediaPlaylistViewController purchasedOrAppleMusicColumn];
-[_TtC7iMazing27MediaPlaylistViewController setPurchasedOrAppleMusicColumn:];
-[_TtC7iMazing27MediaPlaylistViewController initWithCoder:];
-[_TtC7iMazing27MediaPlaylistViewController dealloc];
-[_TtC7iMazing27MediaPlaylistViewController nibName];
-[_TtC7iMazing27MediaPlaylistViewController viewDidLoad];
-[_TtC7iMazing27MediaPlaylistViewController back:];
-[_TtC7iMazing27MediaPlaylistViewController playSuggested:];
-[_TtC7iMazing27MediaPlaylistViewController updatePlaylist:];
-[_TtC7iMazing27MediaPlaylistViewController cancelPlaylist:];

@end

@interface _TtC7iMazing27MessageMessageTableCellView : NSTableCellView {
    /* instance variables */
     cachedBubbleView;
     cachedPlayerView;
     cachedMapView;
     cachedMediaImageView;
     cachedSenderTextField;
     cachedSubjectTextField;
     cachedDateTextField;
}

/* instance methods */
-[_TtC7iMazing27MessageMessageTableCellView bubbleView];
-[_TtC7iMazing27MessageMessageTableCellView playerView];
-[_TtC7iMazing27MessageMessageTableCellView mapView];
-[_TtC7iMazing27MessageMessageTableCellView mediaImageView];
-[_TtC7iMazing27MessageMessageTableCellView senderTextField];
-[_TtC7iMazing27MessageMessageTableCellView subjectTextField];
-[_TtC7iMazing27MessageMessageTableCellView dateTextField];
-[_TtC7iMazing27MessageMessageTableCellView initWithFrame:];
-[_TtC7iMazing27MessageMessageTableCellView initWithCoder:];

@end

@interface _TtC7iMazing27MusicPlaylistViewController : _TtC7iMazing27MediaPlaylistViewController

/* instance methods */
-[_TtC7iMazing27MusicPlaylistViewController initWithCoder:];

@end

@interface _TtC7iMazing27NoVibrancyProgressIndicator : NSProgressIndicator

@property (TB,N,R) allowsVibrancy;

/* instance methods */
-[_TtC7iMazing27NoVibrancyProgressIndicator allowsVibrancy];
-[_TtC7iMazing27NoVibrancyProgressIndicator initWithFrame:];
-[_TtC7iMazing27NoVibrancyProgressIndicator initWithCoder:];

@end

@interface _TtC7iMazing27OperationItemViewController : NSViewController {
    /* instance variables */
     progressView;
     finishedView;
     runningLabel;
     finishedLabel;
     progressDoubleClickView;
     finishedDoubleClickView;
     item;
     endObserver;
     statusColorObservation;
     displayStyle;
     showOpenButton;
}

@property (T@"VKHighlightView",N,&,VprogressView) progressView;
@property (T@"NSView",N,&,VfinishedView) finishedView;
@property (T@"VKLabel",N,&,VrunningLabel) runningLabel;
@property (T@"VKLabel",N,&,VfinishedLabel) finishedLabel;
@property (T@"_TtC7iMazing15DoubleClickView",N,&,VprogressDoubleClickView) progressDoubleClickView;
@property (T@"_TtC7iMazing15DoubleClickView",N,&,VfinishedDoubleClickView) finishedDoubleClickView;
@property (T@"<_TtP7iMazing13OperationItem_>",N,&,Vitem) item;
@property (TB,N,VshowOpenButton) showOpenButton;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing27OperationItemViewController progressView];
-[_TtC7iMazing27OperationItemViewController setProgressView:];
-[_TtC7iMazing27OperationItemViewController finishedView];
-[_TtC7iMazing27OperationItemViewController setFinishedView:];
-[_TtC7iMazing27OperationItemViewController runningLabel];
-[_TtC7iMazing27OperationItemViewController setRunningLabel:];
-[_TtC7iMazing27OperationItemViewController finishedLabel];
-[_TtC7iMazing27OperationItemViewController setFinishedLabel:];
-[_TtC7iMazing27OperationItemViewController progressDoubleClickView];
-[_TtC7iMazing27OperationItemViewController setProgressDoubleClickView:];
-[_TtC7iMazing27OperationItemViewController finishedDoubleClickView];
-[_TtC7iMazing27OperationItemViewController setFinishedDoubleClickView:];
-[_TtC7iMazing27OperationItemViewController item];
-[_TtC7iMazing27OperationItemViewController setItem:];
-[_TtC7iMazing27OperationItemViewController showOpenButton];
-[_TtC7iMazing27OperationItemViewController setShowOpenButton:];
-[_TtC7iMazing27OperationItemViewController initWithCoder:];
-[_TtC7iMazing27OperationItemViewController nibName];
-[_TtC7iMazing27OperationItemViewController viewDidLoad];
-[_TtC7iMazing27OperationItemViewController viewDidAppear];
-[_TtC7iMazing27OperationItemViewController isEqual:];
-[_TtC7iMazing27OperationItemViewController isEqualTo:];
-[_TtC7iMazing27OperationItemViewController stopOperation:];
-[_TtC7iMazing27OperationItemViewController pauseOperation:];
-[_TtC7iMazing27OperationItemViewController resumeOperation:];
-[_TtC7iMazing27OperationItemViewController showWizard:];
-[_TtC7iMazing27OperationItemViewController previewOperationFiles:];
-[_TtC7iMazing27OperationItemViewController openOrRevealOperationFiles:];
-[_TtC7iMazing27OperationItemViewController revealOperationFiles:];
-[_TtC7iMazing27OperationItemViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing27OperationListViewController : NSViewController <NSTableViewDelegate, NSTableViewDataSource> {
    /* instance variables */
     closeAction;
     startObserver;
     endObserver;
     items;
     screens;
     showDevices;
     controllers;
     empty;
     clearEnabled;
     hasNotifications;
     overlay;
     tableView;
     overlayContainer;
}

@property (TB,N,Vempty) empty;
@property (TB,N,VclearEnabled) clearEnabled;
@property (TB,N,VhasNotifications) hasNotifications;
@property (T@"NSViewController",N,&,Voverlay) overlay;
@property (T@"NSTableView",N,&,VtableView) tableView;
@property (T@"NSView",N,&,VoverlayContainer) overlayContainer;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing27OperationListViewController empty];
-[_TtC7iMazing27OperationListViewController setEmpty:];
-[_TtC7iMazing27OperationListViewController clearEnabled];
-[_TtC7iMazing27OperationListViewController setClearEnabled:];
-[_TtC7iMazing27OperationListViewController hasNotifications];
-[_TtC7iMazing27OperationListViewController setHasNotifications:];
-[_TtC7iMazing27OperationListViewController overlay];
-[_TtC7iMazing27OperationListViewController setOverlay:];
-[_TtC7iMazing27OperationListViewController tableView];
-[_TtC7iMazing27OperationListViewController setTableView:];
-[_TtC7iMazing27OperationListViewController overlayContainer];
-[_TtC7iMazing27OperationListViewController setOverlayContainer:];
-[_TtC7iMazing27OperationListViewController initWithCoder:];
-[_TtC7iMazing27OperationListViewController nibName];
-[_TtC7iMazing27OperationListViewController viewDidLoad];
-[_TtC7iMazing27OperationListViewController reloadData];
-[_TtC7iMazing27OperationListViewController close:];
-[_TtC7iMazing27OperationListViewController clear:];
-[_TtC7iMazing27OperationListViewController numberOfRowsInTableView:];
-[_TtC7iMazing27OperationListViewController tableView:heightOfRow:];
-[_TtC7iMazing27OperationListViewController tableView:didAddRowView:forRow:];
-[_TtC7iMazing27OperationListViewController tableView:viewForTableColumn:row:];
-[_TtC7iMazing27OperationListViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing27OptionsWizardViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
     wizard;
     behavior;
     controller;
     actionTitle;
     kind;
     contentContainer;
     buttonsContainer;
}

@property (T@"WizardWindowController",N,W,Vwizard) wizard;
@property (Tq,N,Vbehavior) behavior;
@property (T@"NSView",N,&,VcontentContainer) contentContainer;
@property (T@"NSView",N,&,VbuttonsContainer) buttonsContainer;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing27OptionsWizardViewController wizard];
-[_TtC7iMazing27OptionsWizardViewController setWizard:];
-[_TtC7iMazing27OptionsWizardViewController behavior];
-[_TtC7iMazing27OptionsWizardViewController setBehavior:];
-[_TtC7iMazing27OptionsWizardViewController contentContainer];
-[_TtC7iMazing27OptionsWizardViewController setContentContainer:];
-[_TtC7iMazing27OptionsWizardViewController buttonsContainer];
-[_TtC7iMazing27OptionsWizardViewController setButtonsContainer:];
-[_TtC7iMazing27OptionsWizardViewController init];
-[_TtC7iMazing27OptionsWizardViewController initWithActionTitle:kind:];
-[_TtC7iMazing27OptionsWizardViewController initWithCoder:];
-[_TtC7iMazing27OptionsWizardViewController nibName];
-[_TtC7iMazing27OptionsWizardViewController viewDidLoad];
-[_TtC7iMazing27OptionsWizardViewController didResignActive];
-[_TtC7iMazing27OptionsWizardViewController willBecomeActive];
-[_TtC7iMazing27OptionsWizardViewController didBecomeActive];
-[_TtC7iMazing27OptionsWizardViewController transientBack:];
-[_TtC7iMazing27OptionsWizardViewController cancel:];
-[_TtC7iMazing27OptionsWizardViewController previous:];
-[_TtC7iMazing27OptionsWizardViewController next:];
-[_TtC7iMazing27OptionsWizardViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing27OrganizationsViewController : NSViewController <NSTableViewDelegate, NSMenuDelegate, _TtP7iMazing24PlusMinusControlDelegate_, HelpURLProvider> {
    /* instance variables */
     validateModalActionHandler;
     modalActionName;
     modalStatusChangeHandler;
     selectionHandler;
     loadingVC;
     orgsArrayController;
     actionsMenu;
     identityPopupGenerateNew;
     identityPopupHasCert;
     newOrgView;
     orgsView;
     orgsTableView;
     nameField;
     hasSelection;
     newOrg;
     countries;
     selectedCountry;
     newOrgCertPath;
     newOrgCertFilename;
     _awake;
     observations;
     _dragDropHelper;
}

@property (T@"NSString",N,R) nibName;
@property (T@"NSArrayController",N,&,VorgsArrayController) orgsArrayController;
@property (T@"NSMenu",N,&,VactionsMenu) actionsMenu;
@property (T@"NSPopUpButton",N,&,VidentityPopupGenerateNew) identityPopupGenerateNew;
@property (T@"NSPopUpButton",N,&,VidentityPopupHasCert) identityPopupHasCert;
@property (T@"NSView",N,&,VnewOrgView) newOrgView;
@property (T@"NSView",N,&,VorgsView) orgsView;
@property (T@"NSTableView",N,&,VorgsTableView) orgsTableView;
@property (T@"NSTextField",N,&,VnameField) nameField;
@property (TB,N,VhasSelection) hasSelection;
@property (T@"Organization",N,&,VnewOrg) newOrg;
@property (T@"NSArray",N,C) countries;
@property (T@"_TtC7iMazing10ISOCountry",N,&,VselectedCountry) selectedCountry;
@property (T@"NSString",N,C) newOrgCertPath;
@property (T@"NSString",N,C) newOrgCertFilename;

/* instance methods */
-[_TtC7iMazing27OrganizationsViewController helpURL];
-[_TtC7iMazing27OrganizationsViewController nibName];
-[_TtC7iMazing27OrganizationsViewController orgsArrayController];
-[_TtC7iMazing27OrganizationsViewController setOrgsArrayController:];
-[_TtC7iMazing27OrganizationsViewController actionsMenu];
-[_TtC7iMazing27OrganizationsViewController setActionsMenu:];
-[_TtC7iMazing27OrganizationsViewController identityPopupGenerateNew];
-[_TtC7iMazing27OrganizationsViewController setIdentityPopupGenerateNew:];
-[_TtC7iMazing27OrganizationsViewController identityPopupHasCert];
-[_TtC7iMazing27OrganizationsViewController setIdentityPopupHasCert:];
-[_TtC7iMazing27OrganizationsViewController newOrgView];
-[_TtC7iMazing27OrganizationsViewController setNewOrgView:];
-[_TtC7iMazing27OrganizationsViewController orgsView];
-[_TtC7iMazing27OrganizationsViewController setOrgsView:];
-[_TtC7iMazing27OrganizationsViewController orgsTableView];
-[_TtC7iMazing27OrganizationsViewController setOrgsTableView:];
-[_TtC7iMazing27OrganizationsViewController nameField];
-[_TtC7iMazing27OrganizationsViewController setNameField:];
-[_TtC7iMazing27OrganizationsViewController hasSelection];
-[_TtC7iMazing27OrganizationsViewController setHasSelection:];
-[_TtC7iMazing27OrganizationsViewController newOrg];
-[_TtC7iMazing27OrganizationsViewController setNewOrg:];
-[_TtC7iMazing27OrganizationsViewController countries];
-[_TtC7iMazing27OrganizationsViewController setCountries:];
-[_TtC7iMazing27OrganizationsViewController selectedCountry];
-[_TtC7iMazing27OrganizationsViewController setSelectedCountry:];
-[_TtC7iMazing27OrganizationsViewController newOrgCertPath];
-[_TtC7iMazing27OrganizationsViewController setNewOrgCertPath:];
-[_TtC7iMazing27OrganizationsViewController newOrgCertFilename];
-[_TtC7iMazing27OrganizationsViewController setNewOrgCertFilename:];
-[_TtC7iMazing27OrganizationsViewController initWithCoder:];
-[_TtC7iMazing27OrganizationsViewController init];
-[_TtC7iMazing27OrganizationsViewController dealloc];
-[_TtC7iMazing27OrganizationsViewController awakeFromNib];
-[_TtC7iMazing27OrganizationsViewController plusClicked:];
-[_TtC7iMazing27OrganizationsViewController minusClicked:];
-[_TtC7iMazing27OrganizationsViewController showSupervisionID:];
-[_TtC7iMazing27OrganizationsViewController choosePKCS12:];
-[_TtC7iMazing27OrganizationsViewController generateNewClicked:];
-[_TtC7iMazing27OrganizationsViewController menuButtonClick:];
-[_TtC7iMazing27OrganizationsViewController exportOrganization:];
-[_TtC7iMazing27OrganizationsViewController exportOrganizationID:];
-[_TtC7iMazing27OrganizationsViewController exportOrganizationCert:];
-[_TtC7iMazing27OrganizationsViewController importOrganization:];
-[_TtC7iMazing27OrganizationsViewController tableViewSelectionDidChange:];
-[_TtC7iMazing27OrganizationsViewController menuWillOpen:];
-[_TtC7iMazing27OrganizationsViewController embedInWindowWithIsPicker:];
-[_TtC7iMazing27OrganizationsViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing27PhotoDetailViewAVPlayerView : _TtC7iMazing29ScrollingDisabledAVPlayerView

/* instance methods */
-[_TtC7iMazing27PhotoDetailViewAVPlayerView updateTrackingAreas];
-[_TtC7iMazing27PhotoDetailViewAVPlayerView initWithCoder:];
-[_TtC7iMazing27PhotoDetailViewAVPlayerView mouseEntered:];
-[_TtC7iMazing27PhotoDetailViewAVPlayerView initWithFrame:];

@end

@interface _TtC7iMazing27PhotoExportWindowController : NSWindowController {
    /* instance variables */
     view;
     mediaTypeVideosStackView;
     mediaTypeImageLabel;
     mediaTypeVideoLabel;
     mediaTypeOptionsLabel;
     mediaTypePhotoStackView;
     mediaTypeLivePhotoStackView;
     mediaTypePortraitStackView;
     mediaTypePanoramaStackView;
     mediaTypeBurstStackView;
     mediaTypeScreenshotStackView;
     mediaTypeRAWStackView;
     mediaTypeVideoStackView;
     mediaTypeTimeLapseStackView;
     mediaTypeSlomoStackView;
     mediaTypeProResStackView;
     imageStackView;
     videoStackView;
     mediaTypeBurstStackViewHeightConstraint;
     mediaTypePhotoCheckBox;
     mediaTypeLivePhotoCheckBox;
     mediaTypeLivePhotoIncludeVideosCheckBox;
     mediaTypePortraitCheckBox;
     mediaTypePortraitIncludeOriginalCheckBox;
     mediaTypePanoramaCheckBox;
     mediaTypeBurstCheckBox;
     mediaTypeBurstIncludeAllFramesCheckBox;
     mediaTypeScreenshotCheckBox;
     mediaTypeRAWCheckBox;
     mediaTypeVideoCheckBox;
     mediaTypeTimeLapseCheckBox;
     mediaTypeSlomoCheckBox;
     mediaTypeProResCheckBox;
     createMediaTypeFoldersCheckBox;
     exportOriginalsCheckBox;
     exportUltraWideCheckBox;
     exportJPGFromRAWCheckBox;
     useOriginalFilenamesCheckBox;
     helpButton;
     nextButton;
     defaultsButton;
     conversionWarningButton;
     convertHEICtoJPGButton;
     convertHEICtoJPGSlider;
     convertHEICtoJPGQualityLabel;
     convertHEVCtoMP4Button;
     convertHEVCtoMP4Slider;
     convertHEVCtoMP4QualityLabel;
     createFoldersForMoments;
     createFoldersMomentsLocationDate;
     title;
     totalItemsLabel;
     mediaTypePhotoCount;
     allowNextButton;
     showConversionWarning;
     livePhotoOperation;
     portraitOperation;
     burstOperation;
     originalsOperation;
     ultraWideOperation;
     JPGFromRAWOperation;
     livePhotoOperationObserver;
     portraitOperationObserver;
     burstOperationObserver;
     originalsOperationObserver;
     ultraWideOperationObserver;
     JPGFromRAWOperationObserver;
     burstKeptItemsCount;
     mediaTypeBurstCount;
     mediaTypeLivePhotoCount;
     mediaTypePortraitCount;
     mediaTypePanoramaCount;
     mediaTypeScreenshotCount;
     mediaTypeVideoCount;
     mediaTypeTimeLapseCount;
     mediaTypeSlomoCount;
     mediaTypeRAWCount;
     mediaTypeProResCount;
     otherPhotosCount;
     showingBurstOnly;
     selectedItems;
     RAWItems;
     isAwake;
     manager;
}

@property (T@"NSView",N,&,Vview) view;
@property (T@"NSStackView",N,&,VmediaTypeVideosStackView) mediaTypeVideosStackView;
@property (T@"NSTextField",N,&,VmediaTypeImageLabel) mediaTypeImageLabel;
@property (T@"NSTextField",N,&,VmediaTypeVideoLabel) mediaTypeVideoLabel;
@property (T@"NSTextField",N,&,VmediaTypeOptionsLabel) mediaTypeOptionsLabel;
@property (T@"NSView",N,&,VmediaTypePhotoStackView) mediaTypePhotoStackView;
@property (T@"NSView",N,&,VmediaTypeLivePhotoStackView) mediaTypeLivePhotoStackView;
@property (T@"NSView",N,&,VmediaTypePortraitStackView) mediaTypePortraitStackView;
@property (T@"NSView",N,&,VmediaTypePanoramaStackView) mediaTypePanoramaStackView;
@property (T@"NSView",N,&,VmediaTypeBurstStackView) mediaTypeBurstStackView;
@property (T@"NSView",N,&,VmediaTypeScreenshotStackView) mediaTypeScreenshotStackView;
@property (T@"NSView",N,&,VmediaTypeRAWStackView) mediaTypeRAWStackView;
@property (T@"NSView",N,&,VmediaTypeVideoStackView) mediaTypeVideoStackView;
@property (T@"NSView",N,&,VmediaTypeTimeLapseStackView) mediaTypeTimeLapseStackView;
@property (T@"NSView",N,&,VmediaTypeSlomoStackView) mediaTypeSlomoStackView;
@property (T@"NSView",N,&,VmediaTypeProResStackView) mediaTypeProResStackView;
@property (T@"NSStackView",N,&,VimageStackView) imageStackView;
@property (T@"NSStackView",N,&,VvideoStackView) videoStackView;
@property (T@"NSLayoutConstraint",N,&,VmediaTypeBurstStackViewHeightConstraint) mediaTypeBurstStackViewHeightConstraint;
@property (T@"NSButton",N,&,VmediaTypePhotoCheckBox) mediaTypePhotoCheckBox;
@property (T@"NSButton",N,&,VmediaTypeLivePhotoCheckBox) mediaTypeLivePhotoCheckBox;
@property (T@"NSButton",N,&,VmediaTypeLivePhotoIncludeVideosCheckBox) mediaTypeLivePhotoIncludeVideosCheckBox;
@property (T@"NSButton",N,&,VmediaTypePortraitCheckBox) mediaTypePortraitCheckBox;
@property (T@"NSButton",N,&,VmediaTypePortraitIncludeOriginalCheckBox) mediaTypePortraitIncludeOriginalCheckBox;
@property (T@"NSButton",N,&,VmediaTypePanoramaCheckBox) mediaTypePanoramaCheckBox;
@property (T@"NSButton",N,&,VmediaTypeBurstCheckBox) mediaTypeBurstCheckBox;
@property (T@"NSButton",N,&,VmediaTypeBurstIncludeAllFramesCheckBox) mediaTypeBurstIncludeAllFramesCheckBox;
@property (T@"NSButton",N,&,VmediaTypeScreenshotCheckBox) mediaTypeScreenshotCheckBox;
@property (T@"NSButton",N,&,VmediaTypeRAWCheckBox) mediaTypeRAWCheckBox;
@property (T@"NSButton",N,&,VmediaTypeVideoCheckBox) mediaTypeVideoCheckBox;
@property (T@"NSButton",N,&,VmediaTypeTimeLapseCheckBox) mediaTypeTimeLapseCheckBox;
@property (T@"NSButton",N,&,VmediaTypeSlomoCheckBox) mediaTypeSlomoCheckBox;
@property (T@"NSButton",N,&,VmediaTypeProResCheckBox) mediaTypeProResCheckBox;
@property (T@"NSButton",N,&,VcreateMediaTypeFoldersCheckBox) createMediaTypeFoldersCheckBox;
@property (T@"NSButton",N,&,VexportOriginalsCheckBox) exportOriginalsCheckBox;
@property (T@"NSButton",N,&,VexportUltraWideCheckBox) exportUltraWideCheckBox;
@property (T@"NSButton",N,&,VexportJPGFromRAWCheckBox) exportJPGFromRAWCheckBox;
@property (T@"NSButton",N,&,VuseOriginalFilenamesCheckBox) useOriginalFilenamesCheckBox;
@property (T@"NSButton",N,&,VhelpButton) helpButton;
@property (T@"NSButton",N,&,VnextButton) nextButton;
@property (T@"NSButton",N,&,VdefaultsButton) defaultsButton;
@property (T@"NSButton",N,&,VconversionWarningButton) conversionWarningButton;
@property (T@"NSButton",N,&,VconvertHEICtoJPGButton) convertHEICtoJPGButton;
@property (T@"NSSlider",N,&,VconvertHEICtoJPGSlider) convertHEICtoJPGSlider;
@property (T@"NSTextField",N,&,VconvertHEICtoJPGQualityLabel) convertHEICtoJPGQualityLabel;
@property (T@"NSButton",N,&,VconvertHEVCtoMP4Button) convertHEVCtoMP4Button;
@property (T@"NSSlider",N,&,VconvertHEVCtoMP4Slider) convertHEVCtoMP4Slider;
@property (T@"NSTextField",N,&,VconvertHEVCtoMP4QualityLabel) convertHEVCtoMP4QualityLabel;
@property (TB,N,VcreateFoldersForMoments) createFoldersForMoments;
@property (TB,N,VcreateFoldersMomentsLocationDate) createFoldersMomentsLocationDate;
@property (T@"NSString",N,C) title;
@property (T@"NSString",N,C) totalItemsLabel;
@property (Tq,N,VmediaTypePhotoCount) mediaTypePhotoCount;
@property (TB,N,VallowNextButton) allowNextButton;
@property (TB,N,VshowConversionWarning) showConversionWarning;
@property (T@"_TtC7iMazing34PhotoExportWindowProgressOperation",N,&,VlivePhotoOperation) livePhotoOperation;
@property (T@"_TtC7iMazing34PhotoExportWindowProgressOperation",N,&,VportraitOperation) portraitOperation;
@property (T@"_TtC7iMazing34PhotoExportWindowProgressOperation",N,&,VburstOperation) burstOperation;
@property (T@"_TtC7iMazing34PhotoExportWindowProgressOperation",N,&,VoriginalsOperation) originalsOperation;
@property (T@"_TtC7iMazing34PhotoExportWindowProgressOperation",N,&,VultraWideOperation) ultraWideOperation;
@property (T@"_TtC7iMazing34PhotoExportWindowProgressOperation",N,&,VJPGFromRAWOperation) JPGFromRAWOperation;
@property (TB,N) convertHEIC;
@property (TB,N) convertHEVC;
@property (T@"NSString",N,R) windowNibName;

/* instance methods */
-[_TtC7iMazing27PhotoExportWindowController view];
-[_TtC7iMazing27PhotoExportWindowController setView:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypeVideosStackView];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypeVideosStackView:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypeImageLabel];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypeImageLabel:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypeVideoLabel];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypeVideoLabel:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypeOptionsLabel];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypeOptionsLabel:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypePhotoStackView];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypePhotoStackView:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypeLivePhotoStackView];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypeLivePhotoStackView:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypePortraitStackView];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypePortraitStackView:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypePanoramaStackView];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypePanoramaStackView:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypeBurstStackView];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypeBurstStackView:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypeScreenshotStackView];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypeScreenshotStackView:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypeRAWStackView];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypeRAWStackView:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypeVideoStackView];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypeVideoStackView:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypeTimeLapseStackView];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypeTimeLapseStackView:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypeSlomoStackView];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypeSlomoStackView:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypeProResStackView];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypeProResStackView:];
-[_TtC7iMazing27PhotoExportWindowController imageStackView];
-[_TtC7iMazing27PhotoExportWindowController setImageStackView:];
-[_TtC7iMazing27PhotoExportWindowController videoStackView];
-[_TtC7iMazing27PhotoExportWindowController setVideoStackView:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypeBurstStackViewHeightConstraint];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypeBurstStackViewHeightConstraint:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypePhotoCheckBox];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypePhotoCheckBox:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypeLivePhotoCheckBox];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypeLivePhotoCheckBox:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypeLivePhotoIncludeVideosCheckBox];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypeLivePhotoIncludeVideosCheckBox:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypePortraitCheckBox];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypePortraitCheckBox:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypePortraitIncludeOriginalCheckBox];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypePortraitIncludeOriginalCheckBox:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypePanoramaCheckBox];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypePanoramaCheckBox:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypeBurstCheckBox];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypeBurstCheckBox:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypeBurstIncludeAllFramesCheckBox];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypeBurstIncludeAllFramesCheckBox:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypeScreenshotCheckBox];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypeScreenshotCheckBox:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypeRAWCheckBox];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypeRAWCheckBox:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypeVideoCheckBox];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypeVideoCheckBox:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypeTimeLapseCheckBox];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypeTimeLapseCheckBox:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypeSlomoCheckBox];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypeSlomoCheckBox:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypeProResCheckBox];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypeProResCheckBox:];
-[_TtC7iMazing27PhotoExportWindowController createMediaTypeFoldersCheckBox];
-[_TtC7iMazing27PhotoExportWindowController setCreateMediaTypeFoldersCheckBox:];
-[_TtC7iMazing27PhotoExportWindowController exportOriginalsCheckBox];
-[_TtC7iMazing27PhotoExportWindowController setExportOriginalsCheckBox:];
-[_TtC7iMazing27PhotoExportWindowController exportUltraWideCheckBox];
-[_TtC7iMazing27PhotoExportWindowController setExportUltraWideCheckBox:];
-[_TtC7iMazing27PhotoExportWindowController exportJPGFromRAWCheckBox];
-[_TtC7iMazing27PhotoExportWindowController setExportJPGFromRAWCheckBox:];
-[_TtC7iMazing27PhotoExportWindowController useOriginalFilenamesCheckBox];
-[_TtC7iMazing27PhotoExportWindowController setUseOriginalFilenamesCheckBox:];
-[_TtC7iMazing27PhotoExportWindowController helpButton];
-[_TtC7iMazing27PhotoExportWindowController setHelpButton:];
-[_TtC7iMazing27PhotoExportWindowController nextButton];
-[_TtC7iMazing27PhotoExportWindowController setNextButton:];
-[_TtC7iMazing27PhotoExportWindowController defaultsButton];
-[_TtC7iMazing27PhotoExportWindowController setDefaultsButton:];
-[_TtC7iMazing27PhotoExportWindowController conversionWarningButton];
-[_TtC7iMazing27PhotoExportWindowController setConversionWarningButton:];
-[_TtC7iMazing27PhotoExportWindowController convertHEICtoJPGButton];
-[_TtC7iMazing27PhotoExportWindowController setConvertHEICtoJPGButton:];
-[_TtC7iMazing27PhotoExportWindowController convertHEICtoJPGSlider];
-[_TtC7iMazing27PhotoExportWindowController setConvertHEICtoJPGSlider:];
-[_TtC7iMazing27PhotoExportWindowController convertHEICtoJPGQualityLabel];
-[_TtC7iMazing27PhotoExportWindowController setConvertHEICtoJPGQualityLabel:];
-[_TtC7iMazing27PhotoExportWindowController convertHEVCtoMP4Button];
-[_TtC7iMazing27PhotoExportWindowController setConvertHEVCtoMP4Button:];
-[_TtC7iMazing27PhotoExportWindowController convertHEVCtoMP4Slider];
-[_TtC7iMazing27PhotoExportWindowController setConvertHEVCtoMP4Slider:];
-[_TtC7iMazing27PhotoExportWindowController convertHEVCtoMP4QualityLabel];
-[_TtC7iMazing27PhotoExportWindowController setConvertHEVCtoMP4QualityLabel:];
-[_TtC7iMazing27PhotoExportWindowController createFoldersForMoments];
-[_TtC7iMazing27PhotoExportWindowController setCreateFoldersForMoments:];
-[_TtC7iMazing27PhotoExportWindowController createFoldersMomentsLocationDate];
-[_TtC7iMazing27PhotoExportWindowController setCreateFoldersMomentsLocationDate:];
-[_TtC7iMazing27PhotoExportWindowController title];
-[_TtC7iMazing27PhotoExportWindowController setTitle:];
-[_TtC7iMazing27PhotoExportWindowController totalItemsLabel];
-[_TtC7iMazing27PhotoExportWindowController setTotalItemsLabel:];
-[_TtC7iMazing27PhotoExportWindowController mediaTypePhotoCount];
-[_TtC7iMazing27PhotoExportWindowController setMediaTypePhotoCount:];
-[_TtC7iMazing27PhotoExportWindowController allowNextButton];
-[_TtC7iMazing27PhotoExportWindowController setAllowNextButton:];
-[_TtC7iMazing27PhotoExportWindowController showConversionWarning];
-[_TtC7iMazing27PhotoExportWindowController setShowConversionWarning:];
-[_TtC7iMazing27PhotoExportWindowController livePhotoOperation];
-[_TtC7iMazing27PhotoExportWindowController setLivePhotoOperation:];
-[_TtC7iMazing27PhotoExportWindowController portraitOperation];
-[_TtC7iMazing27PhotoExportWindowController setPortraitOperation:];
-[_TtC7iMazing27PhotoExportWindowController burstOperation];
-[_TtC7iMazing27PhotoExportWindowController setBurstOperation:];
-[_TtC7iMazing27PhotoExportWindowController originalsOperation];
-[_TtC7iMazing27PhotoExportWindowController setOriginalsOperation:];
-[_TtC7iMazing27PhotoExportWindowController ultraWideOperation];
-[_TtC7iMazing27PhotoExportWindowController setUltraWideOperation:];
-[_TtC7iMazing27PhotoExportWindowController JPGFromRAWOperation];
-[_TtC7iMazing27PhotoExportWindowController setJPGFromRAWOperation:];
-[_TtC7iMazing27PhotoExportWindowController convertHEIC];
-[_TtC7iMazing27PhotoExportWindowController setConvertHEIC:];
-[_TtC7iMazing27PhotoExportWindowController convertHEVC];
-[_TtC7iMazing27PhotoExportWindowController setConvertHEVC:];
-[_TtC7iMazing27PhotoExportWindowController dealloc];
-[_TtC7iMazing27PhotoExportWindowController windowNibName];
-[_TtC7iMazing27PhotoExportWindowController awakeFromNib];
-[_TtC7iMazing27PhotoExportWindowController onMediaTypesSelectionChanged:];
-[_TtC7iMazing27PhotoExportWindowController onMediaTypeRAWCheckboxChanged:];
-[_TtC7iMazing27PhotoExportWindowController onExportOriginalsButtonClicked:];
-[_TtC7iMazing27PhotoExportWindowController onExportUltraWideButtonClicked:];
-[_TtC7iMazing27PhotoExportWindowController onConvertHEICtoJPGSliderChange:];
-[_TtC7iMazing27PhotoExportWindowController onConvertHEVCtoMP4SliderChange:];
-[_TtC7iMazing27PhotoExportWindowController onConvertHEICtoJPGButtonClicked:];
-[_TtC7iMazing27PhotoExportWindowController onConvertHEVCtoMP4ButtonClicked:];
-[_TtC7iMazing27PhotoExportWindowController onNextButtonClicked:];
-[_TtC7iMazing27PhotoExportWindowController onCancelButtonClicked:];
-[_TtC7iMazing27PhotoExportWindowController onOptionClicekd:];
-[_TtC7iMazing27PhotoExportWindowController onDefaultButtonClicked:];
-[_TtC7iMazing27PhotoExportWindowController onHelpButtonClicked:];
-[_TtC7iMazing27PhotoExportWindowController onConversionWarningClicked:];
-[_TtC7iMazing27PhotoExportWindowController initWithWindow:];
-[_TtC7iMazing27PhotoExportWindowController initWithCoder:];

@end

@interface _TtC7iMazing27PodcastsAlbumViewController : _TtC7iMazing24MediaAlbumViewController

/* instance methods */
-[_TtC7iMazing27PodcastsAlbumViewController initWithCoder:];

@end

@interface _TtC7iMazing27PreferencesWindowController : NSWindowController <VKHighlightListViewControllerDelegate> {
    /* instance variables */
     items;
     selectedItem;
     sidebarContainer;
     contentView;
     sidebar;
     currentController;
     controllerMinHeight;
     animating;
     titleToSelect;
     placeholderView;
}

@property (T@"NSArray",N,C) items;
@property (T@"_TtC7iMazing15PreferencesItem",N,&,VselectedItem) selectedItem;
@property (T@"NSView",N,&,VsidebarContainer) sidebarContainer;
@property (T@"NSView",N,&,VcontentView) contentView;
@property (T@"NSString",N,R) windowNibName;

/* instance methods */
-[_TtC7iMazing27PreferencesWindowController items];
-[_TtC7iMazing27PreferencesWindowController setItems:];
-[_TtC7iMazing27PreferencesWindowController selectedItem];
-[_TtC7iMazing27PreferencesWindowController setSelectedItem:];
-[_TtC7iMazing27PreferencesWindowController sidebarContainer];
-[_TtC7iMazing27PreferencesWindowController setSidebarContainer:];
-[_TtC7iMazing27PreferencesWindowController contentView];
-[_TtC7iMazing27PreferencesWindowController setContentView:];
-[_TtC7iMazing27PreferencesWindowController initWithItems:];
-[_TtC7iMazing27PreferencesWindowController initWithItems:selectedItemTitle:];
-[_TtC7iMazing27PreferencesWindowController initWithCoder:];
-[_TtC7iMazing27PreferencesWindowController windowNibName];
-[_TtC7iMazing27PreferencesWindowController windowDidLoad];
-[_TtC7iMazing27PreferencesWindowController highlightListView:shouldSelectItem:];
-[_TtC7iMazing27PreferencesWindowController initWithWindow:];

@end

@interface _TtC7iMazing27ScrollingDisabledScrollView : NSScrollView

/* instance methods */
-[_TtC7iMazing27ScrollingDisabledScrollView scrollWheel:];
-[_TtC7iMazing27ScrollingDisabledScrollView initWithFrame:];
-[_TtC7iMazing27ScrollingDisabledScrollView initWithCoder:];

@end

@interface _TtC7iMazing27SelectDevicesViewController : NSViewController <NSTableViewDelegate, NSTableViewDataSource> {
    /* instance variables */
     selectionChanged;
     selecting;
     observation;
     selected;
     arrayController;
     excludedUDIDs;
     searchString;
}

@property (T@"NSSet",N,C) selected;
@property (T@"NSArrayController",N,&,VarrayController) arrayController;
@property (T@"NSArray",N,C) excludedUDIDs;
@property (T@"NSString",N,C) searchString;

/* instance methods */
-[_TtC7iMazing27SelectDevicesViewController selected];
-[_TtC7iMazing27SelectDevicesViewController setSelected:];
-[_TtC7iMazing27SelectDevicesViewController arrayController];
-[_TtC7iMazing27SelectDevicesViewController setArrayController:];
-[_TtC7iMazing27SelectDevicesViewController excludedUDIDs];
-[_TtC7iMazing27SelectDevicesViewController setExcludedUDIDs:];
-[_TtC7iMazing27SelectDevicesViewController searchString];
-[_TtC7iMazing27SelectDevicesViewController setSearchString:];
-[_TtC7iMazing27SelectDevicesViewController initWithCoder:];
-[_TtC7iMazing27SelectDevicesViewController viewDidLoad];
-[_TtC7iMazing27SelectDevicesViewController select:];
-[_TtC7iMazing27SelectDevicesViewController tableView:viewForTableColumn:row:];
-[_TtC7iMazing27SelectDevicesViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing27VPPLicensesWindowController : NSWindowController {
    /* instance variables */
     manager;
     didChangeAssignements;
     contentView;
     arrayController;
     appIcon;
     appItem;
     licenseInfo;
     serialsText;
     assignedLicensesLabel;
     textViewValue;
     _awake;
     _loadingVC;
     _observations;
}

@property (T@"NSString",N,R) windowNibName;
@property (TB,N,VdidChangeAssignements) didChangeAssignements;
@property (T@"NSView",N,&,VcontentView) contentView;
@property (T@"NSArrayController",N,&,VarrayController) arrayController;
@property (T@"NSImage",N,&,VappIcon) appIcon;
@property (T@"iOSAppDisplayItem",N,&,VappItem) appItem;
@property (T@"NSString",N,C) licenseInfo;
@property (T@"NSString",N,C) serialsText;
@property (T@"NSString",N,C) assignedLicensesLabel;
@property (T@"NSAttributedString",N,&,VtextViewValue) textViewValue;

/* instance methods */
-[_TtC7iMazing27VPPLicensesWindowController windowNibName];
-[_TtC7iMazing27VPPLicensesWindowController didChangeAssignements];
-[_TtC7iMazing27VPPLicensesWindowController setDidChangeAssignements:];
-[_TtC7iMazing27VPPLicensesWindowController contentView];
-[_TtC7iMazing27VPPLicensesWindowController setContentView:];
-[_TtC7iMazing27VPPLicensesWindowController arrayController];
-[_TtC7iMazing27VPPLicensesWindowController setArrayController:];
-[_TtC7iMazing27VPPLicensesWindowController appIcon];
-[_TtC7iMazing27VPPLicensesWindowController setAppIcon:];
-[_TtC7iMazing27VPPLicensesWindowController appItem];
-[_TtC7iMazing27VPPLicensesWindowController setAppItem:];
-[_TtC7iMazing27VPPLicensesWindowController licenseInfo];
-[_TtC7iMazing27VPPLicensesWindowController setLicenseInfo:];
-[_TtC7iMazing27VPPLicensesWindowController serialsText];
-[_TtC7iMazing27VPPLicensesWindowController setSerialsText:];
-[_TtC7iMazing27VPPLicensesWindowController assignedLicensesLabel];
-[_TtC7iMazing27VPPLicensesWindowController setAssignedLicensesLabel:];
-[_TtC7iMazing27VPPLicensesWindowController textViewValue];
-[_TtC7iMazing27VPPLicensesWindowController setTextViewValue:];
-[_TtC7iMazing27VPPLicensesWindowController initWithManager:app:];
-[_TtC7iMazing27VPPLicensesWindowController initWithCoder:];
-[_TtC7iMazing27VPPLicensesWindowController dealloc];
-[_TtC7iMazing27VPPLicensesWindowController awakeFromNib];
-[_TtC7iMazing27VPPLicensesWindowController doneClicked:];
-[_TtC7iMazing27VPPLicensesWindowController assignClicked:];
-[_TtC7iMazing27VPPLicensesWindowController unassignClicked:];
-[_TtC7iMazing27VPPLicensesWindowController showHelp:];
-[_TtC7iMazing27VPPLicensesWindowController initWithWindow:];

@end

@interface _TtC7iMazing27WizardAdapterViewController : NSViewController {
    /* instance variables */
     containerView;
     toolbarContainer;
     connectView;
     leftButton;
     rightButton;
     bottomLeftCustomViewContainer;
     inited;
     completionBlocks;
     titleObserver;
     leftButtonObserver;
     rightButtonObserver;
     titleController;
     wizard;
     connectViewController;
     requiresConnection;
     connecting;
     performingLeftCustomAction;
     performingRightCustomAction;
     showBottomButtons;
     defaultTitle;
     item;
     controllers;
     toolbar;
     currentController;
     bottomLeftCustomView;
     onClose;
}

@property (T@"NSView",N,&,VcontainerView) containerView;
@property (T@"NSView",N,&,VtoolbarContainer) toolbarContainer;
@property (T@"NSView",N,&,VconnectView) connectView;
@property (T@"NSButton",N,&,VleftButton) leftButton;
@property (T@"NSButton",N,&,VrightButton) rightButton;
@property (T@"NSView",N,&,VbottomLeftCustomViewContainer) bottomLeftCustomViewContainer;
@property (T@"WizardWindowController",N,W,Vwizard) wizard;
@property (T@"_TtC7iMazing30ConnectScreenUSBViewController",N,&,VconnectViewController) connectViewController;
@property (TB,N,VrequiresConnection) requiresConnection;
@property (TB,N,Vconnecting) connecting;
@property (TB,N,VperformingLeftCustomAction) performingLeftCustomAction;
@property (TB,N,VperformingRightCustomAction) performingRightCustomAction;
@property (TB,N,VshowBottomButtons) showBottomButtons;
@property (T@"NSString",N,C) defaultTitle;
@property (T@"_TtC7iMazing10DeviceItem",N,&,Vitem) item;
@property (T@"NSArray",N,C) controllers;
@property (T@"_TtC7iMazing27MainWindowToolbarController",N,&,Vtoolbar) toolbar;
@property (T@"<WizardWindowDelegate>",N,&,VcurrentController) currentController;
@property (TB,N) leftButtonIsDefault;
@property (TB,N) rightButtonIsDefault;
@property (T@"NSView",N,&,VbottomLeftCustomView) bottomLeftCustomView;
@property (T@?,N,C) onClose;
@property (T@"NSString",N,R) nibName;
@property (T@"iOSDevice",N,R) iOSDevice;

/* instance methods */
-[_TtC7iMazing27WizardAdapterViewController containerView];
-[_TtC7iMazing27WizardAdapterViewController setContainerView:];
-[_TtC7iMazing27WizardAdapterViewController toolbarContainer];
-[_TtC7iMazing27WizardAdapterViewController setToolbarContainer:];
-[_TtC7iMazing27WizardAdapterViewController connectView];
-[_TtC7iMazing27WizardAdapterViewController setConnectView:];
-[_TtC7iMazing27WizardAdapterViewController leftButton];
-[_TtC7iMazing27WizardAdapterViewController setLeftButton:];
-[_TtC7iMazing27WizardAdapterViewController rightButton];
-[_TtC7iMazing27WizardAdapterViewController setRightButton:];
-[_TtC7iMazing27WizardAdapterViewController bottomLeftCustomViewContainer];
-[_TtC7iMazing27WizardAdapterViewController setBottomLeftCustomViewContainer:];
-[_TtC7iMazing27WizardAdapterViewController wizard];
-[_TtC7iMazing27WizardAdapterViewController setWizard:];
-[_TtC7iMazing27WizardAdapterViewController connectViewController];
-[_TtC7iMazing27WizardAdapterViewController setConnectViewController:];
-[_TtC7iMazing27WizardAdapterViewController requiresConnection];
-[_TtC7iMazing27WizardAdapterViewController setRequiresConnection:];
-[_TtC7iMazing27WizardAdapterViewController connecting];
-[_TtC7iMazing27WizardAdapterViewController setConnecting:];
-[_TtC7iMazing27WizardAdapterViewController performingLeftCustomAction];
-[_TtC7iMazing27WizardAdapterViewController setPerformingLeftCustomAction:];
-[_TtC7iMazing27WizardAdapterViewController performingRightCustomAction];
-[_TtC7iMazing27WizardAdapterViewController setPerformingRightCustomAction:];
-[_TtC7iMazing27WizardAdapterViewController showBottomButtons];
-[_TtC7iMazing27WizardAdapterViewController setShowBottomButtons:];
-[_TtC7iMazing27WizardAdapterViewController defaultTitle];
-[_TtC7iMazing27WizardAdapterViewController setDefaultTitle:];
-[_TtC7iMazing27WizardAdapterViewController item];
-[_TtC7iMazing27WizardAdapterViewController setItem:];
-[_TtC7iMazing27WizardAdapterViewController controllers];
-[_TtC7iMazing27WizardAdapterViewController setControllers:];
-[_TtC7iMazing27WizardAdapterViewController toolbar];
-[_TtC7iMazing27WizardAdapterViewController setToolbar:];
-[_TtC7iMazing27WizardAdapterViewController currentController];
-[_TtC7iMazing27WizardAdapterViewController setCurrentController:];
-[_TtC7iMazing27WizardAdapterViewController leftButtonIsDefault];
-[_TtC7iMazing27WizardAdapterViewController setLeftButtonIsDefault:];
-[_TtC7iMazing27WizardAdapterViewController rightButtonIsDefault];
-[_TtC7iMazing27WizardAdapterViewController setRightButtonIsDefault:];
-[_TtC7iMazing27WizardAdapterViewController bottomLeftCustomView];
-[_TtC7iMazing27WizardAdapterViewController setBottomLeftCustomView:];
-[_TtC7iMazing27WizardAdapterViewController onClose];
-[_TtC7iMazing27WizardAdapterViewController setOnClose:];
-[_TtC7iMazing27WizardAdapterViewController initWithTitle:wizard:requiresConnection:];
-[_TtC7iMazing27WizardAdapterViewController initWithCoder:];
-[_TtC7iMazing27WizardAdapterViewController dealloc];
-[_TtC7iMazing27WizardAdapterViewController nibName];
-[_TtC7iMazing27WizardAdapterViewController viewDidLoad];
-[_TtC7iMazing27WizardAdapterViewController viewWillAppear];
-[_TtC7iMazing27WizardAdapterViewController viewDidAppear];
-[_TtC7iMazing27WizardAdapterViewController viewDidDisappear];
-[_TtC7iMazing27WizardAdapterViewController iOSDevice];
-[_TtC7iMazing27WizardAdapterViewController deviceNotification:];
-[_TtC7iMazing27WizardAdapterViewController close];
-[_TtC7iMazing27WizardAdapterViewController closeWithReason:];
-[_TtC7iMazing27WizardAdapterViewController previousButtonTitle];
-[_TtC7iMazing27WizardAdapterViewController nextButtonTitle];
-[_TtC7iMazing27WizardAdapterViewController nextButtonTitleWithPossibleAction:];
-[_TtC7iMazing27WizardAdapterViewController addController:error:];
-[_TtC7iMazing27WizardAdapterViewController addController:forStep:error:];
-[_TtC7iMazing27WizardAdapterViewController removeController:error:];
-[_TtC7iMazing27WizardAdapterViewController insertNextController:error:];
-[_TtC7iMazing27WizardAdapterViewController insertNextController:makeActive:error:];
-[_TtC7iMazing27WizardAdapterViewController isFirstController:];
-[_TtC7iMazing27WizardAdapterViewController isLastController:];
-[_TtC7iMazing27WizardAdapterViewController previous];
-[_TtC7iMazing27WizardAdapterViewController next];
-[_TtC7iMazing27WizardAdapterViewController leftButtonAction:];
-[_TtC7iMazing27WizardAdapterViewController rightButtonAction:];
-[_TtC7iMazing27WizardAdapterViewController showHelp:];
-[_TtC7iMazing27WizardAdapterViewController addCompletionBlock:];
-[_TtC7iMazing27WizardAdapterViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing28BackupLocationViewController : NSViewController <NSMenuDelegate, NSTableViewDelegate> {
    /* instance variables */
     selectedItem;
     defaultBackupLocationItem;
     isLoaded;
     isAddingItem;
     backupLocationItems;
     arrayController;
     tableView;
     defaultTableColumn;
     setAsDefaultBackupLocationMenuItem;
     removeBackupLocationMenuItem;
}

@property (T@"_TtC7iMazing18BackupLocationItem",N,&,VselectedItem) selectedItem;
@property (T@"_TtC7iMazing18BackupLocationItem",N,&,VdefaultBackupLocationItem) defaultBackupLocationItem;
@property (TB,N,VisLoaded) isLoaded;
@property (TB,N,VisAddingItem) isAddingItem;
@property (T@"NSArray",N,C) backupLocationItems;
@property (T@"NSArrayController",N,&,VarrayController) arrayController;
@property (T@"NSTableView",N,&,VtableView) tableView;
@property (T@"NSTableColumn",N,&,VdefaultTableColumn) defaultTableColumn;
@property (T@"NSMenuItem",N,&,VsetAsDefaultBackupLocationMenuItem) setAsDefaultBackupLocationMenuItem;
@property (T@"NSMenuItem",N,&,VremoveBackupLocationMenuItem) removeBackupLocationMenuItem;

/* instance methods */
-[_TtC7iMazing28BackupLocationViewController menuWillOpen:];
-[_TtC7iMazing28BackupLocationViewController tableView:rowViewForRow:];
-[_TtC7iMazing28BackupLocationViewController tableViewSelectionDidChange:];
-[_TtC7iMazing28BackupLocationViewController selectedItem];
-[_TtC7iMazing28BackupLocationViewController setSelectedItem:];
-[_TtC7iMazing28BackupLocationViewController defaultBackupLocationItem];
-[_TtC7iMazing28BackupLocationViewController setDefaultBackupLocationItem:];
-[_TtC7iMazing28BackupLocationViewController isLoaded];
-[_TtC7iMazing28BackupLocationViewController setIsLoaded:];
-[_TtC7iMazing28BackupLocationViewController isAddingItem];
-[_TtC7iMazing28BackupLocationViewController setIsAddingItem:];
-[_TtC7iMazing28BackupLocationViewController backupLocationItems];
-[_TtC7iMazing28BackupLocationViewController setBackupLocationItems:];
-[_TtC7iMazing28BackupLocationViewController arrayController];
-[_TtC7iMazing28BackupLocationViewController setArrayController:];
-[_TtC7iMazing28BackupLocationViewController tableView];
-[_TtC7iMazing28BackupLocationViewController setTableView:];
-[_TtC7iMazing28BackupLocationViewController defaultTableColumn];
-[_TtC7iMazing28BackupLocationViewController setDefaultTableColumn:];
-[_TtC7iMazing28BackupLocationViewController setAsDefaultBackupLocationMenuItem];
-[_TtC7iMazing28BackupLocationViewController setSetAsDefaultBackupLocationMenuItem:];
-[_TtC7iMazing28BackupLocationViewController removeBackupLocationMenuItem];
-[_TtC7iMazing28BackupLocationViewController setRemoveBackupLocationMenuItem:];
-[_TtC7iMazing28BackupLocationViewController viewDidLoad];
-[_TtC7iMazing28BackupLocationViewController dealloc];
-[_TtC7iMazing28BackupLocationViewController volumeDidChanges:];
-[_TtC7iMazing28BackupLocationViewController openLocation:];
-[_TtC7iMazing28BackupLocationViewController setDefaultBackupLocation:];
-[_TtC7iMazing28BackupLocationViewController removeBackupLocation:];
-[_TtC7iMazing28BackupLocationViewController initWithNibName:bundle:];
-[_TtC7iMazing28BackupLocationViewController initWithCoder:];

@end

@interface _TtC7iMazing28BackupNavigationMenuItemView : NSView {
    /* instance variables */
     trackingArea;
     onMouseEnter;
     onMouseExit;
     mouseOver;
     bordered;
}

/* instance methods */
-[_TtC7iMazing28BackupNavigationMenuItemView initWithFrame:];
-[_TtC7iMazing28BackupNavigationMenuItemView initWithCoder:];
-[_TtC7iMazing28BackupNavigationMenuItemView updateTrackingAreas];
-[_TtC7iMazing28BackupNavigationMenuItemView mouseEntered:];
-[_TtC7iMazing28BackupNavigationMenuItemView mouseExited:];
-[_TtC7iMazing28BackupNavigationMenuItemView drawRect:];

@end

@interface _TtC7iMazing28BreadcrumbItemBackgroundView : NSView {
    /* instance variables */
     trackingArea;
     mouseOver;
     onMouseOverChanged;
}

/* instance methods */
-[_TtC7iMazing28BreadcrumbItemBackgroundView initWithFrame:];
-[_TtC7iMazing28BreadcrumbItemBackgroundView initWithCoder:];
-[_TtC7iMazing28BreadcrumbItemBackgroundView updateTrackingAreas];
-[_TtC7iMazing28BreadcrumbItemBackgroundView mouseEntered:];
-[_TtC7iMazing28BreadcrumbItemBackgroundView mouseExited:];
-[_TtC7iMazing28BreadcrumbItemBackgroundView drawRect:];

@end

@interface _TtC7iMazing28DatasetToolbarViewController : NSViewController {
    /* instance variables */
     buttonsStackView;
     datasetViewController;
     buttons;
     showLabelsObserver;
}

@property (T@"NSStackView",N,&,VbuttonsStackView) buttonsStackView;
@property (T@"DatasetViewController",N,W,VdatasetViewController) datasetViewController;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing28DatasetToolbarViewController buttonsStackView];
-[_TtC7iMazing28DatasetToolbarViewController setButtonsStackView:];
-[_TtC7iMazing28DatasetToolbarViewController datasetViewController];
-[_TtC7iMazing28DatasetToolbarViewController setDatasetViewController:];
-[_TtC7iMazing28DatasetToolbarViewController initWithDatasetViewController:buttons:];
-[_TtC7iMazing28DatasetToolbarViewController initWithCoder:];
-[_TtC7iMazing28DatasetToolbarViewController nibName];
-[_TtC7iMazing28DatasetToolbarViewController viewDidAppear];
-[_TtC7iMazing28DatasetToolbarViewController viewDidDisappear];
-[_TtC7iMazing28DatasetToolbarViewController viewDidLoad];
-[_TtC7iMazing28DatasetToolbarViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing28DeviceOrBackupViewController : NSViewController {
    /* instance variables */
     dataset;
     device;
     icon;
     loadFromDeviceView;
     loadFromBackupView;
     subtitle;
     loadFromDeviceTitle;
     loadFromDeviceSubtitle;
     loadFromBackupTitle;
     loadFromBackupSubtitle;
     delegate;
}

@property (T@"iOSDataset",N,&,Vdataset) dataset;
@property (T@"iOSDevice",N,&,Vdevice) device;
@property (T@"NSImage",N,&,Vicon) icon;
@property (T@"VKChoiceView",N,&,VloadFromDeviceView) loadFromDeviceView;
@property (T@"VKChoiceView",N,&,VloadFromBackupView) loadFromBackupView;
@property (T@"NSString",N,C) subtitle;
@property (T@"NSString",N,C) loadFromDeviceTitle;
@property (T@"NSString",N,C) loadFromDeviceSubtitle;
@property (T@"NSString",N,C) loadFromBackupTitle;
@property (T@"NSString",N,C) loadFromBackupSubtitle;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing28DeviceOrBackupViewController dataset];
-[_TtC7iMazing28DeviceOrBackupViewController setDataset:];
-[_TtC7iMazing28DeviceOrBackupViewController device];
-[_TtC7iMazing28DeviceOrBackupViewController setDevice:];
-[_TtC7iMazing28DeviceOrBackupViewController icon];
-[_TtC7iMazing28DeviceOrBackupViewController setIcon:];
-[_TtC7iMazing28DeviceOrBackupViewController loadFromDeviceView];
-[_TtC7iMazing28DeviceOrBackupViewController setLoadFromDeviceView:];
-[_TtC7iMazing28DeviceOrBackupViewController loadFromBackupView];
-[_TtC7iMazing28DeviceOrBackupViewController setLoadFromBackupView:];
-[_TtC7iMazing28DeviceOrBackupViewController subtitle];
-[_TtC7iMazing28DeviceOrBackupViewController setSubtitle:];
-[_TtC7iMazing28DeviceOrBackupViewController loadFromDeviceTitle];
-[_TtC7iMazing28DeviceOrBackupViewController setLoadFromDeviceTitle:];
-[_TtC7iMazing28DeviceOrBackupViewController loadFromDeviceSubtitle];
-[_TtC7iMazing28DeviceOrBackupViewController setLoadFromDeviceSubtitle:];
-[_TtC7iMazing28DeviceOrBackupViewController loadFromBackupTitle];
-[_TtC7iMazing28DeviceOrBackupViewController setLoadFromBackupTitle:];
-[_TtC7iMazing28DeviceOrBackupViewController loadFromBackupSubtitle];
-[_TtC7iMazing28DeviceOrBackupViewController setLoadFromBackupSubtitle:];
-[_TtC7iMazing28DeviceOrBackupViewController initWithDataset:device:delegate:];
-[_TtC7iMazing28DeviceOrBackupViewController initWithCoder:];
-[_TtC7iMazing28DeviceOrBackupViewController nibName];
-[_TtC7iMazing28DeviceOrBackupViewController viewDidLoad];
-[_TtC7iMazing28DeviceOrBackupViewController reset];
-[_TtC7iMazing28DeviceOrBackupViewController loadFromDevice:];
-[_TtC7iMazing28DeviceOrBackupViewController loadFromBackup:];
-[_TtC7iMazing28DeviceOrBackupViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing28DeviceSettingsViewController : NSViewController <_TtP7iMazing14IndexedElement_, VKHighlightListViewControllerDelegate, _TtP7iMazing7Savable_> {
    /* instance variables */
     item;
     indexPath;
     sidebarViewController;
     contentViewController;
     hasSaveDiscardButtons;
     saveDiscardButtonsVisibilityOnFirstTime;
     enableSaveAndDiscard;
     toolbarContainer;
     sidebarView;
     contentView;
     buttonsStackView;
     contentContainer;
     buttonsContainer;
     saveButton;
     discardButton;
     toolbar;
     contentViewObservation;
     placeholderView;
     sidebarItems;
     kind;
}

@property (T@"_TtC7iMazing10DeviceItem",N,&,Vitem) item;
@property (T@"NSIndexPath",N,C) indexPath;
@property (T@"VKHighlightListViewController",N,&,VsidebarViewController) sidebarViewController;
@property (T@"NSViewController",N,&,VcontentViewController) contentViewController;
@property (TB,N,VhasSaveDiscardButtons) hasSaveDiscardButtons;
@property (TB,N,VsaveDiscardButtonsVisibilityOnFirstTime) saveDiscardButtonsVisibilityOnFirstTime;
@property (TB,N,VenableSaveAndDiscard) enableSaveAndDiscard;
@property (T@"NSView",N,&,VtoolbarContainer) toolbarContainer;
@property (T@"NSView",N,&,VsidebarView) sidebarView;
@property (T@"NSView",N,&,VcontentView) contentView;
@property (T@"NSStackView",N,&,VbuttonsStackView) buttonsStackView;
@property (T@"NSView",N,&,VcontentContainer) contentContainer;
@property (T@"NSView",N,&,VbuttonsContainer) buttonsContainer;
@property (T@"NSButton",N,&,VsaveButton) saveButton;
@property (T@"NSButton",N,&,VdiscardButton) discardButton;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing28DeviceSettingsViewController item];
-[_TtC7iMazing28DeviceSettingsViewController setItem:];
-[_TtC7iMazing28DeviceSettingsViewController indexPath];
-[_TtC7iMazing28DeviceSettingsViewController setIndexPath:];
-[_TtC7iMazing28DeviceSettingsViewController sidebarViewController];
-[_TtC7iMazing28DeviceSettingsViewController setSidebarViewController:];
-[_TtC7iMazing28DeviceSettingsViewController contentViewController];
-[_TtC7iMazing28DeviceSettingsViewController setContentViewController:];
-[_TtC7iMazing28DeviceSettingsViewController hasSaveDiscardButtons];
-[_TtC7iMazing28DeviceSettingsViewController setHasSaveDiscardButtons:];
-[_TtC7iMazing28DeviceSettingsViewController saveDiscardButtonsVisibilityOnFirstTime];
-[_TtC7iMazing28DeviceSettingsViewController setSaveDiscardButtonsVisibilityOnFirstTime:];
-[_TtC7iMazing28DeviceSettingsViewController enableSaveAndDiscard];
-[_TtC7iMazing28DeviceSettingsViewController setEnableSaveAndDiscard:];
-[_TtC7iMazing28DeviceSettingsViewController toolbarContainer];
-[_TtC7iMazing28DeviceSettingsViewController setToolbarContainer:];
-[_TtC7iMazing28DeviceSettingsViewController sidebarView];
-[_TtC7iMazing28DeviceSettingsViewController setSidebarView:];
-[_TtC7iMazing28DeviceSettingsViewController contentView];
-[_TtC7iMazing28DeviceSettingsViewController setContentView:];
-[_TtC7iMazing28DeviceSettingsViewController buttonsStackView];
-[_TtC7iMazing28DeviceSettingsViewController setButtonsStackView:];
-[_TtC7iMazing28DeviceSettingsViewController contentContainer];
-[_TtC7iMazing28DeviceSettingsViewController setContentContainer:];
-[_TtC7iMazing28DeviceSettingsViewController buttonsContainer];
-[_TtC7iMazing28DeviceSettingsViewController setButtonsContainer:];
-[_TtC7iMazing28DeviceSettingsViewController saveButton];
-[_TtC7iMazing28DeviceSettingsViewController setSaveButton:];
-[_TtC7iMazing28DeviceSettingsViewController discardButton];
-[_TtC7iMazing28DeviceSettingsViewController setDiscardButton:];
-[_TtC7iMazing28DeviceSettingsViewController initWithCoder:];
-[_TtC7iMazing28DeviceSettingsViewController dealloc];
-[_TtC7iMazing28DeviceSettingsViewController nibName];
-[_TtC7iMazing28DeviceSettingsViewController viewDidLoad];
-[_TtC7iMazing28DeviceSettingsViewController viewDidAppear];
-[_TtC7iMazing28DeviceSettingsViewController save:];
-[_TtC7iMazing28DeviceSettingsViewController discard:];
-[_TtC7iMazing28DeviceSettingsViewController showHelp:];
-[_TtC7iMazing28DeviceSettingsViewController save];
-[_TtC7iMazing28DeviceSettingsViewController reset];
-[_TtC7iMazing28DeviceSettingsViewController canLeave];
-[_TtC7iMazing28DeviceSettingsViewController highlightListView:shouldSelectItem:];
-[_TtC7iMazing28DeviceSettingsViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing28ManageArchivesViewController : NSViewController <WizardWindowDelegate, NSTableViewDelegate, NSTableViewDataSource> {
    /* instance variables */
     wizard;
     behavior;
     device;
     provider;
     isLoading;
     showOptions;
     totalBackupSize;
     items;
     lockArchiveTooltip;
     unlockArchiveTooltip;
     moreTooltip;
     itemsObserver;
     selectedArchiveObserver;
     loadingObserver;
     deleteOperation;
     tableView;
     arrayController;
     moreMenu;
}

@property (T@"WizardWindowController",N,W,Vwizard) wizard;
@property (Tq,N,Vbehavior) behavior;
@property (T@"_TtC7iMazing10DeviceItem",N,&,Vdevice) device;
@property (T@"_TtC7iMazing21BackupHistoryProvider",N,&,Vprovider) provider;
@property (TB,N,VisLoading) isLoading;
@property (TB,N,VshowOptions) showOptions;
@property (T@"NSString",N,C) totalBackupSize;
@property (T@"NSArray",N,C) items;
@property (T@"NSString",N,C) lockArchiveTooltip;
@property (T@"NSString",N,C) unlockArchiveTooltip;
@property (T@"NSString",N,C) moreTooltip;
@property (T@"NSTableView",N,&,VtableView) tableView;
@property (T@"NSArrayController",N,&,VarrayController) arrayController;
@property (T@"NSMenu",N,&,VmoreMenu) moreMenu;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing28ManageArchivesViewController wizard];
-[_TtC7iMazing28ManageArchivesViewController setWizard:];
-[_TtC7iMazing28ManageArchivesViewController behavior];
-[_TtC7iMazing28ManageArchivesViewController setBehavior:];
-[_TtC7iMazing28ManageArchivesViewController device];
-[_TtC7iMazing28ManageArchivesViewController setDevice:];
-[_TtC7iMazing28ManageArchivesViewController provider];
-[_TtC7iMazing28ManageArchivesViewController setProvider:];
-[_TtC7iMazing28ManageArchivesViewController isLoading];
-[_TtC7iMazing28ManageArchivesViewController setIsLoading:];
-[_TtC7iMazing28ManageArchivesViewController showOptions];
-[_TtC7iMazing28ManageArchivesViewController setShowOptions:];
-[_TtC7iMazing28ManageArchivesViewController totalBackupSize];
-[_TtC7iMazing28ManageArchivesViewController setTotalBackupSize:];
-[_TtC7iMazing28ManageArchivesViewController items];
-[_TtC7iMazing28ManageArchivesViewController setItems:];
-[_TtC7iMazing28ManageArchivesViewController lockArchiveTooltip];
-[_TtC7iMazing28ManageArchivesViewController setLockArchiveTooltip:];
-[_TtC7iMazing28ManageArchivesViewController unlockArchiveTooltip];
-[_TtC7iMazing28ManageArchivesViewController setUnlockArchiveTooltip:];
-[_TtC7iMazing28ManageArchivesViewController moreTooltip];
-[_TtC7iMazing28ManageArchivesViewController setMoreTooltip:];
-[_TtC7iMazing28ManageArchivesViewController tableView];
-[_TtC7iMazing28ManageArchivesViewController setTableView:];
-[_TtC7iMazing28ManageArchivesViewController arrayController];
-[_TtC7iMazing28ManageArchivesViewController setArrayController:];
-[_TtC7iMazing28ManageArchivesViewController moreMenu];
-[_TtC7iMazing28ManageArchivesViewController setMoreMenu:];
-[_TtC7iMazing28ManageArchivesViewController initWithDevice:];
-[_TtC7iMazing28ManageArchivesViewController initWithCoder:];
-[_TtC7iMazing28ManageArchivesViewController dealloc];
-[_TtC7iMazing28ManageArchivesViewController nibName];
-[_TtC7iMazing28ManageArchivesViewController viewDidLoad];
-[_TtC7iMazing28ManageArchivesViewController didBecomeActive];
-[_TtC7iMazing28ManageArchivesViewController viewSnapshot:];
-[_TtC7iMazing28ManageArchivesViewController showOptions:];
-[_TtC7iMazing28ManageArchivesViewController lock:];
-[_TtC7iMazing28ManageArchivesViewController unlock:];
-[_TtC7iMazing28ManageArchivesViewController more:];
-[_TtC7iMazing28ManageArchivesViewController editLabel:];
-[_TtC7iMazing28ManageArchivesViewController exportAsFolder:];
-[_TtC7iMazing28ManageArchivesViewController exportAsFile:];
-[_TtC7iMazing28ManageArchivesViewController createEditableCopy:];
-[_TtC7iMazing28ManageArchivesViewController revealInFinder:];
-[_TtC7iMazing28ManageArchivesViewController restoreSelectedItem:];
-[_TtC7iMazing28ManageArchivesViewController delete:];
-[_TtC7iMazing28ManageArchivesViewController deleteSelectedItems:];
-[_TtC7iMazing28ManageArchivesViewController operationEnded:];
-[_TtC7iMazing28ManageArchivesViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing28MediaTrackListViewController : _TtC7iMazing27MediaBaseListViewController <NSTableViewDelegate, NSMenuDelegate, NSSplitViewDelegate> {
    /* instance variables */
     genres;
     artists;
     albums;
     genresController;
     artistsController;
     albumsController;
     genresTableView;
     artistsTableView;
     albumsTableView;
     filtersView;
     filtersStackView;
     splitView;
     purchasedOrAppleMusicColumn;
     genresSelectionObserver;
     artistsSelectionObserver;
     albumsSelectionObserver;
     mediaBrowserShowColumnBrowserObserver;
     mediaBrowserShowGenreObserver;
     mediaBrowserShowArtistObserver;
     mediaBrowserShowAlbumObserver;
     isUpdatingSplitView;
     columnsBrowserTimer;
     waitBeforeUpdatingColumnsBrowser;
}

@property (T@"NSArray",N,C) genres;
@property (T@"NSArray",N,C) artists;
@property (T@"NSArray",N,C) albums;
@property (T@"NSArrayController",N,&,VgenresController) genresController;
@property (T@"NSArrayController",N,&,VartistsController) artistsController;
@property (T@"NSArrayController",N,&,ValbumsController) albumsController;
@property (T@"NSTableView",N,&,VgenresTableView) genresTableView;
@property (T@"NSTableView",N,&,VartistsTableView) artistsTableView;
@property (T@"NSTableView",N,&,ValbumsTableView) albumsTableView;
@property (T@"NSView",N,&,VfiltersView) filtersView;
@property (T@"NSStackView",N,&,VfiltersStackView) filtersStackView;
@property (T@"NSSplitView",N,&,VsplitView) splitView;
@property (T@"_TtC7iMazing22MediaTracksTableColumn",N,&,VpurchasedOrAppleMusicColumn) purchasedOrAppleMusicColumn;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing28MediaTrackListViewController tableView:shouldTypeSelectForEvent:withCurrentSearchString:];
-[_TtC7iMazing28MediaTrackListViewController keyDown:];
-[_TtC7iMazing28MediaTrackListViewController menuWillOpen:];
-[_TtC7iMazing28MediaTrackListViewController splitView:constrainMaxCoordinate:ofSubviewAt:];
-[_TtC7iMazing28MediaTrackListViewController splitView:constrainMinCoordinate:ofSubviewAt:];
-[_TtC7iMazing28MediaTrackListViewController splitView:canCollapseSubview:];
-[_TtC7iMazing28MediaTrackListViewController genres];
-[_TtC7iMazing28MediaTrackListViewController setGenres:];
-[_TtC7iMazing28MediaTrackListViewController artists];
-[_TtC7iMazing28MediaTrackListViewController setArtists:];
-[_TtC7iMazing28MediaTrackListViewController albums];
-[_TtC7iMazing28MediaTrackListViewController setAlbums:];
-[_TtC7iMazing28MediaTrackListViewController genresController];
-[_TtC7iMazing28MediaTrackListViewController setGenresController:];
-[_TtC7iMazing28MediaTrackListViewController artistsController];
-[_TtC7iMazing28MediaTrackListViewController setArtistsController:];
-[_TtC7iMazing28MediaTrackListViewController albumsController];
-[_TtC7iMazing28MediaTrackListViewController setAlbumsController:];
-[_TtC7iMazing28MediaTrackListViewController genresTableView];
-[_TtC7iMazing28MediaTrackListViewController setGenresTableView:];
-[_TtC7iMazing28MediaTrackListViewController artistsTableView];
-[_TtC7iMazing28MediaTrackListViewController setArtistsTableView:];
-[_TtC7iMazing28MediaTrackListViewController albumsTableView];
-[_TtC7iMazing28MediaTrackListViewController setAlbumsTableView:];
-[_TtC7iMazing28MediaTrackListViewController filtersView];
-[_TtC7iMazing28MediaTrackListViewController setFiltersView:];
-[_TtC7iMazing28MediaTrackListViewController filtersStackView];
-[_TtC7iMazing28MediaTrackListViewController setFiltersStackView:];
-[_TtC7iMazing28MediaTrackListViewController splitView];
-[_TtC7iMazing28MediaTrackListViewController setSplitView:];
-[_TtC7iMazing28MediaTrackListViewController purchasedOrAppleMusicColumn];
-[_TtC7iMazing28MediaTrackListViewController setPurchasedOrAppleMusicColumn:];
-[_TtC7iMazing28MediaTrackListViewController initWithCoder:];
-[_TtC7iMazing28MediaTrackListViewController nibName];
-[_TtC7iMazing28MediaTrackListViewController viewDidLoad];
-[_TtC7iMazing28MediaTrackListViewController splitViewDidResize:];
-[_TtC7iMazing28MediaTrackListViewController onColumnsBrowserTimer];

@end

@interface _TtC7iMazing28MusicTrackListViewController : _TtC7iMazing28MediaTrackListViewController

/* instance methods */
-[_TtC7iMazing28MusicTrackListViewController initWithCoder:];

@end

@interface _TtC7iMazing28NoBackupScreenViewController : NSViewController {
    /* instance variables */
     loading;
     transparent;
}

@property (T@"NSString",N,R) nibName;
@property (TB,N,Vloading) loading;
@property (TB,N,Vtransparent) transparent;

/* instance methods */
-[_TtC7iMazing28NoBackupScreenViewController nibName];
-[_TtC7iMazing28NoBackupScreenViewController loading];
-[_TtC7iMazing28NoBackupScreenViewController setLoading:];
-[_TtC7iMazing28NoBackupScreenViewController transparent];
-[_TtC7iMazing28NoBackupScreenViewController setTransparent:];
-[_TtC7iMazing28NoBackupScreenViewController backupDevice:];
-[_TtC7iMazing28NoBackupScreenViewController initWithNibName:bundle:];
-[_TtC7iMazing28NoBackupScreenViewController initWithCoder:];

@end

@interface _TtC7iMazing28ProfileLibraryViewController : NSViewController <HelpURLProvider, _TtP7iMazing24PlusMinusControlDelegate_, NSMenuDelegate> {
    /* instance variables */
     _filter;
     selectionHandler;
     profilesVC;
     objCProfilesVC;
     profilesView;
     plusMenu;
     otherActionsMenu;
     createActionsMenu;
     isAwake;
     hasSelection;
     _allowedExtensions;
     _dragDropHelper;
     _needsReload;
     showSearchField;
     searchText;
}

@property (T@"NSString",N,R) nibName;
@property (T@"NSViewController",N,&,VobjCProfilesVC) objCProfilesVC;
@property (T@"NSView",N,&,VprofilesView) profilesView;
@property (T@"NSMenu",N,&,VplusMenu) plusMenu;
@property (T@"NSMenu",N,&,VotherActionsMenu) otherActionsMenu;
@property (T@"NSMenu",N,&,VcreateActionsMenu) createActionsMenu;
@property (TB,N,VhasSelection) hasSelection;
@property (TB,N,VshowSearchField) showSearchField;
@property (T@"NSString",N,C) searchText;

/* instance methods */
-[_TtC7iMazing28ProfileLibraryViewController nibName];
-[_TtC7iMazing28ProfileLibraryViewController objCProfilesVC];
-[_TtC7iMazing28ProfileLibraryViewController setObjCProfilesVC:];
-[_TtC7iMazing28ProfileLibraryViewController profilesView];
-[_TtC7iMazing28ProfileLibraryViewController setProfilesView:];
-[_TtC7iMazing28ProfileLibraryViewController plusMenu];
-[_TtC7iMazing28ProfileLibraryViewController setPlusMenu:];
-[_TtC7iMazing28ProfileLibraryViewController otherActionsMenu];
-[_TtC7iMazing28ProfileLibraryViewController setOtherActionsMenu:];
-[_TtC7iMazing28ProfileLibraryViewController createActionsMenu];
-[_TtC7iMazing28ProfileLibraryViewController setCreateActionsMenu:];
-[_TtC7iMazing28ProfileLibraryViewController hasSelection];
-[_TtC7iMazing28ProfileLibraryViewController setHasSelection:];
-[_TtC7iMazing28ProfileLibraryViewController showSearchField];
-[_TtC7iMazing28ProfileLibraryViewController setShowSearchField:];
-[_TtC7iMazing28ProfileLibraryViewController searchText];
-[_TtC7iMazing28ProfileLibraryViewController setSearchText:];
-[_TtC7iMazing28ProfileLibraryViewController initWithCoder:];
-[_TtC7iMazing28ProfileLibraryViewController initWithFilter:];
-[_TtC7iMazing28ProfileLibraryViewController awakeFromNib];
-[_TtC7iMazing28ProfileLibraryViewController dealloc];
-[_TtC7iMazing28ProfileLibraryViewController doubleClick:];
-[_TtC7iMazing28ProfileLibraryViewController onDidBecomeKey:];
-[_TtC7iMazing28ProfileLibraryViewController helpURL];
-[_TtC7iMazing28ProfileLibraryViewController createProfile:];
-[_TtC7iMazing28ProfileLibraryViewController editProfile:];
-[_TtC7iMazing28ProfileLibraryViewController importProfile:];
-[_TtC7iMazing28ProfileLibraryViewController exportProfiles:];
-[_TtC7iMazing28ProfileLibraryViewController deleteProfiles:];
-[_TtC7iMazing28ProfileLibraryViewController searchFieldDidUpdate:];
-[_TtC7iMazing28ProfileLibraryViewController plusClicked:];
-[_TtC7iMazing28ProfileLibraryViewController minusClicked:];
-[_TtC7iMazing28ProfileLibraryViewController menuWillOpen:];
-[_TtC7iMazing28ProfileLibraryViewController embedInWindowWithIsPicker:];
-[_TtC7iMazing28ProfileLibraryViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing28RegistrationDiscoverItemPair : NSObject {
    /* instance variables */
     left;
     right;
}

@property (T@"_TtC7iMazing24RegistrationDiscoverItem",N,&,Vleft) left;
@property (T@"_TtC7iMazing24RegistrationDiscoverItem",N,&,Vright) right;

/* instance methods */
-[_TtC7iMazing28RegistrationDiscoverItemPair left];
-[_TtC7iMazing28RegistrationDiscoverItemPair setLeft:];
-[_TtC7iMazing28RegistrationDiscoverItemPair right];
-[_TtC7iMazing28RegistrationDiscoverItemPair setRight:];
-[_TtC7iMazing28RegistrationDiscoverItemPair init];

@end

@interface _TtC7iMazing28RegistrationLinkedDeviceItem : NSObject {
    /* instance variables */
     title;
     subtitle;
     iMazingDeviceID;
     model;
     osVersion;
     deviceClass;
     icon;
     udid;
     name;
     serialNumber;
     lastConnectionTime;
     lastBackupTime;
     info;
     deviceItem;
}

@property (T@"NSString",N,C) title;
@property (T@"NSString",N,C) subtitle;
@property (T@"NSString",N,C) iMazingDeviceID;
@property (T@"NSString",N,C) model;
@property (T@"NSString",N,C) osVersion;
@property (T@"NSString",N,C) deviceClass;
@property (T@"NSImage",N,&,Vicon) icon;
@property (T@"NSString",N,C) udid;
@property (T@"NSString",N,C) name;
@property (T@"NSString",N,C) serialNumber;
@property (T@"NSDate",N,C) lastConnectionTime;
@property (T@"NSDate",N,C) lastBackupTime;
@property (T@"NSDictionary",N,C) info;
@property (T@"_TtC7iMazing10DeviceItem",N,&,VdeviceItem) deviceItem;

/* instance methods */
-[_TtC7iMazing28RegistrationLinkedDeviceItem title];
-[_TtC7iMazing28RegistrationLinkedDeviceItem setTitle:];
-[_TtC7iMazing28RegistrationLinkedDeviceItem subtitle];
-[_TtC7iMazing28RegistrationLinkedDeviceItem setSubtitle:];
-[_TtC7iMazing28RegistrationLinkedDeviceItem iMazingDeviceID];
-[_TtC7iMazing28RegistrationLinkedDeviceItem setIMazingDeviceID:];
-[_TtC7iMazing28RegistrationLinkedDeviceItem model];
-[_TtC7iMazing28RegistrationLinkedDeviceItem setModel:];
-[_TtC7iMazing28RegistrationLinkedDeviceItem osVersion];
-[_TtC7iMazing28RegistrationLinkedDeviceItem setOsVersion:];
-[_TtC7iMazing28RegistrationLinkedDeviceItem deviceClass];
-[_TtC7iMazing28RegistrationLinkedDeviceItem setDeviceClass:];
-[_TtC7iMazing28RegistrationLinkedDeviceItem icon];
-[_TtC7iMazing28RegistrationLinkedDeviceItem setIcon:];
-[_TtC7iMazing28RegistrationLinkedDeviceItem udid];
-[_TtC7iMazing28RegistrationLinkedDeviceItem setUdid:];
-[_TtC7iMazing28RegistrationLinkedDeviceItem name];
-[_TtC7iMazing28RegistrationLinkedDeviceItem setName:];
-[_TtC7iMazing28RegistrationLinkedDeviceItem serialNumber];
-[_TtC7iMazing28RegistrationLinkedDeviceItem setSerialNumber:];
-[_TtC7iMazing28RegistrationLinkedDeviceItem lastConnectionTime];
-[_TtC7iMazing28RegistrationLinkedDeviceItem setLastConnectionTime:];
-[_TtC7iMazing28RegistrationLinkedDeviceItem lastBackupTime];
-[_TtC7iMazing28RegistrationLinkedDeviceItem setLastBackupTime:];
-[_TtC7iMazing28RegistrationLinkedDeviceItem info];
-[_TtC7iMazing28RegistrationLinkedDeviceItem setInfo:];
-[_TtC7iMazing28RegistrationLinkedDeviceItem deviceItem];
-[_TtC7iMazing28RegistrationLinkedDeviceItem setDeviceItem:];
-[_TtC7iMazing28RegistrationLinkedDeviceItem init];

@end

@interface _TtC7iMazing28RegistrationWindowBottomView : NSView

/* instance methods */
-[_TtC7iMazing28RegistrationWindowBottomView drawRect:];
-[_TtC7iMazing28RegistrationWindowBottomView initWithFrame:];
-[_TtC7iMazing28RegistrationWindowBottomView initWithCoder:];

@end

@interface _TtC7iMazing28RegistrationWindowController : NSWindowController {
    /* instance variables */
     registrationViewController;
     activeLevel;
     removeLicenseFile;
     promoService;
     promoWindowController;
}

/* class methods */
+[_TtC7iMazing28RegistrationWindowController shared];

/* instance methods */
-[_TtC7iMazing28RegistrationWindowController init];
-[_TtC7iMazing28RegistrationWindowController applicationDidBecomeActive:];
-[_TtC7iMazing28RegistrationWindowController applicationDidResignActive:];
-[_TtC7iMazing28RegistrationWindowController willShowAlertBox:];
-[_TtC7iMazing28RegistrationWindowController didShowAlertBox:];
-[_TtC7iMazing28RegistrationWindowController windowDidLoad];
-[_TtC7iMazing28RegistrationWindowController windowWillClose:];
-[_TtC7iMazing28RegistrationWindowController show];
-[_TtC7iMazing28RegistrationWindowController showWithController:];
-[_TtC7iMazing28RegistrationWindowController showWelcomeScreen];
-[_TtC7iMazing28RegistrationWindowController showWelcomeScreenWithCustomMessage:];
-[_TtC7iMazing28RegistrationWindowController showEnterLicenseScreen];
-[_TtC7iMazing28RegistrationWindowController showEnterLicenseScreenWithCustomMessage:];
-[_TtC7iMazing28RegistrationWindowController showStoreScreen];
-[_TtC7iMazing28RegistrationWindowController handleActivationURL:];
-[_TtC7iMazing28RegistrationWindowController openLostLicensePageInBrowser];
-[_TtC7iMazing28RegistrationWindowController initWithWindow:];
-[_TtC7iMazing28RegistrationWindowController initWithCoder:];

@end

@interface _TtC7iMazing28ShortcutWidgetViewController : NSViewController <NSCollectionViewDataSource, NSCollectionViewDelegate> {
    /* instance variables */
     item;
     frameObserver;
     superViewObserver;
     datasetObserver;
     selectionObserver;
     showDataset;
     moreControllers;
     datasets;
     collectionView;
     searchText;
}

@property (T@"_TtC7iMazing10DeviceItem",N,R,Vitem) item;
@property (T@"NSArrayController",N,&,Vdatasets) datasets;
@property (T@"NSCollectionView",N,&,VcollectionView) collectionView;
@property (T@"NSString",N,C) searchText;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing28ShortcutWidgetViewController item];
-[_TtC7iMazing28ShortcutWidgetViewController datasets];
-[_TtC7iMazing28ShortcutWidgetViewController setDatasets:];
-[_TtC7iMazing28ShortcutWidgetViewController collectionView];
-[_TtC7iMazing28ShortcutWidgetViewController setCollectionView:];
-[_TtC7iMazing28ShortcutWidgetViewController searchText];
-[_TtC7iMazing28ShortcutWidgetViewController setSearchText:];
-[_TtC7iMazing28ShortcutWidgetViewController initWithItem:showDataset:];
-[_TtC7iMazing28ShortcutWidgetViewController initWithCoder:];
-[_TtC7iMazing28ShortcutWidgetViewController nibName];
-[_TtC7iMazing28ShortcutWidgetViewController viewDidLoad];
-[_TtC7iMazing28ShortcutWidgetViewController numberOfSectionsInCollectionView:];
-[_TtC7iMazing28ShortcutWidgetViewController collectionView:numberOfItemsInSection:];
-[_TtC7iMazing28ShortcutWidgetViewController collectionView:itemForRepresentedObjectAtIndexPath:];
-[_TtC7iMazing28ShortcutWidgetViewController collectionView:didSelectItemsAtIndexPaths:];
-[_TtC7iMazing28ShortcutWidgetViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing28ShowDeviceItemViewController : NSViewController {
    /* instance variables */
     item;
     connectionObserver;
}

@property (T@"_TtC7iMazing14ShowDeviceItem",N,&,Vitem) item;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing28ShowDeviceItemViewController item];
-[_TtC7iMazing28ShowDeviceItemViewController setItem:];
-[_TtC7iMazing28ShowDeviceItemViewController initWithItem:];
-[_TtC7iMazing28ShowDeviceItemViewController initWithCoder:];
-[_TtC7iMazing28ShowDeviceItemViewController nibName];
-[_TtC7iMazing28ShowDeviceItemViewController viewDidLoad];
-[_TtC7iMazing28ShowDeviceItemViewController cancel:];
-[_TtC7iMazing28ShowDeviceItemViewController show:];
-[_TtC7iMazing28ShowDeviceItemViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing28WhatsAppMessageTableCellView : NSTableCellView {
    /* instance variables */
     cachedPlayerView;
     cachedMapView;
     cachedMediaImageView;
     cachedMediaTypeImageView;
     cachedProfileImageView;
     cachedSenderTextField;
     cachedMediaInfoTextField;
     cachedContactNameTextField;
     cachedStatusImageView;
     cachedDateTextField;
     cachedReplyToTextField;
}

/* instance methods */
-[_TtC7iMazing28WhatsAppMessageTableCellView playerView];
-[_TtC7iMazing28WhatsAppMessageTableCellView mapView];
-[_TtC7iMazing28WhatsAppMessageTableCellView mediaImageView];
-[_TtC7iMazing28WhatsAppMessageTableCellView mediaTypeImageView];
-[_TtC7iMazing28WhatsAppMessageTableCellView profileImageView];
-[_TtC7iMazing28WhatsAppMessageTableCellView senderTextField];
-[_TtC7iMazing28WhatsAppMessageTableCellView mediaInfoTextField];
-[_TtC7iMazing28WhatsAppMessageTableCellView contactNameTextField];
-[_TtC7iMazing28WhatsAppMessageTableCellView statusImageView];
-[_TtC7iMazing28WhatsAppMessageTableCellView dateTextField];
-[_TtC7iMazing28WhatsAppMessageTableCellView replyToTextField];
-[_TtC7iMazing28WhatsAppMessageTableCellView initWithFrame:];
-[_TtC7iMazing28WhatsAppMessageTableCellView initWithCoder:];

@end

@interface _TtC7iMazing28WhatsAppSessionTableCellView : NSTableCellView {
    /* instance variables */
     cachedStatusStackView;
     cachedMediaTypeImageView;
     cachedMediaTypeSeparatorView;
     cachedStatusImageView;
     cachedStatusSeparatorView;
     cachedIsArchivedView;
     cachedIsArchivedSeparatorView;
     cachedIsLockedView;
     cachedIsLockedSeparatorView;
     cachedUnreadCountView;
     cachedUnreadCountSeparatorView;
}

/* instance methods */
-[_TtC7iMazing28WhatsAppSessionTableCellView statusStackView];
-[_TtC7iMazing28WhatsAppSessionTableCellView mediaTypeImageView];
-[_TtC7iMazing28WhatsAppSessionTableCellView mediaTypeSeparatorView];
-[_TtC7iMazing28WhatsAppSessionTableCellView statusImageView];
-[_TtC7iMazing28WhatsAppSessionTableCellView statusSeparatorView];
-[_TtC7iMazing28WhatsAppSessionTableCellView isArchivedView];
-[_TtC7iMazing28WhatsAppSessionTableCellView isArchivedSeparatorView];
-[_TtC7iMazing28WhatsAppSessionTableCellView isLockedView];
-[_TtC7iMazing28WhatsAppSessionTableCellView isLockedSeparatorView];
-[_TtC7iMazing28WhatsAppSessionTableCellView unreadCountView];
-[_TtC7iMazing28WhatsAppSessionTableCellView unreadCountSeparatorView];
-[_TtC7iMazing28WhatsAppSessionTableCellView initWithFrame:];
-[_TtC7iMazing28WhatsAppSessionTableCellView initWithCoder:];

@end

@interface _TtC7iMazing29AudioBooksAlbumViewController : _TtC7iMazing24MediaAlbumViewController

/* instance methods */
-[_TtC7iMazing29AudioBooksAlbumViewController initWithCoder:];

@end

@interface _TtC7iMazing29DiskUsageWidgetViewController : NSViewController {
    /* instance variables */
     item;
     dataBarView;
     stackView;
     observer;
     appearanceObserver;
     controllers;
}

@property (T@"_TtC7iMazing10DeviceItem",N,R,Vitem) item;
@property (T@"VKDataBarView",N,&,VdataBarView) dataBarView;
@property (T@"NSStackView",N,&,VstackView) stackView;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing29DiskUsageWidgetViewController item];
-[_TtC7iMazing29DiskUsageWidgetViewController dataBarView];
-[_TtC7iMazing29DiskUsageWidgetViewController setDataBarView:];
-[_TtC7iMazing29DiskUsageWidgetViewController stackView];
-[_TtC7iMazing29DiskUsageWidgetViewController setStackView:];
-[_TtC7iMazing29DiskUsageWidgetViewController initWithCoder:];
-[_TtC7iMazing29DiskUsageWidgetViewController nibName];
-[_TtC7iMazing29DiskUsageWidgetViewController viewDidLoad];
-[_TtC7iMazing29DiskUsageWidgetViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing29GenericListViewControllerBase : NSViewController {
    /* instance variables */
     arrayController;
     tableView;
}

@property (T@"NSArrayController",N,&,VarrayController) arrayController;
@property (T@"NSTableView",N,&,VtableView) tableView;

/* instance methods */
-[_TtC7iMazing29GenericListViewControllerBase arrayController];
-[_TtC7iMazing29GenericListViewControllerBase setArrayController:];
-[_TtC7iMazing29GenericListViewControllerBase tableView];
-[_TtC7iMazing29GenericListViewControllerBase setTableView:];
-[_TtC7iMazing29GenericListViewControllerBase checkboxClicked:];
-[_TtC7iMazing29GenericListViewControllerBase initWithNibName:bundle:];
-[_TtC7iMazing29GenericListViewControllerBase initWithCoder:];

@end

@interface _TtC7iMazing29HomeBackupsIconViewController : _TtC7iMazing26HomeIconBaseViewController <NSCollectionViewDataSource, NSCollectionViewDelegateFlowLayout> {
    /* instance variables */
     arrangedObjectsObserver;
     sortedGroups;
     itemsBygroups;
}

@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing29HomeBackupsIconViewController initWithCoder:];
-[_TtC7iMazing29HomeBackupsIconViewController nibName];
-[_TtC7iMazing29HomeBackupsIconViewController viewDidLoad];
-[_TtC7iMazing29HomeBackupsIconViewController collectionView:numberOfItemsInSection:];
-[_TtC7iMazing29HomeBackupsIconViewController collectionView:itemForRepresentedObjectAtIndexPath:];
-[_TtC7iMazing29HomeBackupsIconViewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:];
-[_TtC7iMazing29HomeBackupsIconViewController numberOfSectionsInCollectionView:];
-[_TtC7iMazing29HomeBackupsIconViewController collectionView:layout:referenceSizeForHeaderInSection:];
-[_TtC7iMazing29HomeBackupsIconViewController collectionView:layout:referenceSizeForFooterInSection:];

@end

@interface _TtC7iMazing29HomeBackupsIconViewItemFooter : NSView

/* instance methods */
-[_TtC7iMazing29HomeBackupsIconViewItemFooter initWithFrame:];
-[_TtC7iMazing29HomeBackupsIconViewItemFooter initWithCoder:];

@end

@interface _TtC7iMazing29HomeBackupsIconViewItemHeader : NSView {
    /* instance variables */
     title;
}

@property (T@"VKTextField",N,&,Vtitle) title;

/* instance methods */
-[_TtC7iMazing29HomeBackupsIconViewItemHeader title];
-[_TtC7iMazing29HomeBackupsIconViewItemHeader setTitle:];
-[_TtC7iMazing29HomeBackupsIconViewItemHeader initWithFrame:];
-[_TtC7iMazing29HomeBackupsIconViewItemHeader initWithCoder:];

@end

@interface _TtC7iMazing29HomeBackupsListViewController : _TtC7iMazing26HomeListBaseViewController {
    /* instance variables */
     encryptionTooltipLabel;
}

@property (T@"NSString",N,C) encryptionTooltipLabel;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing29HomeBackupsListViewController encryptionTooltipLabel];
-[_TtC7iMazing29HomeBackupsListViewController setEncryptionTooltipLabel:];
-[_TtC7iMazing29HomeBackupsListViewController nibName];
-[_TtC7iMazing29HomeBackupsListViewController initWithCoder:];

@end

@interface _TtC7iMazing29HomeDevicesBaseViewController : NSViewController <_TtP7iMazing14IndexedElement_, NSMenuDelegate> {
    /* instance variables */
     singleSelectedItemLabel;
     multipleSelectedItemsLabel;
     devices;
     hasDevices;
     toolbar;
     homeViewTypeIndexObserver;
     listViewController;
     iconViewController;
     containerView;
     toolbarContainer;
     toolbarRightButtons;
     toolbarLeftButtons;
     iconViewSortingMenu;
     hasSelectedDevices;
     selectedDevicesText;
     indexPath;
     iconViewsorting;
     options;
     onSelect;
     contentObserver;
}

@property (TB,N,VhasDevices) hasDevices;
@property (T@"NSViewController",N,&,VlistViewController) listViewController;
@property (T@"NSViewController",N,&,ViconViewController) iconViewController;
@property (T@"NSView",N,&,VcontainerView) containerView;
@property (T@"NSView",N,&,VtoolbarContainer) toolbarContainer;
@property (T@"NSView",N,&,VtoolbarRightButtons) toolbarRightButtons;
@property (T@"NSView",N,&,VtoolbarLeftButtons) toolbarLeftButtons;
@property (T@"NSMenu",N,&,ViconViewSortingMenu) iconViewSortingMenu;
@property (TB,N,VhasSelectedDevices) hasSelectedDevices;
@property (T@"NSString",N,C) selectedDevicesText;
@property (T@"NSIndexPath",N,C) indexPath;
@property (Tq,N,ViconViewsorting) iconViewsorting;

/* instance methods */
-[_TtC7iMazing29HomeDevicesBaseViewController hasDevices];
-[_TtC7iMazing29HomeDevicesBaseViewController setHasDevices:];
-[_TtC7iMazing29HomeDevicesBaseViewController listViewController];
-[_TtC7iMazing29HomeDevicesBaseViewController setListViewController:];
-[_TtC7iMazing29HomeDevicesBaseViewController iconViewController];
-[_TtC7iMazing29HomeDevicesBaseViewController setIconViewController:];
-[_TtC7iMazing29HomeDevicesBaseViewController containerView];
-[_TtC7iMazing29HomeDevicesBaseViewController setContainerView:];
-[_TtC7iMazing29HomeDevicesBaseViewController toolbarContainer];
-[_TtC7iMazing29HomeDevicesBaseViewController setToolbarContainer:];
-[_TtC7iMazing29HomeDevicesBaseViewController toolbarRightButtons];
-[_TtC7iMazing29HomeDevicesBaseViewController setToolbarRightButtons:];
-[_TtC7iMazing29HomeDevicesBaseViewController toolbarLeftButtons];
-[_TtC7iMazing29HomeDevicesBaseViewController setToolbarLeftButtons:];
-[_TtC7iMazing29HomeDevicesBaseViewController iconViewSortingMenu];
-[_TtC7iMazing29HomeDevicesBaseViewController setIconViewSortingMenu:];
-[_TtC7iMazing29HomeDevicesBaseViewController hasSelectedDevices];
-[_TtC7iMazing29HomeDevicesBaseViewController setHasSelectedDevices:];
-[_TtC7iMazing29HomeDevicesBaseViewController selectedDevicesText];
-[_TtC7iMazing29HomeDevicesBaseViewController setSelectedDevicesText:];
-[_TtC7iMazing29HomeDevicesBaseViewController indexPath];
-[_TtC7iMazing29HomeDevicesBaseViewController setIndexPath:];
-[_TtC7iMazing29HomeDevicesBaseViewController iconViewsorting];
-[_TtC7iMazing29HomeDevicesBaseViewController setIconViewsorting:];
-[_TtC7iMazing29HomeDevicesBaseViewController initWithCoder:];
-[_TtC7iMazing29HomeDevicesBaseViewController dealloc];
-[_TtC7iMazing29HomeDevicesBaseViewController viewDidLoad];
-[_TtC7iMazing29HomeDevicesBaseViewController viewDidAppear];
-[_TtC7iMazing29HomeDevicesBaseViewController observeValueForKeyPath:ofObject:change:context:];
-[_TtC7iMazing29HomeDevicesBaseViewController showSortingMenu:];
-[_TtC7iMazing29HomeDevicesBaseViewController changeSorting:];
-[_TtC7iMazing29HomeDevicesBaseViewController menuWillOpen:];
-[_TtC7iMazing29HomeDevicesBaseViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing29HomeDevicesIconViewController : _TtC7iMazing26HomeIconBaseViewController <NSCollectionViewDataSource> {
    /* instance variables */
     lastSelectedRowIndex;
}

@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing29HomeDevicesIconViewController viewDidLoad];
-[_TtC7iMazing29HomeDevicesIconViewController nibName];
-[_TtC7iMazing29HomeDevicesIconViewController collectionView:numberOfItemsInSection:];
-[_TtC7iMazing29HomeDevicesIconViewController collectionView:itemForRepresentedObjectAtIndexPath:];
-[_TtC7iMazing29HomeDevicesIconViewController initWithCoder:];

@end

@interface _TtC7iMazing29HomeDevicesListViewController : _TtC7iMazing26HomeListBaseViewController <NSTableViewDataSource>

@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing29HomeDevicesListViewController nibName];
-[_TtC7iMazing29HomeDevicesListViewController tableView:validateDrop:proposedRow:proposedDropOperation:];
-[_TtC7iMazing29HomeDevicesListViewController tableView:acceptDrop:row:dropOperation:];
-[_TtC7iMazing29HomeDevicesListViewController initWithCoder:];

@end

@interface _TtC7iMazing29HomeDiscoverAppViewController : NSViewController {
    /* instance variables */
     text;
     icon;
     action;
     animationView;
     highlightView;
}

@property (T@"NSString",N,C) text;
@property (T@"NSImage",N,&,Vicon) icon;
@property (T@?,N,C) action;
@property (T@"NSView",N,&,VanimationView) animationView;
@property (T@"VKHighlightView",N,&,VhighlightView) highlightView;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing29HomeDiscoverAppViewController text];
-[_TtC7iMazing29HomeDiscoverAppViewController setText:];
-[_TtC7iMazing29HomeDiscoverAppViewController icon];
-[_TtC7iMazing29HomeDiscoverAppViewController setIcon:];
-[_TtC7iMazing29HomeDiscoverAppViewController action];
-[_TtC7iMazing29HomeDiscoverAppViewController setAction:];
-[_TtC7iMazing29HomeDiscoverAppViewController animationView];
-[_TtC7iMazing29HomeDiscoverAppViewController setAnimationView:];
-[_TtC7iMazing29HomeDiscoverAppViewController highlightView];
-[_TtC7iMazing29HomeDiscoverAppViewController setHighlightView:];
-[_TtC7iMazing29HomeDiscoverAppViewController initWithTitle:text:icon:action:];
-[_TtC7iMazing29HomeDiscoverAppViewController initWithCoder:];
-[_TtC7iMazing29HomeDiscoverAppViewController nibName];
-[_TtC7iMazing29HomeDiscoverAppViewController viewDidLoad];
-[_TtC7iMazing29HomeDiscoverAppViewController launch:];
-[_TtC7iMazing29HomeDiscoverAppViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing29ITunesControlWindowController : NSWindowController <NSWindowDelegate> {
    /* instance variables */
     openSettingsButton;
}

@property (T@"NSButton",N,&,VopenSettingsButton) openSettingsButton;
@property (T@"NSString",N,R) windowNibName;

/* instance methods */
-[_TtC7iMazing29ITunesControlWindowController openSettingsButton];
-[_TtC7iMazing29ITunesControlWindowController setOpenSettingsButton:];
-[_TtC7iMazing29ITunesControlWindowController windowNibName];
-[_TtC7iMazing29ITunesControlWindowController windowDidLoad];
-[_TtC7iMazing29ITunesControlWindowController openPrivacySettings:];
-[_TtC7iMazing29ITunesControlWindowController restart:];
-[_TtC7iMazing29ITunesControlWindowController close:];
-[_TtC7iMazing29ITunesControlWindowController initWithWindow:];
-[_TtC7iMazing29ITunesControlWindowController initWithCoder:];

@end

@interface _TtC7iMazing29LibraryWizardWindowController : WizardWindowController

/* instance methods */
-[_TtC7iMazing29LibraryWizardWindowController initWithSelectedSection:];
-[_TtC7iMazing29LibraryWizardWindowController initWithCoder:];
-[_TtC7iMazing29LibraryWizardWindowController initWithTitle:device:requiresConnection:];

@end

@interface _TtC7iMazing29MediaSidebarEditableTextField : NSTextField {
    /* instance variables */
     textBeforeEditing;
}

/* instance methods */
-[_TtC7iMazing29MediaSidebarEditableTextField textDidBeginEditing:];
-[_TtC7iMazing29MediaSidebarEditableTextField textDidEndEditing:];
-[_TtC7iMazing29MediaSidebarEditableTextField performKeyEquivalent:];
-[_TtC7iMazing29MediaSidebarEditableTextField initWithFrame:];
-[_TtC7iMazing29MediaSidebarEditableTextField initWithCoder:];

@end

@interface _TtC7iMazing29MessagesPrintWindowController : NSWindowController <NSTextFieldDelegate> {
    /* instance variables */
     isMultipleSession;
     isPrintOperation;
     showPrintStackView;
     showPrinter;
     selectedPrinterModel;
     orientationSelectedTag;
     organizationUUID;
     exportSelectedItems;
     scale;
     messageClickedRow;
     sessionClickedRow;
     topMarginTextField;
     bottomMarginTextField;
     leftMarginTextField;
     rightMarginTextField;
     scaleTextField;
     paperSizeLabel;
     exportOneFileButton;
     exportSeparatedFilesButton;
     exportAllButton;
     exportSelectedButton;
     addChatSession;
     addPageNumber;
     addMetadata;
     defaultsButton;
     printersPopUpButton;
     papersController;
     orgsPopupButton;
     okButton;
     printOrExportOnlySelectedLabel;
     printOrExportAllLabel;
     currentPapers;
     signingOrganization;
     orgWc;
     pmServer;
     defaultPrinter;
     genericPrinter;
     selectedPrinterMenuItem;
     orientation;
     updateTimer;
     printers;
     isCurrentSystemMetric;
     isEditingMargins;
     textFieldBeforeEditing;
     currentPaperName;
     currentPrinterName;
}

@property (TB,N,VisMultipleSession) isMultipleSession;
@property (TB,N,VisPrintOperation) isPrintOperation;
@property (TB,N,VshowPrintStackView) showPrintStackView;
@property (TB,N,VshowPrinter) showPrinter;
@property (T@"NSString",N,C) selectedPrinterModel;
@property (Tq,N,VorientationSelectedTag) orientationSelectedTag;
@property (T@"NSString",N,C) organizationUUID;
@property (T@"NSTextField",N,&,VtopMarginTextField) topMarginTextField;
@property (T@"NSTextField",N,&,VbottomMarginTextField) bottomMarginTextField;
@property (T@"NSTextField",N,&,VleftMarginTextField) leftMarginTextField;
@property (T@"NSTextField",N,&,VrightMarginTextField) rightMarginTextField;
@property (T@"NSTextField",N,&,VscaleTextField) scaleTextField;
@property (T@"NSTextField",N,&,VpaperSizeLabel) paperSizeLabel;
@property (T@"NSButton",N,&,VexportOneFileButton) exportOneFileButton;
@property (T@"NSButton",N,&,VexportSeparatedFilesButton) exportSeparatedFilesButton;
@property (T@"NSButton",N,&,VexportAllButton) exportAllButton;
@property (T@"NSButton",N,&,VexportSelectedButton) exportSelectedButton;
@property (T@"NSButton",N,&,VaddChatSession) addChatSession;
@property (T@"NSButton",N,&,VaddPageNumber) addPageNumber;
@property (T@"NSButton",N,&,VaddMetadata) addMetadata;
@property (T@"NSButton",N,&,VdefaultsButton) defaultsButton;
@property (T@"NSPopUpButton",N,&,VprintersPopUpButton) printersPopUpButton;
@property (T@"NSArrayController",N,&,VpapersController) papersController;
@property (T@"_TtC7iMazing17ChoosePopupButton",N,&,VorgsPopupButton) orgsPopupButton;
@property (T@"NSString",N,C) okButton;
@property (T@"NSString",N,C) printOrExportOnlySelectedLabel;
@property (T@"NSString",N,C) printOrExportAllLabel;
@property (T@"NSArray",N,C) currentPapers;
@property (T@"Organization",N,&,VsigningOrganization) signingOrganization;
@property (T@"NSString",N,R) windowNibName;

/* instance methods */
-[_TtC7iMazing29MessagesPrintWindowController isMultipleSession];
-[_TtC7iMazing29MessagesPrintWindowController setIsMultipleSession:];
-[_TtC7iMazing29MessagesPrintWindowController isPrintOperation];
-[_TtC7iMazing29MessagesPrintWindowController setIsPrintOperation:];
-[_TtC7iMazing29MessagesPrintWindowController showPrintStackView];
-[_TtC7iMazing29MessagesPrintWindowController setShowPrintStackView:];
-[_TtC7iMazing29MessagesPrintWindowController showPrinter];
-[_TtC7iMazing29MessagesPrintWindowController setShowPrinter:];
-[_TtC7iMazing29MessagesPrintWindowController selectedPrinterModel];
-[_TtC7iMazing29MessagesPrintWindowController setSelectedPrinterModel:];
-[_TtC7iMazing29MessagesPrintWindowController orientationSelectedTag];
-[_TtC7iMazing29MessagesPrintWindowController setOrientationSelectedTag:];
-[_TtC7iMazing29MessagesPrintWindowController organizationUUID];
-[_TtC7iMazing29MessagesPrintWindowController setOrganizationUUID:];
-[_TtC7iMazing29MessagesPrintWindowController topMarginTextField];
-[_TtC7iMazing29MessagesPrintWindowController setTopMarginTextField:];
-[_TtC7iMazing29MessagesPrintWindowController bottomMarginTextField];
-[_TtC7iMazing29MessagesPrintWindowController setBottomMarginTextField:];
-[_TtC7iMazing29MessagesPrintWindowController leftMarginTextField];
-[_TtC7iMazing29MessagesPrintWindowController setLeftMarginTextField:];
-[_TtC7iMazing29MessagesPrintWindowController rightMarginTextField];
-[_TtC7iMazing29MessagesPrintWindowController setRightMarginTextField:];
-[_TtC7iMazing29MessagesPrintWindowController scaleTextField];
-[_TtC7iMazing29MessagesPrintWindowController setScaleTextField:];
-[_TtC7iMazing29MessagesPrintWindowController paperSizeLabel];
-[_TtC7iMazing29MessagesPrintWindowController setPaperSizeLabel:];
-[_TtC7iMazing29MessagesPrintWindowController exportOneFileButton];
-[_TtC7iMazing29MessagesPrintWindowController setExportOneFileButton:];
-[_TtC7iMazing29MessagesPrintWindowController exportSeparatedFilesButton];
-[_TtC7iMazing29MessagesPrintWindowController setExportSeparatedFilesButton:];
-[_TtC7iMazing29MessagesPrintWindowController exportAllButton];
-[_TtC7iMazing29MessagesPrintWindowController setExportAllButton:];
-[_TtC7iMazing29MessagesPrintWindowController exportSelectedButton];
-[_TtC7iMazing29MessagesPrintWindowController setExportSelectedButton:];
-[_TtC7iMazing29MessagesPrintWindowController addChatSession];
-[_TtC7iMazing29MessagesPrintWindowController setAddChatSession:];
-[_TtC7iMazing29MessagesPrintWindowController addPageNumber];
-[_TtC7iMazing29MessagesPrintWindowController setAddPageNumber:];
-[_TtC7iMazing29MessagesPrintWindowController addMetadata];
-[_TtC7iMazing29MessagesPrintWindowController setAddMetadata:];
-[_TtC7iMazing29MessagesPrintWindowController defaultsButton];
-[_TtC7iMazing29MessagesPrintWindowController setDefaultsButton:];
-[_TtC7iMazing29MessagesPrintWindowController printersPopUpButton];
-[_TtC7iMazing29MessagesPrintWindowController setPrintersPopUpButton:];
-[_TtC7iMazing29MessagesPrintWindowController papersController];
-[_TtC7iMazing29MessagesPrintWindowController setPapersController:];
-[_TtC7iMazing29MessagesPrintWindowController orgsPopupButton];
-[_TtC7iMazing29MessagesPrintWindowController setOrgsPopupButton:];
-[_TtC7iMazing29MessagesPrintWindowController okButton];
-[_TtC7iMazing29MessagesPrintWindowController setOkButton:];
-[_TtC7iMazing29MessagesPrintWindowController printOrExportOnlySelectedLabel];
-[_TtC7iMazing29MessagesPrintWindowController setPrintOrExportOnlySelectedLabel:];
-[_TtC7iMazing29MessagesPrintWindowController printOrExportAllLabel];
-[_TtC7iMazing29MessagesPrintWindowController setPrintOrExportAllLabel:];
-[_TtC7iMazing29MessagesPrintWindowController currentPapers];
-[_TtC7iMazing29MessagesPrintWindowController setCurrentPapers:];
-[_TtC7iMazing29MessagesPrintWindowController signingOrganization];
-[_TtC7iMazing29MessagesPrintWindowController setSigningOrganization:];
-[_TtC7iMazing29MessagesPrintWindowController windowNibName];
-[_TtC7iMazing29MessagesPrintWindowController windowDidLoad];
-[_TtC7iMazing29MessagesPrintWindowController resetWithIsMultipleSession:exportSelectedItems:isPrintOperation:sessionClickedRow:messageClickedRow:showExportSelected:isDateRangeFiltered:];
-[_TtC7iMazing29MessagesPrintWindowController onTimer];
-[_TtC7iMazing29MessagesPrintWindowController isExportAllSelected];
-[_TtC7iMazing29MessagesPrintWindowController isMergeIntoSingleFile];
-[_TtC7iMazing29MessagesPrintWindowController control:textShouldBeginEditing:];
-[_TtC7iMazing29MessagesPrintWindowController control:textShouldEndEditing:];
-[_TtC7iMazing29MessagesPrintWindowController printerChanged:];
-[_TtC7iMazing29MessagesPrintWindowController paperChanged:];
-[_TtC7iMazing29MessagesPrintWindowController orientationChanged:];
-[_TtC7iMazing29MessagesPrintWindowController exportMessagesChanged:];
-[_TtC7iMazing29MessagesPrintWindowController exportFileChanged:];
-[_TtC7iMazing29MessagesPrintWindowController optionChanged:];
-[_TtC7iMazing29MessagesPrintWindowController defaultClicked:];
-[_TtC7iMazing29MessagesPrintWindowController cancelClicked:];
-[_TtC7iMazing29MessagesPrintWindowController nextClicked:];
-[_TtC7iMazing29MessagesPrintWindowController getCurrentPaperSettings];
-[_TtC7iMazing29MessagesPrintWindowController showSupervisionIdentity:];
-[_TtC7iMazing29MessagesPrintWindowController initWithWindow:];
-[_TtC7iMazing29MessagesPrintWindowController initWithCoder:];

@end

@interface _TtC7iMazing29MojavePrivacyWindowController : NSWindowController <NSWindowDelegate> {
    /* instance variables */
     imageView;
     openSettingsButton;
     text;
}

@property (T@"_TtC7iMazing13DragImageView",N,&,VimageView) imageView;
@property (T@"NSButton",N,&,VopenSettingsButton) openSettingsButton;
@property (T@,N,C) text;
@property (T@"NSString",N,R) windowNibName;

/* instance methods */
-[_TtC7iMazing29MojavePrivacyWindowController imageView];
-[_TtC7iMazing29MojavePrivacyWindowController setImageView:];
-[_TtC7iMazing29MojavePrivacyWindowController openSettingsButton];
-[_TtC7iMazing29MojavePrivacyWindowController setOpenSettingsButton:];
-[_TtC7iMazing29MojavePrivacyWindowController text];
-[_TtC7iMazing29MojavePrivacyWindowController setText:];
-[_TtC7iMazing29MojavePrivacyWindowController windowNibName];
-[_TtC7iMazing29MojavePrivacyWindowController windowDidLoad];
-[_TtC7iMazing29MojavePrivacyWindowController show:];
-[_TtC7iMazing29MojavePrivacyWindowController openPrivacySettings:];
-[_TtC7iMazing29MojavePrivacyWindowController restart:];
-[_TtC7iMazing29MojavePrivacyWindowController close:];
-[_TtC7iMazing29MojavePrivacyWindowController showHelp:];
-[_TtC7iMazing29MojavePrivacyWindowController initWithWindow:];
-[_TtC7iMazing29MojavePrivacyWindowController initWithCoder:];

@end

@interface _TtC7iMazing29PhotoAssetsCollectionViewItem : NSCollectionViewItem {
    /* instance variables */
     cachedSelectionBorderView;
}

@property (TB,N) selected;

/* instance methods */
-[_TtC7iMazing29PhotoAssetsCollectionViewItem isSelected];
-[_TtC7iMazing29PhotoAssetsCollectionViewItem setSelected:];
-[_TtC7iMazing29PhotoAssetsCollectionViewItem initWithNibName:bundle:];
-[_TtC7iMazing29PhotoAssetsCollectionViewItem initWithCoder:];

@end

@interface _TtC7iMazing29PhotoCollectionViewController : NSViewController <NSCollectionViewDelegate, NSCollectionViewDataSource, NSMenuDelegate> {
    /* instance variables */
     photoCollectionView;
     photoCollectionViewTopConstraint;
     owner;
     sectionsKeyReverseOrder;
     sections;
     arrangedObjectsObserver;
     dragOutSelectedItems;
     showMomentsHeaders;
}

@property (T@"_TtC7iMazing19PhotoCollectionView",N,&,VphotoCollectionView) photoCollectionView;
@property (T@"NSLayoutConstraint",N,&,VphotoCollectionViewTopConstraint) photoCollectionViewTopConstraint;
@property (TB,N,VshowMomentsHeaders) showMomentsHeaders;

/* instance methods */
-[_TtC7iMazing29PhotoCollectionViewController collectionView:didEndDisplayingItem:forRepresentedObjectAtIndexPath:];
-[_TtC7iMazing29PhotoCollectionViewController collectionView:didSelectItemsAtIndexPaths:];
-[_TtC7iMazing29PhotoCollectionViewController collectionView:didDeselectItemsAtIndexPaths:];
-[_TtC7iMazing29PhotoCollectionViewController collectionView:canDragItemsAtIndexPaths:withEvent:];
-[_TtC7iMazing29PhotoCollectionViewController collectionView:writeItemsAtIndexPaths:toPasteboard:];
-[_TtC7iMazing29PhotoCollectionViewController collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexPaths:];
-[_TtC7iMazing29PhotoCollectionViewController collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexes:];
-[_TtC7iMazing29PhotoCollectionViewController collectionView:shouldSelectItemsAtIndexPaths:];
-[_TtC7iMazing29PhotoCollectionViewController numberOfSectionsInCollectionView:];
-[_TtC7iMazing29PhotoCollectionViewController collectionView:numberOfItemsInSection:];
-[_TtC7iMazing29PhotoCollectionViewController collectionView:itemForRepresentedObjectAtIndexPath:];
-[_TtC7iMazing29PhotoCollectionViewController collectionView:viewForSupplementaryElementOfKind:atIndexPath:];
-[_TtC7iMazing29PhotoCollectionViewController menuWillOpen:];
-[_TtC7iMazing29PhotoCollectionViewController photoCollectionView];
-[_TtC7iMazing29PhotoCollectionViewController setPhotoCollectionView:];
-[_TtC7iMazing29PhotoCollectionViewController photoCollectionViewTopConstraint];
-[_TtC7iMazing29PhotoCollectionViewController setPhotoCollectionViewTopConstraint:];
-[_TtC7iMazing29PhotoCollectionViewController showMomentsHeaders];
-[_TtC7iMazing29PhotoCollectionViewController setShowMomentsHeaders:];
-[_TtC7iMazing29PhotoCollectionViewController dealloc];
-[_TtC7iMazing29PhotoCollectionViewController viewDidLoad];
-[_TtC7iMazing29PhotoCollectionViewController onDidClickOnSectionHeaderView:];
-[_TtC7iMazing29PhotoCollectionViewController initWithNibName:bundle:];
-[_TtC7iMazing29PhotoCollectionViewController initWithCoder:];

@end

@interface _TtC7iMazing29PhotoCollectionViewFlowLayout : NSCollectionViewFlowLayout {
    /* instance variables */
     floatingSectionHeaders;
     cachedItemsAttributes;
     cachedHeadersAttributes;
     cachedFootersAttributes;
     desiredContentSize;
     sectionHeaderHeights;
}

@property (TB,N,VfloatingSectionHeaders) floatingSectionHeaders;
@property (T{CGSize=dd},N,R) collectionViewContentSize;

/* instance methods */
-[_TtC7iMazing29PhotoCollectionViewFlowLayout floatingSectionHeaders];
-[_TtC7iMazing29PhotoCollectionViewFlowLayout setFloatingSectionHeaders:];
-[_TtC7iMazing29PhotoCollectionViewFlowLayout initWithCoder:];
-[_TtC7iMazing29PhotoCollectionViewFlowLayout prepareLayout];
-[_TtC7iMazing29PhotoCollectionViewFlowLayout shouldInvalidateLayoutForBoundsChange:];
-[_TtC7iMazing29PhotoCollectionViewFlowLayout invalidateLayoutWithContext:];
-[_TtC7iMazing29PhotoCollectionViewFlowLayout collectionViewContentSize];
-[_TtC7iMazing29PhotoCollectionViewFlowLayout layoutAttributesForSupplementaryViewOfKind:atIndexPath:];
-[_TtC7iMazing29PhotoCollectionViewFlowLayout layoutAttributesForItemAtIndexPath:];
-[_TtC7iMazing29PhotoCollectionViewFlowLayout layoutAttributesForElementsInRect:];
-[_TtC7iMazing29PhotoCollectionViewFlowLayout init];

@end

@interface _TtC7iMazing29PhotoDetailInfoCollectionView : NSOutlineView

/* instance methods */
-[_TtC7iMazing29PhotoDetailInfoCollectionView keyDown:];
-[_TtC7iMazing29PhotoDetailInfoCollectionView initWithFrame:];
-[_TtC7iMazing29PhotoDetailInfoCollectionView initWithCoder:];

@end

@interface _TtC7iMazing29PhotoDetailViewCollectionView : _TtC7iMazing25TransparentCollectionView {
    /* instance variables */
     allowLayout;
}

@property (T{CGRect={CGPoint=dd}{CGSize=dd}},N,R) visibleRect;

/* instance methods */
-[_TtC7iMazing29PhotoDetailViewCollectionView visibleRect];
-[_TtC7iMazing29PhotoDetailViewCollectionView initWithCoder:];
-[_TtC7iMazing29PhotoDetailViewCollectionView viewDidEndLiveResize];
-[_TtC7iMazing29PhotoDetailViewCollectionView setFrameSize:];
-[_TtC7iMazing29PhotoDetailViewCollectionView layout];
-[_TtC7iMazing29PhotoDetailViewCollectionView keyDown:];

@end

@interface _TtC7iMazing29PhysicalDeviceArrayController : NSArrayController

/* instance methods */
-[_TtC7iMazing29PhysicalDeviceArrayController initWithContent:];
-[_TtC7iMazing29PhysicalDeviceArrayController initWithCoder:];
-[_TtC7iMazing29PhysicalDeviceArrayController dealloc];

@end

@interface _TtC7iMazing29PodcastsLibraryViewController : _TtC7iMazing26MediaLibraryViewController

/* instance methods */
-[_TtC7iMazing29PodcastsLibraryViewController initWithCoder:];

@end

@interface _TtC7iMazing29RegistrationDiscoverBadgeView : NSView {
    /* instance variables */
     color;
}

@property (T@"NSColor",N,&,Vcolor) color;

/* instance methods */
-[_TtC7iMazing29RegistrationDiscoverBadgeView color];
-[_TtC7iMazing29RegistrationDiscoverBadgeView setColor:];
-[_TtC7iMazing29RegistrationDiscoverBadgeView drawRect:];
-[_TtC7iMazing29RegistrationDiscoverBadgeView initWithFrame:];
-[_TtC7iMazing29RegistrationDiscoverBadgeView initWithCoder:];

@end

@interface _TtC7iMazing29ScrollingDisabledAVPlayerView : AVPlayerView

/* instance methods */
-[_TtC7iMazing29ScrollingDisabledAVPlayerView scrollWheel:];
-[_TtC7iMazing29ScrollingDisabledAVPlayerView initWithFrame:];
-[_TtC7iMazing29ScrollingDisabledAVPlayerView initWithCoder:];

@end

@interface _TtC7iMazing29SuperviseWizardViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
     wizard;
     behavior;
     _isAwake;
     _didInsertConfirmStep;
     organizationUUIDObserver;
     blueprint;
     contentSupervisionView;
     contentSetupView;
     contentSupervisionViewHeightConstraint;
     contentSetupViewHeightConstraint;
     chooseWifiPopup;
     superviseVC;
     setupVC;
     chooseProfilesSheet;
}

@property (T@"NSString",N,R) nibName;
@property (T@"WizardWindowController",N,W,Vwizard) wizard;
@property (Tq,N,Vbehavior) behavior;
@property (T@"Blueprint",N,&,Vblueprint) blueprint;
@property (T@"NSView",N,&,VcontentSupervisionView) contentSupervisionView;
@property (T@"NSView",N,&,VcontentSetupView) contentSetupView;
@property (T@"NSLayoutConstraint",N,&,VcontentSupervisionViewHeightConstraint) contentSupervisionViewHeightConstraint;
@property (T@"NSLayoutConstraint",N,&,VcontentSetupViewHeightConstraint) contentSetupViewHeightConstraint;
@property (T@"_TtC7iMazing17ChoosePopupButton",N,&,VchooseWifiPopup) chooseWifiPopup;

/* instance methods */
-[_TtC7iMazing29SuperviseWizardViewController nibName];
-[_TtC7iMazing29SuperviseWizardViewController wizard];
-[_TtC7iMazing29SuperviseWizardViewController setWizard:];
-[_TtC7iMazing29SuperviseWizardViewController behavior];
-[_TtC7iMazing29SuperviseWizardViewController setBehavior:];
-[_TtC7iMazing29SuperviseWizardViewController blueprint];
-[_TtC7iMazing29SuperviseWizardViewController setBlueprint:];
-[_TtC7iMazing29SuperviseWizardViewController contentSupervisionView];
-[_TtC7iMazing29SuperviseWizardViewController setContentSupervisionView:];
-[_TtC7iMazing29SuperviseWizardViewController contentSetupView];
-[_TtC7iMazing29SuperviseWizardViewController setContentSetupView:];
-[_TtC7iMazing29SuperviseWizardViewController contentSupervisionViewHeightConstraint];
-[_TtC7iMazing29SuperviseWizardViewController setContentSupervisionViewHeightConstraint:];
-[_TtC7iMazing29SuperviseWizardViewController contentSetupViewHeightConstraint];
-[_TtC7iMazing29SuperviseWizardViewController setContentSetupViewHeightConstraint:];
-[_TtC7iMazing29SuperviseWizardViewController chooseWifiPopup];
-[_TtC7iMazing29SuperviseWizardViewController setChooseWifiPopup:];
-[_TtC7iMazing29SuperviseWizardViewController awakeFromNib];
-[_TtC7iMazing29SuperviseWizardViewController didBecomeActive];
-[_TtC7iMazing29SuperviseWizardViewController nextClicked];
-[_TtC7iMazing29SuperviseWizardViewController initWithNibName:bundle:];
-[_TtC7iMazing29SuperviseWizardViewController initWithCoder:];

@end

@interface _TtC7iMazing30BackupNavigationViewController : NSViewController <NSMenuDelegate> {
    /* instance variables */
     device;
     showDownArrow;
     showRightSeparator;
     provider;
     liveLabel;
     currentItemTitle;
     currentItem;
     alwaysShowRightSeparator;
     controllers;
     itemsObserver;
     loadingObserver;
     currentItemObserver;
     selectedArchiveObserver;
     backupObserver;
     liveMenuItemController;
     manageMenuItemController;
     backgroundView1;
     backgroundView2;
     backgroundView3;
     itemsMenu;
}

@property (T@"_TtC7iMazing10DeviceItem",N,&,Vdevice) device;
@property (TB,N,VshowDownArrow) showDownArrow;
@property (TB,N,VshowRightSeparator) showRightSeparator;
@property (T@"_TtC7iMazing21BackupHistoryProvider",N,&,Vprovider) provider;
@property (T@"NSString",N,C) liveLabel;
@property (T@"NSString",N,C) currentItemTitle;
@property (T@"_TtC7iMazing17BackupHistoryItem",N,&,VcurrentItem) currentItem;
@property (TB,N,ValwaysShowRightSeparator) alwaysShowRightSeparator;
@property (T@"_TtC7iMazing28BreadcrumbItemBackgroundView",N,&,VbackgroundView1) backgroundView1;
@property (T@"_TtC7iMazing28BreadcrumbItemBackgroundView",N,&,VbackgroundView2) backgroundView2;
@property (T@"_TtC7iMazing28BreadcrumbItemBackgroundView",N,&,VbackgroundView3) backgroundView3;
@property (T@"NSMenu",N,&,VitemsMenu) itemsMenu;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing30BackupNavigationViewController device];
-[_TtC7iMazing30BackupNavigationViewController setDevice:];
-[_TtC7iMazing30BackupNavigationViewController showDownArrow];
-[_TtC7iMazing30BackupNavigationViewController setShowDownArrow:];
-[_TtC7iMazing30BackupNavigationViewController showRightSeparator];
-[_TtC7iMazing30BackupNavigationViewController setShowRightSeparator:];
-[_TtC7iMazing30BackupNavigationViewController provider];
-[_TtC7iMazing30BackupNavigationViewController setProvider:];
-[_TtC7iMazing30BackupNavigationViewController liveLabel];
-[_TtC7iMazing30BackupNavigationViewController setLiveLabel:];
-[_TtC7iMazing30BackupNavigationViewController currentItemTitle];
-[_TtC7iMazing30BackupNavigationViewController setCurrentItemTitle:];
-[_TtC7iMazing30BackupNavigationViewController currentItem];
-[_TtC7iMazing30BackupNavigationViewController setCurrentItem:];
-[_TtC7iMazing30BackupNavigationViewController alwaysShowRightSeparator];
-[_TtC7iMazing30BackupNavigationViewController setAlwaysShowRightSeparator:];
-[_TtC7iMazing30BackupNavigationViewController backgroundView1];
-[_TtC7iMazing30BackupNavigationViewController setBackgroundView1:];
-[_TtC7iMazing30BackupNavigationViewController backgroundView2];
-[_TtC7iMazing30BackupNavigationViewController setBackgroundView2:];
-[_TtC7iMazing30BackupNavigationViewController backgroundView3];
-[_TtC7iMazing30BackupNavigationViewController setBackgroundView3:];
-[_TtC7iMazing30BackupNavigationViewController itemsMenu];
-[_TtC7iMazing30BackupNavigationViewController setItemsMenu:];
-[_TtC7iMazing30BackupNavigationViewController initWithCoder:];
-[_TtC7iMazing30BackupNavigationViewController nibName];
-[_TtC7iMazing30BackupNavigationViewController viewDidLoad];
-[_TtC7iMazing30BackupNavigationViewController viewDidAppear];
-[_TtC7iMazing30BackupNavigationViewController reset:];
-[_TtC7iMazing30BackupNavigationViewController showMenu:];
-[_TtC7iMazing30BackupNavigationViewController menuWillOpen:];
-[_TtC7iMazing30BackupNavigationViewController menuDidClose:];
-[_TtC7iMazing30BackupNavigationViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing30ChooseAppFilesWindowController : NSWindowController <_TtP7iMazing24PlusMinusControlDelegate_> {
    /* instance variables */
     _awake;
     chooseFilesHandler;
     filesArrayController;
     tableView;
     files;
     appItem;
     _dragDropHelper;
}

@property (T@"NSString",N,R) windowNibName;
@property (T@"NSArrayController",N,&,VfilesArrayController) filesArrayController;
@property (T@"NSTableView",N,&,VtableView) tableView;
@property (T@"NSArray",N,C) files;
@property (T@"iOSAppDisplayItem",N,&,VappItem) appItem;

/* instance methods */
-[_TtC7iMazing30ChooseAppFilesWindowController windowNibName];
-[_TtC7iMazing30ChooseAppFilesWindowController filesArrayController];
-[_TtC7iMazing30ChooseAppFilesWindowController setFilesArrayController:];
-[_TtC7iMazing30ChooseAppFilesWindowController tableView];
-[_TtC7iMazing30ChooseAppFilesWindowController setTableView:];
-[_TtC7iMazing30ChooseAppFilesWindowController files];
-[_TtC7iMazing30ChooseAppFilesWindowController setFiles:];
-[_TtC7iMazing30ChooseAppFilesWindowController appItem];
-[_TtC7iMazing30ChooseAppFilesWindowController setAppItem:];
-[_TtC7iMazing30ChooseAppFilesWindowController initWithCoder:];
-[_TtC7iMazing30ChooseAppFilesWindowController awakeFromNib];
-[_TtC7iMazing30ChooseAppFilesWindowController plusClicked:];
-[_TtC7iMazing30ChooseAppFilesWindowController minusClicked:];
-[_TtC7iMazing30ChooseAppFilesWindowController chooseClicked:];
-[_TtC7iMazing30ChooseAppFilesWindowController initWithWindow:];

@end

@interface _TtC7iMazing30ConfiguratorAppsViewController : WizardWindowController <_TtP7iMazing14IndexedElement_> {
    /* instance variables */
     indexPath;
}

@property (T@"NSIndexPath",N,C) indexPath;

/* instance methods */
-[_TtC7iMazing30ConfiguratorAppsViewController indexPath];
-[_TtC7iMazing30ConfiguratorAppsViewController setIndexPath:];
-[_TtC7iMazing30ConfiguratorAppsViewController init];
-[_TtC7iMazing30ConfiguratorAppsViewController initWithCoder:];
-[_TtC7iMazing30ConfiguratorAppsViewController initWithTitle:device:requiresConnection:];

@end

@interface _TtC7iMazing30ConnectScreenUSBViewController : _TtC7iMazing27ConnectScreenViewController {
    /* instance variables */
     showiPod;
}

@property (TB,N,VshowiPod) showiPod;

/* instance methods */
-[_TtC7iMazing30ConnectScreenUSBViewController showiPod];
-[_TtC7iMazing30ConnectScreenUSBViewController setShowiPod:];
-[_TtC7iMazing30ConnectScreenUSBViewController viewDidLoad];
-[_TtC7iMazing30ConnectScreenUSBViewController initWithDevice:];
-[_TtC7iMazing30ConnectScreenUSBViewController initWithCoder:];

@end

@interface _TtC7iMazing30DeviceDataCollectionViewLayout : _TtC7iMazing45CollectionViewFixedItemSizeVerticalFlowLayout

/* instance methods */
-[_TtC7iMazing30DeviceDataCollectionViewLayout initWithCoder:];
-[_TtC7iMazing30DeviceDataCollectionViewLayout init];

@end

@interface _TtC7iMazing30DeviceInfoWidgetViewController : NSViewController <NSTableViewDelegate, NSTableViewDataSource> {
    /* instance variables */
     normalArrayController;
     dynamicArrayController;
     tableView;
     arrayController;
     item;
     searchText;
     style;
}

@property (T@"NSArrayController",N,&,VnormalArrayController) normalArrayController;
@property (T@"NSArrayController",N,&,VdynamicArrayController) dynamicArrayController;
@property (T@"NSTableView",N,&,VtableView) tableView;
@property (T@"NSArrayController",N,&,VarrayController) arrayController;
@property (T@"_TtC7iMazing10DeviceItem",N,&,Vitem) item;
@property (T@"NSString",N,C) searchText;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing30DeviceInfoWidgetViewController normalArrayController];
-[_TtC7iMazing30DeviceInfoWidgetViewController setNormalArrayController:];
-[_TtC7iMazing30DeviceInfoWidgetViewController dynamicArrayController];
-[_TtC7iMazing30DeviceInfoWidgetViewController setDynamicArrayController:];
-[_TtC7iMazing30DeviceInfoWidgetViewController tableView];
-[_TtC7iMazing30DeviceInfoWidgetViewController setTableView:];
-[_TtC7iMazing30DeviceInfoWidgetViewController arrayController];
-[_TtC7iMazing30DeviceInfoWidgetViewController setArrayController:];
-[_TtC7iMazing30DeviceInfoWidgetViewController item];
-[_TtC7iMazing30DeviceInfoWidgetViewController setItem:];
-[_TtC7iMazing30DeviceInfoWidgetViewController searchText];
-[_TtC7iMazing30DeviceInfoWidgetViewController setSearchText:];
-[_TtC7iMazing30DeviceInfoWidgetViewController initWithCoder:];
-[_TtC7iMazing30DeviceInfoWidgetViewController nibName];
-[_TtC7iMazing30DeviceInfoWidgetViewController viewDidLoad];
-[_TtC7iMazing30DeviceInfoWidgetViewController tableView:shouldSelectRow:];
-[_TtC7iMazing30DeviceInfoWidgetViewController tableView:rowViewForRow:];
-[_TtC7iMazing30DeviceInfoWidgetViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing30DeviceNavigationViewController : NSViewController <NSMenuDelegate> {
    /* instance variables */
     item;
     showDownArrow;
     showRightSeparator;
     controllers;
     devicesObserver;
     onSelect;
     backgroundView;
     itemsMenu;
     alwaysShowRightSeparator;
}

@property (T@"_TtC7iMazing10DeviceItem",N,&,Vitem) item;
@property (TB,N,VshowDownArrow) showDownArrow;
@property (TB,N,VshowRightSeparator) showRightSeparator;
@property (T@"_TtC7iMazing28BreadcrumbItemBackgroundView",N,&,VbackgroundView) backgroundView;
@property (T@"NSMenu",N,&,VitemsMenu) itemsMenu;
@property (TB,N,ValwaysShowRightSeparator) alwaysShowRightSeparator;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing30DeviceNavigationViewController item];
-[_TtC7iMazing30DeviceNavigationViewController setItem:];
-[_TtC7iMazing30DeviceNavigationViewController showDownArrow];
-[_TtC7iMazing30DeviceNavigationViewController setShowDownArrow:];
-[_TtC7iMazing30DeviceNavigationViewController showRightSeparator];
-[_TtC7iMazing30DeviceNavigationViewController setShowRightSeparator:];
-[_TtC7iMazing30DeviceNavigationViewController backgroundView];
-[_TtC7iMazing30DeviceNavigationViewController setBackgroundView:];
-[_TtC7iMazing30DeviceNavigationViewController itemsMenu];
-[_TtC7iMazing30DeviceNavigationViewController setItemsMenu:];
-[_TtC7iMazing30DeviceNavigationViewController alwaysShowRightSeparator];
-[_TtC7iMazing30DeviceNavigationViewController setAlwaysShowRightSeparator:];
-[_TtC7iMazing30DeviceNavigationViewController initWithCoder:];
-[_TtC7iMazing30DeviceNavigationViewController nibName];
-[_TtC7iMazing30DeviceNavigationViewController viewDidLoad];
-[_TtC7iMazing30DeviceNavigationViewController showMenu:];
-[_TtC7iMazing30DeviceNavigationViewController menuWillOpen:];
-[_TtC7iMazing30DeviceNavigationViewController menuDidClose:];
-[_TtC7iMazing30DeviceNavigationViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing30DeviceToolCollectionViewLayout : _TtC7iMazing49CollectionViewFixedItemsPerRowsVerticalFlowLayout

/* instance methods */
-[_TtC7iMazing30DeviceToolCollectionViewLayout initWithCoder:];
-[_TtC7iMazing30DeviceToolCollectionViewLayout init];

@end

@interface _TtC7iMazing30HomeDiscoverAppsViewController : NSViewController {
    /* instance variables */
     stackView;
     apps;
}

@property (T@"NSStackView",N,&,VstackView) stackView;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing30HomeDiscoverAppsViewController stackView];
-[_TtC7iMazing30HomeDiscoverAppsViewController setStackView:];
-[_TtC7iMazing30HomeDiscoverAppsViewController nibName];
-[_TtC7iMazing30HomeDiscoverAppsViewController viewDidLoad];
-[_TtC7iMazing30HomeDiscoverAppsViewController initWithNibName:bundle:];
-[_TtC7iMazing30HomeDiscoverAppsViewController initWithCoder:];

@end

@interface _TtC7iMazing30HomeDiscoverTourViewController : NSViewController {
    /* instance variables */
     container;
     dotsContainer;
     hide;
     showLicenseButton;
     navigationEnabled;
     canGoLeft;
     canGoRight;
     index;
     rightButtonTitle;
     rightButtonImage;
     controllers;
     indexObserver;
     appRegisteredObserver;
     appRegistered;
}

@property (T@"NSView",N,&,Vcontainer) container;
@property (T@"NSStackView",N,&,VdotsContainer) dotsContainer;
@property (TB,N,Vhide) hide;
@property (TB,N,VshowLicenseButton) showLicenseButton;
@property (TB,N,VnavigationEnabled) navigationEnabled;
@property (TB,N,VcanGoLeft) canGoLeft;
@property (TB,N,VcanGoRight) canGoRight;
@property (Tq,N,Vindex) index;
@property (T@"NSString",N,C) rightButtonTitle;
@property (T@"NSImage",N,&,VrightButtonImage) rightButtonImage;
@property (T@"NSArray",N,C) controllers;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing30HomeDiscoverTourViewController container];
-[_TtC7iMazing30HomeDiscoverTourViewController setContainer:];
-[_TtC7iMazing30HomeDiscoverTourViewController dotsContainer];
-[_TtC7iMazing30HomeDiscoverTourViewController setDotsContainer:];
-[_TtC7iMazing30HomeDiscoverTourViewController hide];
-[_TtC7iMazing30HomeDiscoverTourViewController setHide:];
-[_TtC7iMazing30HomeDiscoverTourViewController showLicenseButton];
-[_TtC7iMazing30HomeDiscoverTourViewController setShowLicenseButton:];
-[_TtC7iMazing30HomeDiscoverTourViewController navigationEnabled];
-[_TtC7iMazing30HomeDiscoverTourViewController setNavigationEnabled:];
-[_TtC7iMazing30HomeDiscoverTourViewController canGoLeft];
-[_TtC7iMazing30HomeDiscoverTourViewController setCanGoLeft:];
-[_TtC7iMazing30HomeDiscoverTourViewController canGoRight];
-[_TtC7iMazing30HomeDiscoverTourViewController setCanGoRight:];
-[_TtC7iMazing30HomeDiscoverTourViewController index];
-[_TtC7iMazing30HomeDiscoverTourViewController setIndex:];
-[_TtC7iMazing30HomeDiscoverTourViewController rightButtonTitle];
-[_TtC7iMazing30HomeDiscoverTourViewController setRightButtonTitle:];
-[_TtC7iMazing30HomeDiscoverTourViewController rightButtonImage];
-[_TtC7iMazing30HomeDiscoverTourViewController setRightButtonImage:];
-[_TtC7iMazing30HomeDiscoverTourViewController controllers];
-[_TtC7iMazing30HomeDiscoverTourViewController setControllers:];
-[_TtC7iMazing30HomeDiscoverTourViewController nibName];
-[_TtC7iMazing30HomeDiscoverTourViewController viewDidLoad];
-[_TtC7iMazing30HomeDiscoverTourViewController hide:];
-[_TtC7iMazing30HomeDiscoverTourViewController enterLicense:];
-[_TtC7iMazing30HomeDiscoverTourViewController goLeft:];
-[_TtC7iMazing30HomeDiscoverTourViewController goRight:];
-[_TtC7iMazing30HomeDiscoverTourViewController initWithNibName:bundle:];
-[_TtC7iMazing30HomeDiscoverTourViewController initWithCoder:];

@end

@interface _TtC7iMazing30ManageAppsWizardViewController : NSViewController <WizardWindowDelegate, AppsLibraryViewControllerDelegate> {
    /* instance variables */
     wizard;
     behavior;
     libraryVC;
     _isAwake;
}

@property (T@"WizardWindowController",N,W,Vwizard) wizard;
@property (Tq,N,Vbehavior) behavior;

/* instance methods */
-[_TtC7iMazing30ManageAppsWizardViewController wizard];
-[_TtC7iMazing30ManageAppsWizardViewController setWizard:];
-[_TtC7iMazing30ManageAppsWizardViewController behavior];
-[_TtC7iMazing30ManageAppsWizardViewController setBehavior:];
-[_TtC7iMazing30ManageAppsWizardViewController initWithCoder:];
-[_TtC7iMazing30ManageAppsWizardViewController initWithDevice:];
-[_TtC7iMazing30ManageAppsWizardViewController awakeFromNib];
-[_TtC7iMazing30ManageAppsWizardViewController didBecomeActive];
-[_TtC7iMazing30ManageAppsWizardViewController willResignActive];
-[_TtC7iMazing30ManageAppsWizardViewController didResignActive];
-[_TtC7iMazing30ManageAppsWizardViewController closeAndContinue];
-[_TtC7iMazing30ManageAppsWizardViewController restoreApps:];
-[_TtC7iMazing30ManageAppsWizardViewController backupAppData:toPath:];
-[_TtC7iMazing30ManageAppsWizardViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing30MediaCopyiTunesProgressHandler : NSObject {
    /* instance variables */
     window;
     manager;
     isReady;
     copyInProgress;
     subscribedToNotifications;
     pendingScripts;
     serverTask;
     alert;
     duplicatedPlaylistsDialogBox;
     pendingOperations;
     currentOperationData;
}

/* instance methods */
-[_TtC7iMazing30MediaCopyiTunesProgressHandler dealloc];
-[_TtC7iMazing30MediaCopyiTunesProgressHandler handleOperationNotification:];
-[_TtC7iMazing30MediaCopyiTunesProgressHandler handleAsServerNotification:];
-[_TtC7iMazing30MediaCopyiTunesProgressHandler init];

@end

@interface _TtC7iMazing30MessagesExportWindowController : NSWindowController {
    /* instance variables */
     isMultipleSession;
     showExportSelected;
     exportFormatIsAttachments;
     exportFormatIsTXT;
     exportFormatIsXLSOrCSV;
     exportFormatIsXLSOrCSVOrTXT;
     exportFormatIsRSMF;
     messageClickedRow;
     sessionClickedRow;
     exportFormat;
     includeMessageID;
     includeHeaderRowButton;
     includeChatSessionButton;
     includeSenderButton;
     includeDateTimeButton;
     includeStatusButton;
     includeAttachmentInfoButton;
     includeNotificationsButton;
     includeSeparatorButton;
     includeReplyToButton;
     createFolderForEachSession;
     exportSelectedButton;
     exportAllButton;
     exportOneFileButton;
     exportWindowStackView;
}

@property (TB,N,VisMultipleSession) isMultipleSession;
@property (TB,N,VshowExportSelected) showExportSelected;
@property (TB,N,VexportFormatIsAttachments) exportFormatIsAttachments;
@property (TB,N,VexportFormatIsTXT) exportFormatIsTXT;
@property (TB,N,VexportFormatIsXLSOrCSV) exportFormatIsXLSOrCSV;
@property (TB,N,VexportFormatIsXLSOrCSVOrTXT) exportFormatIsXLSOrCSVOrTXT;
@property (TB,N,VexportFormatIsRSMF) exportFormatIsRSMF;
@property (T@"NSButton",N,&,VincludeHeaderRowButton) includeHeaderRowButton;
@property (T@"NSButton",N,&,VincludeChatSessionButton) includeChatSessionButton;
@property (T@"NSButton",N,&,VincludeSenderButton) includeSenderButton;
@property (T@"NSButton",N,&,VincludeDateTimeButton) includeDateTimeButton;
@property (T@"NSButton",N,&,VincludeStatusButton) includeStatusButton;
@property (T@"NSButton",N,&,VincludeAttachmentInfoButton) includeAttachmentInfoButton;
@property (T@"NSButton",N,&,VincludeNotificationsButton) includeNotificationsButton;
@property (T@"NSButton",N,&,VincludeSeparatorButton) includeSeparatorButton;
@property (T@"NSButton",N,&,VincludeReplyToButton) includeReplyToButton;
@property (T@"NSButton",N,&,VcreateFolderForEachSession) createFolderForEachSession;
@property (T@"NSButton",N,&,VexportSelectedButton) exportSelectedButton;
@property (T@"NSButton",N,&,VexportAllButton) exportAllButton;
@property (T@"NSButton",N,&,VexportOneFileButton) exportOneFileButton;
@property (T@"NSStackView",N,&,VexportWindowStackView) exportWindowStackView;
@property (T@"NSString",N,R) windowNibName;

/* instance methods */
-[_TtC7iMazing30MessagesExportWindowController isMultipleSession];
-[_TtC7iMazing30MessagesExportWindowController setIsMultipleSession:];
-[_TtC7iMazing30MessagesExportWindowController showExportSelected];
-[_TtC7iMazing30MessagesExportWindowController setShowExportSelected:];
-[_TtC7iMazing30MessagesExportWindowController exportFormatIsAttachments];
-[_TtC7iMazing30MessagesExportWindowController setExportFormatIsAttachments:];
-[_TtC7iMazing30MessagesExportWindowController exportFormatIsTXT];
-[_TtC7iMazing30MessagesExportWindowController setExportFormatIsTXT:];
-[_TtC7iMazing30MessagesExportWindowController exportFormatIsXLSOrCSV];
-[_TtC7iMazing30MessagesExportWindowController setExportFormatIsXLSOrCSV:];
-[_TtC7iMazing30MessagesExportWindowController exportFormatIsXLSOrCSVOrTXT];
-[_TtC7iMazing30MessagesExportWindowController setExportFormatIsXLSOrCSVOrTXT:];
-[_TtC7iMazing30MessagesExportWindowController exportFormatIsRSMF];
-[_TtC7iMazing30MessagesExportWindowController setExportFormatIsRSMF:];
-[_TtC7iMazing30MessagesExportWindowController includeHeaderRowButton];
-[_TtC7iMazing30MessagesExportWindowController setIncludeHeaderRowButton:];
-[_TtC7iMazing30MessagesExportWindowController includeChatSessionButton];
-[_TtC7iMazing30MessagesExportWindowController setIncludeChatSessionButton:];
-[_TtC7iMazing30MessagesExportWindowController includeSenderButton];
-[_TtC7iMazing30MessagesExportWindowController setIncludeSenderButton:];
-[_TtC7iMazing30MessagesExportWindowController includeDateTimeButton];
-[_TtC7iMazing30MessagesExportWindowController setIncludeDateTimeButton:];
-[_TtC7iMazing30MessagesExportWindowController includeStatusButton];
-[_TtC7iMazing30MessagesExportWindowController setIncludeStatusButton:];
-[_TtC7iMazing30MessagesExportWindowController includeAttachmentInfoButton];
-[_TtC7iMazing30MessagesExportWindowController setIncludeAttachmentInfoButton:];
-[_TtC7iMazing30MessagesExportWindowController includeNotificationsButton];
-[_TtC7iMazing30MessagesExportWindowController setIncludeNotificationsButton:];
-[_TtC7iMazing30MessagesExportWindowController includeSeparatorButton];
-[_TtC7iMazing30MessagesExportWindowController setIncludeSeparatorButton:];
-[_TtC7iMazing30MessagesExportWindowController includeReplyToButton];
-[_TtC7iMazing30MessagesExportWindowController setIncludeReplyToButton:];
-[_TtC7iMazing30MessagesExportWindowController createFolderForEachSession];
-[_TtC7iMazing30MessagesExportWindowController setCreateFolderForEachSession:];
-[_TtC7iMazing30MessagesExportWindowController exportSelectedButton];
-[_TtC7iMazing30MessagesExportWindowController setExportSelectedButton:];
-[_TtC7iMazing30MessagesExportWindowController exportAllButton];
-[_TtC7iMazing30MessagesExportWindowController setExportAllButton:];
-[_TtC7iMazing30MessagesExportWindowController exportOneFileButton];
-[_TtC7iMazing30MessagesExportWindowController setExportOneFileButton:];
-[_TtC7iMazing30MessagesExportWindowController exportWindowStackView];
-[_TtC7iMazing30MessagesExportWindowController setExportWindowStackView:];
-[_TtC7iMazing30MessagesExportWindowController windowNibName];
-[_TtC7iMazing30MessagesExportWindowController windowDidLoad];
-[_TtC7iMazing30MessagesExportWindowController getOptions];
-[_TtC7iMazing30MessagesExportWindowController isExportAllSelected];
-[_TtC7iMazing30MessagesExportWindowController isMergeIntoSingleFile];
-[_TtC7iMazing30MessagesExportWindowController createFolderSession];
-[_TtC7iMazing30MessagesExportWindowController exportFileTypeChanged:];
-[_TtC7iMazing30MessagesExportWindowController exportMessagesTypeChanged:];
-[_TtC7iMazing30MessagesExportWindowController nextClicked:];
-[_TtC7iMazing30MessagesExportWindowController cancelClicked:];
-[_TtC7iMazing30MessagesExportWindowController initWithWindow:];
-[_TtC7iMazing30MessagesExportWindowController initWithCoder:];

@end

@interface _TtC7iMazing30NullableToAVPlayerControlStyle : NSValueTransformer

/* class methods */
+[_TtC7iMazing30NullableToAVPlayerControlStyle transformedValueClass];
+[_TtC7iMazing30NullableToAVPlayerControlStyle allowsReverseTransformation];

/* instance methods */
-[_TtC7iMazing30NullableToAVPlayerControlStyle transformedValue:];
-[_TtC7iMazing30NullableToAVPlayerControlStyle init];

@end

@interface _TtC7iMazing30PhotoDetailViewItemContentView : NSView {
    /* instance variables */
     onDoubleClick;
     mouseDownInView;
}

/* instance methods */
-[_TtC7iMazing30PhotoDetailViewItemContentView mouseUp:];
-[_TtC7iMazing30PhotoDetailViewItemContentView mouseDown:];
-[_TtC7iMazing30PhotoDetailViewItemContentView drawRect:];
-[_TtC7iMazing30PhotoDetailViewItemContentView initWithFrame:];
-[_TtC7iMazing30PhotoDetailViewItemContentView initWithCoder:];

@end

@interface _TtC7iMazing30PreferencesMediaViewController : NSViewController <NSObject>

@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing30PreferencesMediaViewController nibName];
-[_TtC7iMazing30PreferencesMediaViewController initWithNibName:bundle:];
-[_TtC7iMazing30PreferencesMediaViewController initWithCoder:];

@end

@interface _TtC7iMazing30QuickTransferAppItemController : NSCollectionViewItem {
    /* instance variables */
     valueObserver;
     image;
     label1;
     label2;
}

@property (T@"NSImageView",N,&,Vimage) image;
@property (T@"NSTextField",N,&,Vlabel1) label1;
@property (T@"NSTextField",N,&,Vlabel2) label2;

/* instance methods */
-[_TtC7iMazing30QuickTransferAppItemController image];
-[_TtC7iMazing30QuickTransferAppItemController setImage:];
-[_TtC7iMazing30QuickTransferAppItemController label1];
-[_TtC7iMazing30QuickTransferAppItemController setLabel1:];
-[_TtC7iMazing30QuickTransferAppItemController label2];
-[_TtC7iMazing30QuickTransferAppItemController setLabel2:];
-[_TtC7iMazing30QuickTransferAppItemController initWithNibName:bundle:];
-[_TtC7iMazing30QuickTransferAppItemController initWithCoder:];
-[_TtC7iMazing30QuickTransferAppItemController awakeFromNib];

@end

@interface _TtC7iMazing30RegistrationDarkBackgroundView : NSView

/* instance methods */
-[_TtC7iMazing30RegistrationDarkBackgroundView drawRect:];
-[_TtC7iMazing30RegistrationDarkBackgroundView initWithFrame:];
-[_TtC7iMazing30RegistrationDarkBackgroundView initWithCoder:];

@end

@interface _TtC7iMazing30SchedulingOptionsFrequencyItem : NSObject {
    /* instance variables */
     frequency;
}

@property (T@"NSString",N,R) description;

/* instance methods */
-[_TtC7iMazing30SchedulingOptionsFrequencyItem description];
-[_TtC7iMazing30SchedulingOptionsFrequencyItem init];

@end

@interface _TtC7iMazing31AudioBooksLibraryViewController : _TtC7iMazing26MediaLibraryViewController

/* instance methods */
-[_TtC7iMazing31AudioBooksLibraryViewController initWithCoder:];

@end

@interface _TtC7iMazing31BatteryInfoWidgetViewController : NSViewController <NSTableViewDelegate, NSTableViewDataSource> {
    /* instance variables */
     item;
     chargeText;
     healthIcon;
     healthText;
     searchText;
     charging;
     lowBatteryNotificationTag;
     observer;
     batteryView;
     arrayController;
     batteryHealthView;
     monitoring;
}

@property (T@"_TtC7iMazing10DeviceItem",N,R,Vitem) item;
@property (T@"NSString",N,C) chargeText;
@property (T@"NSImage",N,&,VhealthIcon) healthIcon;
@property (T@"NSString",N,C) healthText;
@property (T@"NSString",N,C) searchText;
@property (TB,N,Vcharging) charging;
@property (Tq,N,VlowBatteryNotificationTag) lowBatteryNotificationTag;
@property (T@"VKBatteryView",N,&,VbatteryView) batteryView;
@property (T@"NSArrayController",N,&,VarrayController) arrayController;
@property (T@"_TtC7iMazing17BatteryHealthView",N,&,VbatteryHealthView) batteryHealthView;
@property (TB,N,Vmonitoring) monitoring;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing31BatteryInfoWidgetViewController item];
-[_TtC7iMazing31BatteryInfoWidgetViewController chargeText];
-[_TtC7iMazing31BatteryInfoWidgetViewController setChargeText:];
-[_TtC7iMazing31BatteryInfoWidgetViewController healthIcon];
-[_TtC7iMazing31BatteryInfoWidgetViewController setHealthIcon:];
-[_TtC7iMazing31BatteryInfoWidgetViewController healthText];
-[_TtC7iMazing31BatteryInfoWidgetViewController setHealthText:];
-[_TtC7iMazing31BatteryInfoWidgetViewController searchText];
-[_TtC7iMazing31BatteryInfoWidgetViewController setSearchText:];
-[_TtC7iMazing31BatteryInfoWidgetViewController charging];
-[_TtC7iMazing31BatteryInfoWidgetViewController setCharging:];
-[_TtC7iMazing31BatteryInfoWidgetViewController lowBatteryNotificationTag];
-[_TtC7iMazing31BatteryInfoWidgetViewController setLowBatteryNotificationTag:];
-[_TtC7iMazing31BatteryInfoWidgetViewController batteryView];
-[_TtC7iMazing31BatteryInfoWidgetViewController setBatteryView:];
-[_TtC7iMazing31BatteryInfoWidgetViewController arrayController];
-[_TtC7iMazing31BatteryInfoWidgetViewController setArrayController:];
-[_TtC7iMazing31BatteryInfoWidgetViewController batteryHealthView];
-[_TtC7iMazing31BatteryInfoWidgetViewController setBatteryHealthView:];
-[_TtC7iMazing31BatteryInfoWidgetViewController monitoring];
-[_TtC7iMazing31BatteryInfoWidgetViewController setMonitoring:];
-[_TtC7iMazing31BatteryInfoWidgetViewController initWithCoder:];
-[_TtC7iMazing31BatteryInfoWidgetViewController nibName];
-[_TtC7iMazing31BatteryInfoWidgetViewController viewDidLoad];
-[_TtC7iMazing31BatteryInfoWidgetViewController viewDidAppear];
-[_TtC7iMazing31BatteryInfoWidgetViewController viewDidDisappear];
-[_TtC7iMazing31BatteryInfoWidgetViewController startMonitoring:];
-[_TtC7iMazing31BatteryInfoWidgetViewController stopMonitoring:];
-[_TtC7iMazing31BatteryInfoWidgetViewController changeLowBatteryNotification:];
-[_TtC7iMazing31BatteryInfoWidgetViewController tableView:shouldSelectRow:];
-[_TtC7iMazing31BatteryInfoWidgetViewController tableView:rowViewForRow:];
-[_TtC7iMazing31BatteryInfoWidgetViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing31ConfigureWizardWindowController : WizardWindowController

/* instance methods */
-[_TtC7iMazing31ConfigureWizardWindowController initWithCoder:];
-[_TtC7iMazing31ConfigureWizardWindowController initWithTitle:device:requiresConnection:];

@end

@interface _TtC7iMazing31ConnectScreenWiFiViewController : _TtC7iMazing27ConnectScreenViewController

/* instance methods */
-[_TtC7iMazing31ConnectScreenWiFiViewController viewDidLoad];
-[_TtC7iMazing31ConnectScreenWiFiViewController initWithDevice:];
-[_TtC7iMazing31ConnectScreenWiFiViewController initWithCoder:];

@end

@interface _TtC7iMazing31DatasetNavigationViewController : NSViewController <NSMenuDelegate> {
    /* instance variables */
     device;
     showDownArrow;
     currentItemIsShortcut;
     currentItem;
     controllers;
     datasetObserver;
     onSelect;
     backgroundView;
     itemsMenu;
}

@property (T@"_TtC7iMazing10DeviceItem",N,&,Vdevice) device;
@property (TB,N,VshowDownArrow) showDownArrow;
@property (TB,N,VcurrentItemIsShortcut) currentItemIsShortcut;
@property (T@"_TtC7iMazing7Dataset",N,&,VcurrentItem) currentItem;
@property (T@"_TtC7iMazing28BreadcrumbItemBackgroundView",N,&,VbackgroundView) backgroundView;
@property (T@"NSMenu",N,&,VitemsMenu) itemsMenu;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing31DatasetNavigationViewController device];
-[_TtC7iMazing31DatasetNavigationViewController setDevice:];
-[_TtC7iMazing31DatasetNavigationViewController showDownArrow];
-[_TtC7iMazing31DatasetNavigationViewController setShowDownArrow:];
-[_TtC7iMazing31DatasetNavigationViewController currentItemIsShortcut];
-[_TtC7iMazing31DatasetNavigationViewController setCurrentItemIsShortcut:];
-[_TtC7iMazing31DatasetNavigationViewController currentItem];
-[_TtC7iMazing31DatasetNavigationViewController setCurrentItem:];
-[_TtC7iMazing31DatasetNavigationViewController backgroundView];
-[_TtC7iMazing31DatasetNavigationViewController setBackgroundView:];
-[_TtC7iMazing31DatasetNavigationViewController itemsMenu];
-[_TtC7iMazing31DatasetNavigationViewController setItemsMenu:];
-[_TtC7iMazing31DatasetNavigationViewController initWithCoder:];
-[_TtC7iMazing31DatasetNavigationViewController nibName];
-[_TtC7iMazing31DatasetNavigationViewController viewDidLoad];
-[_TtC7iMazing31DatasetNavigationViewController showMenu:];
-[_TtC7iMazing31DatasetNavigationViewController menuWillOpen:];
-[_TtC7iMazing31DatasetNavigationViewController menuDidClose:];
-[_TtC7iMazing31DatasetNavigationViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing31ExportAllProgressViewController : _TtC7iMazing34WizardWindowProgressViewController

/* instance methods */
-[_TtC7iMazing31ExportAllProgressViewController willBecomeActive];
-[_TtC7iMazing31ExportAllProgressViewController didBecomeActive];
-[_TtC7iMazing31ExportAllProgressViewController init];
-[_TtC7iMazing31ExportAllProgressViewController initWithCoder:];

@end

@interface _TtC7iMazing31GenericScreenItemViewController : NSViewController {
    /* instance variables */
     item;
}

@property (T@"_TtC7iMazing17GenericScreenItem",N,&,Vitem) item;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing31GenericScreenItemViewController item];
-[_TtC7iMazing31GenericScreenItemViewController setItem:];
-[_TtC7iMazing31GenericScreenItemViewController initWithCoder:];
-[_TtC7iMazing31GenericScreenItemViewController nibName];
-[_TtC7iMazing31GenericScreenItemViewController viewDidLoad];
-[_TtC7iMazing31GenericScreenItemViewController more:];
-[_TtC7iMazing31GenericScreenItemViewController cancel:];
-[_TtC7iMazing31GenericScreenItemViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing31InteractionAlertLoginController : NSViewController <_TtP7iMazing39InteractionAlertAccessoryViewController_> {
    /* instance variables */
     data;
     username;
     password;
     usernameLabel;
     checkboxTitle;
     checkboxValue;
     usernameField;
     passwordField;
     checkbox;
     privacyLabel;
}

@property (T@"UserInteractionDialogBoxData",N,&,Vdata) data;
@property (T@"NSString",N,C) username;
@property (T@"NSString",N,C) password;
@property (T@"NSString",N,C) usernameLabel;
@property (T@"NSString",N,C) checkboxTitle;
@property (Tq,N,VcheckboxValue) checkboxValue;
@property (T@"NSTextField",N,&,VusernameField) usernameField;
@property (T@"NSTextField",N,&,VpasswordField) passwordField;
@property (T@"NSButton",N,&,Vcheckbox) checkbox;
@property (T@"NSTextField",N,&,VprivacyLabel) privacyLabel;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing31InteractionAlertLoginController data];
-[_TtC7iMazing31InteractionAlertLoginController setData:];
-[_TtC7iMazing31InteractionAlertLoginController username];
-[_TtC7iMazing31InteractionAlertLoginController setUsername:];
-[_TtC7iMazing31InteractionAlertLoginController password];
-[_TtC7iMazing31InteractionAlertLoginController setPassword:];
-[_TtC7iMazing31InteractionAlertLoginController usernameLabel];
-[_TtC7iMazing31InteractionAlertLoginController setUsernameLabel:];
-[_TtC7iMazing31InteractionAlertLoginController checkboxTitle];
-[_TtC7iMazing31InteractionAlertLoginController setCheckboxTitle:];
-[_TtC7iMazing31InteractionAlertLoginController checkboxValue];
-[_TtC7iMazing31InteractionAlertLoginController setCheckboxValue:];
-[_TtC7iMazing31InteractionAlertLoginController usernameField];
-[_TtC7iMazing31InteractionAlertLoginController setUsernameField:];
-[_TtC7iMazing31InteractionAlertLoginController passwordField];
-[_TtC7iMazing31InteractionAlertLoginController setPasswordField:];
-[_TtC7iMazing31InteractionAlertLoginController checkbox];
-[_TtC7iMazing31InteractionAlertLoginController setCheckbox:];
-[_TtC7iMazing31InteractionAlertLoginController privacyLabel];
-[_TtC7iMazing31InteractionAlertLoginController setPrivacyLabel:];
-[_TtC7iMazing31InteractionAlertLoginController initWithData:];
-[_TtC7iMazing31InteractionAlertLoginController initWithCoder:];
-[_TtC7iMazing31InteractionAlertLoginController nibName];
-[_TtC7iMazing31InteractionAlertLoginController viewDidLoad];
-[_TtC7iMazing31InteractionAlertLoginController alertWillShow:];
-[_TtC7iMazing31InteractionAlertLoginController alertDidEndWithButtonIndex:];
-[_TtC7iMazing31InteractionAlertLoginController initWithNibName:bundle:];

@end

@interface _TtC7iMazing31MainWindowToolbarOperationsView : NSViewController {
    /* instance variables */
     hasNotifications;
     hasOperations;
     progressIsIndeterminate;
     progressValue;
     notificationsObserver;
     operationStartObserver;
     operationEndObserver;
     operationProgressObserver;
     flashing;
     button1;
     button2;
}

@property (TB,N,VhasNotifications) hasNotifications;
@property (TB,N,VhasOperations) hasOperations;
@property (TB,N,VprogressIsIndeterminate) progressIsIndeterminate;
@property (Td,N,VprogressValue) progressValue;
@property (T@"VKImageButton",N,&,Vbutton1) button1;
@property (T@"VKImageButton",N,&,Vbutton2) button2;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing31MainWindowToolbarOperationsView hasNotifications];
-[_TtC7iMazing31MainWindowToolbarOperationsView setHasNotifications:];
-[_TtC7iMazing31MainWindowToolbarOperationsView hasOperations];
-[_TtC7iMazing31MainWindowToolbarOperationsView setHasOperations:];
-[_TtC7iMazing31MainWindowToolbarOperationsView progressIsIndeterminate];
-[_TtC7iMazing31MainWindowToolbarOperationsView setProgressIsIndeterminate:];
-[_TtC7iMazing31MainWindowToolbarOperationsView progressValue];
-[_TtC7iMazing31MainWindowToolbarOperationsView setProgressValue:];
-[_TtC7iMazing31MainWindowToolbarOperationsView button1];
-[_TtC7iMazing31MainWindowToolbarOperationsView setButton1:];
-[_TtC7iMazing31MainWindowToolbarOperationsView button2];
-[_TtC7iMazing31MainWindowToolbarOperationsView setButton2:];
-[_TtC7iMazing31MainWindowToolbarOperationsView nibName];
-[_TtC7iMazing31MainWindowToolbarOperationsView viewDidLoad];
-[_TtC7iMazing31MainWindowToolbarOperationsView viewDidAppear];
-[_TtC7iMazing31MainWindowToolbarOperationsView showOperations:];
-[_TtC7iMazing31MainWindowToolbarOperationsView initWithNibName:bundle:];
-[_TtC7iMazing31MainWindowToolbarOperationsView initWithCoder:];

@end

@interface _TtC7iMazing31MessagesGroupHeaderTableRowView : NSTableRowView

/* instance methods */
-[_TtC7iMazing31MessagesGroupHeaderTableRowView addSubview:];
-[_TtC7iMazing31MessagesGroupHeaderTableRowView drawSeparatorInRect:];
-[_TtC7iMazing31MessagesGroupHeaderTableRowView initWithFrame:];
-[_TtC7iMazing31MessagesGroupHeaderTableRowView initWithCoder:];

@end

@interface _TtC7iMazing31NewDatasetManagerViewController : DatasetViewController <MainWindowDeviceContentViewController, DatasetManagerDelegateProtocol> {
    /* instance variables */
     mainWindowController;
     manager;
     loadViewController;
     screenData;
     statusText;
     helpURL;
     searchPlaceholder;
     searchString;
     hasRefreshFeature;
     hasQuickLookFeature;
     hasGoBackOrForwardFeature;
     hasChangeViewFeature;
     hasChangePathFeature;
     hasSearchFeature;
     hasSliderFeature;
     loadContainer;
}

@property (T@"_TtC7iMazing20MainWindowController",N,W,VmainWindowController) mainWindowController;
@property (T@"DatasetManager",N,&,Vmanager) manager;
@property (T@"_TtC7iMazing25DatasetLoadViewController",N,&,VloadViewController) loadViewController;
@property (T@"UserInteractionScreenData",N,&,VscreenData) screenData;
@property (T@"NSString",N,C) statusText;
@property (T@"NSString",N,C) helpURL;
@property (T@"NSString",N,C) searchPlaceholder;
@property (T@"NSString",N,C) searchString;
@property (TB,N,VhasRefreshFeature) hasRefreshFeature;
@property (TB,N,VhasQuickLookFeature) hasQuickLookFeature;
@property (TB,N,VhasGoBackOrForwardFeature) hasGoBackOrForwardFeature;
@property (TB,N,VhasChangeViewFeature) hasChangeViewFeature;
@property (TB,N,VhasChangePathFeature) hasChangePathFeature;
@property (TB,N,VhasSearchFeature) hasSearchFeature;
@property (TB,N,VhasSliderFeature) hasSliderFeature;
@property (T@"NSView",N,&,VloadContainer) loadContainer;

/* instance methods */
-[_TtC7iMazing31NewDatasetManagerViewController mainWindowController];
-[_TtC7iMazing31NewDatasetManagerViewController setMainWindowController:];
-[_TtC7iMazing31NewDatasetManagerViewController manager];
-[_TtC7iMazing31NewDatasetManagerViewController setManager:];
-[_TtC7iMazing31NewDatasetManagerViewController loadViewController];
-[_TtC7iMazing31NewDatasetManagerViewController setLoadViewController:];
-[_TtC7iMazing31NewDatasetManagerViewController screenData];
-[_TtC7iMazing31NewDatasetManagerViewController setScreenData:];
-[_TtC7iMazing31NewDatasetManagerViewController statusText];
-[_TtC7iMazing31NewDatasetManagerViewController setStatusText:];
-[_TtC7iMazing31NewDatasetManagerViewController helpURL];
-[_TtC7iMazing31NewDatasetManagerViewController setHelpURL:];
-[_TtC7iMazing31NewDatasetManagerViewController searchPlaceholder];
-[_TtC7iMazing31NewDatasetManagerViewController setSearchPlaceholder:];
-[_TtC7iMazing31NewDatasetManagerViewController searchString];
-[_TtC7iMazing31NewDatasetManagerViewController setSearchString:];
-[_TtC7iMazing31NewDatasetManagerViewController hasRefreshFeature];
-[_TtC7iMazing31NewDatasetManagerViewController setHasRefreshFeature:];
-[_TtC7iMazing31NewDatasetManagerViewController hasQuickLookFeature];
-[_TtC7iMazing31NewDatasetManagerViewController setHasQuickLookFeature:];
-[_TtC7iMazing31NewDatasetManagerViewController hasGoBackOrForwardFeature];
-[_TtC7iMazing31NewDatasetManagerViewController setHasGoBackOrForwardFeature:];
-[_TtC7iMazing31NewDatasetManagerViewController hasChangeViewFeature];
-[_TtC7iMazing31NewDatasetManagerViewController setHasChangeViewFeature:];
-[_TtC7iMazing31NewDatasetManagerViewController hasChangePathFeature];
-[_TtC7iMazing31NewDatasetManagerViewController setHasChangePathFeature:];
-[_TtC7iMazing31NewDatasetManagerViewController hasSearchFeature];
-[_TtC7iMazing31NewDatasetManagerViewController setHasSearchFeature:];
-[_TtC7iMazing31NewDatasetManagerViewController hasSliderFeature];
-[_TtC7iMazing31NewDatasetManagerViewController setHasSliderFeature:];
-[_TtC7iMazing31NewDatasetManagerViewController loadContainer];
-[_TtC7iMazing31NewDatasetManagerViewController setLoadContainer:];
-[_TtC7iMazing31NewDatasetManagerViewController initWithDataset:device:];
-[_TtC7iMazing31NewDatasetManagerViewController initWithDevice:];
-[_TtC7iMazing31NewDatasetManagerViewController viewDidLoad];
-[_TtC7iMazing31NewDatasetManagerViewController datasetManager:updateDidStart:];
-[_TtC7iMazing31NewDatasetManagerViewController datasetManager:updateInProgress:];
-[_TtC7iMazing31NewDatasetManagerViewController datasetManager:updateDidEnd:];
-[_TtC7iMazing31NewDatasetManagerViewController datasetManager:updateDidFailWithError:notification:];
-[_TtC7iMazing31NewDatasetManagerViewController loadData];
-[_TtC7iMazing31NewDatasetManagerViewController refreshData];
-[_TtC7iMazing31NewDatasetManagerViewController validateAction:];
-[_TtC7iMazing31NewDatasetManagerViewController validateMenuItem:];
-[_TtC7iMazing31NewDatasetManagerViewController validateToolbarItem:];
-[_TtC7iMazing31NewDatasetManagerViewController searchTextDidChange:];
-[_TtC7iMazing31NewDatasetManagerViewController initWithDataset:device:nibName:bundle:];

@end

@interface _TtC7iMazing31PodcastsTrackListViewController : _TtC7iMazing28MediaTrackListViewController

/* instance methods */
-[_TtC7iMazing31PodcastsTrackListViewController initWithCoder:];

@end

@interface _TtC7iMazing31PreferencesBackupViewController : NSViewController <NSObject> {
    /* instance variables */
     restoreBackupLocationButton;
     container;
     stackView;
     optionsStackView;
     backupLocationViewController;
     enableBackupLocationButtons;
     defaultBackupLocationObserver;
}

@property (T@"NSButton",N,&,VrestoreBackupLocationButton) restoreBackupLocationButton;
@property (T@"NSView",N,&,Vcontainer) container;
@property (T@"NSStackView",N,&,VstackView) stackView;
@property (T@"NSStackView",N,&,VoptionsStackView) optionsStackView;
@property (T@"_TtC7iMazing28BackupLocationViewController",N,&,VbackupLocationViewController) backupLocationViewController;
@property (TB,N,VenableBackupLocationButtons) enableBackupLocationButtons;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing31PreferencesBackupViewController restoreBackupLocationButton];
-[_TtC7iMazing31PreferencesBackupViewController setRestoreBackupLocationButton:];
-[_TtC7iMazing31PreferencesBackupViewController container];
-[_TtC7iMazing31PreferencesBackupViewController setContainer:];
-[_TtC7iMazing31PreferencesBackupViewController stackView];
-[_TtC7iMazing31PreferencesBackupViewController setStackView:];
-[_TtC7iMazing31PreferencesBackupViewController optionsStackView];
-[_TtC7iMazing31PreferencesBackupViewController setOptionsStackView:];
-[_TtC7iMazing31PreferencesBackupViewController backupLocationViewController];
-[_TtC7iMazing31PreferencesBackupViewController setBackupLocationViewController:];
-[_TtC7iMazing31PreferencesBackupViewController enableBackupLocationButtons];
-[_TtC7iMazing31PreferencesBackupViewController setEnableBackupLocationButtons:];
-[_TtC7iMazing31PreferencesBackupViewController nibName];
-[_TtC7iMazing31PreferencesBackupViewController awakeFromNib];
-[_TtC7iMazing31PreferencesBackupViewController viewDidAppear];
-[_TtC7iMazing31PreferencesBackupViewController restoreDefaultBackupLocation:];
-[_TtC7iMazing31PreferencesBackupViewController addBackupLocation:];
-[_TtC7iMazing31PreferencesBackupViewController removeBackupLocation:];
-[_TtC7iMazing31PreferencesBackupViewController setAsDefault:];
-[_TtC7iMazing31PreferencesBackupViewController initWithNibName:bundle:];
-[_TtC7iMazing31PreferencesBackupViewController initWithCoder:];

@end

@interface _TtC7iMazing31PreferencesPhotosViewController : NSViewController <NSObject> {
    /* instance variables */
     showPhoto;
     photoExportQualityLabel;
     videoExportQualityLabel;
     segmentedControl;
     photoExportRadioAuto;
     photoExportRadioMostCompatible;
     photoExportRadioOriginal;
     photoExportQualitySlider;
     videoExportRadioAuto;
     videoExportRadioMostCompatible;
     videoExportRadioOriginal;
     videoExportQualitySlider;
}

@property (TB,N,VshowPhoto) showPhoto;
@property (T@"NSString",N,C) photoExportQualityLabel;
@property (T@"NSString",N,C) videoExportQualityLabel;
@property (T@"NSSegmentedControl",N,&,VsegmentedControl) segmentedControl;
@property (T@"NSButton",N,&,VphotoExportRadioAuto) photoExportRadioAuto;
@property (T@"NSButton",N,&,VphotoExportRadioMostCompatible) photoExportRadioMostCompatible;
@property (T@"NSButton",N,&,VphotoExportRadioOriginal) photoExportRadioOriginal;
@property (T@"NSSlider",N,&,VphotoExportQualitySlider) photoExportQualitySlider;
@property (T@"NSButton",N,&,VvideoExportRadioAuto) videoExportRadioAuto;
@property (T@"NSButton",N,&,VvideoExportRadioMostCompatible) videoExportRadioMostCompatible;
@property (T@"NSButton",N,&,VvideoExportRadioOriginal) videoExportRadioOriginal;
@property (T@"NSSlider",N,&,VvideoExportQualitySlider) videoExportQualitySlider;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing31PreferencesPhotosViewController showPhoto];
-[_TtC7iMazing31PreferencesPhotosViewController setShowPhoto:];
-[_TtC7iMazing31PreferencesPhotosViewController photoExportQualityLabel];
-[_TtC7iMazing31PreferencesPhotosViewController setPhotoExportQualityLabel:];
-[_TtC7iMazing31PreferencesPhotosViewController videoExportQualityLabel];
-[_TtC7iMazing31PreferencesPhotosViewController setVideoExportQualityLabel:];
-[_TtC7iMazing31PreferencesPhotosViewController segmentedControl];
-[_TtC7iMazing31PreferencesPhotosViewController setSegmentedControl:];
-[_TtC7iMazing31PreferencesPhotosViewController photoExportRadioAuto];
-[_TtC7iMazing31PreferencesPhotosViewController setPhotoExportRadioAuto:];
-[_TtC7iMazing31PreferencesPhotosViewController photoExportRadioMostCompatible];
-[_TtC7iMazing31PreferencesPhotosViewController setPhotoExportRadioMostCompatible:];
-[_TtC7iMazing31PreferencesPhotosViewController photoExportRadioOriginal];
-[_TtC7iMazing31PreferencesPhotosViewController setPhotoExportRadioOriginal:];
-[_TtC7iMazing31PreferencesPhotosViewController photoExportQualitySlider];
-[_TtC7iMazing31PreferencesPhotosViewController setPhotoExportQualitySlider:];
-[_TtC7iMazing31PreferencesPhotosViewController videoExportRadioAuto];
-[_TtC7iMazing31PreferencesPhotosViewController setVideoExportRadioAuto:];
-[_TtC7iMazing31PreferencesPhotosViewController videoExportRadioMostCompatible];
-[_TtC7iMazing31PreferencesPhotosViewController setVideoExportRadioMostCompatible:];
-[_TtC7iMazing31PreferencesPhotosViewController videoExportRadioOriginal];
-[_TtC7iMazing31PreferencesPhotosViewController setVideoExportRadioOriginal:];
-[_TtC7iMazing31PreferencesPhotosViewController videoExportQualitySlider];
-[_TtC7iMazing31PreferencesPhotosViewController setVideoExportQualitySlider:];
-[_TtC7iMazing31PreferencesPhotosViewController nibName];
-[_TtC7iMazing31PreferencesPhotosViewController viewDidLoad];
-[_TtC7iMazing31PreferencesPhotosViewController switchPhotoVideo:];
-[_TtC7iMazing31PreferencesPhotosViewController viewDidAppear];
-[_TtC7iMazing31PreferencesPhotosViewController setPhotoExportFormat:];
-[_TtC7iMazing31PreferencesPhotosViewController setPhotoExportQuality:];
-[_TtC7iMazing31PreferencesPhotosViewController setVideoExportFormat:];
-[_TtC7iMazing31PreferencesPhotosViewController setVideoExportQuality:];
-[_TtC7iMazing31PreferencesPhotosViewController initWithNibName:bundle:];
-[_TtC7iMazing31PreferencesPhotosViewController initWithCoder:];

@end

@interface _TtC7iMazing31RegistrationLightBackgroundView : NSView

/* instance methods */
-[_TtC7iMazing31RegistrationLightBackgroundView drawRect:];
-[_TtC7iMazing31RegistrationLightBackgroundView initWithFrame:];
-[_TtC7iMazing31RegistrationLightBackgroundView initWithCoder:];

@end

@interface _TtC7iMazing31RegistrationStoreViewController : _TtC7iMazing36RegistrationWebContentViewController {
    /* instance variables */
     browserURL;
     onDismiss;
     onRequestDone;
     onRequestCancel;
     onSuccessfulPurchase;
}

/* instance methods */
-[_TtC7iMazing31RegistrationStoreViewController initWithCoder:];
-[_TtC7iMazing31RegistrationStoreViewController viewDidLoad];
-[_TtC7iMazing31RegistrationStoreViewController webView:decidePolicyForNavigationAction:decisionHandler:];

@end

@interface _TtC7iMazing31SuperviseWizardWindowController : WizardWindowController

/* instance methods */
-[_TtC7iMazing31SuperviseWizardWindowController initWithCoder:];
-[_TtC7iMazing31SuperviseWizardWindowController initWithTitle:device:requiresConnection:];

@end

@interface _TtC7iMazing32DeviceSettingsWiFiViewController : NSViewController <NSObject, _TtP7iMazing14IndexedElement_, _TtP7iMazing10Switchable_> {
    /* instance variables */
     infoViewContainer;
     wifiStatusButton;
     item;
     indexPath;
     isUpdatingWifi;
     wifiIsEnabled;
     infoViewController;
     statusChangedCallback;
}

@property (T@"NSView",N,&,VinfoViewContainer) infoViewContainer;
@property (T@"VKSwitch",N,&,VwifiStatusButton) wifiStatusButton;
@property (T@"_TtC7iMazing10DeviceItem",N,&,Vitem) item;
@property (T@"NSIndexPath",N,C) indexPath;
@property (TB,N,VisUpdatingWifi) isUpdatingWifi;
@property (TB,N,VwifiIsEnabled) wifiIsEnabled;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing32DeviceSettingsWiFiViewController infoViewContainer];
-[_TtC7iMazing32DeviceSettingsWiFiViewController setInfoViewContainer:];
-[_TtC7iMazing32DeviceSettingsWiFiViewController wifiStatusButton];
-[_TtC7iMazing32DeviceSettingsWiFiViewController setWifiStatusButton:];
-[_TtC7iMazing32DeviceSettingsWiFiViewController item];
-[_TtC7iMazing32DeviceSettingsWiFiViewController setItem:];
-[_TtC7iMazing32DeviceSettingsWiFiViewController indexPath];
-[_TtC7iMazing32DeviceSettingsWiFiViewController setIndexPath:];
-[_TtC7iMazing32DeviceSettingsWiFiViewController isUpdatingWifi];
-[_TtC7iMazing32DeviceSettingsWiFiViewController setIsUpdatingWifi:];
-[_TtC7iMazing32DeviceSettingsWiFiViewController wifiIsEnabled];
-[_TtC7iMazing32DeviceSettingsWiFiViewController setWifiIsEnabled:];
-[_TtC7iMazing32DeviceSettingsWiFiViewController initWithCoder:];
-[_TtC7iMazing32DeviceSettingsWiFiViewController nibName];
-[_TtC7iMazing32DeviceSettingsWiFiViewController viewDidLoad];
-[_TtC7iMazing32DeviceSettingsWiFiViewController onStatusChangedWithCallback:];
-[_TtC7iMazing32DeviceSettingsWiFiViewController changeWifi:];
-[_TtC7iMazing32DeviceSettingsWiFiViewController deviceNotificationWithNotification:];
-[_TtC7iMazing32DeviceSettingsWiFiViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing32HomeDevicesActionsViewController : NSViewController <NSTableViewDelegate, NSTableViewDataSource> {
    /* instance variables */
     onClose;
     arrayController;
     tableView;
     hasActions;
     items;
     devices;
     selectionObserver;
}

@property (T@"NSArrayController",N,&,VarrayController) arrayController;
@property (T@"NSTableView",N,&,VtableView) tableView;
@property (TB,N,VhasActions) hasActions;
@property (T@"NSArray",N,&,Vitems) items;
@property (T@"NSArray",N,C) devices;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing32HomeDevicesActionsViewController arrayController];
-[_TtC7iMazing32HomeDevicesActionsViewController setArrayController:];
-[_TtC7iMazing32HomeDevicesActionsViewController tableView];
-[_TtC7iMazing32HomeDevicesActionsViewController setTableView:];
-[_TtC7iMazing32HomeDevicesActionsViewController hasActions];
-[_TtC7iMazing32HomeDevicesActionsViewController setHasActions:];
-[_TtC7iMazing32HomeDevicesActionsViewController items];
-[_TtC7iMazing32HomeDevicesActionsViewController setItems:];
-[_TtC7iMazing32HomeDevicesActionsViewController devices];
-[_TtC7iMazing32HomeDevicesActionsViewController setDevices:];
-[_TtC7iMazing32HomeDevicesActionsViewController nibName];
-[_TtC7iMazing32HomeDevicesActionsViewController viewDidLoad];
-[_TtC7iMazing32HomeDevicesActionsViewController close:];
-[_TtC7iMazing32HomeDevicesActionsViewController tableView:rowViewForRow:];
-[_TtC7iMazing32HomeDevicesActionsViewController initWithNibName:bundle:];
-[_TtC7iMazing32HomeDevicesActionsViewController initWithCoder:];

@end

@interface _TtC7iMazing32InteractionAlertPromptController : NSViewController <_TtP7iMazing39InteractionAlertAccessoryViewController_> {
    /* instance variables */
     data;
     promptText;
     checkboxTitle;
     checkboxValue;
}

@property (T@"UserInteractionDialogBoxData",N,&,Vdata) data;
@property (T@"NSString",N,C) promptText;
@property (T@"NSString",N,C) checkboxTitle;
@property (Tq,N,VcheckboxValue) checkboxValue;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing32InteractionAlertPromptController data];
-[_TtC7iMazing32InteractionAlertPromptController setData:];
-[_TtC7iMazing32InteractionAlertPromptController promptText];
-[_TtC7iMazing32InteractionAlertPromptController setPromptText:];
-[_TtC7iMazing32InteractionAlertPromptController checkboxTitle];
-[_TtC7iMazing32InteractionAlertPromptController setCheckboxTitle:];
-[_TtC7iMazing32InteractionAlertPromptController checkboxValue];
-[_TtC7iMazing32InteractionAlertPromptController setCheckboxValue:];
-[_TtC7iMazing32InteractionAlertPromptController initWithData:];
-[_TtC7iMazing32InteractionAlertPromptController initWithCoder:];
-[_TtC7iMazing32InteractionAlertPromptController nibName];
-[_TtC7iMazing32InteractionAlertPromptController viewDidLoad];
-[_TtC7iMazing32InteractionAlertPromptController alertWillShow:];
-[_TtC7iMazing32InteractionAlertPromptController alertDidEndWithButtonIndex:];
-[_TtC7iMazing32InteractionAlertPromptController initWithNibName:bundle:];

@end

@interface _TtC7iMazing32NonPhysicalDeviceArrayController : NSArrayController

/* instance methods */
-[_TtC7iMazing32NonPhysicalDeviceArrayController initWithContent:];
-[_TtC7iMazing32NonPhysicalDeviceArrayController initWithCoder:];
-[_TtC7iMazing32NonPhysicalDeviceArrayController dealloc];

@end

@interface _TtC7iMazing32PhotoCollectionSectionHeaderView : NSView <NSDraggingSource> {
    /* instance variables */
     title;
     dateRange;
     section;
     mouseMouveLocalEvent;
     isDragging;
}

@property (T@"NSTextField",N,&,Vtitle) title;
@property (T@"NSTextField",N,&,VdateRange) dateRange;

/* instance methods */
-[_TtC7iMazing32PhotoCollectionSectionHeaderView title];
-[_TtC7iMazing32PhotoCollectionSectionHeaderView setTitle:];
-[_TtC7iMazing32PhotoCollectionSectionHeaderView dateRange];
-[_TtC7iMazing32PhotoCollectionSectionHeaderView setDateRange:];
-[_TtC7iMazing32PhotoCollectionSectionHeaderView drawRect:];
-[_TtC7iMazing32PhotoCollectionSectionHeaderView mouseUp:];
-[_TtC7iMazing32PhotoCollectionSectionHeaderView mouseDown:];
-[_TtC7iMazing32PhotoCollectionSectionHeaderView draggingSession:sourceOperationMaskForDraggingContext:];
-[_TtC7iMazing32PhotoCollectionSectionHeaderView namesOfPromisedFilesDroppedAtDestination:];
-[_TtC7iMazing32PhotoCollectionSectionHeaderView initWithFrame:];
-[_TtC7iMazing32PhotoCollectionSectionHeaderView initWithCoder:];

@end

@interface _TtC7iMazing32PhysicalIOSDeviceArrayController : NSArrayController

/* instance methods */
-[_TtC7iMazing32PhysicalIOSDeviceArrayController initWithContent:];
-[_TtC7iMazing32PhysicalIOSDeviceArrayController initWithCoder:];
-[_TtC7iMazing32PhysicalIOSDeviceArrayController dealloc];

@end

@interface _TtC7iMazing32PreferencesDevicesViewController : NSViewController <NSObject> {
    /* instance variables */
     removePariringStackView;
     removePairingButton;
}

@property (T@"NSStackView",N,&,VremovePariringStackView) removePariringStackView;
@property (T@"VKButton",N,&,VremovePairingButton) removePairingButton;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing32PreferencesDevicesViewController removePariringStackView];
-[_TtC7iMazing32PreferencesDevicesViewController setRemovePariringStackView:];
-[_TtC7iMazing32PreferencesDevicesViewController removePairingButton];
-[_TtC7iMazing32PreferencesDevicesViewController setRemovePairingButton:];
-[_TtC7iMazing32PreferencesDevicesViewController nibName];
-[_TtC7iMazing32PreferencesDevicesViewController viewDidLoad];
-[_TtC7iMazing32PreferencesDevicesViewController removeAllPairingRecords:];
-[_TtC7iMazing32PreferencesDevicesViewController initWithNibName:bundle:];
-[_TtC7iMazing32PreferencesDevicesViewController initWithCoder:];

@end

@interface _TtC7iMazing32PreferencesGeneralViewController : NSViewController <NSObject> {
    /* instance variables */
     stackView;
     clearCacheStackView;
     clearCacheButton;
     canSetAppearance;
     hasConfigurator;
     canShowConfigurator;
     allowTracking;
     analyticsInfo;
     registeredObserver;
}

@property (T@"NSStackView",N,&,VstackView) stackView;
@property (T@"NSStackView",N,&,VclearCacheStackView) clearCacheStackView;
@property (T@"VKButton",N,&,VclearCacheButton) clearCacheButton;
@property (TB,N,VcanSetAppearance) canSetAppearance;
@property (TB,N,VhasConfigurator) hasConfigurator;
@property (TB,N,VcanShowConfigurator) canShowConfigurator;
@property (TB,N,VallowTracking) allowTracking;
@property (T@"NSString",N,C) analyticsInfo;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing32PreferencesGeneralViewController stackView];
-[_TtC7iMazing32PreferencesGeneralViewController setStackView:];
-[_TtC7iMazing32PreferencesGeneralViewController clearCacheStackView];
-[_TtC7iMazing32PreferencesGeneralViewController setClearCacheStackView:];
-[_TtC7iMazing32PreferencesGeneralViewController clearCacheButton];
-[_TtC7iMazing32PreferencesGeneralViewController setClearCacheButton:];
-[_TtC7iMazing32PreferencesGeneralViewController canSetAppearance];
-[_TtC7iMazing32PreferencesGeneralViewController setCanSetAppearance:];
-[_TtC7iMazing32PreferencesGeneralViewController hasConfigurator];
-[_TtC7iMazing32PreferencesGeneralViewController setHasConfigurator:];
-[_TtC7iMazing32PreferencesGeneralViewController canShowConfigurator];
-[_TtC7iMazing32PreferencesGeneralViewController setCanShowConfigurator:];
-[_TtC7iMazing32PreferencesGeneralViewController allowTracking];
-[_TtC7iMazing32PreferencesGeneralViewController setAllowTracking:];
-[_TtC7iMazing32PreferencesGeneralViewController analyticsInfo];
-[_TtC7iMazing32PreferencesGeneralViewController setAnalyticsInfo:];
-[_TtC7iMazing32PreferencesGeneralViewController nibName];
-[_TtC7iMazing32PreferencesGeneralViewController viewDidAppear];
-[_TtC7iMazing32PreferencesGeneralViewController viewDidLoad];
-[_TtC7iMazing32PreferencesGeneralViewController clearCache:];
-[_TtC7iMazing32PreferencesGeneralViewController resetFactorySettings:];
-[_TtC7iMazing32PreferencesGeneralViewController restartMobileDeviceServices:];
-[_TtC7iMazing32PreferencesGeneralViewController initWithNibName:bundle:];
-[_TtC7iMazing32PreferencesGeneralViewController initWithCoder:];

@end

@interface _TtC7iMazing32PreferencesLibraryViewController : NSViewController <NSObject> {
    /* instance variables */
     appManagementStackView;
     appManagementSubView;
     libraryName;
     libraryIcon;
     isDefaultLibraryPath;
     libraryPath;
}

@property (T@"NSStackView",N,&,VappManagementStackView) appManagementStackView;
@property (T@"NSView",N,&,VappManagementSubView) appManagementSubView;
@property (T@"NSString",N,C) libraryName;
@property (T@"NSImage",N,&,VlibraryIcon) libraryIcon;
@property (TB,N,VisDefaultLibraryPath) isDefaultLibraryPath;
@property (T@"NSString",N,C) libraryPath;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing32PreferencesLibraryViewController appManagementStackView];
-[_TtC7iMazing32PreferencesLibraryViewController setAppManagementStackView:];
-[_TtC7iMazing32PreferencesLibraryViewController appManagementSubView];
-[_TtC7iMazing32PreferencesLibraryViewController setAppManagementSubView:];
-[_TtC7iMazing32PreferencesLibraryViewController libraryName];
-[_TtC7iMazing32PreferencesLibraryViewController setLibraryName:];
-[_TtC7iMazing32PreferencesLibraryViewController libraryIcon];
-[_TtC7iMazing32PreferencesLibraryViewController setLibraryIcon:];
-[_TtC7iMazing32PreferencesLibraryViewController isDefaultLibraryPath];
-[_TtC7iMazing32PreferencesLibraryViewController setIsDefaultLibraryPath:];
-[_TtC7iMazing32PreferencesLibraryViewController libraryPath];
-[_TtC7iMazing32PreferencesLibraryViewController setLibraryPath:];
-[_TtC7iMazing32PreferencesLibraryViewController nibName];
-[_TtC7iMazing32PreferencesLibraryViewController viewDidLoad];
-[_TtC7iMazing32PreferencesLibraryViewController viewDidAppear];
-[_TtC7iMazing32PreferencesLibraryViewController chooseLibraryLocation:];
-[_TtC7iMazing32PreferencesLibraryViewController resetDefaultLibraryLocation:];
-[_TtC7iMazing32PreferencesLibraryViewController manageOrganizations:];
-[_TtC7iMazing32PreferencesLibraryViewController manageProfiles:];
-[_TtC7iMazing32PreferencesLibraryViewController initWithNibName:bundle:];
-[_TtC7iMazing32PreferencesLibraryViewController initWithCoder:];

@end

@interface _TtC7iMazing32PreferencesNetworkViewController : NSViewController <NSObject> {
    /* instance variables */
     selectedProxyType;
     hasProxySettings;
     proxyRequiresPassword;
     domain;
     port;
     username;
     password;
     textColor;
     authTextColor;
}

@property (Tq,N,VselectedProxyType) selectedProxyType;
@property (TB,N,VhasProxySettings) hasProxySettings;
@property (TB,N,VproxyRequiresPassword) proxyRequiresPassword;
@property (T@"NSString",N,C) domain;
@property (T@"NSNumber",N,&,Vport) port;
@property (T@"NSString",N,C) username;
@property (T@"NSString",N,C) password;
@property (T@"NSColor",N,&,VtextColor) textColor;
@property (T@"NSColor",N,&,VauthTextColor) authTextColor;

/* instance methods */
-[_TtC7iMazing32PreferencesNetworkViewController selectedProxyType];
-[_TtC7iMazing32PreferencesNetworkViewController setSelectedProxyType:];
-[_TtC7iMazing32PreferencesNetworkViewController hasProxySettings];
-[_TtC7iMazing32PreferencesNetworkViewController setHasProxySettings:];
-[_TtC7iMazing32PreferencesNetworkViewController proxyRequiresPassword];
-[_TtC7iMazing32PreferencesNetworkViewController setProxyRequiresPassword:];
-[_TtC7iMazing32PreferencesNetworkViewController domain];
-[_TtC7iMazing32PreferencesNetworkViewController setDomain:];
-[_TtC7iMazing32PreferencesNetworkViewController port];
-[_TtC7iMazing32PreferencesNetworkViewController setPort:];
-[_TtC7iMazing32PreferencesNetworkViewController username];
-[_TtC7iMazing32PreferencesNetworkViewController setUsername:];
-[_TtC7iMazing32PreferencesNetworkViewController password];
-[_TtC7iMazing32PreferencesNetworkViewController setPassword:];
-[_TtC7iMazing32PreferencesNetworkViewController textColor];
-[_TtC7iMazing32PreferencesNetworkViewController setTextColor:];
-[_TtC7iMazing32PreferencesNetworkViewController authTextColor];
-[_TtC7iMazing32PreferencesNetworkViewController setAuthTextColor:];
-[_TtC7iMazing32PreferencesNetworkViewController init];
-[_TtC7iMazing32PreferencesNetworkViewController initWithCoder:];
-[_TtC7iMazing32PreferencesNetworkViewController viewDidLoad];
-[_TtC7iMazing32PreferencesNetworkViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing32PreferencesStorageViewController : NSViewController <NSObject>

@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing32PreferencesStorageViewController nibName];
-[_TtC7iMazing32PreferencesStorageViewController initWithNibName:bundle:];
-[_TtC7iMazing32PreferencesStorageViewController initWithCoder:];

@end

@interface _TtC7iMazing32RegistrationButtonViewController : NSViewController {
    /* instance variables */
     action;
     cancelAction;
     color;
     icon;
     showCancelButton;
     label1;
     label2;
     image;
     buttonView1;
     buttonView2;
     imageSpacingConstraint;
     imageSizeConstraint;
     textStyle;
     forceDark;
}

@property (T@"NSImage",N,&,Vicon) icon;
@property (TB,N,VshowCancelButton) showCancelButton;
@property (T@"VKLabel",N,&,Vlabel1) label1;
@property (T@"VKLabel",N,&,Vlabel2) label2;
@property (T@"NSImageView",N,&,Vimage) image;
@property (T@"_TtC7iMazing22RegistrationButtonView",N,&,VbuttonView1) buttonView1;
@property (T@"_TtC7iMazing22RegistrationButtonView",N,&,VbuttonView2) buttonView2;
@property (T@"NSLayoutConstraint",N,&,VimageSpacingConstraint) imageSpacingConstraint;
@property (T@"NSLayoutConstraint",N,&,VimageSizeConstraint) imageSizeConstraint;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing32RegistrationButtonViewController icon];
-[_TtC7iMazing32RegistrationButtonViewController setIcon:];
-[_TtC7iMazing32RegistrationButtonViewController showCancelButton];
-[_TtC7iMazing32RegistrationButtonViewController setShowCancelButton:];
-[_TtC7iMazing32RegistrationButtonViewController label1];
-[_TtC7iMazing32RegistrationButtonViewController setLabel1:];
-[_TtC7iMazing32RegistrationButtonViewController label2];
-[_TtC7iMazing32RegistrationButtonViewController setLabel2:];
-[_TtC7iMazing32RegistrationButtonViewController image];
-[_TtC7iMazing32RegistrationButtonViewController setImage:];
-[_TtC7iMazing32RegistrationButtonViewController buttonView1];
-[_TtC7iMazing32RegistrationButtonViewController setButtonView1:];
-[_TtC7iMazing32RegistrationButtonViewController buttonView2];
-[_TtC7iMazing32RegistrationButtonViewController setButtonView2:];
-[_TtC7iMazing32RegistrationButtonViewController imageSpacingConstraint];
-[_TtC7iMazing32RegistrationButtonViewController setImageSpacingConstraint:];
-[_TtC7iMazing32RegistrationButtonViewController imageSizeConstraint];
-[_TtC7iMazing32RegistrationButtonViewController setImageSizeConstraint:];
-[_TtC7iMazing32RegistrationButtonViewController initWithCoder:];
-[_TtC7iMazing32RegistrationButtonViewController nibName];
-[_TtC7iMazing32RegistrationButtonViewController viewDidLoad];
-[_TtC7iMazing32RegistrationButtonViewController performAction:];
-[_TtC7iMazing32RegistrationButtonViewController cancel:];
-[_TtC7iMazing32RegistrationButtonViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing32iOSStandardDeviceArrayController : NSArrayController

/* instance methods */
-[_TtC7iMazing32iOSStandardDeviceArrayController initWithContent:];
-[_TtC7iMazing32iOSStandardDeviceArrayController initWithCoder:];
-[_TtC7iMazing32iOSStandardDeviceArrayController dealloc];

@end

@interface _TtC7iMazing33AudioBooksTrackListViewController : _TtC7iMazing28MediaTrackListViewController

/* instance methods */
-[_TtC7iMazing33AudioBooksTrackListViewController initWithCoder:];

@end

@interface _TtC7iMazing33BusinessTrialWizardViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
     wizard;
     behavior;
     _awake;
     _trialVC;
     _isLast;
}

@property (T@"WizardWindowController",N,W,Vwizard) wizard;
@property (Tq,N,Vbehavior) behavior;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing33BusinessTrialWizardViewController wizard];
-[_TtC7iMazing33BusinessTrialWizardViewController setWizard:];
-[_TtC7iMazing33BusinessTrialWizardViewController behavior];
-[_TtC7iMazing33BusinessTrialWizardViewController setBehavior:];
-[_TtC7iMazing33BusinessTrialWizardViewController nibName];
-[_TtC7iMazing33BusinessTrialWizardViewController initWithCoder:];
-[_TtC7iMazing33BusinessTrialWizardViewController awakeFromNib];
-[_TtC7iMazing33BusinessTrialWizardViewController shouldBeSkipped];
-[_TtC7iMazing33BusinessTrialWizardViewController didBecomeActive];
-[_TtC7iMazing33BusinessTrialWizardViewController later];
-[_TtC7iMazing33BusinessTrialWizardViewController previewConfigurator:];
-[_TtC7iMazing33BusinessTrialWizardViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing33ConfiguratorDevicesViewController : WizardWindowController <_TtP7iMazing14IndexedElement_> {
    /* instance variables */
     indexPath;
}

@property (T@"NSIndexPath",N,C) indexPath;

/* instance methods */
-[_TtC7iMazing33ConfiguratorDevicesViewController indexPath];
-[_TtC7iMazing33ConfiguratorDevicesViewController setIndexPath:];
-[_TtC7iMazing33ConfiguratorDevicesViewController init];
-[_TtC7iMazing33ConfiguratorDevicesViewController initWithCoder:];
-[_TtC7iMazing33ConfiguratorDevicesViewController initWithTitle:device:requiresConnection:];

@end

@interface _TtC7iMazing33ConfigureBlueprintsViewController : NSViewController {
    /* instance variables */
     selectionHandler;
     modalActionName;
     modalStatusChangeHandler;
     validateModalActionHandler;
     onUseConfiguratorFeature;
     isModal;
     chooseControllerIsLoadingObserver;
     contentView;
     chooseController;
     editController;
     _isAwake;
     isLoading;
}

@property (T@"NSString",N,R) nibName;
@property (T@"NSView",N,&,VcontentView) contentView;
@property (T@"_TtC7iMazing38ConfigureChooseBlueprintViewController",N,&,VchooseController) chooseController;
@property (TB,N,VisLoading) isLoading;

/* instance methods */
-[_TtC7iMazing33ConfigureBlueprintsViewController nibName];
-[_TtC7iMazing33ConfigureBlueprintsViewController contentView];
-[_TtC7iMazing33ConfigureBlueprintsViewController setContentView:];
-[_TtC7iMazing33ConfigureBlueprintsViewController chooseController];
-[_TtC7iMazing33ConfigureBlueprintsViewController setChooseController:];
-[_TtC7iMazing33ConfigureBlueprintsViewController isLoading];
-[_TtC7iMazing33ConfigureBlueprintsViewController setIsLoading:];
-[_TtC7iMazing33ConfigureBlueprintsViewController awakeFromNib];
-[_TtC7iMazing33ConfigureBlueprintsViewController initWithNibName:bundle:];
-[_TtC7iMazing33ConfigureBlueprintsViewController initWithCoder:];

@end

@interface _TtC7iMazing33DetectSpywareWizardViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
     wizard;
     behavior;
     useLocalSTIX;
     stixFolderPath;
     logFolder;
     isExcelFormat;
     _shouldAddOptionsStep;
}

@property (T@"NSString",N,R) nibName;
@property (T@"WizardWindowController",N,W,Vwizard) wizard;
@property (Tq,N,Vbehavior) behavior;
@property (TB,N,VuseLocalSTIX) useLocalSTIX;
@property (T@"NSString",N,C) stixFolderPath;
@property (T@"NSString",N,C) logFolder;
@property (TB,N,VisExcelFormat) isExcelFormat;

/* instance methods */
-[_TtC7iMazing33DetectSpywareWizardViewController nibName];
-[_TtC7iMazing33DetectSpywareWizardViewController wizard];
-[_TtC7iMazing33DetectSpywareWizardViewController setWizard:];
-[_TtC7iMazing33DetectSpywareWizardViewController behavior];
-[_TtC7iMazing33DetectSpywareWizardViewController setBehavior:];
-[_TtC7iMazing33DetectSpywareWizardViewController useLocalSTIX];
-[_TtC7iMazing33DetectSpywareWizardViewController setUseLocalSTIX:];
-[_TtC7iMazing33DetectSpywareWizardViewController stixFolderPath];
-[_TtC7iMazing33DetectSpywareWizardViewController setStixFolderPath:];
-[_TtC7iMazing33DetectSpywareWizardViewController logFolder];
-[_TtC7iMazing33DetectSpywareWizardViewController setLogFolder:];
-[_TtC7iMazing33DetectSpywareWizardViewController isExcelFormat];
-[_TtC7iMazing33DetectSpywareWizardViewController setIsExcelFormat:];
-[_TtC7iMazing33DetectSpywareWizardViewController viewDidLoad];
-[_TtC7iMazing33DetectSpywareWizardViewController didBecomeActive];
-[_TtC7iMazing33DetectSpywareWizardViewController setSTIXSource:];
-[_TtC7iMazing33DetectSpywareWizardViewController chooseSTIXFolderClicked:];
-[_TtC7iMazing33DetectSpywareWizardViewController chooseLogFolderClicked:];
-[_TtC7iMazing33DetectSpywareWizardViewController nextClicked];
-[_TtC7iMazing33DetectSpywareWizardViewController initWithNibName:bundle:];
-[_TtC7iMazing33DetectSpywareWizardViewController initWithCoder:];

@end

@interface _TtC7iMazing33DeviceActionsWidgetViewController : NSViewController <NSTableViewDelegate, NSTableViewDataSource> {
    /* instance variables */
     item;
     searchText;
     tableView;
     arrayController;
     selectionObserver;
}

@property (T@"_TtC7iMazing10DeviceItem",N,R,Vitem) item;
@property (T@"NSString",N,C) searchText;
@property (T@"NSTableView",N,&,VtableView) tableView;
@property (T@"NSArrayController",N,&,VarrayController) arrayController;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing33DeviceActionsWidgetViewController item];
-[_TtC7iMazing33DeviceActionsWidgetViewController searchText];
-[_TtC7iMazing33DeviceActionsWidgetViewController setSearchText:];
-[_TtC7iMazing33DeviceActionsWidgetViewController tableView];
-[_TtC7iMazing33DeviceActionsWidgetViewController setTableView:];
-[_TtC7iMazing33DeviceActionsWidgetViewController arrayController];
-[_TtC7iMazing33DeviceActionsWidgetViewController setArrayController:];
-[_TtC7iMazing33DeviceActionsWidgetViewController initWithCoder:];
-[_TtC7iMazing33DeviceActionsWidgetViewController nibName];
-[_TtC7iMazing33DeviceActionsWidgetViewController viewDidLoad];
-[_TtC7iMazing33DeviceActionsWidgetViewController tableView:rowViewForRow:];
-[_TtC7iMazing33DeviceActionsWidgetViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing33HomeDiscoverSectionViewController : NSViewController {
    /* instance variables */
     items;
     controllers;
     stackView;
}

@property (T@"NSArray",N,C) items;
@property (T@"NSArray",N,C) controllers;
@property (T@"NSStackView",N,&,VstackView) stackView;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing33HomeDiscoverSectionViewController items];
-[_TtC7iMazing33HomeDiscoverSectionViewController setItems:];
-[_TtC7iMazing33HomeDiscoverSectionViewController controllers];
-[_TtC7iMazing33HomeDiscoverSectionViewController setControllers:];
-[_TtC7iMazing33HomeDiscoverSectionViewController stackView];
-[_TtC7iMazing33HomeDiscoverSectionViewController setStackView:];
-[_TtC7iMazing33HomeDiscoverSectionViewController initWithCoder:];
-[_TtC7iMazing33HomeDiscoverSectionViewController nibName];
-[_TtC7iMazing33HomeDiscoverSectionViewController viewDidLoad];
-[_TtC7iMazing33HomeDiscoverSectionViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing33InteractionAlertMessageController : NSViewController <_TtP7iMazing39InteractionAlertAccessoryViewController_> {
    /* instance variables */
     data;
     checkboxTitle;
     checkboxValue;
     textViewValue;
     checkboxView;
     progressView;
     progressConstraint;
     textViewContainer;
     textView;
     useTextView;
}

@property (T@"UserInteractionDialogBoxData",N,&,Vdata) data;
@property (T@"NSString",N,C) checkboxTitle;
@property (Tq,N,VcheckboxValue) checkboxValue;
@property (T@"NSString",N,C) textViewValue;
@property (T@"NSView",N,&,VcheckboxView) checkboxView;
@property (T@"NSView",N,&,VprogressView) progressView;
@property (T@"NSLayoutConstraint",N,&,VprogressConstraint) progressConstraint;
@property (T@"NSView",N,&,VtextViewContainer) textViewContainer;
@property (T@"NSTextView",N,&,VtextView) textView;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing33InteractionAlertMessageController data];
-[_TtC7iMazing33InteractionAlertMessageController setData:];
-[_TtC7iMazing33InteractionAlertMessageController checkboxTitle];
-[_TtC7iMazing33InteractionAlertMessageController setCheckboxTitle:];
-[_TtC7iMazing33InteractionAlertMessageController checkboxValue];
-[_TtC7iMazing33InteractionAlertMessageController setCheckboxValue:];
-[_TtC7iMazing33InteractionAlertMessageController textViewValue];
-[_TtC7iMazing33InteractionAlertMessageController setTextViewValue:];
-[_TtC7iMazing33InteractionAlertMessageController checkboxView];
-[_TtC7iMazing33InteractionAlertMessageController setCheckboxView:];
-[_TtC7iMazing33InteractionAlertMessageController progressView];
-[_TtC7iMazing33InteractionAlertMessageController setProgressView:];
-[_TtC7iMazing33InteractionAlertMessageController progressConstraint];
-[_TtC7iMazing33InteractionAlertMessageController setProgressConstraint:];
-[_TtC7iMazing33InteractionAlertMessageController textViewContainer];
-[_TtC7iMazing33InteractionAlertMessageController setTextViewContainer:];
-[_TtC7iMazing33InteractionAlertMessageController textView];
-[_TtC7iMazing33InteractionAlertMessageController setTextView:];
-[_TtC7iMazing33InteractionAlertMessageController initWithData:];
-[_TtC7iMazing33InteractionAlertMessageController initWithCoder:];
-[_TtC7iMazing33InteractionAlertMessageController nibName];
-[_TtC7iMazing33InteractionAlertMessageController viewDidLoad];
-[_TtC7iMazing33InteractionAlertMessageController alertWillShow:];
-[_TtC7iMazing33InteractionAlertMessageController alertDidEndWithButtonIndex:];
-[_TtC7iMazing33InteractionAlertMessageController initWithNibName:bundle:];

@end

@interface _TtC7iMazing33MediaVideoTrackListViewController : _TtC7iMazing27MediaBaseListViewController {
    /* instance variables */
     alreadyIniTunesColumnHeader;
     purchasedOrAppleMusicColumn;
}

@property (T@"_TtC7iMazing22MediaTracksTableColumn",N,&,ValreadyIniTunesColumnHeader) alreadyIniTunesColumnHeader;
@property (T@"_TtC7iMazing22MediaTracksTableColumn",N,&,VpurchasedOrAppleMusicColumn) purchasedOrAppleMusicColumn;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing33MediaVideoTrackListViewController alreadyIniTunesColumnHeader];
-[_TtC7iMazing33MediaVideoTrackListViewController setAlreadyIniTunesColumnHeader:];
-[_TtC7iMazing33MediaVideoTrackListViewController purchasedOrAppleMusicColumn];
-[_TtC7iMazing33MediaVideoTrackListViewController setPurchasedOrAppleMusicColumn:];
-[_TtC7iMazing33MediaVideoTrackListViewController initWithCoder:];
-[_TtC7iMazing33MediaVideoTrackListViewController nibName];

@end

@interface _TtC7iMazing33MusicMovieTrackListViewController : _TtC7iMazing33MediaVideoTrackListViewController

/* instance methods */
-[_TtC7iMazing33MusicMovieTrackListViewController initWithCoder:];

@end

@interface _TtC7iMazing33OperationDispatcherViewController : NSViewController <NSTableViewDelegate, _TtP7iMazing30UserInteractionManagerDelegate_, NSMenuDelegate> {
    /* instance variables */
     onUseConfiguratorFeature;
     arrayController;
     tableView;
     optionsMenu;
     tableMenu;
     infoPopover;
     modePopup;
     searchField;
     onlyUSB;
     _awake;
     _dispatcher;
     _dispatchHandler;
     _prevInteractionDelegate;
     logPath;
     maxOps;
     showDialogs;
     hasCheckedItems;
     applyToNew;
     selectAll;
     selectedLabel;
     autoReapply;
     showSearchField;
     isDeviceLibrary;
     timer;
     items;
     _selectedDeviceAction;
}

@property (T@"NSString",N,R) nibName;
@property (T@"NSArrayController",N,&,VarrayController) arrayController;
@property (T@"NSTableView",N,&,VtableView) tableView;
@property (T@"NSMenu",N,&,VoptionsMenu) optionsMenu;
@property (T@"NSMenu",N,&,VtableMenu) tableMenu;
@property (T@"NSPopover",N,&,VinfoPopover) infoPopover;
@property (T@"NSPopUpButton",N,&,VmodePopup) modePopup;
@property (T@"NSSearchField",N,&,VsearchField) searchField;
@property (T@"NSString",N,C) logPath;
@property (Tq,N,VmaxOps) maxOps;
@property (TB,N,VshowDialogs) showDialogs;
@property (TB,N,VhasCheckedItems) hasCheckedItems;
@property (TB,N,VapplyToNew) applyToNew;
@property (TB,N,VselectAll) selectAll;
@property (T@"NSString",N,C) selectedLabel;
@property (TB,N,VautoReapply) autoReapply;
@property (TB,N,VshowSearchField) showSearchField;
@property (TB,N,VisDeviceLibrary) isDeviceLibrary;
@property (T@"NSArray",N,C) items;

/* instance methods */
-[_TtC7iMazing33OperationDispatcherViewController nibName];
-[_TtC7iMazing33OperationDispatcherViewController arrayController];
-[_TtC7iMazing33OperationDispatcherViewController setArrayController:];
-[_TtC7iMazing33OperationDispatcherViewController tableView];
-[_TtC7iMazing33OperationDispatcherViewController setTableView:];
-[_TtC7iMazing33OperationDispatcherViewController optionsMenu];
-[_TtC7iMazing33OperationDispatcherViewController setOptionsMenu:];
-[_TtC7iMazing33OperationDispatcherViewController tableMenu];
-[_TtC7iMazing33OperationDispatcherViewController setTableMenu:];
-[_TtC7iMazing33OperationDispatcherViewController infoPopover];
-[_TtC7iMazing33OperationDispatcherViewController setInfoPopover:];
-[_TtC7iMazing33OperationDispatcherViewController modePopup];
-[_TtC7iMazing33OperationDispatcherViewController setModePopup:];
-[_TtC7iMazing33OperationDispatcherViewController searchField];
-[_TtC7iMazing33OperationDispatcherViewController setSearchField:];
-[_TtC7iMazing33OperationDispatcherViewController logPath];
-[_TtC7iMazing33OperationDispatcherViewController setLogPath:];
-[_TtC7iMazing33OperationDispatcherViewController maxOps];
-[_TtC7iMazing33OperationDispatcherViewController setMaxOps:];
-[_TtC7iMazing33OperationDispatcherViewController showDialogs];
-[_TtC7iMazing33OperationDispatcherViewController setShowDialogs:];
-[_TtC7iMazing33OperationDispatcherViewController hasCheckedItems];
-[_TtC7iMazing33OperationDispatcherViewController setHasCheckedItems:];
-[_TtC7iMazing33OperationDispatcherViewController applyToNew];
-[_TtC7iMazing33OperationDispatcherViewController setApplyToNew:];
-[_TtC7iMazing33OperationDispatcherViewController selectAll];
-[_TtC7iMazing33OperationDispatcherViewController setSelectAll:];
-[_TtC7iMazing33OperationDispatcherViewController selectedLabel];
-[_TtC7iMazing33OperationDispatcherViewController setSelectedLabel:];
-[_TtC7iMazing33OperationDispatcherViewController autoReapply];
-[_TtC7iMazing33OperationDispatcherViewController setAutoReapply:];
-[_TtC7iMazing33OperationDispatcherViewController showSearchField];
-[_TtC7iMazing33OperationDispatcherViewController setShowSearchField:];
-[_TtC7iMazing33OperationDispatcherViewController isDeviceLibrary];
-[_TtC7iMazing33OperationDispatcherViewController setIsDeviceLibrary:];
-[_TtC7iMazing33OperationDispatcherViewController items];
-[_TtC7iMazing33OperationDispatcherViewController setItems:];
-[_TtC7iMazing33OperationDispatcherViewController initWithCoder:];
-[_TtC7iMazing33OperationDispatcherViewController dealloc];
-[_TtC7iMazing33OperationDispatcherViewController awakeFromNib];
-[_TtC7iMazing33OperationDispatcherViewController viewDidAppear];
-[_TtC7iMazing33OperationDispatcherViewController viewDidDisappear];
-[_TtC7iMazing33OperationDispatcherViewController deviceStatusChangedWithNotification:];
-[_TtC7iMazing33OperationDispatcherViewController deviceInfosRefreshedWithNotification:];
-[_TtC7iMazing33OperationDispatcherViewController deviceRemovedWithNotification:];
-[_TtC7iMazing33OperationDispatcherViewController refreshFromDispatcher];
-[_TtC7iMazing33OperationDispatcherViewController maxOpsChanged:];
-[_TtC7iMazing33OperationDispatcherViewController showDialogsClicked:];
-[_TtC7iMazing33OperationDispatcherViewController autoReapplyClicked:];
-[_TtC7iMazing33OperationDispatcherViewController infoClicked:];
-[_TtC7iMazing33OperationDispatcherViewController showOptionsMenu:];
-[_TtC7iMazing33OperationDispatcherViewController selectAllClicked:];
-[_TtC7iMazing33OperationDispatcherViewController menuWillOpen:];
-[_TtC7iMazing33OperationDispatcherViewController itemChecked:];
-[_TtC7iMazing33OperationDispatcherViewController changeLogPath:];
-[_TtC7iMazing33OperationDispatcherViewController launch:];
-[_TtC7iMazing33OperationDispatcherViewController rebootDeviceClicked:];
-[_TtC7iMazing33OperationDispatcherViewController showErrorMessageClicked:];
-[_TtC7iMazing33OperationDispatcherViewController deviceActionChanged:];
-[_TtC7iMazing33OperationDispatcherViewController applyToSelected:];
-[_TtC7iMazing33OperationDispatcherViewController applyToAll:];
-[_TtC7iMazing33OperationDispatcherViewController tableView:viewForTableColumn:row:];
-[_TtC7iMazing33OperationDispatcherViewController stopRefreshButtonClickedWithItem:];
-[_TtC7iMazing33OperationDispatcherViewController pausePlayViewButtonClickedWithItem:];
-[_TtC7iMazing33OperationDispatcherViewController deviceID];
-[_TtC7iMazing33OperationDispatcherViewController locationScheme];
-[_TtC7iMazing33OperationDispatcherViewController shouldShowDialogBoxData:from:];
-[_TtC7iMazing33OperationDispatcherViewController showScreenData:];
-[_TtC7iMazing33OperationDispatcherViewController showHintData:];
-[_TtC7iMazing33OperationDispatcherViewController setSearchText:];
-[_TtC7iMazing33OperationDispatcherViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing33PhotoDetailViewCollectionViewItem : NSCollectionViewItem {
    /* instance variables */
     cachedMediaContentView;
}

/* instance methods */
-[_TtC7iMazing33PhotoDetailViewCollectionViewItem initWithNibName:bundle:];
-[_TtC7iMazing33PhotoDetailViewCollectionViewItem initWithCoder:];

@end

@interface _TtC7iMazing33RegistrationContentViewController : NSViewController {
    /* instance variables */
     parentController;
     canGoBack;
}

@property (TB,N,VcanGoBack) canGoBack;

/* instance methods */
-[_TtC7iMazing33RegistrationContentViewController canGoBack];
-[_TtC7iMazing33RegistrationContentViewController setCanGoBack:];
-[_TtC7iMazing33RegistrationContentViewController init];
-[_TtC7iMazing33RegistrationContentViewController initWithCoder:];
-[_TtC7iMazing33RegistrationContentViewController viewDidAppear];
-[_TtC7iMazing33RegistrationContentViewController viewDidDisappear];
-[_TtC7iMazing33RegistrationContentViewController back:];
-[_TtC7iMazing33RegistrationContentViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing33RegistrationDiscoverBlueBadgeView : _TtC7iMazing29RegistrationDiscoverBadgeView

/* instance methods */
-[_TtC7iMazing33RegistrationDiscoverBlueBadgeView drawRect:];
-[_TtC7iMazing33RegistrationDiscoverBlueBadgeView initWithFrame:];
-[_TtC7iMazing33RegistrationDiscoverBlueBadgeView initWithCoder:];

@end

@interface _TtC7iMazing33RegistrationDiscoverGrayBadgeView : _TtC7iMazing29RegistrationDiscoverBadgeView

/* instance methods */
-[_TtC7iMazing33RegistrationDiscoverGrayBadgeView drawRect:];
-[_TtC7iMazing33RegistrationDiscoverGrayBadgeView initWithFrame:];
-[_TtC7iMazing33RegistrationDiscoverGrayBadgeView initWithCoder:];

@end

@interface _TtC7iMazing33RegistrationMessageViewController : _TtC7iMazing33RegistrationContentViewController {
    /* instance variables */
     message;
     icon;
     button1;
     button2;
     completion;
}

@property (T@"NSString",N,C) message;
@property (T@"NSImage",N,&,Vicon) icon;
@property (T@"NSString",N,C) button1;
@property (T@"NSString",N,C) button2;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing33RegistrationMessageViewController message];
-[_TtC7iMazing33RegistrationMessageViewController setMessage:];
-[_TtC7iMazing33RegistrationMessageViewController icon];
-[_TtC7iMazing33RegistrationMessageViewController setIcon:];
-[_TtC7iMazing33RegistrationMessageViewController button1];
-[_TtC7iMazing33RegistrationMessageViewController setButton1:];
-[_TtC7iMazing33RegistrationMessageViewController button2];
-[_TtC7iMazing33RegistrationMessageViewController setButton2:];
-[_TtC7iMazing33RegistrationMessageViewController initWithCoder:];
-[_TtC7iMazing33RegistrationMessageViewController nibName];
-[_TtC7iMazing33RegistrationMessageViewController button1:];
-[_TtC7iMazing33RegistrationMessageViewController button2:];
-[_TtC7iMazing33RegistrationMessageViewController init];

@end

@interface _TtC7iMazing33RegistrationWelcomeViewController : _TtC7iMazing33RegistrationContentViewController {
    /* instance variables */
     actionViewContainer;
     actionView;
     licenseCodeView;
     messageLabel;
     buyButtonContainer;
     licenseCodeBackground;
     nameBackground;
     emailBackground;
     licenseTextField;
     nameTextField;
     emailTextField;
     swissMadeLogo;
     message;
     hideProceedButton;
     checkingLicense;
     canVerifyLicense;
     needsClientInfo;
     userName;
     userEmail;
     activationSchemeKey;
     licenseKey;
     licenseError;
     trialText;
     trialItem;
     trialNotification;
     initialDisplay;
     appearanceObserver;
     buyButton;
     continueTrialButton;
}

@property (T@"NSView",N,&,VactionViewContainer) actionViewContainer;
@property (T@"NSView",N,&,VactionView) actionView;
@property (T@"NSView",N,&,VlicenseCodeView) licenseCodeView;
@property (T@"NSTextField",N,&,VmessageLabel) messageLabel;
@property (T@"NSView",N,&,VbuyButtonContainer) buyButtonContainer;
@property (T@"_TtC7iMazing37RegistrationLicenseCodeBackgroundView",N,&,VlicenseCodeBackground) licenseCodeBackground;
@property (T@"_TtC7iMazing37RegistrationLicenseCodeBackgroundView",N,&,VnameBackground) nameBackground;
@property (T@"_TtC7iMazing37RegistrationLicenseCodeBackgroundView",N,&,VemailBackground) emailBackground;
@property (T@"VKTextField",N,&,VlicenseTextField) licenseTextField;
@property (T@"VKTextField",N,&,VnameTextField) nameTextField;
@property (T@"VKTextField",N,&,VemailTextField) emailTextField;
@property (T@"NSView",N,&,VswissMadeLogo) swissMadeLogo;
@property (T@"NSString",N,C) message;
@property (TB,N,VhideProceedButton) hideProceedButton;
@property (TB,N,VcheckingLicense) checkingLicense;
@property (TB,N,VcanVerifyLicense) canVerifyLicense;
@property (TB,N,VneedsClientInfo) needsClientInfo;
@property (T@"NSString",N,C) userName;
@property (T@"NSString",N,C) userEmail;
@property (T@"NSString",N,C) activationSchemeKey;
@property (T@"NSString",N,C) licenseKey;
@property (T@"NSString",N,C) licenseError;
@property (T@"NSString",N,C) trialText;
@property (T@"_TtC7iMazing24RegistrationDiscoverItem",N,&,VtrialItem) trialItem;
@property (T@"UINotification",N,&,VtrialNotification) trialNotification;
@property (T@"NSButton",N,&,VcontinueTrialButton) continueTrialButton;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing33RegistrationWelcomeViewController actionViewContainer];
-[_TtC7iMazing33RegistrationWelcomeViewController setActionViewContainer:];
-[_TtC7iMazing33RegistrationWelcomeViewController actionView];
-[_TtC7iMazing33RegistrationWelcomeViewController setActionView:];
-[_TtC7iMazing33RegistrationWelcomeViewController licenseCodeView];
-[_TtC7iMazing33RegistrationWelcomeViewController setLicenseCodeView:];
-[_TtC7iMazing33RegistrationWelcomeViewController messageLabel];
-[_TtC7iMazing33RegistrationWelcomeViewController setMessageLabel:];
-[_TtC7iMazing33RegistrationWelcomeViewController buyButtonContainer];
-[_TtC7iMazing33RegistrationWelcomeViewController setBuyButtonContainer:];
-[_TtC7iMazing33RegistrationWelcomeViewController licenseCodeBackground];
-[_TtC7iMazing33RegistrationWelcomeViewController setLicenseCodeBackground:];
-[_TtC7iMazing33RegistrationWelcomeViewController nameBackground];
-[_TtC7iMazing33RegistrationWelcomeViewController setNameBackground:];
-[_TtC7iMazing33RegistrationWelcomeViewController emailBackground];
-[_TtC7iMazing33RegistrationWelcomeViewController setEmailBackground:];
-[_TtC7iMazing33RegistrationWelcomeViewController licenseTextField];
-[_TtC7iMazing33RegistrationWelcomeViewController setLicenseTextField:];
-[_TtC7iMazing33RegistrationWelcomeViewController nameTextField];
-[_TtC7iMazing33RegistrationWelcomeViewController setNameTextField:];
-[_TtC7iMazing33RegistrationWelcomeViewController emailTextField];
-[_TtC7iMazing33RegistrationWelcomeViewController setEmailTextField:];
-[_TtC7iMazing33RegistrationWelcomeViewController swissMadeLogo];
-[_TtC7iMazing33RegistrationWelcomeViewController setSwissMadeLogo:];
-[_TtC7iMazing33RegistrationWelcomeViewController message];
-[_TtC7iMazing33RegistrationWelcomeViewController setMessage:];
-[_TtC7iMazing33RegistrationWelcomeViewController hideProceedButton];
-[_TtC7iMazing33RegistrationWelcomeViewController setHideProceedButton:];
-[_TtC7iMazing33RegistrationWelcomeViewController checkingLicense];
-[_TtC7iMazing33RegistrationWelcomeViewController setCheckingLicense:];
-[_TtC7iMazing33RegistrationWelcomeViewController canVerifyLicense];
-[_TtC7iMazing33RegistrationWelcomeViewController setCanVerifyLicense:];
-[_TtC7iMazing33RegistrationWelcomeViewController needsClientInfo];
-[_TtC7iMazing33RegistrationWelcomeViewController setNeedsClientInfo:];
-[_TtC7iMazing33RegistrationWelcomeViewController userName];
-[_TtC7iMazing33RegistrationWelcomeViewController setUserName:];
-[_TtC7iMazing33RegistrationWelcomeViewController userEmail];
-[_TtC7iMazing33RegistrationWelcomeViewController setUserEmail:];
-[_TtC7iMazing33RegistrationWelcomeViewController activationSchemeKey];
-[_TtC7iMazing33RegistrationWelcomeViewController setActivationSchemeKey:];
-[_TtC7iMazing33RegistrationWelcomeViewController licenseKey];
-[_TtC7iMazing33RegistrationWelcomeViewController setLicenseKey:];
-[_TtC7iMazing33RegistrationWelcomeViewController licenseError];
-[_TtC7iMazing33RegistrationWelcomeViewController setLicenseError:];
-[_TtC7iMazing33RegistrationWelcomeViewController trialText];
-[_TtC7iMazing33RegistrationWelcomeViewController setTrialText:];
-[_TtC7iMazing33RegistrationWelcomeViewController trialItem];
-[_TtC7iMazing33RegistrationWelcomeViewController setTrialItem:];
-[_TtC7iMazing33RegistrationWelcomeViewController trialNotification];
-[_TtC7iMazing33RegistrationWelcomeViewController setTrialNotification:];
-[_TtC7iMazing33RegistrationWelcomeViewController continueTrialButton];
-[_TtC7iMazing33RegistrationWelcomeViewController setContinueTrialButton:];
-[_TtC7iMazing33RegistrationWelcomeViewController nibName];
-[_TtC7iMazing33RegistrationWelcomeViewController viewDidLoad];
-[_TtC7iMazing33RegistrationWelcomeViewController viewDidAppear];
-[_TtC7iMazing33RegistrationWelcomeViewController later:];
-[_TtC7iMazing33RegistrationWelcomeViewController continueTrial:];
-[_TtC7iMazing33RegistrationWelcomeViewController buy:];
-[_TtC7iMazing33RegistrationWelcomeViewController enterLicense:];
-[_TtC7iMazing33RegistrationWelcomeViewController cancel:];
-[_TtC7iMazing33RegistrationWelcomeViewController lostLicense:];
-[_TtC7iMazing33RegistrationWelcomeViewController verifyLicenseCode:];
-[_TtC7iMazing33RegistrationWelcomeViewController discover:];
-[_TtC7iMazing33RegistrationWelcomeViewController init];
-[_TtC7iMazing33RegistrationWelcomeViewController initWithCoder:];

@end

@interface _TtC7iMazing33SuperviseWizardInfoViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
     wizard;
     behavior;
     _isAwake;
}

@property (T@"NSString",N,R) nibName;
@property (T@"WizardWindowController",N,W,Vwizard) wizard;
@property (Tq,N,Vbehavior) behavior;

/* instance methods */
-[_TtC7iMazing33SuperviseWizardInfoViewController nibName];
-[_TtC7iMazing33SuperviseWizardInfoViewController wizard];
-[_TtC7iMazing33SuperviseWizardInfoViewController setWizard:];
-[_TtC7iMazing33SuperviseWizardInfoViewController behavior];
-[_TtC7iMazing33SuperviseWizardInfoViewController setBehavior:];
-[_TtC7iMazing33SuperviseWizardInfoViewController awakeFromNib];
-[_TtC7iMazing33SuperviseWizardInfoViewController willBecomeActive];
-[_TtC7iMazing33SuperviseWizardInfoViewController didBecomeActive];
-[_TtC7iMazing33SuperviseWizardInfoViewController learnMore:];
-[_TtC7iMazing33SuperviseWizardInfoViewController initWithNibName:bundle:];
-[_TtC7iMazing33SuperviseWizardInfoViewController initWithCoder:];

@end

@interface _TtC7iMazing33VideoMovieTrackListViewController : _TtC7iMazing33MediaVideoTrackListViewController

/* instance methods */
-[_TtC7iMazing33VideoMovieTrackListViewController initWithCoder:];

@end

@interface _TtC7iMazing34BackupWizardProgressViewController : _TtC7iMazing34WizardWindowProgressViewController {
    /* instance variables */
     backupReason;
}

@property (Tq,N,VbackupReason) backupReason;

/* instance methods */
-[_TtC7iMazing34BackupWizardProgressViewController backupReason];
-[_TtC7iMazing34BackupWizardProgressViewController setBackupReason:];
-[_TtC7iMazing34BackupWizardProgressViewController init];
-[_TtC7iMazing34BackupWizardProgressViewController initWithBackupReason:];
-[_TtC7iMazing34BackupWizardProgressViewController initWithCoder:];
-[_TtC7iMazing34BackupWizardProgressViewController didBecomeActive];

@end

@interface _TtC7iMazing34BlueprintSectionAppsViewController : _TtC7iMazing34BlueprintSectionViewControllerBase <_TtP7iMazing24PlusMinusControlDelegate_, NSTableViewDataSource> {
    /* instance variables */
     manager;
     chooseAppsWC;
     singleAppItem;
     singleAppModeEnabled;
     isSigningIn;
     isSigningOut;
     appsArrayController;
     appsMenu;
     appsTableView;
     contentView;
     _dragDropHelper;
     _didSignOut;
     _loadingVC;
}

@property (T@"NSString",N,R) nibName;
@property (T@"iOSAppDisplayItem",N,&,VsingleAppItem) singleAppItem;
@property (TB,N,VsingleAppModeEnabled) singleAppModeEnabled;
@property (TB,N,VisSigningIn) isSigningIn;
@property (TB,N,VisSigningOut) isSigningOut;
@property (T@"NSArrayController",N,&,VappsArrayController) appsArrayController;
@property (T@"NSMenu",N,&,VappsMenu) appsMenu;
@property (T@"NSTableView",N,&,VappsTableView) appsTableView;
@property (T@"NSView",N,&,VcontentView) contentView;

/* instance methods */
-[_TtC7iMazing34BlueprintSectionAppsViewController nibName];
-[_TtC7iMazing34BlueprintSectionAppsViewController singleAppItem];
-[_TtC7iMazing34BlueprintSectionAppsViewController setSingleAppItem:];
-[_TtC7iMazing34BlueprintSectionAppsViewController singleAppModeEnabled];
-[_TtC7iMazing34BlueprintSectionAppsViewController setSingleAppModeEnabled:];
-[_TtC7iMazing34BlueprintSectionAppsViewController isSigningIn];
-[_TtC7iMazing34BlueprintSectionAppsViewController setIsSigningIn:];
-[_TtC7iMazing34BlueprintSectionAppsViewController isSigningOut];
-[_TtC7iMazing34BlueprintSectionAppsViewController setIsSigningOut:];
-[_TtC7iMazing34BlueprintSectionAppsViewController appsArrayController];
-[_TtC7iMazing34BlueprintSectionAppsViewController setAppsArrayController:];
-[_TtC7iMazing34BlueprintSectionAppsViewController appsMenu];
-[_TtC7iMazing34BlueprintSectionAppsViewController setAppsMenu:];
-[_TtC7iMazing34BlueprintSectionAppsViewController appsTableView];
-[_TtC7iMazing34BlueprintSectionAppsViewController setAppsTableView:];
-[_TtC7iMazing34BlueprintSectionAppsViewController contentView];
-[_TtC7iMazing34BlueprintSectionAppsViewController setContentView:];
-[_TtC7iMazing34BlueprintSectionAppsViewController initWithCoder:];
-[_TtC7iMazing34BlueprintSectionAppsViewController plusClicked:];
-[_TtC7iMazing34BlueprintSectionAppsViewController minusClicked:];
-[_TtC7iMazing34BlueprintSectionAppsViewController signInClick:];
-[_TtC7iMazing34BlueprintSectionAppsViewController signOutClick:];
-[_TtC7iMazing34BlueprintSectionAppsViewController kioskModeClick:];
-[_TtC7iMazing34BlueprintSectionAppsViewController changeAppClick:];
-[_TtC7iMazing34BlueprintSectionAppsViewController addAppFromLibrary:];
-[_TtC7iMazing34BlueprintSectionAppsViewController addAdHocAppClick:];
-[_TtC7iMazing34BlueprintSectionAppsViewController showAppMenu:];

@end

@interface _TtC7iMazing34BlueprintSectionViewControllerBase : NSViewController {
    /* instance variables */
     blueprint;
     awake;
     helpURL;
}

@property (T@"Blueprint",N,R,Vblueprint) blueprint;

/* instance methods */
-[_TtC7iMazing34BlueprintSectionViewControllerBase blueprint];
-[_TtC7iMazing34BlueprintSectionViewControllerBase initWithCoder:];
-[_TtC7iMazing34BlueprintSectionViewControllerBase awakeFromNib];
-[_TtC7iMazing34BlueprintSectionViewControllerBase initWithNibName:bundle:];

@end

@interface _TtC7iMazing34ConfiguratorProfilesViewController : WizardWindowController <_TtP7iMazing14IndexedElement_> {
    /* instance variables */
     indexPath;
}

@property (T@"NSIndexPath",N,C) indexPath;

/* instance methods */
-[_TtC7iMazing34ConfiguratorProfilesViewController indexPath];
-[_TtC7iMazing34ConfiguratorProfilesViewController setIndexPath:];
-[_TtC7iMazing34ConfiguratorProfilesViewController init];
-[_TtC7iMazing34ConfiguratorProfilesViewController initWithCoder:];
-[_TtC7iMazing34ConfiguratorProfilesViewController initWithTitle:device:requiresConnection:];

@end

@interface _TtC7iMazing34HomeDiscoverTourBaseViewController : NSViewController {
    /* instance variables */
     message;
     trackingID;
}

@property (T@"NSString",N,C) message;
@property (T@"NSString",N,C) trackingID;

/* instance methods */
-[_TtC7iMazing34HomeDiscoverTourBaseViewController message];
-[_TtC7iMazing34HomeDiscoverTourBaseViewController setMessage:];
-[_TtC7iMazing34HomeDiscoverTourBaseViewController trackingID];
-[_TtC7iMazing34HomeDiscoverTourBaseViewController setTrackingID:];
-[_TtC7iMazing34HomeDiscoverTourBaseViewController initWithNibName:bundle:];
-[_TtC7iMazing34HomeDiscoverTourBaseViewController initWithCoder:];

@end

@interface _TtC7iMazing34InteractionAlertPasswordController : NSViewController <_TtP7iMazing39InteractionAlertAccessoryViewController_> {
    /* instance variables */
     data;
     promptText;
     checkboxTitle;
     checkboxValue;
}

@property (T@"UserInteractionDialogBoxData",N,&,Vdata) data;
@property (T@"NSString",N,C) promptText;
@property (T@"NSString",N,C) checkboxTitle;
@property (Tq,N,VcheckboxValue) checkboxValue;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing34InteractionAlertPasswordController data];
-[_TtC7iMazing34InteractionAlertPasswordController setData:];
-[_TtC7iMazing34InteractionAlertPasswordController promptText];
-[_TtC7iMazing34InteractionAlertPasswordController setPromptText:];
-[_TtC7iMazing34InteractionAlertPasswordController checkboxTitle];
-[_TtC7iMazing34InteractionAlertPasswordController setCheckboxTitle:];
-[_TtC7iMazing34InteractionAlertPasswordController checkboxValue];
-[_TtC7iMazing34InteractionAlertPasswordController setCheckboxValue:];
-[_TtC7iMazing34InteractionAlertPasswordController initWithData:];
-[_TtC7iMazing34InteractionAlertPasswordController initWithCoder:];
-[_TtC7iMazing34InteractionAlertPasswordController nibName];
-[_TtC7iMazing34InteractionAlertPasswordController viewDidLoad];
-[_TtC7iMazing34InteractionAlertPasswordController alertWillShow:];
-[_TtC7iMazing34InteractionAlertPasswordController alertDidEndWithButtonIndex:];
-[_TtC7iMazing34InteractionAlertPasswordController initWithNibName:bundle:];

@end

@interface _TtC7iMazing34PhotoExportWindowProgressOperation : NSObject {
    /* instance variables */
     count;
     progress;
     label;
     showProgress;
     operation;
     timer;
     labelNoCount;
     labelWithCount;
     onProgressUUID;
     onFinishUUID;
}

@property (TQ,N,Vcount) count;
@property (TQ,N,Vprogress) progress;
@property (T@"NSString",N,C) label;
@property (TB,N,VshowProgress) showProgress;

/* instance methods */
-[_TtC7iMazing34PhotoExportWindowProgressOperation count];
-[_TtC7iMazing34PhotoExportWindowProgressOperation setCount:];
-[_TtC7iMazing34PhotoExportWindowProgressOperation progress];
-[_TtC7iMazing34PhotoExportWindowProgressOperation setProgress:];
-[_TtC7iMazing34PhotoExportWindowProgressOperation label];
-[_TtC7iMazing34PhotoExportWindowProgressOperation setLabel:];
-[_TtC7iMazing34PhotoExportWindowProgressOperation showProgress];
-[_TtC7iMazing34PhotoExportWindowProgressOperation setShowProgress:];
-[_TtC7iMazing34PhotoExportWindowProgressOperation onTimer];
-[_TtC7iMazing34PhotoExportWindowProgressOperation init];

@end

@interface _TtC7iMazing34PhotoWaitingProgressViewController : NSViewController {
    /* instance variables */
     progressIndicator;
     isAwake;
}

@property (T@"NSProgressIndicator",N,&,VprogressIndicator) progressIndicator;

/* instance methods */
-[_TtC7iMazing34PhotoWaitingProgressViewController progressIndicator];
-[_TtC7iMazing34PhotoWaitingProgressViewController setProgressIndicator:];
-[_TtC7iMazing34PhotoWaitingProgressViewController awakeFromNib];
-[_TtC7iMazing34PhotoWaitingProgressViewController initWithNibName:bundle:];
-[_TtC7iMazing34PhotoWaitingProgressViewController initWithCoder:];

@end

@interface _TtC7iMazing34PreferencesOtherDataViewController : NSViewController <NSObject> {
    /* instance variables */
     delimiterStackView;
     delimiterButton;
}

@property (T@"NSStackView",N,&,VdelimiterStackView) delimiterStackView;
@property (T@"VKPopUpButton",N,&,VdelimiterButton) delimiterButton;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing34PreferencesOtherDataViewController delimiterStackView];
-[_TtC7iMazing34PreferencesOtherDataViewController setDelimiterStackView:];
-[_TtC7iMazing34PreferencesOtherDataViewController delimiterButton];
-[_TtC7iMazing34PreferencesOtherDataViewController setDelimiterButton:];
-[_TtC7iMazing34PreferencesOtherDataViewController nibName];
-[_TtC7iMazing34PreferencesOtherDataViewController viewDidLoad];
-[_TtC7iMazing34PreferencesOtherDataViewController initWithNibName:bundle:];
-[_TtC7iMazing34PreferencesOtherDataViewController initWithCoder:];

@end

@interface _TtC7iMazing34RegistrationDiscoverGreenBadgeView : _TtC7iMazing29RegistrationDiscoverBadgeView

/* instance methods */
-[_TtC7iMazing34RegistrationDiscoverGreenBadgeView drawRect:];
-[_TtC7iMazing34RegistrationDiscoverGreenBadgeView initWithFrame:];
-[_TtC7iMazing34RegistrationDiscoverGreenBadgeView initWithCoder:];

@end

@interface _TtC7iMazing34RegistrationDiscoverViewController : _TtC7iMazing33RegistrationContentViewController {
    /* instance variables */
     items;
}

@property (T@"NSArrayController",N,&,Vitems) items;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing34RegistrationDiscoverViewController items];
-[_TtC7iMazing34RegistrationDiscoverViewController setItems:];
-[_TtC7iMazing34RegistrationDiscoverViewController nibName];
-[_TtC7iMazing34RegistrationDiscoverViewController viewDidLoad];
-[_TtC7iMazing34RegistrationDiscoverViewController continueTrial:];
-[_TtC7iMazing34RegistrationDiscoverViewController buyNow:];
-[_TtC7iMazing34RegistrationDiscoverViewController init];
-[_TtC7iMazing34RegistrationDiscoverViewController initWithCoder:];

@end

@interface _TtC7iMazing34RegistrationThankYouViewController : _TtC7iMazing33RegistrationContentViewController {
    /* instance variables */
     message;
     buttonTitle;
     closeButtonContainer;
     closeButton;
}

@property (T@"NSString",N,C) message;
@property (T@"NSString",N,C) buttonTitle;
@property (T@"NSView",N,&,VcloseButtonContainer) closeButtonContainer;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing34RegistrationThankYouViewController message];
-[_TtC7iMazing34RegistrationThankYouViewController setMessage:];
-[_TtC7iMazing34RegistrationThankYouViewController buttonTitle];
-[_TtC7iMazing34RegistrationThankYouViewController setButtonTitle:];
-[_TtC7iMazing34RegistrationThankYouViewController closeButtonContainer];
-[_TtC7iMazing34RegistrationThankYouViewController setCloseButtonContainer:];
-[_TtC7iMazing34RegistrationThankYouViewController initWithCoder:];
-[_TtC7iMazing34RegistrationThankYouViewController nibName];
-[_TtC7iMazing34RegistrationThankYouViewController viewDidLoad];
-[_TtC7iMazing34RegistrationThankYouViewController close:];
-[_TtC7iMazing34RegistrationThankYouViewController init];

@end

@interface _TtC7iMazing34StickyNotificationWindowController : NSWindowController {
    /* instance variables */
     data;
     title;
     message;
     button1;
     button2;
     icon;
     fallback;
     autoDismissTimer;
     autoDismissLock;
     visualEffectView;
}

@property (T@"UserInteractionDialogBoxData",N,&,Vdata) data;
@property (T@"NSString",N,C) title;
@property (T@"NSString",N,C) message;
@property (T@"NSString",N,C) button1;
@property (T@"NSString",N,C) button2;
@property (T@"NSImage",N,&,Vicon) icon;
@property (T@"NSVisualEffectView",N,&,VvisualEffectView) visualEffectView;
@property (T@"NSString",N,R) windowNibName;

/* class methods */
+[_TtC7iMazing34StickyNotificationWindowController showDialogBoxDataAsNotification:sender:fallback:];

/* instance methods */
-[_TtC7iMazing34StickyNotificationWindowController data];
-[_TtC7iMazing34StickyNotificationWindowController setData:];
-[_TtC7iMazing34StickyNotificationWindowController title];
-[_TtC7iMazing34StickyNotificationWindowController setTitle:];
-[_TtC7iMazing34StickyNotificationWindowController message];
-[_TtC7iMazing34StickyNotificationWindowController setMessage:];
-[_TtC7iMazing34StickyNotificationWindowController button1];
-[_TtC7iMazing34StickyNotificationWindowController setButton1:];
-[_TtC7iMazing34StickyNotificationWindowController button2];
-[_TtC7iMazing34StickyNotificationWindowController setButton2:];
-[_TtC7iMazing34StickyNotificationWindowController icon];
-[_TtC7iMazing34StickyNotificationWindowController setIcon:];
-[_TtC7iMazing34StickyNotificationWindowController visualEffectView];
-[_TtC7iMazing34StickyNotificationWindowController setVisualEffectView:];
-[_TtC7iMazing34StickyNotificationWindowController initWithCoder:];
-[_TtC7iMazing34StickyNotificationWindowController windowNibName];
-[_TtC7iMazing34StickyNotificationWindowController windowDidLoad];
-[_TtC7iMazing34StickyNotificationWindowController button1Action:];
-[_TtC7iMazing34StickyNotificationWindowController button2Action:];
-[_TtC7iMazing34StickyNotificationWindowController close];
-[_TtC7iMazing34StickyNotificationWindowController checkAutoDismiss];
-[_TtC7iMazing34StickyNotificationWindowController dismissDialog];
-[_TtC7iMazing34StickyNotificationWindowController initWithWindow:];

@end

@interface _TtC7iMazing34WizardWindowProgressViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
     lottieContainer;
     messageLabel;
     wizard;
     behavior;
     operation;
     item;
     wizardImageObserver;
     runningObserver;
     pausedObserver;
     messageObserver;
     resumeButton;
     pauseButton;
     stopButton;
     quickLookButton;
     revealButton;
     aborted;
     lottieController;
     message;
}

@property (T@"NSView",N,&,VlottieContainer) lottieContainer;
@property (T@"VKLabel",N,&,VmessageLabel) messageLabel;
@property (T@"WizardWindowController",N,&,Vwizard) wizard;
@property (Tq,N,Vbehavior) behavior;
@property (T@,N,&,Voperation) operation;
@property (T@"<_TtP7iMazing13OperationItem_>",N,&,Vitem) item;
@property (T@"_TtC7iMazing20LottieViewController",N,&,VlottieController) lottieController;
@property (T@"NSString",N,C) message;
@property (T@"NSString",N,R) nibName;
@property (T@"Device",N,R) operationDevice;

/* instance methods */
-[_TtC7iMazing34WizardWindowProgressViewController lottieContainer];
-[_TtC7iMazing34WizardWindowProgressViewController setLottieContainer:];
-[_TtC7iMazing34WizardWindowProgressViewController messageLabel];
-[_TtC7iMazing34WizardWindowProgressViewController setMessageLabel:];
-[_TtC7iMazing34WizardWindowProgressViewController wizard];
-[_TtC7iMazing34WizardWindowProgressViewController setWizard:];
-[_TtC7iMazing34WizardWindowProgressViewController behavior];
-[_TtC7iMazing34WizardWindowProgressViewController setBehavior:];
-[_TtC7iMazing34WizardWindowProgressViewController operation];
-[_TtC7iMazing34WizardWindowProgressViewController setOperation:];
-[_TtC7iMazing34WizardWindowProgressViewController item];
-[_TtC7iMazing34WizardWindowProgressViewController setItem:];
-[_TtC7iMazing34WizardWindowProgressViewController lottieController];
-[_TtC7iMazing34WizardWindowProgressViewController setLottieController:];
-[_TtC7iMazing34WizardWindowProgressViewController message];
-[_TtC7iMazing34WizardWindowProgressViewController setMessage:];
-[_TtC7iMazing34WizardWindowProgressViewController init];
-[_TtC7iMazing34WizardWindowProgressViewController initWithCoder:];
-[_TtC7iMazing34WizardWindowProgressViewController nibName];
-[_TtC7iMazing34WizardWindowProgressViewController viewDidLoad];
-[_TtC7iMazing34WizardWindowProgressViewController willBecomeActive];
-[_TtC7iMazing34WizardWindowProgressViewController didBecomeActive];
-[_TtC7iMazing34WizardWindowProgressViewController closeAndContinue];
-[_TtC7iMazing34WizardWindowProgressViewController willResignActive];
-[_TtC7iMazing34WizardWindowProgressViewController didResignActive];
-[_TtC7iMazing34WizardWindowProgressViewController shouldBeSkipped];
-[_TtC7iMazing34WizardWindowProgressViewController openSingleFile:];
-[_TtC7iMazing34WizardWindowProgressViewController operationDevice];
-[_TtC7iMazing34WizardWindowProgressViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing35BlueprintSectionSetupViewController : _TtC7iMazing34BlueprintSectionViewControllerBase {
    /* instance variables */
     placeholderImage;
     lockScreenSet;
     homeScreenSet;
     lockScreenImageView;
     homeScreenImageView;
     lockScreenDropView;
     homeScreenDropView;
     contentStackView;
     shouldSetLanguage;
     shouldSetRegion;
     stepsEnabled;
     selectedLanguage;
     selectedRegion;
     wallpapersLabel;
     countriesController;
     languagesController;
     stepsPopup;
     firstViewToHide;
     allowedImageTypes;
     hideExtraOptions;
}

@property (T@"NSString",N,R) nibName;
@property (TB,N,VlockScreenSet) lockScreenSet;
@property (TB,N,VhomeScreenSet) homeScreenSet;
@property (T@"_TtC7iMazing15AspectFillImage",N,&,VlockScreenImageView) lockScreenImageView;
@property (T@"_TtC7iMazing15AspectFillImage",N,&,VhomeScreenImageView) homeScreenImageView;
@property (T@"_TtC7iMazing13DropSuperview",N,&,VlockScreenDropView) lockScreenDropView;
@property (T@"_TtC7iMazing13DropSuperview",N,&,VhomeScreenDropView) homeScreenDropView;
@property (T@"NSStackView",N,&,VcontentStackView) contentStackView;
@property (TB,N,VshouldSetLanguage) shouldSetLanguage;
@property (TB,N,VshouldSetRegion) shouldSetRegion;
@property (TB,N,VstepsEnabled) stepsEnabled;
@property (T@"_TtC7iMazing11ISOLanguage",N,&,VselectedLanguage) selectedLanguage;
@property (T@"_TtC7iMazing10ISOCountry",N,&,VselectedRegion) selectedRegion;
@property (T@"NSString",N,C) wallpapersLabel;
@property (T@"NSArrayController",N,&,VcountriesController) countriesController;
@property (T@"NSArrayController",N,&,VlanguagesController) languagesController;
@property (T@"NSPopUpButton",N,&,VstepsPopup) stepsPopup;
@property (T@"NSView",N,&,VfirstViewToHide) firstViewToHide;

/* instance methods */
-[_TtC7iMazing35BlueprintSectionSetupViewController nibName];
-[_TtC7iMazing35BlueprintSectionSetupViewController lockScreenSet];
-[_TtC7iMazing35BlueprintSectionSetupViewController setLockScreenSet:];
-[_TtC7iMazing35BlueprintSectionSetupViewController homeScreenSet];
-[_TtC7iMazing35BlueprintSectionSetupViewController setHomeScreenSet:];
-[_TtC7iMazing35BlueprintSectionSetupViewController lockScreenImageView];
-[_TtC7iMazing35BlueprintSectionSetupViewController setLockScreenImageView:];
-[_TtC7iMazing35BlueprintSectionSetupViewController homeScreenImageView];
-[_TtC7iMazing35BlueprintSectionSetupViewController setHomeScreenImageView:];
-[_TtC7iMazing35BlueprintSectionSetupViewController lockScreenDropView];
-[_TtC7iMazing35BlueprintSectionSetupViewController setLockScreenDropView:];
-[_TtC7iMazing35BlueprintSectionSetupViewController homeScreenDropView];
-[_TtC7iMazing35BlueprintSectionSetupViewController setHomeScreenDropView:];
-[_TtC7iMazing35BlueprintSectionSetupViewController contentStackView];
-[_TtC7iMazing35BlueprintSectionSetupViewController setContentStackView:];
-[_TtC7iMazing35BlueprintSectionSetupViewController shouldSetLanguage];
-[_TtC7iMazing35BlueprintSectionSetupViewController setShouldSetLanguage:];
-[_TtC7iMazing35BlueprintSectionSetupViewController shouldSetRegion];
-[_TtC7iMazing35BlueprintSectionSetupViewController setShouldSetRegion:];
-[_TtC7iMazing35BlueprintSectionSetupViewController stepsEnabled];
-[_TtC7iMazing35BlueprintSectionSetupViewController setStepsEnabled:];
-[_TtC7iMazing35BlueprintSectionSetupViewController selectedLanguage];
-[_TtC7iMazing35BlueprintSectionSetupViewController setSelectedLanguage:];
-[_TtC7iMazing35BlueprintSectionSetupViewController selectedRegion];
-[_TtC7iMazing35BlueprintSectionSetupViewController setSelectedRegion:];
-[_TtC7iMazing35BlueprintSectionSetupViewController wallpapersLabel];
-[_TtC7iMazing35BlueprintSectionSetupViewController setWallpapersLabel:];
-[_TtC7iMazing35BlueprintSectionSetupViewController countriesController];
-[_TtC7iMazing35BlueprintSectionSetupViewController setCountriesController:];
-[_TtC7iMazing35BlueprintSectionSetupViewController languagesController];
-[_TtC7iMazing35BlueprintSectionSetupViewController setLanguagesController:];
-[_TtC7iMazing35BlueprintSectionSetupViewController stepsPopup];
-[_TtC7iMazing35BlueprintSectionSetupViewController setStepsPopup:];
-[_TtC7iMazing35BlueprintSectionSetupViewController firstViewToHide];
-[_TtC7iMazing35BlueprintSectionSetupViewController setFirstViewToHide:];
-[_TtC7iMazing35BlueprintSectionSetupViewController initWithCoder:];
-[_TtC7iMazing35BlueprintSectionSetupViewController viewDidLoad];
-[_TtC7iMazing35BlueprintSectionSetupViewController chooseLockScreen:];
-[_TtC7iMazing35BlueprintSectionSetupViewController chooseHomeScreen:];
-[_TtC7iMazing35BlueprintSectionSetupViewController removeLockScreen:];
-[_TtC7iMazing35BlueprintSectionSetupViewController removeHomeScreen:];
-[_TtC7iMazing35BlueprintSectionSetupViewController setLanguageClicked:];
-[_TtC7iMazing35BlueprintSectionSetupViewController setRegionClicked:];
-[_TtC7iMazing35BlueprintSectionSetupViewController shouldSetLanguageClick:];
-[_TtC7iMazing35BlueprintSectionSetupViewController shouldSetRegionClick:];
-[_TtC7iMazing35BlueprintSectionSetupViewController showStepsClick:];

@end

@interface _TtC7iMazing35ChooseAppFromITunesWindowController : NSWindowController {
    /* instance variables */
     _awake;
     chooseAppHandler;
     isLoading;
     title;
     includeSystemApps;
     appsArrayController;
     searchField;
     lastSearchString;
     searchText;
}

@property (T@"NSString",N,R) windowNibName;
@property (TB,N,VisLoading) isLoading;
@property (T@"NSString",N,C) title;
@property (T@"NSArrayController",N,&,VappsArrayController) appsArrayController;
@property (T@"NSTextField",N,&,VsearchField) searchField;
@property (T@"NSString",N,C) searchText;

/* instance methods */
-[_TtC7iMazing35ChooseAppFromITunesWindowController windowNibName];
-[_TtC7iMazing35ChooseAppFromITunesWindowController isLoading];
-[_TtC7iMazing35ChooseAppFromITunesWindowController setIsLoading:];
-[_TtC7iMazing35ChooseAppFromITunesWindowController title];
-[_TtC7iMazing35ChooseAppFromITunesWindowController setTitle:];
-[_TtC7iMazing35ChooseAppFromITunesWindowController appsArrayController];
-[_TtC7iMazing35ChooseAppFromITunesWindowController setAppsArrayController:];
-[_TtC7iMazing35ChooseAppFromITunesWindowController searchField];
-[_TtC7iMazing35ChooseAppFromITunesWindowController setSearchField:];
-[_TtC7iMazing35ChooseAppFromITunesWindowController searchText];
-[_TtC7iMazing35ChooseAppFromITunesWindowController setSearchText:];
-[_TtC7iMazing35ChooseAppFromITunesWindowController initWithCoder:];
-[_TtC7iMazing35ChooseAppFromITunesWindowController awakeFromNib];
-[_TtC7iMazing35ChooseAppFromITunesWindowController cancelClicked:];
-[_TtC7iMazing35ChooseAppFromITunesWindowController chooseClicked:];
-[_TtC7iMazing35ChooseAppFromITunesWindowController initWithWindow:];

@end

@interface _TtC7iMazing35DetectSpywareWizardWindowController : WizardWindowController

/* instance methods */
-[_TtC7iMazing35DetectSpywareWizardWindowController initWithCoder:];
-[_TtC7iMazing35DetectSpywareWizardWindowController initWithTitle:device:requiresConnection:];

@end

@interface _TtC7iMazing35NonPhysicalIOSDeviceArrayController : NSArrayController

/* instance methods */
-[_TtC7iMazing35NonPhysicalIOSDeviceArrayController initWithContent:];
-[_TtC7iMazing35NonPhysicalIOSDeviceArrayController initWithCoder:];
-[_TtC7iMazing35NonPhysicalIOSDeviceArrayController dealloc];

@end

@interface _TtC7iMazing35PhotoAssetsCollectionViewController : NSViewController <NSCollectionViewDelegate> {
    /* instance variables */
     assetsCollectionView;
     assetInfoDataTableView;
     multipleSelectionLabel;
     owner;
     isAwake;
     showingBurstAssets;
     operationFinishedObserver;
     selectedAssetInfoData;
     currentItem;
}

@property (T@"_TtC7iMazing25PhotoAssetsCollectionView",N,&,VassetsCollectionView) assetsCollectionView;
@property (T@"NSTableView",N,&,VassetInfoDataTableView) assetInfoDataTableView;
@property (T@"NSString",N,C) multipleSelectionLabel;
@property (T@"NSArray",N,C) selectedAssetInfoData;
@property (T@"Photo",N,&,VcurrentItem) currentItem;

/* instance methods */
-[_TtC7iMazing35PhotoAssetsCollectionViewController collectionView:didSelectItemsAtIndexPaths:];
-[_TtC7iMazing35PhotoAssetsCollectionViewController collectionView:didDeselectItemsAtIndexPaths:];
-[_TtC7iMazing35PhotoAssetsCollectionViewController collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexes:];
-[_TtC7iMazing35PhotoAssetsCollectionViewController collectionView:canDragItemsAtIndexPaths:withEvent:];
-[_TtC7iMazing35PhotoAssetsCollectionViewController collectionView:writeItemsAtIndexPaths:toPasteboard:];
-[_TtC7iMazing35PhotoAssetsCollectionViewController collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexPaths:];
-[_TtC7iMazing35PhotoAssetsCollectionViewController assetsCollectionView];
-[_TtC7iMazing35PhotoAssetsCollectionViewController setAssetsCollectionView:];
-[_TtC7iMazing35PhotoAssetsCollectionViewController assetInfoDataTableView];
-[_TtC7iMazing35PhotoAssetsCollectionViewController setAssetInfoDataTableView:];
-[_TtC7iMazing35PhotoAssetsCollectionViewController multipleSelectionLabel];
-[_TtC7iMazing35PhotoAssetsCollectionViewController setMultipleSelectionLabel:];
-[_TtC7iMazing35PhotoAssetsCollectionViewController selectedAssetInfoData];
-[_TtC7iMazing35PhotoAssetsCollectionViewController setSelectedAssetInfoData:];
-[_TtC7iMazing35PhotoAssetsCollectionViewController currentItem];
-[_TtC7iMazing35PhotoAssetsCollectionViewController setCurrentItem:];
-[_TtC7iMazing35PhotoAssetsCollectionViewController init];
-[_TtC7iMazing35PhotoAssetsCollectionViewController initWithCoder:];
-[_TtC7iMazing35PhotoAssetsCollectionViewController dealloc];
-[_TtC7iMazing35PhotoAssetsCollectionViewController awakeFromNib];
-[_TtC7iMazing35PhotoAssetsCollectionViewController viewDidLayout];
-[_TtC7iMazing35PhotoAssetsCollectionViewController onAssetInfoDataChanged:];
-[_TtC7iMazing35PhotoAssetsCollectionViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing35PhotoDetailViewCollectionScrollView : NSScrollView {
    /* instance variables */
     photoDetailViewCollectionView;
     playerWasPlaying;
     currentIndexPath;
     timer;
     wantToGoBack;
     lastDirection;
}

@property (T@"_TtC7iMazing29PhotoDetailViewCollectionView",N,&,VphotoDetailViewCollectionView) photoDetailViewCollectionView;

/* instance methods */
-[_TtC7iMazing35PhotoDetailViewCollectionScrollView photoDetailViewCollectionView];
-[_TtC7iMazing35PhotoDetailViewCollectionScrollView setPhotoDetailViewCollectionView:];
-[_TtC7iMazing35PhotoDetailViewCollectionScrollView onTimer];
-[_TtC7iMazing35PhotoDetailViewCollectionScrollView scrollWheel:];
-[_TtC7iMazing35PhotoDetailViewCollectionScrollView initWithFrame:];
-[_TtC7iMazing35PhotoDetailViewCollectionScrollView initWithCoder:];

@end

@interface _TtC7iMazing35QuickTransferProgressViewController : _TtC7iMazing34WizardWindowProgressViewController {
    /* instance variables */
     transferHelper;
     targetAppBundleID;
}

@property (T@"UniversalTransferHelper",N,&,VtransferHelper) transferHelper;
@property (T@"NSString",N,C) targetAppBundleID;

/* instance methods */
-[_TtC7iMazing35QuickTransferProgressViewController transferHelper];
-[_TtC7iMazing35QuickTransferProgressViewController setTransferHelper:];
-[_TtC7iMazing35QuickTransferProgressViewController targetAppBundleID];
-[_TtC7iMazing35QuickTransferProgressViewController setTargetAppBundleID:];
-[_TtC7iMazing35QuickTransferProgressViewController initWithHelper:targetAppBundleID:];
-[_TtC7iMazing35QuickTransferProgressViewController initWithCoder:];
-[_TtC7iMazing35QuickTransferProgressViewController didBecomeActive];
-[_TtC7iMazing35QuickTransferProgressViewController init];

@end

@interface _TtC7iMazing35RestoreWizardProgressViewController : _TtC7iMazing34WizardWindowProgressViewController

/* instance methods */
-[_TtC7iMazing35RestoreWizardProgressViewController didBecomeActive];
-[_TtC7iMazing35RestoreWizardProgressViewController shouldBeSkipped];
-[_TtC7iMazing35RestoreWizardProgressViewController init];
-[_TtC7iMazing35RestoreWizardProgressViewController initWithCoder:];

@end

@interface _TtC7iMazing36CollectionViewVerticalFlowLayoutBase : NSCollectionViewFlowLayout {
    /* instance variables */
     cachedItemsLayoutAttributes;
     cachedHeadersLayoutAttributes;
     cachedFootersLayoutAttributes;
     internalContentSize;
     internalPreviousBoundsSize;
}

@property (T{CGSize=dd},N,R) collectionViewContentSize;

/* instance methods */
-[_TtC7iMazing36CollectionViewVerticalFlowLayoutBase collectionViewContentSize];
-[_TtC7iMazing36CollectionViewVerticalFlowLayoutBase prepareLayout];
-[_TtC7iMazing36CollectionViewVerticalFlowLayoutBase shouldInvalidateLayoutForBoundsChange:];
-[_TtC7iMazing36CollectionViewVerticalFlowLayoutBase invalidateLayoutWithContext:];
-[_TtC7iMazing36CollectionViewVerticalFlowLayoutBase layoutAttributesForSupplementaryViewOfKind:atIndexPath:];
-[_TtC7iMazing36CollectionViewVerticalFlowLayoutBase layoutAttributesForItemAtIndexPath:];
-[_TtC7iMazing36CollectionViewVerticalFlowLayoutBase layoutAttributesForElementsInRect:];
-[_TtC7iMazing36CollectionViewVerticalFlowLayoutBase init];
-[_TtC7iMazing36CollectionViewVerticalFlowLayoutBase initWithCoder:];

@end

@interface _TtC7iMazing36ConfiguratorBlueprintsViewController : WizardWindowController <_TtP7iMazing14IndexedElement_> {
    /* instance variables */
     indexPath;
}

@property (T@"NSIndexPath",N,C) indexPath;

/* instance methods */
-[_TtC7iMazing36ConfiguratorBlueprintsViewController indexPath];
-[_TtC7iMazing36ConfiguratorBlueprintsViewController setIndexPath:];
-[_TtC7iMazing36ConfiguratorBlueprintsViewController init];
-[_TtC7iMazing36ConfiguratorBlueprintsViewController initWithCoder:];
-[_TtC7iMazing36ConfiguratorBlueprintsViewController initWithTitle:device:requiresConnection:];

@end

@interface _TtC7iMazing36ConfiguratorMDMServersViewController : WizardWindowController <_TtP7iMazing14IndexedElement_> {
    /* instance variables */
     indexPath;
}

@property (T@"NSIndexPath",N,C) indexPath;

/* instance methods */
-[_TtC7iMazing36ConfiguratorMDMServersViewController indexPath];
-[_TtC7iMazing36ConfiguratorMDMServersViewController setIndexPath:];
-[_TtC7iMazing36ConfiguratorMDMServersViewController init];
-[_TtC7iMazing36ConfiguratorMDMServersViewController initWithCoder:];
-[_TtC7iMazing36ConfiguratorMDMServersViewController initWithTitle:device:requiresConnection:];

@end

@interface _TtC7iMazing36ConfigureEditBlueprintViewController : NSViewController <NSTableViewDelegate> {
    /* instance variables */
     canSaveHandler;
     didSaveHandler;
     blueprint;
     isEditing;
     isLoading;
     sectionsArrayController;
     sectionDetailView;
     currentViewController;
     observations;
     lastSelectionIndex;
     _isAwake;
}

@property (T@"NSString",N,R) nibName;
@property (T@"Blueprint",N,R,Vblueprint) blueprint;
@property (TB,N,VisEditing) isEditing;
@property (TB,N,VisLoading) isLoading;
@property (T@"NSArrayController",N,&,VsectionsArrayController) sectionsArrayController;
@property (T@"NSView",N,&,VsectionDetailView) sectionDetailView;

/* instance methods */
-[_TtC7iMazing36ConfigureEditBlueprintViewController nibName];
-[_TtC7iMazing36ConfigureEditBlueprintViewController blueprint];
-[_TtC7iMazing36ConfigureEditBlueprintViewController isEditing];
-[_TtC7iMazing36ConfigureEditBlueprintViewController setIsEditing:];
-[_TtC7iMazing36ConfigureEditBlueprintViewController isLoading];
-[_TtC7iMazing36ConfigureEditBlueprintViewController setIsLoading:];
-[_TtC7iMazing36ConfigureEditBlueprintViewController sectionsArrayController];
-[_TtC7iMazing36ConfigureEditBlueprintViewController setSectionsArrayController:];
-[_TtC7iMazing36ConfigureEditBlueprintViewController sectionDetailView];
-[_TtC7iMazing36ConfigureEditBlueprintViewController setSectionDetailView:];
-[_TtC7iMazing36ConfigureEditBlueprintViewController initWithCoder:];
-[_TtC7iMazing36ConfigureEditBlueprintViewController dealloc];
-[_TtC7iMazing36ConfigureEditBlueprintViewController awakeFromNib];
-[_TtC7iMazing36ConfigureEditBlueprintViewController saveBlueprint];
-[_TtC7iMazing36ConfigureEditBlueprintViewController tableViewSelectionDidChange:];
-[_TtC7iMazing36ConfigureEditBlueprintViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing36DiskUsageDetailsWidgetViewController : NSViewController {
    /* instance variables */
     item;
     controller;
     observer;
     appearanceObserver;
     titleExtra;
     subtitle;
     infoController;
     hasPurgeableData;
     showPurgeableData;
     containerView;
     infoStackView;
}

@property (T@"_TtC7iMazing10DeviceItem",N,R,Vitem) item;
@property (T@"NSString",N,C) titleExtra;
@property (T@"NSString",N,C) subtitle;
@property (T@"VKInfoViewController",N,&,VinfoController) infoController;
@property (TB,N,VhasPurgeableData) hasPurgeableData;
@property (TB,N,VshowPurgeableData) showPurgeableData;
@property (T@"NSView",N,&,VcontainerView) containerView;
@property (T@"NSStackView",N,&,VinfoStackView) infoStackView;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing36DiskUsageDetailsWidgetViewController item];
-[_TtC7iMazing36DiskUsageDetailsWidgetViewController titleExtra];
-[_TtC7iMazing36DiskUsageDetailsWidgetViewController setTitleExtra:];
-[_TtC7iMazing36DiskUsageDetailsWidgetViewController subtitle];
-[_TtC7iMazing36DiskUsageDetailsWidgetViewController setSubtitle:];
-[_TtC7iMazing36DiskUsageDetailsWidgetViewController infoController];
-[_TtC7iMazing36DiskUsageDetailsWidgetViewController setInfoController:];
-[_TtC7iMazing36DiskUsageDetailsWidgetViewController hasPurgeableData];
-[_TtC7iMazing36DiskUsageDetailsWidgetViewController setHasPurgeableData:];
-[_TtC7iMazing36DiskUsageDetailsWidgetViewController showPurgeableData];
-[_TtC7iMazing36DiskUsageDetailsWidgetViewController setShowPurgeableData:];
-[_TtC7iMazing36DiskUsageDetailsWidgetViewController containerView];
-[_TtC7iMazing36DiskUsageDetailsWidgetViewController setContainerView:];
-[_TtC7iMazing36DiskUsageDetailsWidgetViewController infoStackView];
-[_TtC7iMazing36DiskUsageDetailsWidgetViewController setInfoStackView:];
-[_TtC7iMazing36DiskUsageDetailsWidgetViewController initWithCoder:];
-[_TtC7iMazing36DiskUsageDetailsWidgetViewController nibName];
-[_TtC7iMazing36DiskUsageDetailsWidgetViewController viewDidLoad];
-[_TtC7iMazing36DiskUsageDetailsWidgetViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing36HomeDiscoverSectionRowViewController : NSViewController {
    /* instance variables */
     item1;
     item2;
     highlightView1;
     highlightView2;
}

@property (T@"_TtC7iMazing16HomeDiscoverItem",N,&,Vitem1) item1;
@property (T@"_TtC7iMazing16HomeDiscoverItem",N,&,Vitem2) item2;
@property (T@"VKHighlightView",N,&,VhighlightView1) highlightView1;
@property (T@"VKHighlightView",N,&,VhighlightView2) highlightView2;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing36HomeDiscoverSectionRowViewController item1];
-[_TtC7iMazing36HomeDiscoverSectionRowViewController setItem1:];
-[_TtC7iMazing36HomeDiscoverSectionRowViewController item2];
-[_TtC7iMazing36HomeDiscoverSectionRowViewController setItem2:];
-[_TtC7iMazing36HomeDiscoverSectionRowViewController highlightView1];
-[_TtC7iMazing36HomeDiscoverSectionRowViewController setHighlightView1:];
-[_TtC7iMazing36HomeDiscoverSectionRowViewController highlightView2];
-[_TtC7iMazing36HomeDiscoverSectionRowViewController setHighlightView2:];
-[_TtC7iMazing36HomeDiscoverSectionRowViewController initWithCoder:];
-[_TtC7iMazing36HomeDiscoverSectionRowViewController nibName];
-[_TtC7iMazing36HomeDiscoverSectionRowViewController item1Action:];
-[_TtC7iMazing36HomeDiscoverSectionRowViewController item2Action:];
-[_TtC7iMazing36HomeDiscoverSectionRowViewController viewDidDisappear];
-[_TtC7iMazing36HomeDiscoverSectionRowViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing36PhotoDetailViewItemContentController : NSViewController <NSMenuDelegate> {
    /* instance variables */
     imageView;
     playerView;
     extractLargeMediaButton;
     waitingLargeMediaProgressIndicator;
     multipleSelectionLabel;
     playerStatusObserver;
     cacheMediaPathObserver;
     currentCacheMediaPath;
     isAwake;
     onDoubleClick;
}

@property (T@"NSImageView",N,&,VimageView) imageView;
@property (T@"_TtC7iMazing27PhotoDetailViewAVPlayerView",N,&,VplayerView) playerView;
@property (T@"NSButton",N,&,VextractLargeMediaButton) extractLargeMediaButton;
@property (T@"NSProgressIndicator",N,&,VwaitingLargeMediaProgressIndicator) waitingLargeMediaProgressIndicator;
@property (T@"NSString",N,C) multipleSelectionLabel;

/* instance methods */
-[_TtC7iMazing36PhotoDetailViewItemContentController imageView];
-[_TtC7iMazing36PhotoDetailViewItemContentController setImageView:];
-[_TtC7iMazing36PhotoDetailViewItemContentController playerView];
-[_TtC7iMazing36PhotoDetailViewItemContentController setPlayerView:];
-[_TtC7iMazing36PhotoDetailViewItemContentController extractLargeMediaButton];
-[_TtC7iMazing36PhotoDetailViewItemContentController setExtractLargeMediaButton:];
-[_TtC7iMazing36PhotoDetailViewItemContentController waitingLargeMediaProgressIndicator];
-[_TtC7iMazing36PhotoDetailViewItemContentController setWaitingLargeMediaProgressIndicator:];
-[_TtC7iMazing36PhotoDetailViewItemContentController multipleSelectionLabel];
-[_TtC7iMazing36PhotoDetailViewItemContentController setMultipleSelectionLabel:];
-[_TtC7iMazing36PhotoDetailViewItemContentController initWithNibName:bundle:];
-[_TtC7iMazing36PhotoDetailViewItemContentController initWithCoder:];
-[_TtC7iMazing36PhotoDetailViewItemContentController dealloc];
-[_TtC7iMazing36PhotoDetailViewItemContentController macOSCanPlayVideos];
-[_TtC7iMazing36PhotoDetailViewItemContentController awakeFromNib];
-[_TtC7iMazing36PhotoDetailViewItemContentController onExtractLargeMediaButton:];
-[_TtC7iMazing36PhotoDetailViewItemContentController onPlayerItemDidReachEnd:];
-[_TtC7iMazing36PhotoDetailViewItemContentController onEntredPhotoAVPlayerView:];
-[_TtC7iMazing36PhotoDetailViewItemContentController onPhotoAssetSelectionChanged:];
-[_TtC7iMazing36PhotoDetailViewItemContentController menuWillOpen:];

@end

@interface _TtC7iMazing36QuickTransferAnimationViewController : NSViewController {
    /* instance variables */
     animationView;
     imageView1;
     imageView2;
     infoLabel;
     animation;
     positionAdjusted;
}

@property (T@"NSView",N,&,VanimationView) animationView;
@property (T@"NSImageView",N,&,VimageView1) imageView1;
@property (T@"NSImageView",N,&,VimageView2) imageView2;
@property (T@"NSString",N,C) infoLabel;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing36QuickTransferAnimationViewController animationView];
-[_TtC7iMazing36QuickTransferAnimationViewController setAnimationView:];
-[_TtC7iMazing36QuickTransferAnimationViewController imageView1];
-[_TtC7iMazing36QuickTransferAnimationViewController setImageView1:];
-[_TtC7iMazing36QuickTransferAnimationViewController imageView2];
-[_TtC7iMazing36QuickTransferAnimationViewController setImageView2:];
-[_TtC7iMazing36QuickTransferAnimationViewController infoLabel];
-[_TtC7iMazing36QuickTransferAnimationViewController setInfoLabel:];
-[_TtC7iMazing36QuickTransferAnimationViewController nibName];
-[_TtC7iMazing36QuickTransferAnimationViewController viewDidLoad];
-[_TtC7iMazing36QuickTransferAnimationViewController viewDidLayout];
-[_TtC7iMazing36QuickTransferAnimationViewController play];
-[_TtC7iMazing36QuickTransferAnimationViewController stop];
-[_TtC7iMazing36QuickTransferAnimationViewController initWithNibName:bundle:];
-[_TtC7iMazing36QuickTransferAnimationViewController initWithCoder:];

@end

@interface _TtC7iMazing36RegistrationWebContentViewController : _TtC7iMazing33RegistrationContentViewController <WKUIDelegate, WKNavigationDelegate> {
    /* instance variables */
     webViewContainer;
     webView;
     popupWindow;
     loading;
     error;
     url;
     openInBrowserAction;
}

@property (T@"WKWebView",N,&,VwebViewContainer) webViewContainer;
@property (TB,N,Vloading) loading;
@property (T@"NSError",N,C) error;
@property (T@"NSURL",N,C) url;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing36RegistrationWebContentViewController webViewContainer];
-[_TtC7iMazing36RegistrationWebContentViewController setWebViewContainer:];
-[_TtC7iMazing36RegistrationWebContentViewController loading];
-[_TtC7iMazing36RegistrationWebContentViewController setLoading:];
-[_TtC7iMazing36RegistrationWebContentViewController error];
-[_TtC7iMazing36RegistrationWebContentViewController setError:];
-[_TtC7iMazing36RegistrationWebContentViewController url];
-[_TtC7iMazing36RegistrationWebContentViewController setUrl:];
-[_TtC7iMazing36RegistrationWebContentViewController initWithCoder:];
-[_TtC7iMazing36RegistrationWebContentViewController nibName];
-[_TtC7iMazing36RegistrationWebContentViewController viewDidLoad];
-[_TtC7iMazing36RegistrationWebContentViewController openInBrowser:];
-[_TtC7iMazing36RegistrationWebContentViewController refresh:];
-[_TtC7iMazing36RegistrationWebContentViewController close:];
-[_TtC7iMazing36RegistrationWebContentViewController webView:decidePolicyForNavigationAction:decisionHandler:];
-[_TtC7iMazing36RegistrationWebContentViewController webView:didFinishNavigation:];
-[_TtC7iMazing36RegistrationWebContentViewController webView:createWebViewWithConfiguration:forNavigationAction:windowFeatures:];
-[_TtC7iMazing36RegistrationWebContentViewController webView:didFailProvisionalNavigation:withError:];
-[_TtC7iMazing36RegistrationWebContentViewController webView:didFailNavigation:withError:];
-[_TtC7iMazing36RegistrationWebContentViewController init];

@end

@interface _TtC7iMazing36RegistrationWebPopupWindowController : NSWindowController <WKUIDelegate, WKNavigationDelegate> {
    /* instance variables */
     webView;
}

@property (T@"WKWebView",N,&,VwebView) webView;
@property (T@"NSString",N,R) windowNibName;

/* instance methods */
-[_TtC7iMazing36RegistrationWebPopupWindowController webView];
-[_TtC7iMazing36RegistrationWebPopupWindowController setWebView:];
-[_TtC7iMazing36RegistrationWebPopupWindowController initWithWebView:];
-[_TtC7iMazing36RegistrationWebPopupWindowController initWithCoder:];
-[_TtC7iMazing36RegistrationWebPopupWindowController windowNibName];
-[_TtC7iMazing36RegistrationWebPopupWindowController windowDidLoad];
-[_TtC7iMazing36RegistrationWebPopupWindowController webView:decidePolicyForNavigationAction:decisionHandler:];
-[_TtC7iMazing36RegistrationWebPopupWindowController webView:didFinishNavigation:];
-[_TtC7iMazing36RegistrationWebPopupWindowController webView:didFailProvisionalNavigation:withError:];
-[_TtC7iMazing36RegistrationWebPopupWindowController webView:didFailNavigation:withError:];
-[_TtC7iMazing36RegistrationWebPopupWindowController initWithWindow:];

@end

@interface _TtC7iMazing36SuperviseWizardActionsViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
     wizard;
     behavior;
     _awake;
     _device;
     _observations;
     settingsVC;
}

@property (T@"WizardWindowController",N,W,Vwizard) wizard;
@property (Tq,N,Vbehavior) behavior;
@property (T@"NSString",N,R) nibName;
@property (T@"_TtC7iMazing27DeviceOptionsViewController",N,&,VsettingsVC) settingsVC;

/* instance methods */
-[_TtC7iMazing36SuperviseWizardActionsViewController wizard];
-[_TtC7iMazing36SuperviseWizardActionsViewController setWizard:];
-[_TtC7iMazing36SuperviseWizardActionsViewController behavior];
-[_TtC7iMazing36SuperviseWizardActionsViewController setBehavior:];
-[_TtC7iMazing36SuperviseWizardActionsViewController nibName];
-[_TtC7iMazing36SuperviseWizardActionsViewController settingsVC];
-[_TtC7iMazing36SuperviseWizardActionsViewController setSettingsVC:];
-[_TtC7iMazing36SuperviseWizardActionsViewController initWithDevice:];
-[_TtC7iMazing36SuperviseWizardActionsViewController initWithCoder:];
-[_TtC7iMazing36SuperviseWizardActionsViewController dealloc];
-[_TtC7iMazing36SuperviseWizardActionsViewController awakeFromNib];
-[_TtC7iMazing36SuperviseWizardActionsViewController didBecomeActive];
-[_TtC7iMazing36SuperviseWizardActionsViewController applyClicked];
-[_TtC7iMazing36SuperviseWizardActionsViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing36SuperviseWizardConfirmViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
     wizard;
     behavior;
     _isAwake;
     infoText;
     verificationText;
     icon;
     verifString;
     bypassString;
     _observations;
}

@property (T@"NSString",N,R) nibName;
@property (T@"WizardWindowController",N,W,Vwizard) wizard;
@property (Tq,N,Vbehavior) behavior;
@property (T@"NSString",N,C) infoText;
@property (T@"NSString",N,C) verificationText;
@property (T@"NSImage",N,&,Vicon) icon;

/* instance methods */
-[_TtC7iMazing36SuperviseWizardConfirmViewController nibName];
-[_TtC7iMazing36SuperviseWizardConfirmViewController wizard];
-[_TtC7iMazing36SuperviseWizardConfirmViewController setWizard:];
-[_TtC7iMazing36SuperviseWizardConfirmViewController behavior];
-[_TtC7iMazing36SuperviseWizardConfirmViewController setBehavior:];
-[_TtC7iMazing36SuperviseWizardConfirmViewController infoText];
-[_TtC7iMazing36SuperviseWizardConfirmViewController setInfoText:];
-[_TtC7iMazing36SuperviseWizardConfirmViewController verificationText];
-[_TtC7iMazing36SuperviseWizardConfirmViewController setVerificationText:];
-[_TtC7iMazing36SuperviseWizardConfirmViewController icon];
-[_TtC7iMazing36SuperviseWizardConfirmViewController setIcon:];
-[_TtC7iMazing36SuperviseWizardConfirmViewController awakeFromNib];
-[_TtC7iMazing36SuperviseWizardConfirmViewController willBecomeActive];
-[_TtC7iMazing36SuperviseWizardConfirmViewController didBecomeActive];
-[_TtC7iMazing36SuperviseWizardConfirmViewController supervise];
-[_TtC7iMazing36SuperviseWizardConfirmViewController initWithNibName:bundle:];
-[_TtC7iMazing36SuperviseWizardConfirmViewController initWithCoder:];

@end

@interface _TtC7iMazing37BackupLocationAnimationViewController : NSViewController {
    /* instance variables */
     animationView;
     imageView1;
     imageView2;
     infoLabel;
     animation;
     positionAdjusted;
}

@property (T@"NSView",N,&,VanimationView) animationView;
@property (T@"NSImageView",N,&,VimageView1) imageView1;
@property (T@"NSImageView",N,&,VimageView2) imageView2;
@property (T@"NSString",N,C) infoLabel;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing37BackupLocationAnimationViewController animationView];
-[_TtC7iMazing37BackupLocationAnimationViewController setAnimationView:];
-[_TtC7iMazing37BackupLocationAnimationViewController imageView1];
-[_TtC7iMazing37BackupLocationAnimationViewController setImageView1:];
-[_TtC7iMazing37BackupLocationAnimationViewController imageView2];
-[_TtC7iMazing37BackupLocationAnimationViewController setImageView2:];
-[_TtC7iMazing37BackupLocationAnimationViewController infoLabel];
-[_TtC7iMazing37BackupLocationAnimationViewController setInfoLabel:];
-[_TtC7iMazing37BackupLocationAnimationViewController nibName];
-[_TtC7iMazing37BackupLocationAnimationViewController viewDidLoad];
-[_TtC7iMazing37BackupLocationAnimationViewController viewDidLayout];
-[_TtC7iMazing37BackupLocationAnimationViewController play];
-[_TtC7iMazing37BackupLocationAnimationViewController stop];
-[_TtC7iMazing37BackupLocationAnimationViewController initWithNibName:bundle:];
-[_TtC7iMazing37BackupLocationAnimationViewController initWithCoder:];

@end

@interface _TtC7iMazing37BlueprintSectionActionsViewController : _TtC7iMazing34BlueprintSectionViewControllerBase {
    /* instance variables */
     backupLabel;
     hasLaunchApp;
     launchApp;
     failsIfBatteryHealthChecked;
     batteryHealthPopupSelectedIndex;
     eraseWarningText;
     showEraseWarning;
     isMDMErase;
     showEraseOptions;
     shouldUninstallApps;
     uninstallAppsDetailString;
     backupPopupButton;
     backupBeforeEncryptRadioButton;
     backupBeforeDontEncryptRadioButton;
     backupsWC;
     chooseAppWC;
     chooseAppsToUninstallWC;
}

@property (T@"NSString",N,R) nibName;
@property (T@"NSString",N,C) backupLabel;
@property (TB,N,VhasLaunchApp) hasLaunchApp;
@property (T@"iOSAppDisplayItem",N,&,VlaunchApp) launchApp;
@property (TB,N,VfailsIfBatteryHealthChecked) failsIfBatteryHealthChecked;
@property (Tq,N,VbatteryHealthPopupSelectedIndex) batteryHealthPopupSelectedIndex;
@property (T@"NSString",N,C) eraseWarningText;
@property (TB,N,VshowEraseWarning) showEraseWarning;
@property (TB,N,VisMDMErase) isMDMErase;
@property (TB,N,VshowEraseOptions) showEraseOptions;
@property (TB,N,VshouldUninstallApps) shouldUninstallApps;
@property (T@"NSString",N,C) uninstallAppsDetailString;
@property (T@"NSPopUpButton",N,&,VbackupPopupButton) backupPopupButton;
@property (T@"NSButton",N,&,VbackupBeforeEncryptRadioButton) backupBeforeEncryptRadioButton;
@property (T@"NSButton",N,&,VbackupBeforeDontEncryptRadioButton) backupBeforeDontEncryptRadioButton;
@property (TB,N,R) restoreBackupOptionsEnabled;

/* class methods */
+[_TtC7iMazing37BlueprintSectionActionsViewController keyPathsForValuesAffectingRestoreBackupOptionsEnabled];

/* instance methods */
-[_TtC7iMazing37BlueprintSectionActionsViewController nibName];
-[_TtC7iMazing37BlueprintSectionActionsViewController backupLabel];
-[_TtC7iMazing37BlueprintSectionActionsViewController setBackupLabel:];
-[_TtC7iMazing37BlueprintSectionActionsViewController hasLaunchApp];
-[_TtC7iMazing37BlueprintSectionActionsViewController setHasLaunchApp:];
-[_TtC7iMazing37BlueprintSectionActionsViewController launchApp];
-[_TtC7iMazing37BlueprintSectionActionsViewController setLaunchApp:];
-[_TtC7iMazing37BlueprintSectionActionsViewController failsIfBatteryHealthChecked];
-[_TtC7iMazing37BlueprintSectionActionsViewController setFailsIfBatteryHealthChecked:];
-[_TtC7iMazing37BlueprintSectionActionsViewController batteryHealthPopupSelectedIndex];
-[_TtC7iMazing37BlueprintSectionActionsViewController setBatteryHealthPopupSelectedIndex:];
-[_TtC7iMazing37BlueprintSectionActionsViewController eraseWarningText];
-[_TtC7iMazing37BlueprintSectionActionsViewController setEraseWarningText:];
-[_TtC7iMazing37BlueprintSectionActionsViewController showEraseWarning];
-[_TtC7iMazing37BlueprintSectionActionsViewController setShowEraseWarning:];
-[_TtC7iMazing37BlueprintSectionActionsViewController isMDMErase];
-[_TtC7iMazing37BlueprintSectionActionsViewController setIsMDMErase:];
-[_TtC7iMazing37BlueprintSectionActionsViewController showEraseOptions];
-[_TtC7iMazing37BlueprintSectionActionsViewController setShowEraseOptions:];
-[_TtC7iMazing37BlueprintSectionActionsViewController shouldUninstallApps];
-[_TtC7iMazing37BlueprintSectionActionsViewController setShouldUninstallApps:];
-[_TtC7iMazing37BlueprintSectionActionsViewController uninstallAppsDetailString];
-[_TtC7iMazing37BlueprintSectionActionsViewController setUninstallAppsDetailString:];
-[_TtC7iMazing37BlueprintSectionActionsViewController backupPopupButton];
-[_TtC7iMazing37BlueprintSectionActionsViewController setBackupPopupButton:];
-[_TtC7iMazing37BlueprintSectionActionsViewController backupBeforeEncryptRadioButton];
-[_TtC7iMazing37BlueprintSectionActionsViewController setBackupBeforeEncryptRadioButton:];
-[_TtC7iMazing37BlueprintSectionActionsViewController backupBeforeDontEncryptRadioButton];
-[_TtC7iMazing37BlueprintSectionActionsViewController setBackupBeforeDontEncryptRadioButton:];
-[_TtC7iMazing37BlueprintSectionActionsViewController restoreBackupOptionsEnabled];
-[_TtC7iMazing37BlueprintSectionActionsViewController initWithCoder:];
-[_TtC7iMazing37BlueprintSectionActionsViewController chooseBackup:];
-[_TtC7iMazing37BlueprintSectionActionsViewController eraseDeviceClicked:];
-[_TtC7iMazing37BlueprintSectionActionsViewController shouldRestoreBackupClicked:];
-[_TtC7iMazing37BlueprintSectionActionsViewController restoreLastBackupClicked:];
-[_TtC7iMazing37BlueprintSectionActionsViewController shouldSetBackupPasswordClicked:];
-[_TtC7iMazing37BlueprintSectionActionsViewController backupOnceDoneClicked:];
-[_TtC7iMazing37BlueprintSectionActionsViewController launchAppCheckboxClicked:];
-[_TtC7iMazing37BlueprintSectionActionsViewController showChooseLaunchApp:];
-[_TtC7iMazing37BlueprintSectionActionsViewController uninstallAppsClicked:];
-[_TtC7iMazing37BlueprintSectionActionsViewController changeAppsToUninstall:];
-[_TtC7iMazing37BlueprintSectionActionsViewController backupBeforeClicked:];
-[_TtC7iMazing37BlueprintSectionActionsViewController backupBeforeSetEncryptionClicked:];
-[_TtC7iMazing37BlueprintSectionActionsViewController backupBeforeRadioClicked:];
-[_TtC7iMazing37BlueprintSectionActionsViewController failIfBatteryHealthClicked:];
-[_TtC7iMazing37BlueprintSectionActionsViewController batteryHelathPopupClicked:];

@end

@interface _TtC7iMazing37BlueprintSectionGeneralViewController : _TtC7iMazing34BlueprintSectionViewControllerBase {
    /* instance variables */
     enrollmentMode;
     hideManualEnrollment;
     hideDEPEnrollment;
     isZeroTouchEnrollment;
     deviceTypeTag;
     hasWiFiProfile;
     secondsToWait;
     serverIsProfile;
     serverIsURL;
     chooseServerPopup;
     chooseProfilePopup;
     serversWC;
     chooseProfilesSheet;
}

@property (T@"NSString",N,R) nibName;
@property (Tq,N,VenrollmentMode) enrollmentMode;
@property (TB,N,VhideManualEnrollment) hideManualEnrollment;
@property (TB,N,VhideDEPEnrollment) hideDEPEnrollment;
@property (TB,N,VisZeroTouchEnrollment) isZeroTouchEnrollment;
@property (Tq,N,VdeviceTypeTag) deviceTypeTag;
@property (TB,N,VhasWiFiProfile) hasWiFiProfile;
@property (T@"NSArray",N,R) secondsToWait;
@property (TB,N,VserverIsProfile) serverIsProfile;
@property (TB,N,VserverIsURL) serverIsURL;
@property (T@"_TtC7iMazing17ChoosePopupButton",N,&,VchooseServerPopup) chooseServerPopup;
@property (T@"_TtC7iMazing17ChoosePopupButton",N,&,VchooseProfilePopup) chooseProfilePopup;

/* instance methods */
-[_TtC7iMazing37BlueprintSectionGeneralViewController nibName];
-[_TtC7iMazing37BlueprintSectionGeneralViewController enrollmentMode];
-[_TtC7iMazing37BlueprintSectionGeneralViewController setEnrollmentMode:];
-[_TtC7iMazing37BlueprintSectionGeneralViewController hideManualEnrollment];
-[_TtC7iMazing37BlueprintSectionGeneralViewController setHideManualEnrollment:];
-[_TtC7iMazing37BlueprintSectionGeneralViewController hideDEPEnrollment];
-[_TtC7iMazing37BlueprintSectionGeneralViewController setHideDEPEnrollment:];
-[_TtC7iMazing37BlueprintSectionGeneralViewController isZeroTouchEnrollment];
-[_TtC7iMazing37BlueprintSectionGeneralViewController setIsZeroTouchEnrollment:];
-[_TtC7iMazing37BlueprintSectionGeneralViewController deviceTypeTag];
-[_TtC7iMazing37BlueprintSectionGeneralViewController setDeviceTypeTag:];
-[_TtC7iMazing37BlueprintSectionGeneralViewController hasWiFiProfile];
-[_TtC7iMazing37BlueprintSectionGeneralViewController setHasWiFiProfile:];
-[_TtC7iMazing37BlueprintSectionGeneralViewController secondsToWait];
-[_TtC7iMazing37BlueprintSectionGeneralViewController serverIsProfile];
-[_TtC7iMazing37BlueprintSectionGeneralViewController setServerIsProfile:];
-[_TtC7iMazing37BlueprintSectionGeneralViewController serverIsURL];
-[_TtC7iMazing37BlueprintSectionGeneralViewController setServerIsURL:];
-[_TtC7iMazing37BlueprintSectionGeneralViewController chooseServerPopup];
-[_TtC7iMazing37BlueprintSectionGeneralViewController setChooseServerPopup:];
-[_TtC7iMazing37BlueprintSectionGeneralViewController chooseProfilePopup];
-[_TtC7iMazing37BlueprintSectionGeneralViewController setChooseProfilePopup:];
-[_TtC7iMazing37BlueprintSectionGeneralViewController initWithCoder:];
-[_TtC7iMazing37BlueprintSectionGeneralViewController mdmEnrollmentPopup:];
-[_TtC7iMazing37BlueprintSectionGeneralViewController mdmMandatoryChecked:];
-[_TtC7iMazing37BlueprintSectionGeneralViewController deviceTypeChange:];

@end

@interface _TtC7iMazing37ChooseAppsFromLibraryWindowController : NSWindowController <NSTableViewDelegate> {
    /* instance variables */
     cacheSelectedItems;
     _awake;
     chooseAppsHandler;
     multipleSelection;
     isLoading;
     selectedAppsLabel;
     showSignInLabel;
     includeSystemApps;
     manager;
     device;
     appsArrayController;
     tableView;
     title;
     canChoose;
     bundleIDsToSelect;
     searchText;
}

@property (T@"NSString",N,R) windowNibName;
@property (TB,N,R,VmultipleSelection) multipleSelection;
@property (TB,N,VisLoading) isLoading;
@property (T@"NSString",N,C) selectedAppsLabel;
@property (TB,N,VshowSignInLabel) showSignInLabel;
@property (T@"NSArrayController",N,&,VappsArrayController) appsArrayController;
@property (T@"NSTableView",N,&,VtableView) tableView;
@property (T@"NSString",N,C) title;
@property (TB,N,VcanChoose) canChoose;
@property (T@"NSString",N,C) searchText;

/* instance methods */
-[_TtC7iMazing37ChooseAppsFromLibraryWindowController windowNibName];
-[_TtC7iMazing37ChooseAppsFromLibraryWindowController multipleSelection];
-[_TtC7iMazing37ChooseAppsFromLibraryWindowController isLoading];
-[_TtC7iMazing37ChooseAppsFromLibraryWindowController setIsLoading:];
-[_TtC7iMazing37ChooseAppsFromLibraryWindowController selectedAppsLabel];
-[_TtC7iMazing37ChooseAppsFromLibraryWindowController setSelectedAppsLabel:];
-[_TtC7iMazing37ChooseAppsFromLibraryWindowController showSignInLabel];
-[_TtC7iMazing37ChooseAppsFromLibraryWindowController setShowSignInLabel:];
-[_TtC7iMazing37ChooseAppsFromLibraryWindowController appsArrayController];
-[_TtC7iMazing37ChooseAppsFromLibraryWindowController setAppsArrayController:];
-[_TtC7iMazing37ChooseAppsFromLibraryWindowController tableView];
-[_TtC7iMazing37ChooseAppsFromLibraryWindowController setTableView:];
-[_TtC7iMazing37ChooseAppsFromLibraryWindowController title];
-[_TtC7iMazing37ChooseAppsFromLibraryWindowController setTitle:];
-[_TtC7iMazing37ChooseAppsFromLibraryWindowController canChoose];
-[_TtC7iMazing37ChooseAppsFromLibraryWindowController setCanChoose:];
-[_TtC7iMazing37ChooseAppsFromLibraryWindowController searchText];
-[_TtC7iMazing37ChooseAppsFromLibraryWindowController setSearchText:];
-[_TtC7iMazing37ChooseAppsFromLibraryWindowController initWithCoder:];
-[_TtC7iMazing37ChooseAppsFromLibraryWindowController awakeFromNib];
-[_TtC7iMazing37ChooseAppsFromLibraryWindowController cancelClicked:];
-[_TtC7iMazing37ChooseAppsFromLibraryWindowController chooseClicked:];
-[_TtC7iMazing37ChooseAppsFromLibraryWindowController itemCheckboxClick:];
-[_TtC7iMazing37ChooseAppsFromLibraryWindowController tableView:shouldSelectRow:];
-[_TtC7iMazing37ChooseAppsFromLibraryWindowController tableViewSelectionDidChange:];
-[_TtC7iMazing37ChooseAppsFromLibraryWindowController initWithWindow:];

@end

@interface _TtC7iMazing37ConfiguratorAppsContentViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
     wizard;
     behavior;
     controller;
     loadingObserver;
     selectionObserver;
     didApply;
}

@property (T@"WizardWindowController",N,W,Vwizard) wizard;
@property (Tq,N,Vbehavior) behavior;
@property (T@"AppsLibraryViewController",N,&,Vcontroller) controller;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing37ConfiguratorAppsContentViewController wizard];
-[_TtC7iMazing37ConfiguratorAppsContentViewController setWizard:];
-[_TtC7iMazing37ConfiguratorAppsContentViewController behavior];
-[_TtC7iMazing37ConfiguratorAppsContentViewController setBehavior:];
-[_TtC7iMazing37ConfiguratorAppsContentViewController controller];
-[_TtC7iMazing37ConfiguratorAppsContentViewController setController:];
-[_TtC7iMazing37ConfiguratorAppsContentViewController nibName];
-[_TtC7iMazing37ConfiguratorAppsContentViewController viewDidLoad];
-[_TtC7iMazing37ConfiguratorAppsContentViewController willResignActive];
-[_TtC7iMazing37ConfiguratorAppsContentViewController didBecomeActive];
-[_TtC7iMazing37ConfiguratorAppsContentViewController installApps];
-[_TtC7iMazing37ConfiguratorAppsContentViewController initWithNibName:bundle:];
-[_TtC7iMazing37ConfiguratorAppsContentViewController initWithCoder:];

@end

@interface _TtC7iMazing37DetectSpywareWizardInfoViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
     wizard;
     behavior;
}

@property (T@"NSString",N,R) nibName;
@property (T@"WizardWindowController",N,W,Vwizard) wizard;
@property (Tq,N,Vbehavior) behavior;

/* instance methods */
-[_TtC7iMazing37DetectSpywareWizardInfoViewController nibName];
-[_TtC7iMazing37DetectSpywareWizardInfoViewController wizard];
-[_TtC7iMazing37DetectSpywareWizardInfoViewController setWizard:];
-[_TtC7iMazing37DetectSpywareWizardInfoViewController behavior];
-[_TtC7iMazing37DetectSpywareWizardInfoViewController setBehavior:];
-[_TtC7iMazing37DetectSpywareWizardInfoViewController willBecomeActive];
-[_TtC7iMazing37DetectSpywareWizardInfoViewController didBecomeActive];
-[_TtC7iMazing37DetectSpywareWizardInfoViewController learnMore:];
-[_TtC7iMazing37DetectSpywareWizardInfoViewController initWithNibName:bundle:];
-[_TtC7iMazing37DetectSpywareWizardInfoViewController initWithCoder:];

@end

@interface _TtC7iMazing37DeviceNavigationHistoryBackgroundView : NSView {
    /* instance variables */
     leftButtonEnabled;
     rightButtonEnabled;
}

@property (TB,N,VleftButtonEnabled) leftButtonEnabled;
@property (TB,N,VrightButtonEnabled) rightButtonEnabled;

/* instance methods */
-[_TtC7iMazing37DeviceNavigationHistoryBackgroundView leftButtonEnabled];
-[_TtC7iMazing37DeviceNavigationHistoryBackgroundView setLeftButtonEnabled:];
-[_TtC7iMazing37DeviceNavigationHistoryBackgroundView rightButtonEnabled];
-[_TtC7iMazing37DeviceNavigationHistoryBackgroundView setRightButtonEnabled:];
-[_TtC7iMazing37DeviceNavigationHistoryBackgroundView drawRect:];
-[_TtC7iMazing37DeviceNavigationHistoryBackgroundView initWithFrame:];
-[_TtC7iMazing37DeviceNavigationHistoryBackgroundView initWithCoder:];

@end

@interface _TtC7iMazing37DeviceNavigationHistoryViewController : NSViewController {
    /* instance variables */
     navigationButton;
     history;
     showClose;
     showBackNext;
     canGoBackObserver;
     canGoForwardObserver;
     style;
     shouldNavigate;
}

@property (T@"_TtC7iMazing37DeviceNavigationHistoryBackgroundView",N,&,VnavigationButton) navigationButton;
@property (T@"_TtC7iMazing23DeviceNavigationHistory",N,&,Vhistory) history;
@property (TB,N,VshowClose) showClose;
@property (TB,N,VshowBackNext) showBackNext;
@property (Tq,N,Vstyle) style;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing37DeviceNavigationHistoryViewController navigationButton];
-[_TtC7iMazing37DeviceNavigationHistoryViewController setNavigationButton:];
-[_TtC7iMazing37DeviceNavigationHistoryViewController history];
-[_TtC7iMazing37DeviceNavigationHistoryViewController setHistory:];
-[_TtC7iMazing37DeviceNavigationHistoryViewController showClose];
-[_TtC7iMazing37DeviceNavigationHistoryViewController setShowClose:];
-[_TtC7iMazing37DeviceNavigationHistoryViewController showBackNext];
-[_TtC7iMazing37DeviceNavigationHistoryViewController setShowBackNext:];
-[_TtC7iMazing37DeviceNavigationHistoryViewController style];
-[_TtC7iMazing37DeviceNavigationHistoryViewController setStyle:];
-[_TtC7iMazing37DeviceNavigationHistoryViewController nibName];
-[_TtC7iMazing37DeviceNavigationHistoryViewController viewDidLoad];
-[_TtC7iMazing37DeviceNavigationHistoryViewController back:];
-[_TtC7iMazing37DeviceNavigationHistoryViewController next:];
-[_TtC7iMazing37DeviceNavigationHistoryViewController initWithNibName:bundle:];
-[_TtC7iMazing37DeviceNavigationHistoryViewController initWithCoder:];

@end

@interface _TtC7iMazing37DeviceSettingsArchivingViewController : NSViewController <_TtP7iMazing14IndexedElement_, NSObject, _TtP7iMazing7Savable_> {
    /* instance variables */
     item;
     indexPath;
     backupArchivalEnabledLabel;
     backupArchivalDisabledLabel;
     keepArchivedBackupsLabel;
     enableSaveAndDiscard;
     enableArchival;
     enableClean;
     enableNotify;
     selectedKeepBackup;
     infoViewController;
     infoViewContainer;
}

@property (T@"_TtC7iMazing10DeviceItem",N,&,Vitem) item;
@property (T@"NSIndexPath",N,C) indexPath;
@property (T@"NSString",N,C) backupArchivalEnabledLabel;
@property (T@"NSString",N,C) backupArchivalDisabledLabel;
@property (T@"NSString",N,C) keepArchivedBackupsLabel;
@property (TB,N,VenableSaveAndDiscard) enableSaveAndDiscard;
@property (TB,N,VenableArchival) enableArchival;
@property (TB,N,VenableClean) enableClean;
@property (TB,N,VenableNotify) enableNotify;
@property (Tq,N,VselectedKeepBackup) selectedKeepBackup;
@property (T@"NSView",N,&,VinfoViewContainer) infoViewContainer;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing37DeviceSettingsArchivingViewController item];
-[_TtC7iMazing37DeviceSettingsArchivingViewController setItem:];
-[_TtC7iMazing37DeviceSettingsArchivingViewController indexPath];
-[_TtC7iMazing37DeviceSettingsArchivingViewController setIndexPath:];
-[_TtC7iMazing37DeviceSettingsArchivingViewController backupArchivalEnabledLabel];
-[_TtC7iMazing37DeviceSettingsArchivingViewController setBackupArchivalEnabledLabel:];
-[_TtC7iMazing37DeviceSettingsArchivingViewController backupArchivalDisabledLabel];
-[_TtC7iMazing37DeviceSettingsArchivingViewController setBackupArchivalDisabledLabel:];
-[_TtC7iMazing37DeviceSettingsArchivingViewController keepArchivedBackupsLabel];
-[_TtC7iMazing37DeviceSettingsArchivingViewController setKeepArchivedBackupsLabel:];
-[_TtC7iMazing37DeviceSettingsArchivingViewController enableSaveAndDiscard];
-[_TtC7iMazing37DeviceSettingsArchivingViewController setEnableSaveAndDiscard:];
-[_TtC7iMazing37DeviceSettingsArchivingViewController enableArchival];
-[_TtC7iMazing37DeviceSettingsArchivingViewController setEnableArchival:];
-[_TtC7iMazing37DeviceSettingsArchivingViewController enableClean];
-[_TtC7iMazing37DeviceSettingsArchivingViewController setEnableClean:];
-[_TtC7iMazing37DeviceSettingsArchivingViewController enableNotify];
-[_TtC7iMazing37DeviceSettingsArchivingViewController setEnableNotify:];
-[_TtC7iMazing37DeviceSettingsArchivingViewController selectedKeepBackup];
-[_TtC7iMazing37DeviceSettingsArchivingViewController setSelectedKeepBackup:];
-[_TtC7iMazing37DeviceSettingsArchivingViewController infoViewContainer];
-[_TtC7iMazing37DeviceSettingsArchivingViewController setInfoViewContainer:];
-[_TtC7iMazing37DeviceSettingsArchivingViewController initWithCoder:];
-[_TtC7iMazing37DeviceSettingsArchivingViewController nibName];
-[_TtC7iMazing37DeviceSettingsArchivingViewController viewDidLoad];
-[_TtC7iMazing37DeviceSettingsArchivingViewController viewWillAppear];
-[_TtC7iMazing37DeviceSettingsArchivingViewController reset];
-[_TtC7iMazing37DeviceSettingsArchivingViewController save];
-[_TtC7iMazing37DeviceSettingsArchivingViewController canLeave];
-[_TtC7iMazing37DeviceSettingsArchivingViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing37DiskUsageWidgetDataItemViewController : NSViewController {
    /* instance variables */
     color;
     badgeView;
     appearanceObserver;
}

@property (T@?,N,C) color;
@property (T@"VKBadgeView",N,&,VbadgeView) badgeView;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing37DiskUsageWidgetDataItemViewController color];
-[_TtC7iMazing37DiskUsageWidgetDataItemViewController setColor:];
-[_TtC7iMazing37DiskUsageWidgetDataItemViewController badgeView];
-[_TtC7iMazing37DiskUsageWidgetDataItemViewController setBadgeView:];
-[_TtC7iMazing37DiskUsageWidgetDataItemViewController initWithCoder:];
-[_TtC7iMazing37DiskUsageWidgetDataItemViewController nibName];
-[_TtC7iMazing37DiskUsageWidgetDataItemViewController viewDidLoad];
-[_TtC7iMazing37DiskUsageWidgetDataItemViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing37HomeDiscoverTourConnectViewController : _TtC7iMazing34HomeDiscoverTourBaseViewController

@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing37HomeDiscoverTourConnectViewController nibName];
-[_TtC7iMazing37HomeDiscoverTourConnectViewController viewDidLoad];
-[_TtC7iMazing37HomeDiscoverTourConnectViewController initWithNibName:bundle:];
-[_TtC7iMazing37HomeDiscoverTourConnectViewController initWithCoder:];

@end

@interface _TtC7iMazing37InteractionAlertNewPasswordController : NSViewController <_TtP7iMazing39InteractionAlertAccessoryViewController_> {
    /* instance variables */
     data;
     password1;
     password2;
     checkboxTitle;
     checkboxValue;
     passwordField1;
     passwordField2;
     checkbox;
}

@property (T@"UserInteractionDialogBoxData",N,&,Vdata) data;
@property (T@"NSString",N,C) password1;
@property (T@"NSString",N,C) password2;
@property (T@"NSString",N,C) checkboxTitle;
@property (Tq,N,VcheckboxValue) checkboxValue;
@property (T@"NSTextField",N,&,VpasswordField1) passwordField1;
@property (T@"NSTextField",N,&,VpasswordField2) passwordField2;
@property (T@"NSButton",N,&,Vcheckbox) checkbox;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing37InteractionAlertNewPasswordController data];
-[_TtC7iMazing37InteractionAlertNewPasswordController setData:];
-[_TtC7iMazing37InteractionAlertNewPasswordController password1];
-[_TtC7iMazing37InteractionAlertNewPasswordController setPassword1:];
-[_TtC7iMazing37InteractionAlertNewPasswordController password2];
-[_TtC7iMazing37InteractionAlertNewPasswordController setPassword2:];
-[_TtC7iMazing37InteractionAlertNewPasswordController checkboxTitle];
-[_TtC7iMazing37InteractionAlertNewPasswordController setCheckboxTitle:];
-[_TtC7iMazing37InteractionAlertNewPasswordController checkboxValue];
-[_TtC7iMazing37InteractionAlertNewPasswordController setCheckboxValue:];
-[_TtC7iMazing37InteractionAlertNewPasswordController passwordField1];
-[_TtC7iMazing37InteractionAlertNewPasswordController setPasswordField1:];
-[_TtC7iMazing37InteractionAlertNewPasswordController passwordField2];
-[_TtC7iMazing37InteractionAlertNewPasswordController setPasswordField2:];
-[_TtC7iMazing37InteractionAlertNewPasswordController checkbox];
-[_TtC7iMazing37InteractionAlertNewPasswordController setCheckbox:];
-[_TtC7iMazing37InteractionAlertNewPasswordController initWithData:];
-[_TtC7iMazing37InteractionAlertNewPasswordController initWithCoder:];
-[_TtC7iMazing37InteractionAlertNewPasswordController nibName];
-[_TtC7iMazing37InteractionAlertNewPasswordController viewDidLoad];
-[_TtC7iMazing37InteractionAlertNewPasswordController alertWillShow:];
-[_TtC7iMazing37InteractionAlertNewPasswordController alertDidEndWithButtonIndex:];
-[_TtC7iMazing37InteractionAlertNewPasswordController initWithNibName:bundle:];

@end

@interface _TtC7iMazing37PhotoCarouselCollectionViewFlowLayout : NSCollectionViewFlowLayout {
    /* instance variables */
     collectionViewItemWidthFactor;
     collectionViewSelectedItemLandscapeWidthFactor;
     collectionViewSelectedItemPortraitWidthFactor;
     collectionViewSelectedItemInsertWidth;
     isScrolling;
     selectedIndex;
     cachedItemsAttributes;
     desiredContentSize;
}

@property (T{CGSize=dd},N,R) collectionViewContentSize;

/* instance methods */
-[_TtC7iMazing37PhotoCarouselCollectionViewFlowLayout initWithCoder:];
-[_TtC7iMazing37PhotoCarouselCollectionViewFlowLayout prepareLayout];
-[_TtC7iMazing37PhotoCarouselCollectionViewFlowLayout shouldInvalidateLayoutForBoundsChange:];
-[_TtC7iMazing37PhotoCarouselCollectionViewFlowLayout invalidateLayoutWithContext:];
-[_TtC7iMazing37PhotoCarouselCollectionViewFlowLayout collectionViewContentSize];
-[_TtC7iMazing37PhotoCarouselCollectionViewFlowLayout layoutAttributesForItemAtIndexPath:];
-[_TtC7iMazing37PhotoCarouselCollectionViewFlowLayout layoutAttributesForElementsInRect:];
-[_TtC7iMazing37PhotoCarouselCollectionViewFlowLayout init];

@end

@interface _TtC7iMazing37PhotoSectionHeaderFilePromiseProvider : NSFilePromiseProvider

/* instance methods */
-[_TtC7iMazing37PhotoSectionHeaderFilePromiseProvider init];
-[_TtC7iMazing37PhotoSectionHeaderFilePromiseProvider writableTypesForPasteboard:];
-[_TtC7iMazing37PhotoSectionHeaderFilePromiseProvider pasteboardPropertyListForType:];

@end

@interface _TtC7iMazing37RegistrationLicenseCodeBackgroundView : NSView {
    /* instance variables */
     style;
}

/* instance methods */
-[_TtC7iMazing37RegistrationLicenseCodeBackgroundView drawRect:];
-[_TtC7iMazing37RegistrationLicenseCodeBackgroundView initWithFrame:];
-[_TtC7iMazing37RegistrationLicenseCodeBackgroundView initWithCoder:];

@end

@interface _TtC7iMazing37RegistrationSmallButtonViewController : NSViewController {
    /* instance variables */
     action;
     color;
     icon;
     label;
     image;
     buttonView;
     imageSpacingConstraint;
     forceDark;
}

@property (T@"NSImage",N,&,Vicon) icon;
@property (T@"NSTextField",N,&,Vlabel) label;
@property (T@"NSImageView",N,&,Vimage) image;
@property (T@"_TtC7iMazing22RegistrationButtonView",N,&,VbuttonView) buttonView;
@property (T@"NSLayoutConstraint",N,&,VimageSpacingConstraint) imageSpacingConstraint;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing37RegistrationSmallButtonViewController icon];
-[_TtC7iMazing37RegistrationSmallButtonViewController setIcon:];
-[_TtC7iMazing37RegistrationSmallButtonViewController label];
-[_TtC7iMazing37RegistrationSmallButtonViewController setLabel:];
-[_TtC7iMazing37RegistrationSmallButtonViewController image];
-[_TtC7iMazing37RegistrationSmallButtonViewController setImage:];
-[_TtC7iMazing37RegistrationSmallButtonViewController buttonView];
-[_TtC7iMazing37RegistrationSmallButtonViewController setButtonView:];
-[_TtC7iMazing37RegistrationSmallButtonViewController imageSpacingConstraint];
-[_TtC7iMazing37RegistrationSmallButtonViewController setImageSpacingConstraint:];
-[_TtC7iMazing37RegistrationSmallButtonViewController initWithCoder:];
-[_TtC7iMazing37RegistrationSmallButtonViewController nibName];
-[_TtC7iMazing37RegistrationSmallButtonViewController viewDidLoad];
-[_TtC7iMazing37RegistrationSmallButtonViewController performAction:];
-[_TtC7iMazing37RegistrationSmallButtonViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing37ReinstallWizardProgressViewController : _TtC7iMazing34WizardWindowProgressViewController <WizardWindowScreenDataController> {
    /* instance variables */
     screenData;
}

@property (T@"UserInteractionScreenData",N,&,VscreenData) screenData;

/* instance methods */
-[_TtC7iMazing37ReinstallWizardProgressViewController screenData];
-[_TtC7iMazing37ReinstallWizardProgressViewController setScreenData:];
-[_TtC7iMazing37ReinstallWizardProgressViewController didBecomeActive];
-[_TtC7iMazing37ReinstallWizardProgressViewController init];
-[_TtC7iMazing37ReinstallWizardProgressViewController initWithCoder:];

@end

@interface _TtC7iMazing38BackupNavigationMenuItemViewController : NSViewController {
    /* instance variables */
     backup;
     info1;
     info2;
     info3;
     colorIcon;
     grayIcon;
     icon;
     isActive;
     mouseOver;
     onSelect;
     iconObserver;
     highlightView;
}

@property (T@"_TtC7iMazing17BackupHistoryItem",N,&,Vbackup) backup;
@property (T@"NSString",N,C) info1;
@property (T@"NSString",N,C) info2;
@property (T@"NSString",N,C) info3;
@property (T@"NSImage",N,&,VcolorIcon) colorIcon;
@property (T@"NSImage",N,&,VgrayIcon) grayIcon;
@property (T@"NSImage",N,&,Vicon) icon;
@property (TB,N,VisActive) isActive;
@property (TB,N,VmouseOver) mouseOver;
@property (T@"_TtC7iMazing28BackupNavigationMenuItemView",N,&,VhighlightView) highlightView;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing38BackupNavigationMenuItemViewController backup];
-[_TtC7iMazing38BackupNavigationMenuItemViewController setBackup:];
-[_TtC7iMazing38BackupNavigationMenuItemViewController info1];
-[_TtC7iMazing38BackupNavigationMenuItemViewController setInfo1:];
-[_TtC7iMazing38BackupNavigationMenuItemViewController info2];
-[_TtC7iMazing38BackupNavigationMenuItemViewController setInfo2:];
-[_TtC7iMazing38BackupNavigationMenuItemViewController info3];
-[_TtC7iMazing38BackupNavigationMenuItemViewController setInfo3:];
-[_TtC7iMazing38BackupNavigationMenuItemViewController colorIcon];
-[_TtC7iMazing38BackupNavigationMenuItemViewController setColorIcon:];
-[_TtC7iMazing38BackupNavigationMenuItemViewController grayIcon];
-[_TtC7iMazing38BackupNavigationMenuItemViewController setGrayIcon:];
-[_TtC7iMazing38BackupNavigationMenuItemViewController icon];
-[_TtC7iMazing38BackupNavigationMenuItemViewController setIcon:];
-[_TtC7iMazing38BackupNavigationMenuItemViewController isActive];
-[_TtC7iMazing38BackupNavigationMenuItemViewController setIsActive:];
-[_TtC7iMazing38BackupNavigationMenuItemViewController mouseOver];
-[_TtC7iMazing38BackupNavigationMenuItemViewController setMouseOver:];
-[_TtC7iMazing38BackupNavigationMenuItemViewController highlightView];
-[_TtC7iMazing38BackupNavigationMenuItemViewController setHighlightView:];
-[_TtC7iMazing38BackupNavigationMenuItemViewController initWithCoder:];
-[_TtC7iMazing38BackupNavigationMenuItemViewController nibName];
-[_TtC7iMazing38BackupNavigationMenuItemViewController viewDidLoad];
-[_TtC7iMazing38BackupNavigationMenuItemViewController viewDidDisappear];
-[_TtC7iMazing38BackupNavigationMenuItemViewController select:];
-[_TtC7iMazing38BackupNavigationMenuItemViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing38BlueprintSectionProfilesViewController : _TtC7iMazing34BlueprintSectionViewControllerBase <_TtP7iMazing24PlusMinusControlDelegate_> {
    /* instance variables */
     profilesListEmbedView;
     profilesVC;
     chooseProfilesSheet;
}

@property (T@"NSString",N,R) nibName;
@property (T@"NSView",N,&,VprofilesListEmbedView) profilesListEmbedView;

/* instance methods */
-[_TtC7iMazing38BlueprintSectionProfilesViewController nibName];
-[_TtC7iMazing38BlueprintSectionProfilesViewController profilesListEmbedView];
-[_TtC7iMazing38BlueprintSectionProfilesViewController setProfilesListEmbedView:];
-[_TtC7iMazing38BlueprintSectionProfilesViewController initWithCoder:];
-[_TtC7iMazing38BlueprintSectionProfilesViewController plusClicked:];
-[_TtC7iMazing38BlueprintSectionProfilesViewController minusClicked:];

@end

@interface _TtC7iMazing38ConfigureChooseBlueprintViewController : NSViewController <NSMenuDelegate, _TtP7iMazing24PlusMinusControlDelegate_, NSTableViewDelegate> {
    /* instance variables */
     onUseConfiguratorFeature;
     selectionHandler;
     editBlueprintHandler;
     blueprintsArrayController;
     actionsMenu;
     contentView;
     sectionsArrayController;
     observations;
     selectionIndexes;
     selectedBlueprint;
     sectionsTableView;
     blueprintsTableView;
     _isAwake;
     loadingVC;
     ddHelper;
     blueprintToSelect;
     _orgsWC;
}

@property (T@"NSArrayController",N,&,VblueprintsArrayController) blueprintsArrayController;
@property (T@"NSMenu",N,&,VactionsMenu) actionsMenu;
@property (T@"NSView",N,&,VcontentView) contentView;
@property (T@"NSArrayController",N,&,VsectionsArrayController) sectionsArrayController;
@property (T@"NSString",N,R) nibName;
@property (T@"NSIndexSet",N,&,VselectionIndexes) selectionIndexes;
@property (T@"Blueprint",N,&,VselectedBlueprint) selectedBlueprint;
@property (T@"NSTableView",N,&,VsectionsTableView) sectionsTableView;
@property (T@"NSTableView",N,&,VblueprintsTableView) blueprintsTableView;
@property (T@"_TtC7iMazing21LoadingViewController",N,&,VloadingVC) loadingVC;

/* instance methods */
-[_TtC7iMazing38ConfigureChooseBlueprintViewController blueprintsArrayController];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController setBlueprintsArrayController:];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController actionsMenu];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController setActionsMenu:];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController contentView];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController setContentView:];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController sectionsArrayController];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController setSectionsArrayController:];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController nibName];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController selectionIndexes];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController setSelectionIndexes:];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController selectedBlueprint];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController setSelectedBlueprint:];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController sectionsTableView];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController setSectionsTableView:];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController blueprintsTableView];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController setBlueprintsTableView:];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController loadingVC];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController setLoadingVC:];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController dealloc];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController awakeFromNib];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController plusClicked:];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController minusClicked:];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController editBlueprint:];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController exportBlueprint:];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController importBlueprint:];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController duplicateBlueprint:];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController revealBlueprint:];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController menuWillOpen:];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController tableView:shouldSelectRow:];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController initWithNibName:bundle:];
-[_TtC7iMazing38ConfigureChooseBlueprintViewController initWithCoder:];

@end

@interface _TtC7iMazing38DeviceNavigationMenuItemViewController : NSViewController {
    /* instance variables */
     device;
     isActive;
     onSelect;
     highlightView;
}

@property (T@"_TtC7iMazing10DeviceItem",N,&,Vdevice) device;
@property (TB,N,VisActive) isActive;
@property (T@"VKHighlightView",N,&,VhighlightView) highlightView;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing38DeviceNavigationMenuItemViewController device];
-[_TtC7iMazing38DeviceNavigationMenuItemViewController setDevice:];
-[_TtC7iMazing38DeviceNavigationMenuItemViewController isActive];
-[_TtC7iMazing38DeviceNavigationMenuItemViewController setIsActive:];
-[_TtC7iMazing38DeviceNavigationMenuItemViewController highlightView];
-[_TtC7iMazing38DeviceNavigationMenuItemViewController setHighlightView:];
-[_TtC7iMazing38DeviceNavigationMenuItemViewController initWithCoder:];
-[_TtC7iMazing38DeviceNavigationMenuItemViewController nibName];
-[_TtC7iMazing38DeviceNavigationMenuItemViewController viewDidLoad];
-[_TtC7iMazing38DeviceNavigationMenuItemViewController viewDidDisappear];
-[_TtC7iMazing38DeviceNavigationMenuItemViewController select:];
-[_TtC7iMazing38DeviceNavigationMenuItemViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing38DispatcherProgressWizardViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
     wizard;
     behavior;
     _isAwake;
     _dispatcherVC;
     _didCleanup;
}

@property (T@"NSString",N,R) nibName;
@property (T@"WizardWindowController",N,W,Vwizard) wizard;
@property (Tq,N,Vbehavior) behavior;

/* instance methods */
-[_TtC7iMazing38DispatcherProgressWizardViewController nibName];
-[_TtC7iMazing38DispatcherProgressWizardViewController wizard];
-[_TtC7iMazing38DispatcherProgressWizardViewController setWizard:];
-[_TtC7iMazing38DispatcherProgressWizardViewController behavior];
-[_TtC7iMazing38DispatcherProgressWizardViewController setBehavior:];
-[_TtC7iMazing38DispatcherProgressWizardViewController initWithCoder:];
-[_TtC7iMazing38DispatcherProgressWizardViewController awakeFromNib];
-[_TtC7iMazing38DispatcherProgressWizardViewController didBecomeActive];
-[_TtC7iMazing38DispatcherProgressWizardViewController willResignActive];
-[_TtC7iMazing38DispatcherProgressWizardViewController previous];
-[_TtC7iMazing38DispatcherProgressWizardViewController done];
-[_TtC7iMazing38DispatcherProgressWizardViewController dealloc];
-[_TtC7iMazing38DispatcherProgressWizardViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing38HomeDiscoverTourRegisterViewController : _TtC7iMazing34HomeDiscoverTourBaseViewController

@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing38HomeDiscoverTourRegisterViewController nibName];
-[_TtC7iMazing38HomeDiscoverTourRegisterViewController viewDidLoad];
-[_TtC7iMazing38HomeDiscoverTourRegisterViewController initWithNibName:bundle:];
-[_TtC7iMazing38HomeDiscoverTourRegisterViewController initWithCoder:];

@end

@interface _TtC7iMazing38PreferencesInternationalViewController : NSViewController <NSObject> {
    /* instance variables */
     languagePopup;
}

@property (T@"NSPopUpButton",N,&,VlanguagePopup) languagePopup;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing38PreferencesInternationalViewController languagePopup];
-[_TtC7iMazing38PreferencesInternationalViewController setLanguagePopup:];
-[_TtC7iMazing38PreferencesInternationalViewController nibName];
-[_TtC7iMazing38PreferencesInternationalViewController viewDidAppear];
-[_TtC7iMazing38PreferencesInternationalViewController changeLanguage:];
-[_TtC7iMazing38PreferencesInternationalViewController initWithNibName:bundle:];
-[_TtC7iMazing38PreferencesInternationalViewController initWithCoder:];

@end

@interface _TtC7iMazing38StickyNotificationWindowBackgroundView : NSView

/* instance methods */
-[_TtC7iMazing38StickyNotificationWindowBackgroundView drawRect:];
-[_TtC7iMazing38StickyNotificationWindowBackgroundView initWithFrame:];
-[_TtC7iMazing38StickyNotificationWindowBackgroundView initWithCoder:];

@end

@interface _TtC7iMazing39BlueprintSectionAppConfigViewController : _TtC7iMazing34BlueprintSectionViewControllerBase <NSMenuDelegate, _TtP7iMazing24PlusMinusControlDelegate_, NSTableViewDelegate> {
    /* instance variables */
     appsArrayController;
     appsMenu;
     appsTableView;
     chooseFilesWC;
     chooseAppWC;
     ddHelper;
     appItems;
     hasSelection;
     isLoading;
     configButtonText;
}

@property (T@"NSString",N,R) nibName;
@property (T@"NSArrayController",N,&,VappsArrayController) appsArrayController;
@property (T@"NSMenu",N,&,VappsMenu) appsMenu;
@property (T@"NSTableView",N,&,VappsTableView) appsTableView;
@property (TB,N,VhasSelection) hasSelection;
@property (TB,N,VisLoading) isLoading;
@property (T@"NSString",N,C) configButtonText;

/* instance methods */
-[_TtC7iMazing39BlueprintSectionAppConfigViewController nibName];
-[_TtC7iMazing39BlueprintSectionAppConfigViewController appsArrayController];
-[_TtC7iMazing39BlueprintSectionAppConfigViewController setAppsArrayController:];
-[_TtC7iMazing39BlueprintSectionAppConfigViewController appsMenu];
-[_TtC7iMazing39BlueprintSectionAppConfigViewController setAppsMenu:];
-[_TtC7iMazing39BlueprintSectionAppConfigViewController appsTableView];
-[_TtC7iMazing39BlueprintSectionAppConfigViewController setAppsTableView:];
-[_TtC7iMazing39BlueprintSectionAppConfigViewController hasSelection];
-[_TtC7iMazing39BlueprintSectionAppConfigViewController setHasSelection:];
-[_TtC7iMazing39BlueprintSectionAppConfigViewController isLoading];
-[_TtC7iMazing39BlueprintSectionAppConfigViewController setIsLoading:];
-[_TtC7iMazing39BlueprintSectionAppConfigViewController configButtonText];
-[_TtC7iMazing39BlueprintSectionAppConfigViewController setConfigButtonText:];
-[_TtC7iMazing39BlueprintSectionAppConfigViewController initWithCoder:];
-[_TtC7iMazing39BlueprintSectionAppConfigViewController plusClicked:];
-[_TtC7iMazing39BlueprintSectionAppConfigViewController minusClicked:];
-[_TtC7iMazing39BlueprintSectionAppConfigViewController editAppFiles:];
-[_TtC7iMazing39BlueprintSectionAppConfigViewController setAppConfig:];
-[_TtC7iMazing39BlueprintSectionAppConfigViewController tableViewSelectionDidChange:];

@end

@interface _TtC7iMazing39ConfiguratorOrganizationsViewController : WizardWindowController <_TtP7iMazing14IndexedElement_> {
    /* instance variables */
     indexPath;
}

@property (T@"NSIndexPath",N,C) indexPath;

/* instance methods */
-[_TtC7iMazing39ConfiguratorOrganizationsViewController indexPath];
-[_TtC7iMazing39ConfiguratorOrganizationsViewController setIndexPath:];
-[_TtC7iMazing39ConfiguratorOrganizationsViewController init];
-[_TtC7iMazing39ConfiguratorOrganizationsViewController initWithCoder:];
-[_TtC7iMazing39ConfiguratorOrganizationsViewController initWithTitle:device:requiresConnection:];

@end

@interface _TtC7iMazing39ConfigureBlueprintsWizardViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
     wizard;
     behavior;
     blueprintsController;
     _isAwake;
     _observations;
     _didApply;
}

@property (T@"NSString",N,R) nibName;
@property (T@"WizardWindowController",N,W,Vwizard) wizard;
@property (Tq,N,Vbehavior) behavior;
@property (T@"_TtC7iMazing33ConfigureBlueprintsViewController",N,&,VblueprintsController) blueprintsController;

/* instance methods */
-[_TtC7iMazing39ConfigureBlueprintsWizardViewController nibName];
-[_TtC7iMazing39ConfigureBlueprintsWizardViewController wizard];
-[_TtC7iMazing39ConfigureBlueprintsWizardViewController setWizard:];
-[_TtC7iMazing39ConfigureBlueprintsWizardViewController behavior];
-[_TtC7iMazing39ConfigureBlueprintsWizardViewController setBehavior:];
-[_TtC7iMazing39ConfigureBlueprintsWizardViewController blueprintsController];
-[_TtC7iMazing39ConfigureBlueprintsWizardViewController setBlueprintsController:];
-[_TtC7iMazing39ConfigureBlueprintsWizardViewController dealloc];
-[_TtC7iMazing39ConfigureBlueprintsWizardViewController awakeFromNib];
-[_TtC7iMazing39ConfigureBlueprintsWizardViewController didBecomeActive];
-[_TtC7iMazing39ConfigureBlueprintsWizardViewController showHelp:];
-[_TtC7iMazing39ConfigureBlueprintsWizardViewController modalCancel];
-[_TtC7iMazing39ConfigureBlueprintsWizardViewController modalAction];
-[_TtC7iMazing39ConfigureBlueprintsWizardViewController applyBlueprint];
-[_TtC7iMazing39ConfigureBlueprintsWizardViewController initWithNibName:bundle:];
-[_TtC7iMazing39ConfigureBlueprintsWizardViewController initWithCoder:];

@end

@interface _TtC7iMazing39DatasetNavigationMenuItemViewController : NSViewController {
    /* instance variables */
     isActive;
     isShortcut;
     dataset;
     onSelect;
     highlightView;
}

@property (TB,N,VisActive) isActive;
@property (TB,N,VisShortcut) isShortcut;
@property (T@"_TtC7iMazing7Dataset",N,&,Vdataset) dataset;
@property (T@"VKHighlightView",N,&,VhighlightView) highlightView;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing39DatasetNavigationMenuItemViewController isActive];
-[_TtC7iMazing39DatasetNavigationMenuItemViewController setIsActive:];
-[_TtC7iMazing39DatasetNavigationMenuItemViewController isShortcut];
-[_TtC7iMazing39DatasetNavigationMenuItemViewController setIsShortcut:];
-[_TtC7iMazing39DatasetNavigationMenuItemViewController dataset];
-[_TtC7iMazing39DatasetNavigationMenuItemViewController setDataset:];
-[_TtC7iMazing39DatasetNavigationMenuItemViewController highlightView];
-[_TtC7iMazing39DatasetNavigationMenuItemViewController setHighlightView:];
-[_TtC7iMazing39DatasetNavigationMenuItemViewController initWithCoder:];
-[_TtC7iMazing39DatasetNavigationMenuItemViewController nibName];
-[_TtC7iMazing39DatasetNavigationMenuItemViewController viewDidLoad];
-[_TtC7iMazing39DatasetNavigationMenuItemViewController viewDidDisappear];
-[_TtC7iMazing39DatasetNavigationMenuItemViewController select:];
-[_TtC7iMazing39DatasetNavigationMenuItemViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing39ManageAppsExtractProgressViewController : _TtC7iMazing34WizardWindowProgressViewController {
    /* instance variables */
     manager;
     apps;
     destinationPath;
     fromLastBackup;
}

@property (T@"iOSAppDownloadManager",N,&,Vmanager) manager;
@property (T@"NSArray",N,C) apps;
@property (T@"NSString",N,C) destinationPath;
@property (TB,N,VfromLastBackup) fromLastBackup;

/* instance methods */
-[_TtC7iMazing39ManageAppsExtractProgressViewController manager];
-[_TtC7iMazing39ManageAppsExtractProgressViewController setManager:];
-[_TtC7iMazing39ManageAppsExtractProgressViewController apps];
-[_TtC7iMazing39ManageAppsExtractProgressViewController setApps:];
-[_TtC7iMazing39ManageAppsExtractProgressViewController destinationPath];
-[_TtC7iMazing39ManageAppsExtractProgressViewController setDestinationPath:];
-[_TtC7iMazing39ManageAppsExtractProgressViewController fromLastBackup];
-[_TtC7iMazing39ManageAppsExtractProgressViewController setFromLastBackup:];
-[_TtC7iMazing39ManageAppsExtractProgressViewController initWithManager:apps:destination:fromLastBackup:];
-[_TtC7iMazing39ManageAppsExtractProgressViewController initWithCoder:];
-[_TtC7iMazing39ManageAppsExtractProgressViewController shouldBeSkipped];
-[_TtC7iMazing39ManageAppsExtractProgressViewController didBecomeActive];
-[_TtC7iMazing39ManageAppsExtractProgressViewController init];

@end

@interface _TtC7iMazing39ManageAppsRestoreProgressViewController : _TtC7iMazing34WizardWindowProgressViewController {
    /* instance variables */
     sourcePaths;
     manager;
}

@property (T@"NSArray",N,C) sourcePaths;
@property (T@"iOSAppDownloadManager",N,&,Vmanager) manager;

/* instance methods */
-[_TtC7iMazing39ManageAppsRestoreProgressViewController sourcePaths];
-[_TtC7iMazing39ManageAppsRestoreProgressViewController setSourcePaths:];
-[_TtC7iMazing39ManageAppsRestoreProgressViewController manager];
-[_TtC7iMazing39ManageAppsRestoreProgressViewController setManager:];
-[_TtC7iMazing39ManageAppsRestoreProgressViewController initWithManager:sourcePaths:];
-[_TtC7iMazing39ManageAppsRestoreProgressViewController initWithCoder:];
-[_TtC7iMazing39ManageAppsRestoreProgressViewController shouldBeSkipped];
-[_TtC7iMazing39ManageAppsRestoreProgressViewController didBecomeActive];
-[_TtC7iMazing39ManageAppsRestoreProgressViewController init];

@end

@interface _TtC7iMazing39PhotoDetailViewCollectionViewController : NSViewController <NSCollectionViewDelegate> {
    /* instance variables */
     photoDetailViewCollectionView;
     photoViewController;
     operationFinishedObserver;
     operationFinished;
     isAwake;
     currentIndex;
     selectedAssetsCount;
     selectedContentViewController;
     onDoubleClick;
}

@property (T@"_TtC7iMazing29PhotoDetailViewCollectionView",N,&,VphotoDetailViewCollectionView) photoDetailViewCollectionView;

/* instance methods */
-[_TtC7iMazing39PhotoDetailViewCollectionViewController collectionView:willDisplayItem:forRepresentedObjectAtIndexPath:];
-[_TtC7iMazing39PhotoDetailViewCollectionViewController collectionView:didEndDisplayingItem:forRepresentedObjectAtIndexPath:];
-[_TtC7iMazing39PhotoDetailViewCollectionViewController collectionView:canDragItemsAtIndexPaths:withEvent:];
-[_TtC7iMazing39PhotoDetailViewCollectionViewController collectionView:writeItemsAtIndexPaths:toPasteboard:];
-[_TtC7iMazing39PhotoDetailViewCollectionViewController collectionView:namesOfPromisedFilesDroppedAtDestination:forDraggedItemsAtIndexPaths:];
-[_TtC7iMazing39PhotoDetailViewCollectionViewController photoDetailViewCollectionView];
-[_TtC7iMazing39PhotoDetailViewCollectionViewController setPhotoDetailViewCollectionView:];
-[_TtC7iMazing39PhotoDetailViewCollectionViewController dealloc];
-[_TtC7iMazing39PhotoDetailViewCollectionViewController awakeFromNib];
-[_TtC7iMazing39PhotoDetailViewCollectionViewController onPhotoAssetSelectionChanged:];
-[_TtC7iMazing39PhotoDetailViewCollectionViewController initWithNibName:bundle:];
-[_TtC7iMazing39PhotoDetailViewCollectionViewController initWithCoder:];

@end

@interface _TtC7iMazing39PhotoDetailViewThumbnailsCollectionView : _TtC7iMazing25TransparentCollectionView {
    /* instance variables */
     isScrolling;
     currentSelectedIndex;
     displayedItemsChanged;
     previewIndexPath;
     currentMousePosition;
     currentMouseMoveCorrespondingIndexPath;
     mouseUpLocalEvent;
}

/* instance methods */
-[_TtC7iMazing39PhotoDetailViewThumbnailsCollectionView initWithCoder:];
-[_TtC7iMazing39PhotoDetailViewThumbnailsCollectionView mouseDown:];
-[_TtC7iMazing39PhotoDetailViewThumbnailsCollectionView setFrameSize:];
-[_TtC7iMazing39PhotoDetailViewThumbnailsCollectionView mouseDragged:];

@end

@interface _TtC7iMazing39RegistrationLinkedDevicesViewController : _TtC7iMazing33RegistrationContentViewController {
    /* instance variables */
     devicesController;
     tableView;
     error;
     loading;
     canViewPlan;
     email;
     note;
     notification;
}

@property (T@"NSArrayController",N,&,VdevicesController) devicesController;
@property (T@"NSTableView",N,&,VtableView) tableView;
@property (T@"NSError",N,&,Verror) error;
@property (TB,N,Vloading) loading;
@property (TB,N,VcanViewPlan) canViewPlan;
@property (T@"NSString",N,C) email;
@property (T@"NSString",N,C) note;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing39RegistrationLinkedDevicesViewController devicesController];
-[_TtC7iMazing39RegistrationLinkedDevicesViewController setDevicesController:];
-[_TtC7iMazing39RegistrationLinkedDevicesViewController tableView];
-[_TtC7iMazing39RegistrationLinkedDevicesViewController setTableView:];
-[_TtC7iMazing39RegistrationLinkedDevicesViewController error];
-[_TtC7iMazing39RegistrationLinkedDevicesViewController setError:];
-[_TtC7iMazing39RegistrationLinkedDevicesViewController loading];
-[_TtC7iMazing39RegistrationLinkedDevicesViewController setLoading:];
-[_TtC7iMazing39RegistrationLinkedDevicesViewController canViewPlan];
-[_TtC7iMazing39RegistrationLinkedDevicesViewController setCanViewPlan:];
-[_TtC7iMazing39RegistrationLinkedDevicesViewController email];
-[_TtC7iMazing39RegistrationLinkedDevicesViewController setEmail:];
-[_TtC7iMazing39RegistrationLinkedDevicesViewController note];
-[_TtC7iMazing39RegistrationLinkedDevicesViewController setNote:];
-[_TtC7iMazing39RegistrationLinkedDevicesViewController initWithCoder:];
-[_TtC7iMazing39RegistrationLinkedDevicesViewController nibName];
-[_TtC7iMazing39RegistrationLinkedDevicesViewController viewDidLoad];
-[_TtC7iMazing39RegistrationLinkedDevicesViewController showHelp:];
-[_TtC7iMazing39RegistrationLinkedDevicesViewController cancel:];
-[_TtC7iMazing39RegistrationLinkedDevicesViewController viewPlan:];
-[_TtC7iMazing39RegistrationLinkedDevicesViewController openStore:];
-[_TtC7iMazing39RegistrationLinkedDevicesViewController init];

@end

@interface _TtC7iMazing39SupervisionWizardProgressViewController : _TtC7iMazing34WizardWindowProgressViewController

/* instance methods */
-[_TtC7iMazing39SupervisionWizardProgressViewController willBecomeActive];
-[_TtC7iMazing39SupervisionWizardProgressViewController init];
-[_TtC7iMazing39SupervisionWizardProgressViewController initWithCoder:];

@end

@interface _TtC7iMazing40BackupLocationScreenDataWindowController : NSWindowController {
    /* instance variables */
     container;
     enableSave;
     enableCancel;
     deviceSettingsBackupLocationViewController;
}

@property (T@"NSView",N,&,Vcontainer) container;
@property (TB,N,VenableSave) enableSave;
@property (TB,N,VenableCancel) enableCancel;
@property (T@"NSString",N,R) windowNibName;

/* instance methods */
-[_TtC7iMazing40BackupLocationScreenDataWindowController container];
-[_TtC7iMazing40BackupLocationScreenDataWindowController setContainer:];
-[_TtC7iMazing40BackupLocationScreenDataWindowController enableSave];
-[_TtC7iMazing40BackupLocationScreenDataWindowController setEnableSave:];
-[_TtC7iMazing40BackupLocationScreenDataWindowController enableCancel];
-[_TtC7iMazing40BackupLocationScreenDataWindowController setEnableCancel:];
-[_TtC7iMazing40BackupLocationScreenDataWindowController initWithWindow:];
-[_TtC7iMazing40BackupLocationScreenDataWindowController initWithCoder:];
-[_TtC7iMazing40BackupLocationScreenDataWindowController dealloc];
-[_TtC7iMazing40BackupLocationScreenDataWindowController windowNibName];
-[_TtC7iMazing40BackupLocationScreenDataWindowController onChooseButton:];
-[_TtC7iMazing40BackupLocationScreenDataWindowController onCancelButton:];

@end

@interface _TtC7iMazing40ConfiguratorDevicesContentViewController : _TtC7iMazing27LibraryWizardViewController

/* instance methods */
-[_TtC7iMazing40ConfiguratorDevicesContentViewController init];
-[_TtC7iMazing40ConfiguratorDevicesContentViewController initWithCoder:];

@end

@interface _TtC7iMazing40DetectSpywareLicenseWizardViewController : NSViewController <WizardWindowDelegate> {
    /* instance variables */
     wizard;
     behavior;
     licenseAccepted;
     disclaimerAccepted;
     disclaimerText;
}

@property (T@"NSString",N,R) nibName;
@property (T@"WizardWindowController",N,W,Vwizard) wizard;
@property (Tq,N,Vbehavior) behavior;
@property (TB,N,VlicenseAccepted) licenseAccepted;
@property (TB,N,VdisclaimerAccepted) disclaimerAccepted;
@property (T@"NSString",N,C) disclaimerText;

/* instance methods */
-[_TtC7iMazing40DetectSpywareLicenseWizardViewController nibName];
-[_TtC7iMazing40DetectSpywareLicenseWizardViewController wizard];
-[_TtC7iMazing40DetectSpywareLicenseWizardViewController setWizard:];
-[_TtC7iMazing40DetectSpywareLicenseWizardViewController behavior];
-[_TtC7iMazing40DetectSpywareLicenseWizardViewController setBehavior:];
-[_TtC7iMazing40DetectSpywareLicenseWizardViewController licenseAccepted];
-[_TtC7iMazing40DetectSpywareLicenseWizardViewController setLicenseAccepted:];
-[_TtC7iMazing40DetectSpywareLicenseWizardViewController disclaimerAccepted];
-[_TtC7iMazing40DetectSpywareLicenseWizardViewController setDisclaimerAccepted:];
-[_TtC7iMazing40DetectSpywareLicenseWizardViewController disclaimerText];
-[_TtC7iMazing40DetectSpywareLicenseWizardViewController setDisclaimerText:];
-[_TtC7iMazing40DetectSpywareLicenseWizardViewController viewDidLoad];
-[_TtC7iMazing40DetectSpywareLicenseWizardViewController didBecomeActive];
-[_TtC7iMazing40DetectSpywareLicenseWizardViewController licenseAcceptedClicked:];
-[_TtC7iMazing40DetectSpywareLicenseWizardViewController disclaimerAcceptedClicked:];
-[_TtC7iMazing40DetectSpywareLicenseWizardViewController readLicense:];
-[_TtC7iMazing40DetectSpywareLicenseWizardViewController learnMore:];
-[_TtC7iMazing40DetectSpywareLicenseWizardViewController nextClicked];
-[_TtC7iMazing40DetectSpywareLicenseWizardViewController initWithNibName:bundle:];
-[_TtC7iMazing40DetectSpywareLicenseWizardViewController initWithCoder:];

@end

@interface _TtC7iMazing40HomeDiscoverTourOperationsViewController : _TtC7iMazing34HomeDiscoverTourBaseViewController {
    /* instance variables */
     imageView1;
     imageView2;
     timer;
     imageIndex;
}

@property (T@"NSImageView",N,&,VimageView1) imageView1;
@property (T@"NSImageView",N,&,VimageView2) imageView2;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing40HomeDiscoverTourOperationsViewController imageView1];
-[_TtC7iMazing40HomeDiscoverTourOperationsViewController setImageView1:];
-[_TtC7iMazing40HomeDiscoverTourOperationsViewController imageView2];
-[_TtC7iMazing40HomeDiscoverTourOperationsViewController setImageView2:];
-[_TtC7iMazing40HomeDiscoverTourOperationsViewController nibName];
-[_TtC7iMazing40HomeDiscoverTourOperationsViewController viewDidLoad];
-[_TtC7iMazing40HomeDiscoverTourOperationsViewController viewDidAppear];
-[_TtC7iMazing40HomeDiscoverTourOperationsViewController viewDidDisappear];
-[_TtC7iMazing40HomeDiscoverTourOperationsViewController updateImage];
-[_TtC7iMazing40HomeDiscoverTourOperationsViewController initWithNibName:bundle:];
-[_TtC7iMazing40HomeDiscoverTourOperationsViewController initWithCoder:];

@end

@interface _TtC7iMazing40InteractionAlertChangePasswordController : NSViewController <_TtP7iMazing39InteractionAlertAccessoryViewController_> {
    /* instance variables */
     data;
     password1;
     password2;
     password3;
     checkboxTitle;
     checkboxValue;
     passwordField1;
     passwordField2;
     passwordField3;
     checkbox;
}

@property (T@"UserInteractionDialogBoxData",N,&,Vdata) data;
@property (T@"NSString",N,C) password1;
@property (T@"NSString",N,C) password2;
@property (T@"NSString",N,C) password3;
@property (T@"NSString",N,C) checkboxTitle;
@property (Tq,N,VcheckboxValue) checkboxValue;
@property (T@"NSTextField",N,&,VpasswordField1) passwordField1;
@property (T@"NSTextField",N,&,VpasswordField2) passwordField2;
@property (T@"NSTextField",N,&,VpasswordField3) passwordField3;
@property (T@"NSButton",N,&,Vcheckbox) checkbox;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing40InteractionAlertChangePasswordController data];
-[_TtC7iMazing40InteractionAlertChangePasswordController setData:];
-[_TtC7iMazing40InteractionAlertChangePasswordController password1];
-[_TtC7iMazing40InteractionAlertChangePasswordController setPassword1:];
-[_TtC7iMazing40InteractionAlertChangePasswordController password2];
-[_TtC7iMazing40InteractionAlertChangePasswordController setPassword2:];
-[_TtC7iMazing40InteractionAlertChangePasswordController password3];
-[_TtC7iMazing40InteractionAlertChangePasswordController setPassword3:];
-[_TtC7iMazing40InteractionAlertChangePasswordController checkboxTitle];
-[_TtC7iMazing40InteractionAlertChangePasswordController setCheckboxTitle:];
-[_TtC7iMazing40InteractionAlertChangePasswordController checkboxValue];
-[_TtC7iMazing40InteractionAlertChangePasswordController setCheckboxValue:];
-[_TtC7iMazing40InteractionAlertChangePasswordController passwordField1];
-[_TtC7iMazing40InteractionAlertChangePasswordController setPasswordField1:];
-[_TtC7iMazing40InteractionAlertChangePasswordController passwordField2];
-[_TtC7iMazing40InteractionAlertChangePasswordController setPasswordField2:];
-[_TtC7iMazing40InteractionAlertChangePasswordController passwordField3];
-[_TtC7iMazing40InteractionAlertChangePasswordController setPasswordField3:];
-[_TtC7iMazing40InteractionAlertChangePasswordController checkbox];
-[_TtC7iMazing40InteractionAlertChangePasswordController setCheckbox:];
-[_TtC7iMazing40InteractionAlertChangePasswordController initWithData:];
-[_TtC7iMazing40InteractionAlertChangePasswordController initWithCoder:];
-[_TtC7iMazing40InteractionAlertChangePasswordController nibName];
-[_TtC7iMazing40InteractionAlertChangePasswordController viewDidLoad];
-[_TtC7iMazing40InteractionAlertChangePasswordController alertWillShow:];
-[_TtC7iMazing40InteractionAlertChangePasswordController alertDidEndWithButtonIndex:];
-[_TtC7iMazing40InteractionAlertChangePasswordController initWithNibName:bundle:];

@end

@interface _TtC7iMazing40PhysicalIOSStandardDeviceArrayController : NSArrayController

/* instance methods */
-[_TtC7iMazing40PhysicalIOSStandardDeviceArrayController initWithContent:];
-[_TtC7iMazing40PhysicalIOSStandardDeviceArrayController initWithCoder:];
-[_TtC7iMazing40PhysicalIOSStandardDeviceArrayController dealloc];

@end

@interface _TtC7iMazing40RegistrationBrowserRestartViewController : _TtC7iMazing33RegistrationContentViewController {
    /* instance variables */
     url;
}

@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing40RegistrationBrowserRestartViewController initWithCoder:];
-[_TtC7iMazing40RegistrationBrowserRestartViewController nibName];
-[_TtC7iMazing40RegistrationBrowserRestartViewController viewDidLoad];
-[_TtC7iMazing40RegistrationBrowserRestartViewController openURL:];
-[_TtC7iMazing40RegistrationBrowserRestartViewController later:];
-[_TtC7iMazing40RegistrationBrowserRestartViewController restart:];
-[_TtC7iMazing40RegistrationBrowserRestartViewController init];

@end

@interface _TtC7iMazing41BlueprintSectionSupervisionViewController : _TtC7iMazing34BlueprintSectionViewControllerBase {
    /* instance variables */
     orgsPopupButton;
     contentStackView;
     blueprintOrganization;
     superviseLabel;
     _orgsWC;
     _observations;
}

@property (T@"NSString",N,R) nibName;
@property (T@"_TtC7iMazing17ChoosePopupButton",N,&,VorgsPopupButton) orgsPopupButton;
@property (T@"NSStackView",N,&,VcontentStackView) contentStackView;
@property (T@"Organization",N,&,VblueprintOrganization) blueprintOrganization;
@property (T@"NSString",N,C) superviseLabel;

/* instance methods */
-[_TtC7iMazing41BlueprintSectionSupervisionViewController nibName];
-[_TtC7iMazing41BlueprintSectionSupervisionViewController orgsPopupButton];
-[_TtC7iMazing41BlueprintSectionSupervisionViewController setOrgsPopupButton:];
-[_TtC7iMazing41BlueprintSectionSupervisionViewController contentStackView];
-[_TtC7iMazing41BlueprintSectionSupervisionViewController setContentStackView:];
-[_TtC7iMazing41BlueprintSectionSupervisionViewController blueprintOrganization];
-[_TtC7iMazing41BlueprintSectionSupervisionViewController setBlueprintOrganization:];
-[_TtC7iMazing41BlueprintSectionSupervisionViewController superviseLabel];
-[_TtC7iMazing41BlueprintSectionSupervisionViewController setSuperviseLabel:];
-[_TtC7iMazing41BlueprintSectionSupervisionViewController initWithCoder:];
-[_TtC7iMazing41BlueprintSectionSupervisionViewController dealloc];
-[_TtC7iMazing41BlueprintSectionSupervisionViewController superviseClicked:];
-[_TtC7iMazing41BlueprintSectionSupervisionViewController showSupervisionIdentity:];

@end

@interface _TtC7iMazing41ConfiguratorProfilesContentViewController : _TtC7iMazing27LibraryWizardViewController

/* instance methods */
-[_TtC7iMazing41ConfiguratorProfilesContentViewController init];
-[_TtC7iMazing41ConfiguratorProfilesContentViewController initWithCoder:];

@end

@interface _TtC7iMazing41DetectSpywareWizardProgressViewController : _TtC7iMazing34WizardWindowProgressViewController

/* instance methods */
-[_TtC7iMazing41DetectSpywareWizardProgressViewController willBecomeActive];
-[_TtC7iMazing41DetectSpywareWizardProgressViewController init];
-[_TtC7iMazing41DetectSpywareWizardProgressViewController initWithCoder:];

@end

@interface _TtC7iMazing41DeviceSettingsDeviceOptionsViewController : NSViewController <_TtP7iMazing14IndexedElement_, NSObject, _TtP7iMazing7Savable_> {
    /* instance variables */
     enableSaveAndDiscard;
     isLoadingObserver;
     item;
     indexPath;
     deviceOptionsViewController;
     container;
}

@property (TB,N,VenableSaveAndDiscard) enableSaveAndDiscard;
@property (T@"_TtC7iMazing10DeviceItem",N,&,Vitem) item;
@property (T@"NSIndexPath",N,C) indexPath;
@property (T@"_TtC7iMazing27DeviceOptionsViewController",N,&,VdeviceOptionsViewController) deviceOptionsViewController;
@property (T@"NSView",N,&,Vcontainer) container;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing41DeviceSettingsDeviceOptionsViewController enableSaveAndDiscard];
-[_TtC7iMazing41DeviceSettingsDeviceOptionsViewController setEnableSaveAndDiscard:];
-[_TtC7iMazing41DeviceSettingsDeviceOptionsViewController item];
-[_TtC7iMazing41DeviceSettingsDeviceOptionsViewController setItem:];
-[_TtC7iMazing41DeviceSettingsDeviceOptionsViewController indexPath];
-[_TtC7iMazing41DeviceSettingsDeviceOptionsViewController setIndexPath:];
-[_TtC7iMazing41DeviceSettingsDeviceOptionsViewController deviceOptionsViewController];
-[_TtC7iMazing41DeviceSettingsDeviceOptionsViewController setDeviceOptionsViewController:];
-[_TtC7iMazing41DeviceSettingsDeviceOptionsViewController container];
-[_TtC7iMazing41DeviceSettingsDeviceOptionsViewController setContainer:];
-[_TtC7iMazing41DeviceSettingsDeviceOptionsViewController initWithCoder:];
-[_TtC7iMazing41DeviceSettingsDeviceOptionsViewController dealloc];
-[_TtC7iMazing41DeviceSettingsDeviceOptionsViewController nibName];
-[_TtC7iMazing41DeviceSettingsDeviceOptionsViewController viewDidAppear];
-[_TtC7iMazing41DeviceSettingsDeviceOptionsViewController viewDidDisappear];
-[_TtC7iMazing41DeviceSettingsDeviceOptionsViewController save];
-[_TtC7iMazing41DeviceSettingsDeviceOptionsViewController reset];
-[_TtC7iMazing41DeviceSettingsDeviceOptionsViewController canLeave];
-[_TtC7iMazing41DeviceSettingsDeviceOptionsViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing41SelectConnectedDeviceWizardViewController : NSViewController <WizardWindowDelegate, NSTableViewDelegate, NSTableViewDataSource> {
    /* instance variables */
     contentView;
     connectViewContainer;
     pairingViewContainer;
     wizard;
     behavior;
     allowWiFi;
     connectController;
     notification;
     discover;
     image;
     subtitle;
     text;
     devices;
     showLeftPane;
     pairingController;
     devicesViewController;
}

@property (T@"NSView",N,&,VcontentView) contentView;
@property (T@"NSView",N,&,VconnectViewContainer) connectViewContainer;
@property (T@"NSView",N,&,VpairingViewContainer) pairingViewContainer;
@property (T@"WizardWindowController",N,W,Vwizard) wizard;
@property (Tq,N,Vbehavior) behavior;
@property (T@"NSImage",N,&,Vimage) image;
@property (T@"NSString",N,C) subtitle;
@property (T@"NSString",N,C) text;
@property (T@"NSArrayController",N,&,Vdevices) devices;
@property (TB,N,VshowLeftPane) showLeftPane;
@property (T@"_TtC7iMazing27GenericScreenViewController",N,&,VpairingController) pairingController;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController contentView];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController setContentView:];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController connectViewContainer];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController setConnectViewContainer:];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController pairingViewContainer];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController setPairingViewContainer:];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController wizard];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController setWizard:];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController behavior];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController setBehavior:];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController image];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController setImage:];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController subtitle];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController setSubtitle:];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController text];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController setText:];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController devices];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController setDevices:];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController showLeftPane];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController setShowLeftPane:];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController pairingController];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController setPairingController:];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController initWithNotification:];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController initWithDiscover:];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController initWithCoder:];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController nibName];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController viewDidLoad];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController didBecomeActive];
-[_TtC7iMazing41SelectConnectedDeviceWizardViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing42DeviceSettingsBackupLocationViewController : NSViewController <_TtP7iMazing14IndexedElement_, NSObject, _TtP7iMazing7Savable_, _TtP7iMazing10Switchable_> {
    /* instance variables */
     item;
     indexPath;
     saving;
     backupLocationViewController;
     showPreferencesButton;
     enableSaveAndDiscard;
     selectionChangedObserver;
     infoViewController;
     currentBackupLocation;
     statusChangedCallback;
     kind;
     infoViewContainer;
     container;
}

@property (T@"_TtC7iMazing10DeviceItem",N,&,Vitem) item;
@property (T@"NSIndexPath",N,C) indexPath;
@property (TB,N,Vsaving) saving;
@property (T@"_TtC7iMazing28BackupLocationViewController",N,&,VbackupLocationViewController) backupLocationViewController;
@property (TB,N,VshowPreferencesButton) showPreferencesButton;
@property (TB,N,VenableSaveAndDiscard) enableSaveAndDiscard;
@property (T@"NSView",N,&,VinfoViewContainer) infoViewContainer;
@property (T@"NSView",N,&,Vcontainer) container;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController item];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController setItem:];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController indexPath];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController setIndexPath:];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController saving];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController setSaving:];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController backupLocationViewController];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController setBackupLocationViewController:];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController showPreferencesButton];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController setShowPreferencesButton:];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController enableSaveAndDiscard];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController setEnableSaveAndDiscard:];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController infoViewContainer];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController setInfoViewContainer:];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController container];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController setContainer:];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController initWithCoder:];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController dealloc];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController nibName];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController viewDidLoad];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController viewDidAppear];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController onStatusChangedWithCallback:];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController showPreferencesWindow:];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController volumeDidChanges:];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController reset];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController save];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController canLeave];
-[_TtC7iMazing42DeviceSettingsBackupLocationViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing43ConfiguratorBlueprintsContentViewController : _TtC7iMazing27LibraryWizardViewController

/* instance methods */
-[_TtC7iMazing43ConfiguratorBlueprintsContentViewController init];
-[_TtC7iMazing43ConfiguratorBlueprintsContentViewController initWithCoder:];

@end

@interface _TtC7iMazing43ConfiguratorMDMServersContentViewController : _TtC7iMazing27LibraryWizardViewController

/* instance methods */
-[_TtC7iMazing43ConfiguratorMDMServersContentViewController init];
-[_TtC7iMazing43ConfiguratorMDMServersContentViewController initWithCoder:];

@end

@interface _TtC7iMazing43DeviceSettingsAutomaticBackupViewController : NSViewController <NSTextFieldDelegate, _TtP7iMazing14IndexedElement_, NSObject, _TtP7iMazing7Savable_> {
    /* instance variables */
     minimumFrequency;
     maximumFrequency;
     infoViewContainer;
     preferencesViewContainer;
     segmentedControl;
     frequencyTextField;
     item;
     indexPath;
     frequencies;
     hours;
     batteryItems;
     enableSaveAndDiscard;
     enableAutomaticBackup;
     autoBackupCustomTime;
     selectedHour1;
     selectedHour2;
     selectedBattery;
     infoViewController;
     previousTextfieldValue;
     currentFrequencyInSeconds;
}

@property (T@"NSView",N,&,VinfoViewContainer) infoViewContainer;
@property (T@"NSView",N,&,VpreferencesViewContainer) preferencesViewContainer;
@property (T@"VKSegmentedControl",N,&,VsegmentedControl) segmentedControl;
@property (T@"VKTextField",N,&,VfrequencyTextField) frequencyTextField;
@property (T@"_TtC7iMazing10DeviceItem",N,&,Vitem) item;
@property (T@"NSIndexPath",N,C) indexPath;
@property (T@"NSArray",N,C) frequencies;
@property (T@"NSArray",N,C) hours;
@property (T@"NSArray",N,C) batteryItems;
@property (TB,N,VenableSaveAndDiscard) enableSaveAndDiscard;
@property (TB,N,VenableAutomaticBackup) enableAutomaticBackup;
@property (TB,N,VautoBackupCustomTime) autoBackupCustomTime;
@property (T@"_TtC7iMazing25SchedulingOptionsHourItem",N,&,VselectedHour1) selectedHour1;
@property (T@"_TtC7iMazing25SchedulingOptionsHourItem",N,&,VselectedHour2) selectedHour2;
@property (T@"_TtC7iMazing11BatteryItem",N,&,VselectedBattery) selectedBattery;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController control:textShouldBeginEditing:];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController controlTextDidChange:];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController control:textShouldEndEditing:];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController infoViewContainer];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController setInfoViewContainer:];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController preferencesViewContainer];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController setPreferencesViewContainer:];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController segmentedControl];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController setSegmentedControl:];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController frequencyTextField];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController setFrequencyTextField:];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController item];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController setItem:];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController indexPath];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController setIndexPath:];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController frequencies];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController setFrequencies:];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController hours];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController setHours:];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController batteryItems];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController setBatteryItems:];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController enableSaveAndDiscard];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController setEnableSaveAndDiscard:];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController enableAutomaticBackup];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController setEnableAutomaticBackup:];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController autoBackupCustomTime];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController setAutoBackupCustomTime:];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController selectedHour1];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController setSelectedHour1:];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController selectedHour2];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController setSelectedHour2:];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController selectedBattery];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController setSelectedBattery:];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController initWithCoder:];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController nibName];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController viewDidLoad];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController viewWillAppear];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController frequencySegmentedControl:];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController reset];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController save];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController canLeave];
-[_TtC7iMazing43DeviceSettingsAutomaticBackupViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing43NonPhysicalIOSStandardDeviceArrayController : NSArrayController

/* instance methods */
-[_TtC7iMazing43NonPhysicalIOSStandardDeviceArrayController initWithContent:];
-[_TtC7iMazing43NonPhysicalIOSStandardDeviceArrayController initWithCoder:];
-[_TtC7iMazing43NonPhysicalIOSStandardDeviceArrayController dealloc];

@end

@interface _TtC7iMazing43PhotoDetailViewThumbnailsCollectionViewItem : NSCollectionViewItem {
    /* instance variables */
     cachedSmallThumbnailImageView;
     mouseDownTimestamp;
     thumbnailImagePath;
}

@property (T@"NSString",N,C) thumbnailImagePath;
@property (TB,N) selected;

/* instance methods */
-[_TtC7iMazing43PhotoDetailViewThumbnailsCollectionViewItem thumbnailImagePath];
-[_TtC7iMazing43PhotoDetailViewThumbnailsCollectionViewItem setThumbnailImagePath:];
-[_TtC7iMazing43PhotoDetailViewThumbnailsCollectionViewItem viewDidAppear];
-[_TtC7iMazing43PhotoDetailViewThumbnailsCollectionViewItem viewDidDisappear];
-[_TtC7iMazing43PhotoDetailViewThumbnailsCollectionViewItem mouseUp:];
-[_TtC7iMazing43PhotoDetailViewThumbnailsCollectionViewItem mouseDown:];
-[_TtC7iMazing43PhotoDetailViewThumbnailsCollectionViewItem isSelected];
-[_TtC7iMazing43PhotoDetailViewThumbnailsCollectionViewItem setSelected:];
-[_TtC7iMazing43PhotoDetailViewThumbnailsCollectionViewItem initWithNibName:bundle:];
-[_TtC7iMazing43PhotoDetailViewThumbnailsCollectionViewItem initWithCoder:];

@end

@interface _TtC7iMazing43SelectConnectedDeviceWizardWindowController : WizardWindowController

/* instance methods */
-[_TtC7iMazing43SelectConnectedDeviceWizardWindowController initWithNotification:];
-[_TtC7iMazing43SelectConnectedDeviceWizardWindowController initWithDiscover:];
-[_TtC7iMazing43SelectConnectedDeviceWizardWindowController initWithCoder:];
-[_TtC7iMazing43SelectConnectedDeviceWizardWindowController initWithTitle:device:requiresConnection:];

@end

@interface _TtC7iMazing44BackupNavigationManageMenuItemViewController : NSViewController {
    /* instance variables */
     highlightView;
     action;
     label;
     text;
     icon;
}

@property (T@"_TtC7iMazing28BackupNavigationMenuItemView",N,&,VhighlightView) highlightView;
@property (T@"NSString",N,C) label;
@property (T@"NSString",N,C) text;
@property (T@"NSImage",N,&,Vicon) icon;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing44BackupNavigationManageMenuItemViewController highlightView];
-[_TtC7iMazing44BackupNavigationManageMenuItemViewController setHighlightView:];
-[_TtC7iMazing44BackupNavigationManageMenuItemViewController label];
-[_TtC7iMazing44BackupNavigationManageMenuItemViewController setLabel:];
-[_TtC7iMazing44BackupNavigationManageMenuItemViewController text];
-[_TtC7iMazing44BackupNavigationManageMenuItemViewController setText:];
-[_TtC7iMazing44BackupNavigationManageMenuItemViewController icon];
-[_TtC7iMazing44BackupNavigationManageMenuItemViewController setIcon:];
-[_TtC7iMazing44BackupNavigationManageMenuItemViewController initWithCoder:];
-[_TtC7iMazing44BackupNavigationManageMenuItemViewController nibName];
-[_TtC7iMazing44BackupNavigationManageMenuItemViewController viewDidLoad];
-[_TtC7iMazing44BackupNavigationManageMenuItemViewController viewDidDisappear];
-[_TtC7iMazing44BackupNavigationManageMenuItemViewController performAction:];
-[_TtC7iMazing44BackupNavigationManageMenuItemViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing44DeviceSettingsBackupEncryptionViewController : NSViewController <_TtP7iMazing14IndexedElement_, NSObject, _TtP7iMazing10Switchable_> {
    /* instance variables */
     infoViewContainer;
     encryptionStatusButton;
     item;
     indexPath;
     isUpdatingEncryption;
     backupEncryptionIsEnabled;
     infoViewController;
     statusChangedCallback;
}

@property (T@"NSView",N,&,VinfoViewContainer) infoViewContainer;
@property (T@"VKSwitch",N,&,VencryptionStatusButton) encryptionStatusButton;
@property (T@"_TtC7iMazing10DeviceItem",N,&,Vitem) item;
@property (T@"NSIndexPath",N,C) indexPath;
@property (TB,N,VisUpdatingEncryption) isUpdatingEncryption;
@property (TB,N,VbackupEncryptionIsEnabled) backupEncryptionIsEnabled;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing44DeviceSettingsBackupEncryptionViewController infoViewContainer];
-[_TtC7iMazing44DeviceSettingsBackupEncryptionViewController setInfoViewContainer:];
-[_TtC7iMazing44DeviceSettingsBackupEncryptionViewController encryptionStatusButton];
-[_TtC7iMazing44DeviceSettingsBackupEncryptionViewController setEncryptionStatusButton:];
-[_TtC7iMazing44DeviceSettingsBackupEncryptionViewController item];
-[_TtC7iMazing44DeviceSettingsBackupEncryptionViewController setItem:];
-[_TtC7iMazing44DeviceSettingsBackupEncryptionViewController indexPath];
-[_TtC7iMazing44DeviceSettingsBackupEncryptionViewController setIndexPath:];
-[_TtC7iMazing44DeviceSettingsBackupEncryptionViewController isUpdatingEncryption];
-[_TtC7iMazing44DeviceSettingsBackupEncryptionViewController setIsUpdatingEncryption:];
-[_TtC7iMazing44DeviceSettingsBackupEncryptionViewController backupEncryptionIsEnabled];
-[_TtC7iMazing44DeviceSettingsBackupEncryptionViewController setBackupEncryptionIsEnabled:];
-[_TtC7iMazing44DeviceSettingsBackupEncryptionViewController initWithCoder:];
-[_TtC7iMazing44DeviceSettingsBackupEncryptionViewController dealloc];
-[_TtC7iMazing44DeviceSettingsBackupEncryptionViewController nibName];
-[_TtC7iMazing44DeviceSettingsBackupEncryptionViewController viewDidLoad];
-[_TtC7iMazing44DeviceSettingsBackupEncryptionViewController onStatusChangedWithCallback:];
-[_TtC7iMazing44DeviceSettingsBackupEncryptionViewController changeEncryption:];
-[_TtC7iMazing44DeviceSettingsBackupEncryptionViewController changeBackupPassword:];
-[_TtC7iMazing44DeviceSettingsBackupEncryptionViewController deviceNotificationWithNotification:];
-[_TtC7iMazing44DeviceSettingsBackupEncryptionViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing44HomeDiscoverTourDeviceOverviewViewController : _TtC7iMazing34HomeDiscoverTourBaseViewController

@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing44HomeDiscoverTourDeviceOverviewViewController nibName];
-[_TtC7iMazing44HomeDiscoverTourDeviceOverviewViewController viewDidLoad];
-[_TtC7iMazing44HomeDiscoverTourDeviceOverviewViewController initWithNibName:bundle:];
-[_TtC7iMazing44HomeDiscoverTourDeviceOverviewViewController initWithCoder:];

@end

@interface _TtC7iMazing44HomeDiscoverTourDeviceSettingsViewController : _TtC7iMazing34HomeDiscoverTourBaseViewController

@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing44HomeDiscoverTourDeviceSettingsViewController nibName];
-[_TtC7iMazing44HomeDiscoverTourDeviceSettingsViewController viewDidLoad];
-[_TtC7iMazing44HomeDiscoverTourDeviceSettingsViewController initWithNibName:bundle:];
-[_TtC7iMazing44HomeDiscoverTourDeviceSettingsViewController initWithCoder:];

@end

@interface _TtC7iMazing45BlueprintSectionAppRestrictionsViewController : _TtC7iMazing34BlueprintSectionViewControllerBase <_TtP7iMazing24PlusMinusControlDelegate_> {
    /* instance variables */
     appsArrayController;
     restrictionModeButton;
     chooseAppWC;
     isLoading;
}

@property (T@"NSString",N,R) nibName;
@property (T@"NSArrayController",N,&,VappsArrayController) appsArrayController;
@property (T@"NSPopUpButton",N,&,VrestrictionModeButton) restrictionModeButton;
@property (TB,N,VisLoading) isLoading;

/* instance methods */
-[_TtC7iMazing45BlueprintSectionAppRestrictionsViewController nibName];
-[_TtC7iMazing45BlueprintSectionAppRestrictionsViewController appsArrayController];
-[_TtC7iMazing45BlueprintSectionAppRestrictionsViewController setAppsArrayController:];
-[_TtC7iMazing45BlueprintSectionAppRestrictionsViewController restrictionModeButton];
-[_TtC7iMazing45BlueprintSectionAppRestrictionsViewController setRestrictionModeButton:];
-[_TtC7iMazing45BlueprintSectionAppRestrictionsViewController isLoading];
-[_TtC7iMazing45BlueprintSectionAppRestrictionsViewController setIsLoading:];
-[_TtC7iMazing45BlueprintSectionAppRestrictionsViewController initWithCoder:];
-[_TtC7iMazing45BlueprintSectionAppRestrictionsViewController modeChanged:];
-[_TtC7iMazing45BlueprintSectionAppRestrictionsViewController plusClicked:];
-[_TtC7iMazing45BlueprintSectionAppRestrictionsViewController minusClicked:];

@end

@interface _TtC7iMazing45CollectionViewFixedItemSizeVerticalFlowLayout : _TtC7iMazing36CollectionViewVerticalFlowLayoutBase {
    /* instance variables */
     internalBiggestHeightInRow;
}

/* instance methods */
-[_TtC7iMazing45CollectionViewFixedItemSizeVerticalFlowLayout init];
-[_TtC7iMazing45CollectionViewFixedItemSizeVerticalFlowLayout initWithCoder:];

@end

@interface _TtC7iMazing45DeviceSettingsAdditionalOptionsViewController : NSViewController <NSTextFieldDelegate, _TtP7iMazing14IndexedElement_, NSObject, _TtP7iMazing7Savable_> {
    /* instance variables */
     minimumLowBatteryNotification;
     maximumLowBatteryNotification;
     defaultLowBatteryNotification;
     item;
     indexPath;
     enableSaveAndDiscard;
     lowBatteryItems;
     lowBatteryItem;
     launchWhenConnectedViaUSB;
     enableLowBatteryNotification;
     openAutomaticallyAtLaunch;
     infoViewController;
     previousTextfieldValue;
     LowBatteryNotificationValue;
     infoViewContainer;
     lowBatteryTextField;
}

@property (T@"_TtC7iMazing10DeviceItem",N,&,Vitem) item;
@property (T@"NSIndexPath",N,C) indexPath;
@property (TB,N,VenableSaveAndDiscard) enableSaveAndDiscard;
@property (T@"NSArray",N,C) lowBatteryItems;
@property (T@"_TtC7iMazing11BatteryItem",N,&,VlowBatteryItem) lowBatteryItem;
@property (TB,N,VlaunchWhenConnectedViaUSB) launchWhenConnectedViaUSB;
@property (TB,N,VenableLowBatteryNotification) enableLowBatteryNotification;
@property (TB,N,VopenAutomaticallyAtLaunch) openAutomaticallyAtLaunch;
@property (T@"NSView",N,&,VinfoViewContainer) infoViewContainer;
@property (T@"NSTextField",N,&,VlowBatteryTextField) lowBatteryTextField;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController control:textShouldBeginEditing:];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController controlTextDidChange:];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController control:textShouldEndEditing:];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController item];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController setItem:];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController indexPath];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController setIndexPath:];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController enableSaveAndDiscard];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController setEnableSaveAndDiscard:];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController lowBatteryItems];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController setLowBatteryItems:];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController lowBatteryItem];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController setLowBatteryItem:];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController launchWhenConnectedViaUSB];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController setLaunchWhenConnectedViaUSB:];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController enableLowBatteryNotification];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController setEnableLowBatteryNotification:];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController openAutomaticallyAtLaunch];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController setOpenAutomaticallyAtLaunch:];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController infoViewContainer];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController setInfoViewContainer:];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController lowBatteryTextField];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController setLowBatteryTextField:];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController initWithCoder:];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController nibName];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController viewDidLoad];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController viewWillAppear];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController reset];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController save];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController canLeave];
-[_TtC7iMazing45DeviceSettingsAdditionalOptionsViewController initWithNibName:bundle:];

@end

@interface _TtC7iMazing45HomeDiscoverTourDeviceSnapshotsViewController : _TtC7iMazing34HomeDiscoverTourBaseViewController

@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing45HomeDiscoverTourDeviceSnapshotsViewController nibName];
-[_TtC7iMazing45HomeDiscoverTourDeviceSnapshotsViewController viewDidLoad];
-[_TtC7iMazing45HomeDiscoverTourDeviceSnapshotsViewController initWithNibName:bundle:];
-[_TtC7iMazing45HomeDiscoverTourDeviceSnapshotsViewController initWithCoder:];

@end

@interface _TtC7iMazing45PhotoDetailViewThumbnailsCollectionScrollView : NSScrollView {
    /* instance variables */
     photoDetailViewThumbnailsCollectionView;
     timer;
     eventPhaseEnded;
}

@property (T@"_TtC7iMazing39PhotoDetailViewThumbnailsCollectionView",N,&,VphotoDetailViewThumbnailsCollectionView) photoDetailViewThumbnailsCollectionView;

/* instance methods */
-[_TtC7iMazing45PhotoDetailViewThumbnailsCollectionScrollView photoDetailViewThumbnailsCollectionView];
-[_TtC7iMazing45PhotoDetailViewThumbnailsCollectionScrollView setPhotoDetailViewThumbnailsCollectionView:];
-[_TtC7iMazing45PhotoDetailViewThumbnailsCollectionScrollView initWithCoder:];
-[_TtC7iMazing45PhotoDetailViewThumbnailsCollectionScrollView onTimer];
-[_TtC7iMazing45PhotoDetailViewThumbnailsCollectionScrollView scrollWheel:];
-[_TtC7iMazing45PhotoDetailViewThumbnailsCollectionScrollView initWithFrame:];

@end

@interface _TtC7iMazing46ConfiguratorOrganizationsContentViewController : _TtC7iMazing27LibraryWizardViewController

/* instance methods */
-[_TtC7iMazing46ConfiguratorOrganizationsContentViewController init];
-[_TtC7iMazing46ConfiguratorOrganizationsContentViewController initWithCoder:];

@end

@interface _TtC7iMazing46iOSStandardDeviceAndClassiciPodArrayController : NSArrayController

/* instance methods */
-[_TtC7iMazing46iOSStandardDeviceAndClassiciPodArrayController initWithContent:];
-[_TtC7iMazing46iOSStandardDeviceAndClassiciPodArrayController initWithCoder:];
-[_TtC7iMazing46iOSStandardDeviceAndClassiciPodArrayController dealloc];

@end

@interface _TtC7iMazing47HomeDiscoverTourDevicesAndBackupsViewController : _TtC7iMazing34HomeDiscoverTourBaseViewController {
    /* instance variables */
     imageView1;
     imageView2;
     timer;
     imageIndex;
}

@property (T@"NSImageView",N,&,VimageView1) imageView1;
@property (T@"NSImageView",N,&,VimageView2) imageView2;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing47HomeDiscoverTourDevicesAndBackupsViewController imageView1];
-[_TtC7iMazing47HomeDiscoverTourDevicesAndBackupsViewController setImageView1:];
-[_TtC7iMazing47HomeDiscoverTourDevicesAndBackupsViewController imageView2];
-[_TtC7iMazing47HomeDiscoverTourDevicesAndBackupsViewController setImageView2:];
-[_TtC7iMazing47HomeDiscoverTourDevicesAndBackupsViewController nibName];
-[_TtC7iMazing47HomeDiscoverTourDevicesAndBackupsViewController viewDidLoad];
-[_TtC7iMazing47HomeDiscoverTourDevicesAndBackupsViewController viewDidAppear];
-[_TtC7iMazing47HomeDiscoverTourDevicesAndBackupsViewController viewDidDisappear];
-[_TtC7iMazing47HomeDiscoverTourDevicesAndBackupsViewController updateImage];
-[_TtC7iMazing47HomeDiscoverTourDevicesAndBackupsViewController initWithNibName:bundle:];
-[_TtC7iMazing47HomeDiscoverTourDevicesAndBackupsViewController initWithCoder:];

@end

@interface _TtC7iMazing47RegistrationAssociateSingleDeviceViewController : _TtC7iMazing33RegistrationContentViewController {
    /* instance variables */
     trialNotification;
     deviceItem;
     note;
     actionButtonTitle;
     storeURL;
     storeBrowserURL;
     message;
     totalSlots;
     availableSlots;
     usedSlots;
     canLink;
     buttonsController;
     buttonsContainer;
}

@property (T@"UINotification",N,&,VtrialNotification) trialNotification;
@property (T@"_TtC7iMazing10DeviceItem",N,&,VdeviceItem) deviceItem;
@property (T@"NSString",N,C) note;
@property (T@"NSString",N,C) actionButtonTitle;
@property (T@"NSURL",N,C) storeURL;
@property (T@"NSURL",N,C) storeBrowserURL;
@property (T@"NSString",N,C) message;
@property (TQ,N,VtotalSlots) totalSlots;
@property (TQ,N,VavailableSlots) availableSlots;
@property (TQ,N,VusedSlots) usedSlots;
@property (TB,N,VcanLink) canLink;
@property (T@"NSView",N,&,VbuttonsContainer) buttonsContainer;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController trialNotification];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController setTrialNotification:];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController deviceItem];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController setDeviceItem:];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController note];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController setNote:];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController actionButtonTitle];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController setActionButtonTitle:];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController storeURL];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController setStoreURL:];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController storeBrowserURL];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController setStoreBrowserURL:];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController message];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController setMessage:];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController totalSlots];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController setTotalSlots:];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController availableSlots];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController setAvailableSlots:];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController usedSlots];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController setUsedSlots:];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController canLink];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController setCanLink:];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController buttonsContainer];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController setButtonsContainer:];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController nibName];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController viewDidLoad];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController showHelp:];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController performAction:];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController link:];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController later:];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController viewLicense:];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController openStore:];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController init];
-[_TtC7iMazing47RegistrationAssociateSingleDeviceViewController initWithCoder:];

@end

@interface _TtC7iMazing48HomeDiscoverTourDeviceDataAndToolsViewController : _TtC7iMazing34HomeDiscoverTourBaseViewController {
    /* instance variables */
     imageView1;
     imageView2;
     timer;
     imageIndex;
}

@property (T@"NSImageView",N,&,VimageView1) imageView1;
@property (T@"NSImageView",N,&,VimageView2) imageView2;
@property (T@"NSString",N,R) nibName;

/* instance methods */
-[_TtC7iMazing48HomeDiscoverTourDeviceDataAndToolsViewController imageView1];
-[_TtC7iMazing48HomeDiscoverTourDeviceDataAndToolsViewController setImageView1:];
-[_TtC7iMazing48HomeDiscoverTourDeviceDataAndToolsViewController imageView2];
-[_TtC7iMazing48HomeDiscoverTourDeviceDataAndToolsViewController setImageView2:];
-[_TtC7iMazing48HomeDiscoverTourDeviceDataAndToolsViewController nibName];
-[_TtC7iMazing48HomeDiscoverTourDeviceDataAndToolsViewController viewDidLoad];
-[_TtC7iMazing48HomeDiscoverTourDeviceDataAndToolsViewController viewDidAppear];
-[_TtC7iMazing48HomeDiscoverTourDeviceDataAndToolsViewController viewDidDisappear];
-[_TtC7iMazing48HomeDiscoverTourDeviceDataAndToolsViewController updateImage];
-[_TtC7iMazing48HomeDiscoverTourDeviceDataAndToolsViewController initWithNibName:bundle:];
-[_TtC7iMazing48HomeDiscoverTourDeviceDataAndToolsViewController initWithCoder:];

@end

@interface _TtC7iMazing49CollectionViewFixedItemsPerRowsVerticalFlowLayout : _TtC7iMazing36CollectionViewVerticalFlowLayoutBase {
    /* instance variables */
     internalBiggestHeightInRow;
}

/* instance methods */
-[_TtC7iMazing49CollectionViewFixedItemsPerRowsVerticalFlowLayout init];
-[_TtC7iMazing49CollectionViewFixedItemsPerRowsVerticalFlowLayout initWithCoder:];

@end

@interface _TtC7iMazing49PhotoDetailViewThumbnailsCollectionViewController : NSViewController {
    /* instance variables */
     photoDetailViewThumbnailsCollectionView;
     detailViewController;
     isAwake;
}

@property (T@"_TtC7iMazing39PhotoDetailViewThumbnailsCollectionView",N,&,VphotoDetailViewThumbnailsCollectionView) photoDetailViewThumbnailsCollectionView;

/* instance methods */
-[_TtC7iMazing49PhotoDetailViewThumbnailsCollectionViewController photoDetailViewThumbnailsCollectionView];
-[_TtC7iMazing49PhotoDetailViewThumbnailsCollectionViewController setPhotoDetailViewThumbnailsCollectionView:];
-[_TtC7iMazing49PhotoDetailViewThumbnailsCollectionViewController awakeFromNib];
-[_TtC7iMazing49PhotoDetailViewThumbnailsCollectionViewController viewDidLayout];
-[_TtC7iMazing49PhotoDetailViewThumbnailsCollectionViewController initWithNibName:bundle:];
-[_TtC7iMazing49PhotoDetailViewThumbnailsCollectionViewController initWithCoder:];

@end

@interface _TtC7iMazing54PhysicalIOSStandardDeviceAndClassiciPodArrayController : NSArrayController

/* instance methods */
-[_TtC7iMazing54PhysicalIOSStandardDeviceAndClassiciPodArrayController initWithContent:];
-[_TtC7iMazing54PhysicalIOSStandardDeviceAndClassiciPodArrayController initWithCoder:];
-[_TtC7iMazing54PhysicalIOSStandardDeviceAndClassiciPodArrayController dealloc];

@end

@interface _TtC7iMazing57NonPhysicalIOSStandardDeviceAndClassiciPodArrayController : NSArrayController

/* instance methods */
-[_TtC7iMazing57NonPhysicalIOSStandardDeviceAndClassiciPodArrayController initWithContent:];
-[_TtC7iMazing57NonPhysicalIOSStandardDeviceAndClassiciPodArrayController initWithCoder:];
-[_TtC7iMazing57NonPhysicalIOSStandardDeviceAndClassiciPodArrayController dealloc];

@end

@interface _TtC7iMazing5Paper : NSObject {
    /* instance variables */
     name;
     displayName;
     height;
     width;
}

@property (T@"NSString",N,C) name;
@property (T@"NSString",N,C) displayName;
@property (Tq,N,Vheight) height;
@property (Tq,N,Vwidth) width;

/* instance methods */
-[_TtC7iMazing5Paper name];
-[_TtC7iMazing5Paper setName:];
-[_TtC7iMazing5Paper displayName];
-[_TtC7iMazing5Paper setDisplayName:];
-[_TtC7iMazing5Paper height];
-[_TtC7iMazing5Paper setHeight:];
-[_TtC7iMazing5Paper width];
-[_TtC7iMazing5Paper setWidth:];
-[_TtC7iMazing5Paper init];

@end

@interface _TtC7iMazing5Paths : NSObject

/* class methods */
+[_TtC7iMazing5Paths pathForUserDirectory:];
+[_TtC7iMazing5Paths pathForLocalDirectory:];
+[_TtC7iMazing5Paths pathForSystemDirectory:];
+[_TtC7iMazing5Paths userLibraryPath];
+[_TtC7iMazing5Paths userDocumentPath];
+[_TtC7iMazing5Paths userDesktopPath];
+[_TtC7iMazing5Paths userCachesPath];
+[_TtC7iMazing5Paths userApplicationSupportPath];
+[_TtC7iMazing5Paths userDownloadsPath];
+[_TtC7iMazing5Paths userMoviesPath];
+[_TtC7iMazing5Paths userMusicPath];
+[_TtC7iMazing5Paths userPicturesPath];
+[_TtC7iMazing5Paths localLibraryPath];
+[_TtC7iMazing5Paths localCachesPath];
+[_TtC7iMazing5Paths localApplicationSupportPath];
+[_TtC7iMazing5Paths systemLibraryPath];
+[_TtC7iMazing5Paths systemCachesPath];
+[_TtC7iMazing5Paths systemApplicationPath];
+[_TtC7iMazing5Paths iMazingCachesPath];
+[_TtC7iMazing5Paths iMazingApplicationSupportPath];
+[_TtC7iMazing5Paths iTunesBackupPath];
+[_TtC7iMazing5Paths iMazingBackupPath];
+[_TtC7iMazing5Paths isVolumeRootBackupFolder:];
+[_TtC7iMazing5Paths isDefaultBackupFolder:];
+[_TtC7iMazing5Paths isiTunesBackupFolder:];
+[_TtC7iMazing5Paths isiMazingBackupFolder:];

/* instance methods */
-[_TtC7iMazing5Paths init];

@end

@interface _TtC7iMazing6iTunes : NSObject

/* class methods */
+[_TtC7iMazing6iTunes checkVersion];

/* instance methods */
-[_TtC7iMazing6iTunes init];

@end

@interface _TtC7iMazing7Dataset : NSObject {
    /* instance variables */
     name;
     icon;
     scheme;
     sorting;
}

@property (T@"NSString",N,C) name;
@property (T@"NSImage",N,&,Vicon) icon;
@property (T@"NSString",N,C) scheme;
@property (Tq,N,Vsorting) sorting;

/* class methods */
+[_TtC7iMazing7Dataset datasetsWithDevice:includeShortcuts:];
+[_TtC7iMazing7Dataset datasetsWithElementSet:];

/* instance methods */
-[_TtC7iMazing7Dataset name];
-[_TtC7iMazing7Dataset setName:];
-[_TtC7iMazing7Dataset icon];
-[_TtC7iMazing7Dataset setIcon:];
-[_TtC7iMazing7Dataset scheme];
-[_TtC7iMazing7Dataset setScheme:];
-[_TtC7iMazing7Dataset sorting];
-[_TtC7iMazing7Dataset setSorting:];
-[_TtC7iMazing7Dataset initWithScheme:sorting:];
-[_TtC7iMazing7Dataset initWithName:iconName:scheme:sorting:];
-[_TtC7iMazing7Dataset initWithName:icon:scheme:sorting:];
-[_TtC7iMazing7Dataset isEqual:];
-[_TtC7iMazing7Dataset matchesWithText:];
-[_TtC7iMazing7Dataset init];

@end

@interface _TtC7iMazing7Printer : NSObject {
    /* instance variables */
     id;
     name;
     model;
     papers;
}

/* instance methods */
-[_TtC7iMazing7Printer isEqual:];
-[_TtC7iMazing7Printer init];

@end

@interface _TtC7iMazing8HintView : NSView

/* instance methods */
-[_TtC7iMazing8HintView initWithFrame:];
-[_TtC7iMazing8HintView initWithCoder:];
-[_TtC7iMazing8HintView drawRect:];

@end

@interface _TtC7iMazing8ListItem : NSObject <VKDisplayable> {
    /* instance variables */
     title;
     subtitle;
     status;
     showStatusIcon;
     isGroup;
     isHighlighted;
     children;
     action;
     icon;
     selectedIcon;
     accessoryIcon;
     accessoryText;
     representedObject;
}

@property (T@"NSString",N,C) title;
@property (T@"NSString",N,C) subtitle;
@property (Tq,N,Vstatus) status;
@property (TB,N,VshowStatusIcon) showStatusIcon;
@property (TB,N,VisGroup) isGroup;
@property (TB,N,VisHighlighted) isHighlighted;
@property (T@"NSArrayController",N,&,Vchildren) children;
@property (T@?,N,C) action;
@property (T@"NSImage",N,&,Vicon) icon;
@property (T@"NSImage",N,&,VselectedIcon) selectedIcon;
@property (T@"NSImage",N,&,VaccessoryIcon) accessoryIcon;
@property (T@"NSString",N,C) accessoryText;
@property (T@,N,&,VrepresentedObject) representedObject;

/* instance methods */
-[_TtC7iMazing8ListItem title];
-[_TtC7iMazing8ListItem setTitle:];
-[_TtC7iMazing8ListItem subtitle];
-[_TtC7iMazing8ListItem setSubtitle:];
-[_TtC7iMazing8ListItem status];
-[_TtC7iMazing8ListItem setStatus:];
-[_TtC7iMazing8ListItem showStatusIcon];
-[_TtC7iMazing8ListItem setShowStatusIcon:];
-[_TtC7iMazing8ListItem isGroup];
-[_TtC7iMazing8ListItem setIsGroup:];
-[_TtC7iMazing8ListItem isHighlighted];
-[_TtC7iMazing8ListItem setIsHighlighted:];
-[_TtC7iMazing8ListItem children];
-[_TtC7iMazing8ListItem setChildren:];
-[_TtC7iMazing8ListItem action];
-[_TtC7iMazing8ListItem setAction:];
-[_TtC7iMazing8ListItem icon];
-[_TtC7iMazing8ListItem setIcon:];
-[_TtC7iMazing8ListItem selectedIcon];
-[_TtC7iMazing8ListItem setSelectedIcon:];
-[_TtC7iMazing8ListItem accessoryIcon];
-[_TtC7iMazing8ListItem setAccessoryIcon:];
-[_TtC7iMazing8ListItem accessoryText];
-[_TtC7iMazing8ListItem setAccessoryText:];
-[_TtC7iMazing8ListItem representedObject];
-[_TtC7iMazing8ListItem setRepresentedObject:];
-[_TtC7iMazing8ListItem init];

@end

@interface _TtC7iMazing9DiskUsage : NSObject {
    /* instance variables */
     capacity;
     used;
     free;
     purgeable;
     audio;
     audioPurgeable;
     video;
     videoPurgeable;
     podcast;
     podcastPurgeable;
     photos;
     photosPurgeable;
     apps;
     appsPurgeable;
     books;
     booksPurgeable;
     documents;
     documentsPurgeable;
     system;
     logs;
     other;
     otherPurgeable;
}

@property (TQ,N,Vcapacity) capacity;
@property (TQ,N,Vused) used;
@property (TQ,N,Vfree) free;
@property (TQ,N,Vpurgeable) purgeable;
@property (TQ,N,Vaudio) audio;
@property (TQ,N,VaudioPurgeable) audioPurgeable;
@property (TQ,N,Vvideo) video;
@property (TQ,N,VvideoPurgeable) videoPurgeable;
@property (TQ,N,Vpodcast) podcast;
@property (TQ,N,VpodcastPurgeable) podcastPurgeable;
@property (TQ,N,Vphotos) photos;
@property (TQ,N,VphotosPurgeable) photosPurgeable;
@property (TQ,N,Vapps) apps;
@property (TQ,N,VappsPurgeable) appsPurgeable;
@property (TQ,N,Vbooks) books;
@property (TQ,N,VbooksPurgeable) booksPurgeable;
@property (TQ,N,Vdocuments) documents;
@property (TQ,N,VdocumentsPurgeable) documentsPurgeable;
@property (TQ,N,Vsystem) system;
@property (TQ,N,Vlogs) logs;
@property (TQ,N,Vother) other;
@property (TQ,N,VotherPurgeable) otherPurgeable;

/* instance methods */
-[_TtC7iMazing9DiskUsage capacity];
-[_TtC7iMazing9DiskUsage setCapacity:];
-[_TtC7iMazing9DiskUsage used];
-[_TtC7iMazing9DiskUsage setUsed:];
-[_TtC7iMazing9DiskUsage free];
-[_TtC7iMazing9DiskUsage setFree:];
-[_TtC7iMazing9DiskUsage purgeable];
-[_TtC7iMazing9DiskUsage setPurgeable:];
-[_TtC7iMazing9DiskUsage audio];
-[_TtC7iMazing9DiskUsage setAudio:];
-[_TtC7iMazing9DiskUsage audioPurgeable];
-[_TtC7iMazing9DiskUsage setAudioPurgeable:];
-[_TtC7iMazing9DiskUsage video];
-[_TtC7iMazing9DiskUsage setVideo:];
-[_TtC7iMazing9DiskUsage videoPurgeable];
-[_TtC7iMazing9DiskUsage setVideoPurgeable:];
-[_TtC7iMazing9DiskUsage podcast];
-[_TtC7iMazing9DiskUsage setPodcast:];
-[_TtC7iMazing9DiskUsage podcastPurgeable];
-[_TtC7iMazing9DiskUsage setPodcastPurgeable:];
-[_TtC7iMazing9DiskUsage photos];
-[_TtC7iMazing9DiskUsage setPhotos:];
-[_TtC7iMazing9DiskUsage photosPurgeable];
-[_TtC7iMazing9DiskUsage setPhotosPurgeable:];
-[_TtC7iMazing9DiskUsage apps];
-[_TtC7iMazing9DiskUsage setApps:];
-[_TtC7iMazing9DiskUsage appsPurgeable];
-[_TtC7iMazing9DiskUsage setAppsPurgeable:];
-[_TtC7iMazing9DiskUsage books];
-[_TtC7iMazing9DiskUsage setBooks:];
-[_TtC7iMazing9DiskUsage booksPurgeable];
-[_TtC7iMazing9DiskUsage setBooksPurgeable:];
-[_TtC7iMazing9DiskUsage documents];
-[_TtC7iMazing9DiskUsage setDocuments:];
-[_TtC7iMazing9DiskUsage documentsPurgeable];
-[_TtC7iMazing9DiskUsage setDocumentsPurgeable:];
-[_TtC7iMazing9DiskUsage system];
-[_TtC7iMazing9DiskUsage setSystem:];
-[_TtC7iMazing9DiskUsage logs];
-[_TtC7iMazing9DiskUsage setLogs:];
-[_TtC7iMazing9DiskUsage other];
-[_TtC7iMazing9DiskUsage setOther:];
-[_TtC7iMazing9DiskUsage otherPurgeable];
-[_TtC7iMazing9DiskUsage setOtherPurgeable:];
-[_TtC7iMazing9DiskUsage init];

@end

@interface _TtC7iMazing9PromoData : NSObject {
    /* instance variables */
     id;
     url;
     title;
     force;
}

@property (TQ,N,Vid) id;
@property (T@"NSURL",N,C) url;
@property (T@"NSString",N,C) title;
@property (TB,N,Vforce) force;

/* instance methods */
-[_TtC7iMazing9PromoData id];
-[_TtC7iMazing9PromoData setId:];
-[_TtC7iMazing9PromoData url];
-[_TtC7iMazing9PromoData setUrl:];
-[_TtC7iMazing9PromoData title];
-[_TtC7iMazing9PromoData setTitle:];
-[_TtC7iMazing9PromoData force];
-[_TtC7iMazing9PromoData setForce:];
-[_TtC7iMazing9PromoData init];

@end

@interface _TtCC7iMazing12LottieHelper10LottieInfo : NSObject {
    /* instance variables */
     file;
     type;
}

@property (T@"NSString",N,C) file;
@property (Tq,N,Vtype) type;

/* instance methods */
-[_TtCC7iMazing12LottieHelper10LottieInfo file];
-[_TtCC7iMazing12LottieHelper10LottieInfo setFile:];
-[_TtCC7iMazing12LottieHelper10LottieInfo type];
-[_TtCC7iMazing12LottieHelper10LottieInfo setType:];
-[_TtCC7iMazing12LottieHelper10LottieInfo initWithFile:type:];
-[_TtCC7iMazing12LottieHelper10LottieInfo init];

@end

@interface _TtCC7iMazing15UINotificationsP33_B61B6BF6B65F68B30FD504E5B2BE220915ObservationInfo : _TtCs12_SwiftObject {
    /* instance variables */
     name;
     owner;
     callback;
}

@end

@interface _TtCC7iMazing27VPPLicensesWindowControllerP33_BC4CDAD5B3F4D5C64964EADF84E5256C13LicenseDevice : NSObject {
    /* instance variables */
     serial;
     model;
     name;
}

@property (T@"NSString",N,C) serial;
@property (T@"NSString",N,C) model;
@property (T@"NSString",N,C) name;

/* instance methods */
-[_TtCC7iMazing27VPPLicensesWindowControllerP33_BC4CDAD5B3F4D5C64964EADF84E5256C13LicenseDevice serial];
-[_TtCC7iMazing27VPPLicensesWindowControllerP33_BC4CDAD5B3F4D5C64964EADF84E5256C13LicenseDevice setSerial:];
-[_TtCC7iMazing27VPPLicensesWindowControllerP33_BC4CDAD5B3F4D5C64964EADF84E5256C13LicenseDevice model];
-[_TtCC7iMazing27VPPLicensesWindowControllerP33_BC4CDAD5B3F4D5C64964EADF84E5256C13LicenseDevice setModel:];
-[_TtCC7iMazing27VPPLicensesWindowControllerP33_BC4CDAD5B3F4D5C64964EADF84E5256C13LicenseDevice name];
-[_TtCC7iMazing27VPPLicensesWindowControllerP33_BC4CDAD5B3F4D5C64964EADF84E5256C13LicenseDevice setName:];
-[_TtCC7iMazing27VPPLicensesWindowControllerP33_BC4CDAD5B3F4D5C64964EADF84E5256C13LicenseDevice init];

@end

@interface _TtCC7iMazing30ChooseAppFilesWindowController8FileItem : NSObject {
    /* instance variables */
     title;
     subtitle;
     path;
     icon;
}

@property (T@"NSString",N,C) title;
@property (T@"NSString",N,C) subtitle;
@property (T@"NSString",N,C) path;
@property (T@"NSImage",N,&,Vicon) icon;

/* instance methods */
-[_TtCC7iMazing30ChooseAppFilesWindowController8FileItem title];
-[_TtCC7iMazing30ChooseAppFilesWindowController8FileItem setTitle:];
-[_TtCC7iMazing30ChooseAppFilesWindowController8FileItem subtitle];
-[_TtCC7iMazing30ChooseAppFilesWindowController8FileItem setSubtitle:];
-[_TtCC7iMazing30ChooseAppFilesWindowController8FileItem path];
-[_TtCC7iMazing30ChooseAppFilesWindowController8FileItem setPath:];
-[_TtCC7iMazing30ChooseAppFilesWindowController8FileItem icon];
-[_TtCC7iMazing30ChooseAppFilesWindowController8FileItem setIcon:];
-[_TtCC7iMazing30ChooseAppFilesWindowController8FileItem isEqual:];
-[_TtCC7iMazing30ChooseAppFilesWindowController8FileItem init];

@end

@interface iMazingFullSizeContentWindow : NSWindow

/* instance methods */
-[iMazingFullSizeContentWindow initWithContentRect:styleMask:backing:defer:];

@end

@interface iOSApp : NSObject {
    /* instance variables */
    B _fileSharingEnabled;
    B _isStoredInLibrary;
    B _isInstalled;
    B _isVersionInstalled;
    B _isUpdate;
    B _isLatestVersion;
    B _isCompatibleWithDevice;
    B _isSystemApp;
    B _isAvailableOnSpringboard;
    B _isFromIPA;
    ^v _cppObject;
    @"NSString" _displayName;
    @"NSString" _appDescription;
    @"NSString" _fullTextIndex;
    @"NSString" _iconPath;
    @"NSString" _bundleID;
    @"NSNumber" _totalDiskUsage;
    @"NSNumber" _staticDiskUsage;
    @"NSNumber" _downloadSize;
    @"NSString" _version;
    @"NSString" _updateAvailable;
    @"NSString" _libraryPath;
    @"NSURL" _iconThumbnailURL;
    q _kind;
    q _storeID;
    Q _vppAvailableCount;
    Q _vppAssignedCount;
    Q _vppTotalCount;
}

@property (T^v,V_cppObject) cppObject;
@property (T@"NSString",C,V_displayName) displayName;
@property (T@"NSString",C,V_appDescription) appDescription;
@property (T@"NSString",C,V_fullTextIndex) fullTextIndex;
@property (T@"NSString",C,V_iconPath) iconPath;
@property (T@"NSString",C,V_bundleID) bundleID;
@property (T@"NSString",C,V_libraryPath) libraryPath;
@property (T@"NSString",C,V_updateAvailable) updateAvailable;
@property (T@"NSNumber",&,V_totalDiskUsage) totalDiskUsage;
@property (T@"NSNumber",&,V_staticDiskUsage) staticDiskUsage;
@property (T@"NSNumber",&,V_downloadSize) downloadSize;
@property (TB,V_fileSharingEnabled) fileSharingEnabled;
@property (Tq,V_kind) kind;
@property (T@"NSString",&,V_version) version;
@property (T@"NSURL",&,V_iconThumbnailURL) iconThumbnailURL;
@property (TB,V_isStoredInLibrary) isStoredInLibrary;
@property (TB,V_isInstalled) isInstalled;
@property (TB,V_isVersionInstalled) isVersionInstalled;
@property (TB,V_isUpdate) isUpdate;
@property (TB,V_isLatestVersion) isLatestVersion;
@property (TB,V_isCompatibleWithDevice) isCompatibleWithDevice;
@property (TB,V_isSystemApp) isSystemApp;
@property (TB,V_isAvailableOnSpringboard) isAvailableOnSpringboard;
@property (TB,V_isFromIPA) isFromIPA;
@property (Tq,V_storeID) storeID;
@property (TQ,V_vppAvailableCount) vppAvailableCount;
@property (TQ,V_vppAssignedCount) vppAssignedCount;
@property (TQ,V_vppTotalCount) vppTotalCount;
@property (T@"NSString",R) localPath;

/* class methods */
+[iOSApp searchThirdPartyAndSystemApps:maxResults:];
+[iOSApp getThirdPartyOrSystemApp::];
+[iOSApp getSystemApps];
+[iOSApp getRemovableSystemApps];
+[iOSApp getQuickTransferCompatibleSystemApps];
+[iOSApp createCustomAppFromIPA:];
+[iOSApp appsFromAppVector:];
+[iOSApp unknownAppIcon];

/* instance methods */
-[iOSApp init];
-[iOSApp initWithCPPiOSApp:];
-[iOSApp loadVPPAssignments];
-[iOSApp localPath];
-[iOSApp dealloc];
-[iOSApp loadIcon];
-[iOSApp cppObject];
-[iOSApp setCppObject:];
-[iOSApp displayName];
-[iOSApp setDisplayName:];
-[iOSApp appDescription];
-[iOSApp setAppDescription:];
-[iOSApp fullTextIndex];
-[iOSApp setFullTextIndex:];
-[iOSApp iconPath];
-[iOSApp setIconPath:];
-[iOSApp bundleID];
-[iOSApp setBundleID:];
-[iOSApp totalDiskUsage];
-[iOSApp setTotalDiskUsage:];
-[iOSApp staticDiskUsage];
-[iOSApp setStaticDiskUsage:];
-[iOSApp downloadSize];
-[iOSApp setDownloadSize:];
-[iOSApp version];
-[iOSApp setVersion:];
-[iOSApp updateAvailable];
-[iOSApp setUpdateAvailable:];
-[iOSApp libraryPath];
-[iOSApp setLibraryPath:];
-[iOSApp iconThumbnailURL];
-[iOSApp setIconThumbnailURL:];
-[iOSApp fileSharingEnabled];
-[iOSApp setFileSharingEnabled:];
-[iOSApp kind];
-[iOSApp setKind:];
-[iOSApp isStoredInLibrary];
-[iOSApp setIsStoredInLibrary:];
-[iOSApp isInstalled];
-[iOSApp setIsInstalled:];
-[iOSApp isVersionInstalled];
-[iOSApp setIsVersionInstalled:];
-[iOSApp isUpdate];
-[iOSApp setIsUpdate:];
-[iOSApp isLatestVersion];
-[iOSApp setIsLatestVersion:];
-[iOSApp isCompatibleWithDevice];
-[iOSApp setIsCompatibleWithDevice:];
-[iOSApp isSystemApp];
-[iOSApp setIsSystemApp:];
-[iOSApp isAvailableOnSpringboard];
-[iOSApp setIsAvailableOnSpringboard:];
-[iOSApp isFromIPA];
-[iOSApp setIsFromIPA:];
-[iOSApp storeID];
-[iOSApp setStoreID:];
-[iOSApp vppAvailableCount];
-[iOSApp setVppAvailableCount:];
-[iOSApp vppAssignedCount];
-[iOSApp setVppAssignedCount:];
-[iOSApp vppTotalCount];
-[iOSApp setVppTotalCount:];

@end

@interface iOSAppDisplayItem : NSObject {
    /* instance variables */
    B _isDownloaded;
    B _isDownloading;
    B _isInstalled;
    B _isVersionInstalled;
    B _isUpdate;
    B _showProgress;
    B _isLatestVersion;
    B _isChecked;
    @"iOSApp" _iOSApp;
    @"NSImage" _icon;
    @"NSImage" _actionIcon;
    @"NSImage" _installedIcon;
    @"NSString" _title;
    @"NSString" _subtitle;
    @"NSString" _vppLicensesLabel;
    @"NSNumber" _librarySize;
    @"NSNumber" _deviceTotalDiskUsage;
    @"NSNumber" _progress;
    @"NSString" _version;
    @"NSString" _versionLabel;
    @"NSURL" _iconThumbnailURL;
    @"LegacyOperation" _downloadOperation;
    @"NSString" _fullTextIndex;
}

@property (T@"NSString",&,V_fullTextIndex) fullTextIndex;
@property (T@"iOSApp",&,V_iOSApp) iOSApp;
@property (T@"NSImage",&,V_icon) icon;
@property (T@"NSImage",&,V_actionIcon) actionIcon;
@property (T@"NSImage",&,V_installedIcon) installedIcon;
@property (T@"NSString",&,V_title) title;
@property (T@"NSString",&,V_subtitle) subtitle;
@property (T@"NSString",&,V_vppLicensesLabel) vppLicensesLabel;
@property (T@"NSNumber",V_librarySize) librarySize;
@property (T@"NSNumber",V_deviceTotalDiskUsage) deviceTotalDiskUsage;
@property (T@"NSNumber",&,V_progress) progress;
@property (T@"NSString",&,V_version) version;
@property (T@"NSString",&,V_versionLabel) versionLabel;
@property (T@"NSURL",&,V_iconThumbnailURL) iconThumbnailURL;
@property (T@"LegacyOperation",&,V_downloadOperation) downloadOperation;
@property (TB,V_isDownloaded) isDownloaded;
@property (TB,V_isDownloading) isDownloading;
@property (TB,V_isInstalled) isInstalled;
@property (TB,V_isVersionInstalled) isVersionInstalled;
@property (TB,V_isUpdate) isUpdate;
@property (TB,V_showProgress) showProgress;
@property (TB,V_isLatestVersion) isLatestVersion;
@property (TB,V_isChecked) isChecked;

/* instance methods */
-[iOSAppDisplayItem initWithApp:];
-[iOSAppDisplayItem initWithBundleID:];
-[iOSAppDisplayItem refreshWithApp:];
-[iOSAppDisplayItem updateVersionLabel];
-[iOSAppDisplayItem updateActionIcon];
-[iOSAppDisplayItem updateInstalledIcon];
-[iOSAppDisplayItem updateLicensesLabel];
-[iOSAppDisplayItem downloadDidStart:];
-[iOSAppDisplayItem downloadDidProgress:];
-[iOSAppDisplayItem downloadDidEnd];
-[iOSAppDisplayItem deleteDidStart];
-[iOSAppDisplayItem deleteDidEnd];
-[iOSAppDisplayItem isEqual:];
-[iOSAppDisplayItem iOSApp];
-[iOSAppDisplayItem setIOSApp:];
-[iOSAppDisplayItem icon];
-[iOSAppDisplayItem setIcon:];
-[iOSAppDisplayItem actionIcon];
-[iOSAppDisplayItem setActionIcon:];
-[iOSAppDisplayItem installedIcon];
-[iOSAppDisplayItem setInstalledIcon:];
-[iOSAppDisplayItem title];
-[iOSAppDisplayItem setTitle:];
-[iOSAppDisplayItem subtitle];
-[iOSAppDisplayItem setSubtitle:];
-[iOSAppDisplayItem vppLicensesLabel];
-[iOSAppDisplayItem setVppLicensesLabel:];
-[iOSAppDisplayItem librarySize];
-[iOSAppDisplayItem setLibrarySize:];
-[iOSAppDisplayItem deviceTotalDiskUsage];
-[iOSAppDisplayItem setDeviceTotalDiskUsage:];
-[iOSAppDisplayItem progress];
-[iOSAppDisplayItem setProgress:];
-[iOSAppDisplayItem version];
-[iOSAppDisplayItem setVersion:];
-[iOSAppDisplayItem versionLabel];
-[iOSAppDisplayItem setVersionLabel:];
-[iOSAppDisplayItem iconThumbnailURL];
-[iOSAppDisplayItem setIconThumbnailURL:];
-[iOSAppDisplayItem downloadOperation];
-[iOSAppDisplayItem setDownloadOperation:];
-[iOSAppDisplayItem fullTextIndex];
-[iOSAppDisplayItem setFullTextIndex:];
-[iOSAppDisplayItem isDownloaded];
-[iOSAppDisplayItem setIsDownloaded:];
-[iOSAppDisplayItem isDownloading];
-[iOSAppDisplayItem setIsDownloading:];
-[iOSAppDisplayItem isInstalled];
-[iOSAppDisplayItem setIsInstalled:];
-[iOSAppDisplayItem isVersionInstalled];
-[iOSAppDisplayItem setIsVersionInstalled:];
-[iOSAppDisplayItem isUpdate];
-[iOSAppDisplayItem setIsUpdate:];
-[iOSAppDisplayItem showProgress];
-[iOSAppDisplayItem setShowProgress:];
-[iOSAppDisplayItem isLatestVersion];
-[iOSAppDisplayItem setIsLatestVersion:];
-[iOSAppDisplayItem isChecked];
-[iOSAppDisplayItem setIsChecked:];

@end

@interface iOSAppDownloadManager : ModernDatasetManager

@property (T^v,D) cppObject;

/* instance methods */
-[iOSAppDownloadManager init];
-[iOSAppDownloadManager initWithAppleID:useLastLogin:forceLogin:];
-[iOSAppDownloadManager searchAppsOniTunes:storeFrontID:maxResults:];
-[iOSAppDownloadManager downloadAppToLibrary:keepPreviousVersions:];
-[iOSAppDownloadManager storeFrontID];
-[iOSAppDownloadManager appleID];
-[iOSAppDownloadManager appleIDPassword];
-[iOSAppDownloadManager login];
-[iOSAppDownloadManager logout];
-[iOSAppDownloadManager installAppsToDevice:keepInLibrary:];
-[iOSAppDownloadManager installIPAsToDevice:showDialogs:];
-[iOSAppDownloadManager uninstallAppsFromDevice:];
-[iOSAppDownloadManager extractAppsDataFromDevice:toPath:fromCurrentBackup:showDialog:];
-[iOSAppDownloadManager updateDeviceApps:];
-[iOSAppDownloadManager getDownloadOperationForApp:willKeepPreviousVersions:];
-[iOSAppDownloadManager removeAppsFromLibrary:];
-[iOSAppDownloadManager hideAppsInLibrary:];
-[iOSAppDownloadManager extractAppsFromLibrary:toPath:];
-[iOSAppDownloadManager ddnaAppsForiOSApps:];
-[iOSAppDownloadManager addAppsToLibrary:];
-[iOSAppDownloadManager exportIPAs:toPath:];
-[iOSAppDownloadManager getAppLatestVersionWithBundleID:];
-[iOSAppDownloadManager checkForUpdates:];
-[iOSAppDownloadManager installAppsToDevices:apps:];
-[iOSAppDownloadManager accountIsVPP];
-[iOSAppDownloadManager vppAssociateApp:toDevices:];
-[iOSAppDownloadManager vppDisassociateApp:fromDevices:];
-[iOSAppDownloadManager devicesAssociatedWithVppApp:];
-[iOSAppDownloadManager getAppsFromPurchaseHistory];

@end

@interface iOSAppItem : NSObject {
    /* instance variables */
    B _isChecked;
    @"NSString" _title;
    @"NSString" _subtitle;
    @"NSImage" _icon;
    @"NSNumber" _size;
    @"iOSApp" _app;
}

@property (T@"NSString",C,V_title) title;
@property (T@"NSString",C,V_subtitle) subtitle;
@property (T@"NSImage",&,V_icon) icon;
@property (T@"NSNumber",C,V_size) size;
@property (TB,V_isChecked) isChecked;
@property (T@"iOSApp",&,V_app) app;

/* instance methods */
-[iOSAppItem title];
-[iOSAppItem setTitle:];
-[iOSAppItem subtitle];
-[iOSAppItem setSubtitle:];
-[iOSAppItem icon];
-[iOSAppItem setIcon:];
-[iOSAppItem size];
-[iOSAppItem setSize:];
-[iOSAppItem isChecked];
-[iOSAppItem setIsChecked:];
-[iOSAppItem app];
-[iOSAppItem setApp:];

@end

@interface iOSAppManager : DatasetMobileManager {
    /* instance variables */
    ^v _cppObject;
    @"NSMutableArray" _userAppsMutable;
}

@property (T@"NSMutableArray",&,V_userAppsMutable) userAppsMutable;
@property (T^v,V_cppObject) cppObject;
@property (T@"NSArray",R) userApps;

/* class methods */
+[iOSAppManager iOSAppManagerWithDDNAiOSAppManager:];

/* instance methods */
-[iOSAppManager initWithDDNAiOSAppManager:];
-[iOSAppManager dealloc];
-[iOSAppManager updateRequestDidEnd:];
-[iOSAppManager userApps];
-[iOSAppManager getAllAppsSync];
-[iOSAppManager cppObject];
-[iOSAppManager setCppObject:];
-[iOSAppManager userAppsMutable];
-[iOSAppManager setUserAppsMutable:];

@end

@interface iOSDataset : NSObject {
    /* instance variables */
    B _mustRestore;
    B _isInBackup;
    B _onlyInEncryptedBackup;
    Q _datasetFlag;
    @"NSString" _localizedTitle;
    @"NSString" _identifier;
    @"NSString" _defaultIconName;
}

@property (TB,V_mustRestore) mustRestore;
@property (TB,V_isInBackup) isInBackup;
@property (TB,V_onlyInEncryptedBackup) onlyInEncryptedBackup;
@property (TQ,V_datasetFlag) datasetFlag;
@property (T@"NSString",C,V_localizedTitle) localizedTitle;
@property (T@"NSString",C,V_identifier) identifier;
@property (T@"NSString",C,V_defaultIconName) defaultIconName;

/* class methods */
+[iOSDataset iOSDatasetForDataset:];
+[iOSDataset iOSDatasetsForDatasets:];
+[iOSDataset elementSetForDatasetFlag:];

/* instance methods */
-[iOSDataset initWithCppDataset:];
-[iOSDataset datasetFlag];
-[iOSDataset setDatasetFlag:];
-[iOSDataset mustRestore];
-[iOSDataset setMustRestore:];
-[iOSDataset isInBackup];
-[iOSDataset setIsInBackup:];
-[iOSDataset onlyInEncryptedBackup];
-[iOSDataset setOnlyInEncryptedBackup:];
-[iOSDataset localizedTitle];
-[iOSDataset setLocalizedTitle:];
-[iOSDataset identifier];
-[iOSDataset setIdentifier:];
-[iOSDataset defaultIconName];
-[iOSDataset setDefaultIconName:];

@end

@interface iOSDatasetItem : NSObject {
    /* instance variables */
    B _isChecked;
    B _mustRestore;
    @"NSImage" _icon;
    @"NSString" _title;
    @"NSString" _subtitle;
    @"NSString" _identifier;
    Q _dataSet;
    Q _size;
}

@property (T@"NSImage",&,V_icon) icon;
@property (T@"NSString",C,V_title) title;
@property (T@"NSString",C,V_subtitle) subtitle;
@property (T@"NSString",C,V_identifier) identifier;
@property (TB,V_isChecked) isChecked;
@property (TQ,V_dataSet) dataSet;
@property (TB,V_mustRestore) mustRestore;
@property (TQ,V_size) size;

/* instance methods */
-[iOSDatasetItem icon];
-[iOSDatasetItem setIcon:];
-[iOSDatasetItem title];
-[iOSDatasetItem setTitle:];
-[iOSDatasetItem subtitle];
-[iOSDatasetItem setSubtitle:];
-[iOSDatasetItem identifier];
-[iOSDatasetItem setIdentifier:];
-[iOSDatasetItem isChecked];
-[iOSDatasetItem setIsChecked:];
-[iOSDatasetItem dataSet];
-[iOSDatasetItem setDataSet:];
-[iOSDatasetItem mustRestore];
-[iOSDatasetItem setMustRestore:];
-[iOSDatasetItem size];
-[iOSDatasetItem setSize:];

@end

@interface iOSDevice : Device {
    /* instance variables */
    I _usbInterfaceSpeed;
    I _usbDeviceID;
    I _usbProductID;
    I _usbLocationID;
    @"CallManager" _callManagerInstance;
    @"ContactManager" _contactManagerInstance;
    @"MessageManager" _messageManagerInstance;
    @"WhatsAppManager" _whatsAppManagerInstance;
    @"WhatsAppSMBManager" _whatsAppSMBManagerInstance;
    @"NoteManager" _noteManagerInstance;
    @"VoiceMailManager" _voiceMailManagerInstance;
    @"VoiceMemoManager" _voiceMemoManagerInstance;
    @"RingtoneManager" _ringtoneManagerInstance;
    @"PhotoManager" _photoManagerInstance;
    @"iOSAppManager" _appManagerInstance;
    @"iOSAppDownloadManager" _appDownloadManagerInstance;
    @"BookManager" _bookManagerInstance;
    @"CalendarManager" _calendarManagerInstance;
    @"SafariHistoryManager" _safariHistoryManagerInstance;
    @"SafariReadingListManager" _safariReadingListManagerInstance;
    @"SafariBookmarksManager" _safariBookmarksManagerInstance;
    @"ProfileManager" _profileManagerInstance;
}

@property (T^v,D) cppObject;
@property (T@"CallManager",&,V_callManagerInstance) callManagerInstance;
@property (T@"ContactManager",&,V_contactManagerInstance) contactManagerInstance;
@property (T@"MessageManager",&,V_messageManagerInstance) messageManagerInstance;
@property (T@"WhatsAppManager",&,V_whatsAppManagerInstance) whatsAppManagerInstance;
@property (T@"WhatsAppSMBManager",&,V_whatsAppSMBManagerInstance) whatsAppSMBManagerInstance;
@property (T@"NoteManager",&,V_noteManagerInstance) noteManagerInstance;
@property (T@"VoiceMailManager",&,V_voiceMailManagerInstance) voiceMailManagerInstance;
@property (T@"VoiceMemoManager",&,V_voiceMemoManagerInstance) voiceMemoManagerInstance;
@property (T@"RingtoneManager",&,V_ringtoneManagerInstance) ringtoneManagerInstance;
@property (T@"PhotoManager",&,V_photoManagerInstance) photoManagerInstance;
@property (T@"iOSAppManager",&,V_appManagerInstance) appManagerInstance;
@property (T@"iOSAppDownloadManager",&,V_appDownloadManagerInstance) appDownloadManagerInstance;
@property (T@"BookManager",&,V_bookManagerInstance) bookManagerInstance;
@property (T@"CalendarManager",&,V_calendarManagerInstance) calendarManagerInstance;
@property (T@"SafariHistoryManager",&,V_safariHistoryManagerInstance) safariHistoryManagerInstance;
@property (T@"SafariReadingListManager",&,V_safariReadingListManagerInstance) safariReadingListManagerInstance;
@property (T@"SafariBookmarksManager",&,V_safariBookmarksManagerInstance) safariBookmarksManagerInstance;
@property (T@"ProfileManager",&,V_profileManagerInstance) profileManagerInstance;
@property (TB,R) jailBroken;
@property (TB,R) passwordProtected;
@property (TB,R) iTunesHasConnected;
@property (TB,R) wirelessConnectionOn;
@property (TB,R) iCloudPhotoLibraryEnabled;
@property (TB,R) findMyiPhone;
@property (TB,R) setupDone;
@property (TB,R) cloudBackupEnabled;
@property (TB,R) backupWillEncrypt;
@property (TB,R) backupEncrypted;
@property (TB,R) isEmpty;
@property (TB,R) archiveIsSelected;
@property (TB,R) fileAppInstalled;
@property (TS,R) iOSMajorVersion;
@property (Tq,R) timeIntervalSince1970;
@property (Tq,R) timeZoneOffsetFromUTC;
@property (Tq,R) timeFirstBackup;
@property (Tq,R) timeLastBackup;
@property (Tq,R) timeLastiCloudBackup;
@property (TI,R) totalBackups;
@property (TQ,R) totalBackupSize;
@property (TQ,R) estimatedBackupSize;
@property (T@"NSDate",R) dateFirstBackup;
@property (T@"NSDate",R) dateLastBackup;
@property (T@"NSDate",R) dateLastiCloudBackup;
@property (T@"NSString",R) backupVolumeName;
@property (T@"NSString",R) deviceClass;
@property (T@"NSString",R) deviceSketchImage;
@property (T@"NSString",R) phoneNumber;
@property (T@"NSString",R) wifiAddress;
@property (T@"NSString",R) appleIDEmail;
@property (TB,R) batteryIsCharging;
@property (Tq,R) batteryCurrentCapacity;
@property (T@"NSDictionary",R) gasGaugeInfos;
@property (T@"NSArray",R) gasGaugeInfosList;
@property (Tq,R) batteryHealth;
@property (Td,R) batteryMaxChargePercent;
@property (T@"CallManager",R) callManager;
@property (T@"ContactManager",R) contactManager;
@property (T@"MessageManager",R) messageManager;
@property (T@"WhatsAppManager",R) whatsAppManager;
@property (T@"WhatsAppSMBManager",R) whatsAppSMBManager;
@property (T@"NoteManager",R) noteManager;
@property (T@"VoiceMailManager",R) voiceMailManager;
@property (T@"VoiceMemoManager",R) voiceMemoManager;
@property (T@"RingtoneManager",R) ringtoneManager;
@property (T@"PhotoManager",R) photoManager;
@property (T@"iOSAppManager",R) appManager;
@property (T@"iOSAppDownloadManager",R) appDownloadManager;
@property (T@"BookManager",R) bookManager;
@property (T@"CalendarManager",R) calendarManager;
@property (T@"SafariHistoryManager",R) safariHistoryManager;
@property (T@"SafariReadingListManager",R) safariReadingListManager;
@property (T@"SafariBookmarksManager",R) safariBookmarksManager;
@property (T@"ProfileManager",R) profileManager;
@property (T@"Backup",R) backup;
@property (T@"Backup",R) selectedBackup;
@property (T@"NSString",R) backupPath;
@property (T@"NSString",R) backupRootPath;
@property (TB) backupArchivalEnabled;
@property (TB) backupAutomaticCleaningEnabled;
@property (TB) backupNotifyBeforeCleaning;
@property (TB,R) backedUpOnThisComputer;
@property (TQ) backupKeepMinDays;
@property (T@"VersionedBackupInfo",R) selectedArchive;
@property (TB,R) launchiMazingWhenConnectingViaUSB;
@property (TS,R) lowBatteryNotification;
@property (TI,N,V_usbInterfaceSpeed) usbInterfaceSpeed;
@property (TI,N,V_usbDeviceID) usbDeviceID;
@property (TI,N,V_usbProductID) usbProductID;
@property (TI,N,V_usbLocationID) usbLocationID;
@property (TI,N) usbPortNumber;

/* instance methods */
-[iOSDevice initWithDDNADevice:];
-[iOSDevice dealloc];
-[iOSDevice jailBroken];
-[iOSDevice passwordProtected];
-[iOSDevice checkIfPasscodeLockedAndShowDialog];
-[iOSDevice checkIfPasscodeLockedAndShowDialog:];
-[iOSDevice iTunesHasConnected];
-[iOSDevice wirelessConnectionOn];
-[iOSDevice iCloudPhotoLibraryEnabled];
-[iOSDevice findMyiPhone];
-[iOSDevice setupDone];
-[iOSDevice cloudBackupEnabled];
-[iOSDevice backupWillEncrypt];
-[iOSDevice backupEncrypted];
-[iOSDevice backedUpOnThisComputer];
-[iOSDevice isEmpty];
-[iOSDevice archiveIsSelected];
-[iOSDevice fileAppInstalled];
-[iOSDevice iOSMajorVersion];
-[iOSDevice timeIntervalSince1970];
-[iOSDevice timeZoneOffsetFromUTC];
-[iOSDevice timeFirstBackup];
-[iOSDevice timeLastBackup];
-[iOSDevice timeLastiCloudBackup];
-[iOSDevice totalBackups];
-[iOSDevice totalBackupSize];
-[iOSDevice backupVolumeName];
-[iOSDevice estimatedBackupSize];
-[iOSDevice dateFirstBackup];
-[iOSDevice dateLastBackup];
-[iOSDevice dateLastiCloudBackup];
-[iOSDevice deviceClass];
-[iOSDevice deviceSketchImage];
-[iOSDevice phoneNumber];
-[iOSDevice wifiAddress];
-[iOSDevice appleIDEmail];
-[iOSDevice batteryIsCharging];
-[iOSDevice batteryCurrentCapacity];
-[iOSDevice gasGaugeInfos];
-[iOSDevice gasGaugeInfosList];
-[iOSDevice batteryHealth];
-[iOSDevice batteryMaxChargePercent];
-[iOSDevice callManager];
-[iOSDevice calendarManager];
-[iOSDevice contactManager];
-[iOSDevice messageManager];
-[iOSDevice whatsAppManager];
-[iOSDevice whatsAppSMBManager];
-[iOSDevice noteManager];
-[iOSDevice voiceMailManager];
-[iOSDevice voiceMemoManager];
-[iOSDevice appManager];
-[iOSDevice appDownloadManager];
-[iOSDevice bookManager];
-[iOSDevice ringtoneManager];
-[iOSDevice photoManager];
-[iOSDevice safariHistoryManager];
-[iOSDevice safariReadingListManager];
-[iOSDevice safariBookmarksManager];
-[iOSDevice profileManager];
-[iOSDevice backup];
-[iOSDevice selectedBackup];
-[iOSDevice backupPath];
-[iOSDevice backupRootPath];
-[iOSDevice selectedArchive];
-[iOSDevice activateWiFiASync];
-[iOSDevice disableWiFiASync];
-[iOSDevice changeNameASync];
-[iOSDevice changeNameASync:];
-[iOSDevice changeNameSync:];
-[iOSDevice changeBackupPassword];
-[iOSDevice changeBackupPasswordASync];
-[iOSDevice changeBackupPasswordASync:];
-[iOSDevice removeBackupPassword];
-[iOSDevice removeBackupPasswordASync];
-[iOSDevice removeFromCacheASync];
-[iOSDevice obliterateASync];
-[iOSDevice obliterateASync:preserveDataPlan:noProximitySetup:flags:];
-[iOSDevice detachBackup];
-[iOSDevice deleteAllBackupArchives];
-[iOSDevice deleteBackup];
-[iOSDevice lockSelectedArchive];
-[iOSDevice unlockSelectedArchive];
-[iOSDevice changeSelectedArchiveLabel];
-[iOSDevice deleteSelectedArchive];
-[iOSDevice shutdownASync];
-[iOSDevice restartASync];
-[iOSDevice sleepASync];
-[iOSDevice exitSetupAssistantASync];
-[iOSDevice refreshDeviceInfosASync];
-[iOSDevice exportDeviceInfos:];
-[iOSDevice exportBatteryInfo:];
-[iOSDevice confirmExportRawData];
-[iOSDevice exportDeviceRawData:];
-[iOSDevice checkIfReachable];
-[iOSDevice resetArchiveSelection];
-[iOSDevice selectArchive:];
-[iOSDevice checkIfBackupVolumeIsAvailable:];
-[iOSDevice acceptsRestoreOfBackup:requiresUpdate:];
-[iOSDevice backup:backupLabel:doNotDeleteThisBackupVersion:backupReason:];
-[iOSDevice startObservingEssentialDeviceInfoASync];
-[iOSDevice stopObservingEssentialDeviceInfo];
-[iOSDevice startObservingDeviceInfoASync];
-[iOSDevice stopObservingDeviceInfo];
-[iOSDevice changeBackupRootPath:];
-[iOSDevice getNotArchiveDeviceForDisplayPurposeOnly];
-[iOSDevice backupArchivalEnabled];
-[iOSDevice setBackupArchivalEnabled:];
-[iOSDevice backupAutomaticCleaningEnabled];
-[iOSDevice setBackupAutomaticCleaningEnabled:];
-[iOSDevice backupNotifyBeforeCleaning];
-[iOSDevice setBackupNotifyBeforeCleaning:];
-[iOSDevice backupKeepMinDays];
-[iOSDevice setBackupKeepMinDays:];
-[iOSDevice saveDeviceInfo];
-[iOSDevice checkIfFindMyiPhoneActivated];
-[iOSDevice startListeningSyslogASync];
-[iOSDevice startListeningSyslog];
-[iOSDevice stopListeningSyslogASync];
-[iOSDevice stopListeningSyslog];
-[iOSDevice exportAllData:toPath:];
-[iOSDevice reinstallOSWithImage:erase:];
-[iOSDevice updateOSASync:backupBefore:];
-[iOSDevice enterInRecoveryModeASync];
-[iOSDevice exitRecoveryModeASync];
-[iOSDevice backupOrRestoreInProgress];
-[iOSDevice stopBackupRestore];
-[iOSDevice setAutoBackupConfigWithFrequency:from24Hour:to24Hour:launchBackupWhenConnectingViaUSB:minBattery:];
-[iOSDevice getAutoBackupConfig];
-[iOSDevice launchiMazingWhenConnectingViaUSB];
-[iOSDevice lowBatteryNotification];
-[iOSDevice usbInterfaceSpeed];
-[iOSDevice usbDeviceID];
-[iOSDevice usbProductID];
-[iOSDevice usbLocationID];
-[iOSDevice usbPortNumber];
-[iOSDevice setUsbPortNumber:];
-[iOSDevice launchiMazingWhenConnectingViaUSB:lowBatteryNotification:];
-[iOSDevice refreshBackupVersionsASync];
-[iOSDevice refreshSettings];
-[iOSDevice remove];
-[iOSDevice shouldEraseBeforeRestore:];
-[iOSDevice showShouldEraseBeforeRestoreWarning:];
-[iOSDevice isEqual:];
-[iOSDevice isSupervised];
-[iOSDevice locale];
-[iOSDevice language];
-[iOSDevice getCountry];
-[iOSDevice setLanguage:andCountry:];
-[iOSDevice getPasscodeUnlockToken:];
-[iOSDevice getActivationLockBypassCode:];
-[iOSDevice clearPasscodeWithToken:];
-[iOSDevice clearRestrictionsPasscode];
-[iOSDevice setWallpapers:homeScreen:];
-[iOSDevice setAccessibilityOptions:zoomTouch:invertDisplay:speakAutoCorrect:monoAudio:captions:];
-[iOSDevice voiceOverTouchEnabled];
-[iOSDevice zoomTouchEnabled];
-[iOSDevice invertDisplayEnabled];
-[iOSDevice speakAutoCorrectionsEnabled];
-[iOSDevice monoAudioEnabled];
-[iOSDevice closedCaptioningEnabled];
-[iOSDevice hasPasscodeUnlockTokenInKeychain];
-[iOSDevice hasOrganizationIdentityConfiguredIniMazing];
-[iOSDevice getOrganizationIdentityLabel];
-[iOSDevice getOrganizationName];
-[iOSDevice singleAppModeEnabled];
-[iOSDevice isPaired];
-[iOSDevice hasEnoughSpaceToBackup:];
-[iOSDevice applyBlueprint:showDialogs:];
-[iOSDevice detectMalwareActivityWithStix:backupDevice:logFolder:logAsExcel:];
-[iOSDevice timeLastTrueOrPartialBackup];
-[iOSDevice setUsbInterfaceSpeed:];
-[iOSDevice setUsbDeviceID:];
-[iOSDevice setUsbProductID:];
-[iOSDevice setUsbLocationID:];
-[iOSDevice callManagerInstance];
-[iOSDevice setCallManagerInstance:];
-[iOSDevice contactManagerInstance];
-[iOSDevice setContactManagerInstance:];
-[iOSDevice messageManagerInstance];
-[iOSDevice setMessageManagerInstance:];
-[iOSDevice whatsAppManagerInstance];
-[iOSDevice setWhatsAppManagerInstance:];
-[iOSDevice whatsAppSMBManagerInstance];
-[iOSDevice setWhatsAppSMBManagerInstance:];
-[iOSDevice noteManagerInstance];
-[iOSDevice setNoteManagerInstance:];
-[iOSDevice voiceMailManagerInstance];
-[iOSDevice setVoiceMailManagerInstance:];
-[iOSDevice voiceMemoManagerInstance];
-[iOSDevice setVoiceMemoManagerInstance:];
-[iOSDevice ringtoneManagerInstance];
-[iOSDevice setRingtoneManagerInstance:];
-[iOSDevice photoManagerInstance];
-[iOSDevice setPhotoManagerInstance:];
-[iOSDevice appManagerInstance];
-[iOSDevice setAppManagerInstance:];
-[iOSDevice appDownloadManagerInstance];
-[iOSDevice setAppDownloadManagerInstance:];
-[iOSDevice bookManagerInstance];
-[iOSDevice setBookManagerInstance:];
-[iOSDevice calendarManagerInstance];
-[iOSDevice setCalendarManagerInstance:];
-[iOSDevice safariHistoryManagerInstance];
-[iOSDevice setSafariHistoryManagerInstance:];
-[iOSDevice safariReadingListManagerInstance];
-[iOSDevice setSafariReadingListManagerInstance:];
-[iOSDevice safariBookmarksManagerInstance];
-[iOSDevice setSafariBookmarksManagerInstance:];
-[iOSDevice profileManagerInstance];
-[iOSDevice setProfileManagerInstance:];

@end

@interface iOSDeviceContentViewController : DeviceContentViewController {
    /* instance variables */
    @"iOSDevice" _iOSDevice;
}

@property (T@"iOSDevice",&,V_iOSDevice) iOSDevice;

/* instance methods */
-[iOSDeviceContentViewController initWithDataset:device:];
-[iOSDeviceContentViewController iOSDevice];
-[iOSDeviceContentViewController setIOSDevice:];

@end

@interface iOSDeviceItem : NSObject {
    /* instance variables */
    B _isChecked;
    B _canRestore;
    B _findMyiPhoneEnabled;
    @"iOSDevice" _iOSDevice;
    @"iOSDevice" _realDevice;
    @"NSString" _title;
    @"NSString" _subtitle;
    @"NSImage" _icon;
    @"NSImage" _statusIcon;
    q _reachabilityStatus;
}

@property (T@"iOSDevice",&,V_iOSDevice) iOSDevice;
@property (T@"iOSDevice",&,V_realDevice) realDevice;
@property (T@"NSString",C,V_title) title;
@property (T@"NSString",C,V_subtitle) subtitle;
@property (T@"NSImage",&,V_icon) icon;
@property (T@"NSImage",&,V_statusIcon) statusIcon;
@property (Tq,V_reachabilityStatus) reachabilityStatus;
@property (TB,V_isChecked) isChecked;
@property (TB,V_canRestore) canRestore;
@property (TB,V_findMyiPhoneEnabled) findMyiPhoneEnabled;

/* instance methods */
-[iOSDeviceItem isEqual:];
-[iOSDeviceItem hash];
-[iOSDeviceItem iOSDevice];
-[iOSDeviceItem setIOSDevice:];
-[iOSDeviceItem realDevice];
-[iOSDeviceItem setRealDevice:];
-[iOSDeviceItem title];
-[iOSDeviceItem setTitle:];
-[iOSDeviceItem subtitle];
-[iOSDeviceItem setSubtitle:];
-[iOSDeviceItem icon];
-[iOSDeviceItem setIcon:];
-[iOSDeviceItem statusIcon];
-[iOSDeviceItem setStatusIcon:];
-[iOSDeviceItem reachabilityStatus];
-[iOSDeviceItem setReachabilityStatus:];
-[iOSDeviceItem isChecked];
-[iOSDeviceItem setIsChecked:];
-[iOSDeviceItem canRestore];
-[iOSDeviceItem setCanRestore:];
-[iOSDeviceItem findMyiPhoneEnabled];
-[iOSDeviceItem setFindMyiPhoneEnabled:];

@end

@interface iOSPairingDevice : iOSDevice

@property (T^v,D) cppObject;

/* instance methods */
-[iOSPairingDevice initWithDDNADevice:];
-[iOSPairingDevice dealloc];
-[iOSPairingDevice pair];
-[iOSPairingDevice cancelPairing];

@end

@interface iOSRestorableDevice : iOSDevice

@property (T^v,D) cppObject;

/* instance methods */
-[iOSRestorableDevice initWithDDNADevice:];
-[iOSRestorableDevice dealloc];
-[iOSRestorableDevice exitRecoveryModeASync];

@end

@interface iPod : NSObject {
    /* instance variables */
    ^v _iPod;
    @"NSString" _udid;
    @"NSString" _name;
    @"NSString" _revision;
    @"NSString" _mountPoint;
    B _isLocked;
}

@property (T^v,R,V_iPod) iPod;
@property (T@"NSString",R,V_udid) udid;
@property (T@"NSString",R,V_name) name;
@property (T@"NSString",R,V_revision) revision;
@property (T@"NSString",R,V_mountPoint) mountPoint;

/* class methods */
+[iPod iPodWithiPodRef:];

/* instance methods */
-[iPod initWithiPodRef:];
-[iPod dealloc];
-[iPod mount];
-[iPod iPod];
-[iPod udid];
-[iPod name];
-[iPod revision];
-[iPod mountPoint];

@end

@interface iPodDevice : Device

@end

@interface iPodManager : NSObject {
    /* instance variables */
    B _inited;
    @"NSMutableDictionary" _devices;
}

@property (TB,V_inited) inited;
@property (T@"NSMutableDictionary",&,V_devices) devices;

/* class methods */
+[iPodManager sharedInstance];
+[iPodManager allocWithZone:];

/* instance methods */
-[iPodManager init];
-[iPodManager dealloc];
-[iPodManager discoverDevices];
-[iPodManager inited];
-[iPodManager setInited:];
-[iPodManager devices];
-[iPodManager setDevices:];

@end

@interface NSView (ClipToBoundsFixer)

/* instance methods */
-[ClipToBoundsFixer needsFix_ClipToBoundsFix];
-[ClipToBoundsFixer initWithFrame_ClipToBoundsFix:];
-[ClipToBoundsFixer initWithCoder_ClipToBoundsFix:];
-[ClipToBoundsFixer clipsToBounds_ClipToBoundsFix];

@end

@interface NSResponder (ControlClickFix)

/* instance methods */
-[ControlClickFix AutoreleaseFix_NSResponder_retain];
-[ControlClickFix AutoreleaseFix_NSResponder_release];
-[ControlClickFix AutoreleaseFix_NSResponder_autorelease];
-[ControlClickFix ControlClickFix_mouseDown:];

@end

@interface NSArray (DDNAToolKit)

/* instance methods */
-[DDNAToolKit filteredArrayUsingBlock:];
-[DDNAToolKit randomArray];
-[DDNAToolKit reverse];

@end

@interface NSDictionary (DDNAToolKit)

/* instance methods */
-[DDNAToolKit filteredDictionaryUsingBlock:];
-[DDNAToolKit hasKey:];

@end

@interface NSFileManager (DDNAToolKit)

/* instance methods */
-[DDNAToolKit filesMatching:fromPaths:recursive:];
-[DDNAToolKit filesMatching:inDirectory:recursive:];
-[DDNAToolKit flagsOfItemAtPath:error:];
-[DDNAToolKit setFlags:ofItemAtPath:error:];
-[DDNAToolKit octalPermissionsForItemAtPath:];
-[DDNAToolKit humanReadablePermissionsForItemAtPath:];

@end

@interface NSURL (DDNAToolKit)

/* instance methods */
-[DDNAToolKit queryParts];

@end

@interface NSMenu (DDNAToolKit)

/* instance methods */
-[DDNAToolKit copyAndProcessNewItemsWithBlock:recursively:];

@end

@interface NSScrollView (DDNAToolKit)

/* instance methods */
-[DDNAToolKit scrollToBottom];

@end

@interface NSTableView (DDNAToolKit)

/* instance methods */
-[DDNAToolKit setDefaultSortOrderBasedOnDataFilter:];
-[DDNAToolKit scrollToBottom];
-[DDNAToolKit firstTextColumn];

@end

@interface NSImage (DDNAToolKit)

/* class methods */
-[DDNAToolKit iMazingImageNamed:];
-[DDNAToolKit iMazingImageNamedLookup:];

/* instance methods */
-[DDNAToolKit initWithContentsOfFile:useCache:];
-[DDNAToolKit grayscaleImage];
-[DDNAToolKit imageWithBestRepresentationForSize:];
-[DDNAToolKit imageWithBestRepresentationForSize:usePixelValues:];
-[DDNAToolKit updateSizeWithLargestRepresentation];
-[DDNAToolKit updateSizeWithLargestRepresentationUsingPixelValues:];
-[DDNAToolKit resize:];

@end

@interface NSObject (DDNAToolKit)

/* class methods */
-[DDNAToolKit filteredObjectForPListData:];

/* instance methods */
-[DDNAToolKit AutoreleaseFix_NSObject_retain];
-[DDNAToolKit AutoreleaseFix_NSObject_release];
-[DDNAToolKit AutoreleaseFix_NSObject_autorelease];
-[DDNAToolKit iMazingSwizzle_bind:toObject:withKeyPath:options:];
-[DDNAToolKit KVOFix_dealloc];
-[DDNAToolKit KVOFix_addObserver:forKeyPath:options:context:];
-[DDNAToolKit KVOFix_removeObserver:forKeyPath:];
-[DDNAToolKit superclassRespondsToSelector:];
-[DDNAToolKit compare:];

@end

@interface NSColor (DDNAToolKit)

/* class methods */
-[DDNAToolKit colorWithCPPObject:];

@end

@interface NSNotificationCenter (DDNAToolKit)

/* instance methods */
-[DDNAToolKit addObserver:selector:names:object:];
-[DDNAToolKit removeObserver:names:object:];

@end

@interface NSData (DDNAToolKit)

/* class methods */
-[DDNAToolKit dataWithBase64EncodedString:];

/* instance methods */
-[DDNAToolKit base64EncodedString];

@end

@interface NSThread (DDNAToolKit_Private)

/* class methods */
-[DDNAToolKit_Private detachNewThreadSelector:toTarget:withObject:afterDelay:];
-[DDNAToolKit_Private detachBlock:];
-[DDNAToolKit_Private detachBlock:afterDelay:];
-[DDNAToolKit_Private performInvocationAfterTimeInterval:];
-[DDNAToolKit_Private callBlockAfterTimeInterval:];

@end

@interface NSString (ObjectiveCPP)

/* class methods */
-[ObjectiveCPP subtitleForVersionedBackup:];
-[ObjectiveCPP stringForBackupReason:];
-[ObjectiveCPP schedulingInfoTextForDevice:];
-[ObjectiveCPP attributesForSizeComputationWithFont:lineBreakMode:];
-[ObjectiveCPP stringForDataSizeWithBytes:];
-[ObjectiveCPP stringForDataSizeWithBytes:prefix:];
-[ObjectiveCPP defaultCPPStringEncoding];
-[ObjectiveCPP setDefaultCPPStringEncoding:];
-[ObjectiveCPP stringWithCPPString:];
-[ObjectiveCPP stringWithCPPString:encoding:];
-[ObjectiveCPP cppStringWithContentsOfFile:encoding:error:];
-[ObjectiveCPP cppStringWithContentsOfFile:usedEncoding:error:];
-[ObjectiveCPP cppStringWithContentsOfURL:encoding:error:];
-[ObjectiveCPP cppStringWithContentsOfURL:usedEncoding:error:];

/* instance methods */
-[ObjectiveCPP sizeWithFont:constrainedToWidth:lineBreakMode:];
-[ObjectiveCPP sizeConstrainedToWidth:attributes:];
-[ObjectiveCPP formatStringForPath];
-[ObjectiveCPP formatStringForPath:shrinkTo:];
-[ObjectiveCPP initWithCPPString:];
-[ObjectiveCPP initWithCPPString:encoding:];
-[ObjectiveCPP cppString];
-[ObjectiveCPP cppStringUsingEncoding:];
-[ObjectiveCPP cppStringByAppendingString:];
-[ObjectiveCPP stringByAppendingCPPString:];
-[ObjectiveCPP cppStringByPaddingToLength:withString:startingAtIndex:];
-[ObjectiveCPP stringByPaddingToLength:withCPPString:startingAtIndex:];
-[ObjectiveCPP cppStringByPaddingToLength:withCPPString:startingAtIndex:];
-[ObjectiveCPP componentsSeparatedByCPPString:];
-[ObjectiveCPP cppStringByTrimmingCharactersInSet:];
-[ObjectiveCPP cppSubstringFromIndex:];
-[ObjectiveCPP cppSubstringWithRange:];
-[ObjectiveCPP cppSubstringToIndex:];
-[ObjectiveCPP rangeOfCPPString:];
-[ObjectiveCPP rangeOfCPPString:options:];
-[ObjectiveCPP rangeOfCPPString:options:range:];
-[ObjectiveCPP rangeOfCPPString:options:range:locale:];
-[ObjectiveCPP cppStringByReplacingOccurrencesOfString:withString:];
-[ObjectiveCPP cppStringByReplacingOccurrencesOfString:withString:options:range:];
-[ObjectiveCPP stringByReplacingOccurrencesOfString:withCPPString:];
-[ObjectiveCPP stringByReplacingOccurrencesOfString:withCPPString:options:range:];
-[ObjectiveCPP stringByReplacingOccurrencesOfCPPString:withString:];
-[ObjectiveCPP stringByReplacingOccurrencesOfCPPString:withString:options:range:];
-[ObjectiveCPP stringByReplacingOccurrencesOfCPPString:withCPPString:];
-[ObjectiveCPP stringByReplacingOccurrencesOfCPPString:withCPPString:options:range:];
-[ObjectiveCPP cppStringByReplacingCharactersInRange:withString:];
-[ObjectiveCPP stringByReplacingCharactersInRange:withCPPString:];
-[ObjectiveCPP caseInsensitiveCompareWithCPPString:];
-[ObjectiveCPP localizedCaseInsensitiveCompareWithCPPString:];
-[ObjectiveCPP compareWithCPPString:];
-[ObjectiveCPP localizedCompareWithCPPString:];
-[ObjectiveCPP compareWithCPPString:options:];
-[ObjectiveCPP compareWithCPPString:options:range:];
-[ObjectiveCPP compareWithCPPString:options:range:locale:];
-[ObjectiveCPP localizedStandardCompareWithCPPString:];
-[ObjectiveCPP hasCPPStringPrefix:];
-[ObjectiveCPP hasCPPStringSuffix:];
-[ObjectiveCPP isEqualToCPPString:];
-[ObjectiveCPP cppStringByFoldingWithOptions:locale:];
-[ObjectiveCPP commonPrefixWithCPPString:options:];
-[ObjectiveCPP commonCPPPrefixWithString:options:];
-[ObjectiveCPP commonCPPPrefixWithCPPString:options:];
-[ObjectiveCPP capitalizedCPPString];
-[ObjectiveCPP lowercaseCPPString];
-[ObjectiveCPP uppercaseCPPString];
-[ObjectiveCPP lastPathComponentAsCPPString];
-[ObjectiveCPP pathExtensionAsCPPString];
-[ObjectiveCPP cppStringByAbbreviatingWithTildeInPath];
-[ObjectiveCPP cppStringByAppendingPathComponent:];
-[ObjectiveCPP stringByAppendingCPPPathComponent:];
-[ObjectiveCPP cppStringByAppendingCPPPathComponent:];
-[ObjectiveCPP cppStringByAppendingPathExtension:];
-[ObjectiveCPP stringByAppendingCPPPathExtension:];
-[ObjectiveCPP cppStringByAppendingCPPPathExtension:];
-[ObjectiveCPP cppStringByDeletingLastPathComponent];
-[ObjectiveCPP cppStringByDeletingPathExtension];
-[ObjectiveCPP cppStringByExpandingTildeInPath];
-[ObjectiveCPP cppStringByResolvingSymlinksInPath];
-[ObjectiveCPP cppStringByStandardizingPath];
-[ObjectiveCPP cppStringByAddingPercentEscapesUsingEncoding:];
-[ObjectiveCPP cppStringByReplacingPercentEscapesUsingEncoding:];

@end

@interface NSMenuItem (ValidatingBoundMenuItem)

/* instance methods */
-[ValidatingBoundMenuItem iMazingBindingAdaptor];

@end

@interface NSApplication (iMazing)

/* class methods */
-[iMazing isLoginItemEnabledForBundleURL:completion:];
-[iMazing setLoginItemEnabled:forBundleURL:];
-[iMazing enableLoginItemForBundleURL:];
-[iMazing disableLoginItemForBundleURL:];

/* instance methods */
-[iMazing isLoginItemEnabled:];
-[iMazing setLoginItemEnabled:];
-[iMazing enableLoginItem];
-[iMazing disableLoginItem];
-[iMazing acceptsPreviewPanelControl:];
-[iMazing beginPreviewPanelControl:];
-[iMazing endPreviewPanelControl:];
-[iMazing mainWindowController];
-[iMazing applicationDelegate];

@end

@interface NSDate (iMazing)

/* class methods */
-[iMazing compare:withDate:];

/* instance methods */
-[iMazing dateAtMidnight];
-[iMazing compareTo:];
-[iMazing formattedShortDateTime];
-[iMazing formattedShortDate];

@end

@interface NSException (iMazing)

/* instance methods */
-[iMazing initWithError:];

@end

@interface NSAlert (iMazing)

/* instance methods */
-[iMazing showOnWindow:completion:];

@end

@interface NSRunningApplication (iMazing)

/* class methods */
-[iMazing NotificationApplicationMessage];
-[iMazing iMazingApplication];
-[iMazing iMazingMiniApplication];
-[iMazing iMazingProfileEditorApplication];
-[iMazing iMazingHEICConverterApplication];
-[iMazing iMazingURL];
-[iMazing iMazingMiniURL];
-[iMazing iMazingProfileEditorURL];
-[iMazing iMazingHEICConverterURL];
-[iMazing isiMazingRunning];
-[iMazing isiMazingMiniRunning];
-[iMazing isiMazingProfileEditorRunning];
-[iMazing isiMazingHEICConverterRunning];
-[iMazing bringiMazingToFront];
-[iMazing bringiMazingMiniToFront];
-[iMazing bringiMazingProfileEditorToFront];
-[iMazing bringiMazingHEICConverterToFront];
-[iMazing sendMessageToiMazing:startIfNotRunning:immediately:activate:];
-[iMazing sendMessageToiMazingMini:startIfNotRunning:immediately:activate:];
-[iMazing launchAppAt:withOptions:];
-[iMazing sendNotificationFrom:to:userInfo:sendImmediately:activate:];
-[iMazing openFileIniMazingProfileEditor:];
-[iMazing openiMazingProfileEditor];
-[iMazing openiMazingHEICConverter];

@end

@interface NSTextField (iMazing)

/* class methods */
-[iMazing editableTextFieldWithString:width:];
-[iMazing editableTextFieldWithString:width:control:];

@end

@interface NSOpenPanel (iMazing)

/* class methods */
-[iMazing showChooseFolderPanelWithWindow:completion:];
-[iMazing showChooseSingleFilePanelWithWindow:allowedFileExtensions:completion:];
-[iMazing showChooseFilesAndFoldersPanelWithWindow:completion:];
-[iMazing showChooseFilesAndFoldersRecursivePanelWithWindow:allowedFileExtensions:completion:];

@end

@interface NSSavePanel (iMazing)

/* class methods */
-[iMazing showSavePanelWithFilename:extension:completion:];

@end

@interface NSAttributedString (iMazing)

/* class methods */
-[iMazing makeListWithStrings:bullet:];
-[iMazing makeListItemWithString:index:bullet:];

@end

@interface NSError (iMazing)

/* instance methods */
-[iMazing initWithTitle:message:];
-[iMazing initWithMessage:];

@end

@interface NSPasteboard (iMazing)

/* instance methods */
-[iMazing filesWithAllowedTypes:];

@end

@interface ICCameraFile (iMazing)

/* instance methods */
-[iMazing relatedUUIDSafe];

@end

@interface NSBundle (iMazing)

/* instance methods */
-[iMazing initializeCache];
-[iMazing iMazing_URLForResource:withExtension:];
-[iMazing iMazing_URLForResource:withExtension:subdirectory:];
-[iMazing iMazing_URLForResource:withExtension:subdirectory:localization:];
-[iMazing iMazing_URLsForResourcesWithExtension:subdirectory:];
-[iMazing iMazing_URLsForResourcesWithExtension:subdirectory:localization:];
-[iMazing iMazing_pathForResource:ofType:];
-[iMazing iMazing_pathForResource:ofType:inDirectory:];
-[iMazing iMazing_pathForResource:ofType:inDirectory:forLocalization:];
-[iMazing iMazing_pathsForResourcesOfType:inDirectory:];
-[iMazing iMazing_pathsForResourcesOfType:inDirectory:forLocalization:];

@end

@interface NSTableCellView (iMazing)

/* instance methods */
-[iMazing l10n];

@end

